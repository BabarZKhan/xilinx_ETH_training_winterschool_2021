// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Adler32Kernel_adler32_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        adlerStrm_dout,
        adlerStrm_empty_n,
        adlerStrm_read,
        inStrm_dout,
        inStrm_empty_n,
        inStrm_read,
        inLenStrm_dout,
        inLenStrm_empty_n,
        inLenStrm_read,
        endInLenStrm_dout,
        endInLenStrm_empty_n,
        endInLenStrm_read,
        outStrm_din,
        outStrm_full_n,
        outStrm_write,
        endOutStrm_din,
        endOutStrm_full_n,
        endOutStrm_write,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_state12 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state18 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] adlerStrm_dout;
input   adlerStrm_empty_n;
output   adlerStrm_read;
input  [127:0] inStrm_dout;
input   inStrm_empty_n;
output   inStrm_read;
input  [31:0] inLenStrm_dout;
input   inLenStrm_empty_n;
output   inLenStrm_read;
input  [0:0] endInLenStrm_dout;
input   endInLenStrm_empty_n;
output   endInLenStrm_read;
output  [31:0] outStrm_din;
input   outStrm_full_n;
output   outStrm_write;
output  [0:0] endOutStrm_din;
input   endOutStrm_full_n;
output   endOutStrm_write;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg adlerStrm_read;
reg inStrm_read;
reg inLenStrm_read;
reg endInLenStrm_read;
reg outStrm_write;
reg[0:0] endOutStrm_din;
reg endOutStrm_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    adlerStrm_blk_n;
wire    ap_CS_fsm_state2;
reg    inStrm_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln92_reg_1376;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln882_reg_1629;
reg   [0:0] icmp_ln134_reg_1638;
reg    inLenStrm_blk_n;
reg    endInLenStrm_blk_n;
reg    outStrm_blk_n;
wire    ap_CS_fsm_state18;
reg    endOutStrm_blk_n;
reg   [27:0] empty_40_reg_278;
reg   [31:0] empty_41_reg_289;
reg   [31:0] conv3_i461577_reg_299;
reg   [127:0] p_phi_reg_309;
reg   [3:0] j_reg_404;
reg   [127:0] empty_42_reg_415;
reg   [127:0] p_Val2_1_reg_427;
reg   [31:0] conv3_i_i474614_reg_439;
reg   [31:0] add_i13476613_reg_450;
reg    ap_block_state1;
wire   [3:0] trunc_ln0_1_fu_465_p1;
reg   [3:0] trunc_ln0_1_reg_1351;
reg    ap_block_state2;
reg   [0:0] tmp_3_reg_1356;
wire   [31:0] zext_ln1501_fu_469_p1;
wire   [31:0] zext_ln1501_1_fu_483_p1;
reg   [27:0] div_i_i_cast_reg_1371;
wire   [0:0] icmp_ln92_fu_497_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter1_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter2_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter3_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter4_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter5_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter6_reg;
reg   [0:0] icmp_ln92_reg_1376_pp0_iter7_reg;
wire   [27:0] add_ln695_20_fu_502_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [127:0] p_Val2_s_reg_1385;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter2_reg;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter3_reg;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter4_reg;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter5_reg;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter6_reg;
reg   [127:0] p_Val2_s_reg_1385_pp0_iter7_reg;
wire   [9:0] add_ln695_3_fu_554_p2;
reg   [9:0] add_ln695_3_reg_1390;
reg   [7:0] p_Result_4_3_reg_1396;
reg   [7:0] p_Result_5_4_reg_1401;
reg   [7:0] p_Result_6_5_reg_1406;
reg   [7:0] p_Result_7_6_reg_1411;
reg   [7:0] p_Result_8_7_reg_1416;
reg   [7:0] p_Result_8_7_reg_1416_pp0_iter2_reg;
reg   [7:0] p_Result_9_8_reg_1421;
reg   [7:0] p_Result_9_8_reg_1421_pp0_iter2_reg;
reg   [7:0] p_Result_10_9_reg_1426;
reg   [7:0] p_Result_10_9_reg_1426_pp0_iter2_reg;
reg   [7:0] p_Result_11_s_reg_1431;
reg   [7:0] p_Result_11_s_reg_1431_pp0_iter2_reg;
reg   [7:0] p_Result_11_s_reg_1431_pp0_iter3_reg;
reg   [7:0] p_Result_12_s_reg_1436;
reg   [7:0] p_Result_12_s_reg_1436_pp0_iter2_reg;
reg   [7:0] p_Result_12_s_reg_1436_pp0_iter3_reg;
reg   [7:0] p_Result_13_s_reg_1441;
reg   [7:0] p_Result_13_s_reg_1441_pp0_iter2_reg;
reg   [7:0] p_Result_13_s_reg_1441_pp0_iter3_reg;
reg   [7:0] p_Result_14_s_reg_1446;
reg   [7:0] p_Result_14_s_reg_1446_pp0_iter2_reg;
reg   [7:0] p_Result_14_s_reg_1446_pp0_iter3_reg;
reg   [7:0] p_Result_14_s_reg_1446_pp0_iter4_reg;
reg   [7:0] p_Result_15_s_reg_1451;
reg   [7:0] p_Result_15_s_reg_1451_pp0_iter2_reg;
reg   [7:0] p_Result_15_s_reg_1451_pp0_iter3_reg;
reg   [7:0] p_Result_15_s_reg_1451_pp0_iter4_reg;
reg   [7:0] p_Result_16_s_reg_1456;
reg   [7:0] p_Result_16_s_reg_1456_pp0_iter2_reg;
reg   [7:0] p_Result_16_s_reg_1456_pp0_iter3_reg;
reg   [7:0] p_Result_16_s_reg_1456_pp0_iter4_reg;
wire   [9:0] add_ln1350_fu_694_p2;
reg   [9:0] add_ln1350_reg_1461;
wire   [10:0] add_ln695_7_fu_733_p2;
reg   [10:0] add_ln695_7_reg_1466;
wire   [11:0] add_ln1350_2_fu_756_p2;
reg   [11:0] add_ln1350_2_reg_1472;
wire   [11:0] add_ln1350_8_fu_769_p2;
reg   [11:0] add_ln1350_8_reg_1477;
reg   [11:0] add_ln1350_8_reg_1477_pp0_iter3_reg;
wire   [11:0] add_ln695_9_fu_790_p2;
reg   [11:0] add_ln695_9_reg_1482;
wire   [11:0] add_ln695_10_fu_799_p2;
reg   [11:0] add_ln695_10_reg_1487;
wire   [12:0] add_ln1350_9_fu_821_p2;
reg   [12:0] add_ln1350_9_reg_1493;
wire   [11:0] add_ln695_13_fu_847_p2;
reg   [11:0] add_ln695_13_reg_1498;
wire   [12:0] add_ln1350_4_fu_859_p2;
reg   [12:0] add_ln1350_4_reg_1504;
wire   [12:0] add_ln1350_5_fu_873_p2;
reg   [12:0] add_ln1350_5_reg_1509;
wire   [13:0] add_ln1350_12_fu_885_p2;
reg   [13:0] add_ln1350_12_reg_1514;
reg   [13:0] add_ln1350_12_reg_1514_pp0_iter5_reg;
reg   [13:0] add_ln1350_12_reg_1514_pp0_iter6_reg;
wire   [11:0] add_ln695_15_fu_902_p2;
reg   [11:0] add_ln695_15_reg_1519;
wire   [11:0] add_ln695_16_fu_911_p2;
reg   [11:0] add_ln695_16_reg_1524;
wire   [12:0] add_ln1350_6_fu_924_p2;
reg   [12:0] add_ln1350_6_reg_1530;
wire   [13:0] add_ln1350_10_fu_936_p2;
reg   [13:0] add_ln1350_10_reg_1535;
wire   [31:0] shl_ln695_fu_942_p2;
reg   [31:0] shl_ln695_reg_1540;
wire   [14:0] add_ln1350_13_fu_980_p2;
reg   [14:0] add_ln1350_13_reg_1545;
wire   [31:0] select_ln128_fu_1007_p3;
reg   [31:0] select_ln128_reg_1550;
reg    ap_enable_reg_pp0_iter6;
wire   [31:0] add_ln695_17_fu_1036_p2;
reg   [31:0] add_ln695_17_reg_1555;
wire   [0:0] icmp_ln886_2_fu_1042_p2;
reg   [0:0] icmp_ln886_2_reg_1561;
wire   [0:0] icmp_ln886_4_fu_1048_p2;
reg   [0:0] icmp_ln886_4_reg_1565;
wire   [0:0] icmp_ln886_5_fu_1054_p2;
reg   [0:0] icmp_ln886_5_reg_1569;
wire   [0:0] icmp_ln886_6_fu_1060_p2;
reg   [0:0] icmp_ln886_6_reg_1573;
wire   [0:0] icmp_ln886_7_fu_1066_p2;
reg   [0:0] icmp_ln886_7_reg_1577;
wire   [0:0] icmp_ln886_8_fu_1072_p2;
reg   [0:0] icmp_ln886_8_reg_1581;
wire   [0:0] icmp_ln886_9_fu_1078_p2;
reg   [0:0] icmp_ln886_9_reg_1585;
wire   [0:0] icmp_ln886_10_fu_1084_p2;
reg   [0:0] icmp_ln886_10_reg_1589;
wire   [0:0] icmp_ln886_11_fu_1090_p2;
reg   [0:0] icmp_ln886_11_reg_1593;
wire   [0:0] icmp_ln886_12_fu_1096_p2;
reg   [0:0] icmp_ln886_12_reg_1597;
wire   [0:0] icmp_ln886_13_fu_1102_p2;
reg   [0:0] icmp_ln886_13_reg_1601;
wire   [0:0] icmp_ln886_14_fu_1108_p2;
reg   [0:0] icmp_ln886_14_reg_1605;
wire   [0:0] icmp_ln886_15_fu_1114_p2;
reg   [0:0] icmp_ln886_15_reg_1609;
wire   [0:0] icmp_ln886_16_fu_1120_p2;
reg   [0:0] icmp_ln886_16_reg_1613;
wire   [0:0] icmp_ln886_17_fu_1126_p2;
reg   [0:0] icmp_ln886_17_reg_1617;
wire   [0:0] icmp_ln886_18_fu_1132_p2;
reg   [0:0] icmp_ln886_18_reg_1621;
wire   [0:0] icmp_ln886_19_fu_1138_p2;
reg   [0:0] icmp_ln886_19_reg_1625;
wire   [0:0] icmp_ln882_fu_1154_p2;
wire    ap_block_state13_pp1_stage0_iter0;
reg    ap_predicate_op202_read_state14;
reg    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_state15_pp1_stage0_iter2;
wire    ap_block_state16_pp1_stage0_iter3;
wire    ap_block_state17_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln882_reg_1629_pp1_iter1_reg;
reg   [0:0] icmp_ln882_reg_1629_pp1_iter2_reg;
reg   [0:0] icmp_ln882_reg_1629_pp1_iter3_reg;
wire   [3:0] j_1_fu_1159_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln134_fu_1165_p2;
reg   [0:0] icmp_ln134_reg_1638_pp1_iter1_reg;
wire   [6:0] shl_ln2_fu_1171_p3;
reg   [6:0] shl_ln2_reg_1642;
reg   [6:0] shl_ln2_reg_1642_pp1_iter1_reg;
wire   [7:0] sub_ln674_4_fu_1248_p2;
reg   [7:0] sub_ln674_4_reg_1654;
wire   [127:0] lshr_ln674_fu_1258_p2;
reg   [127:0] lshr_ln674_reg_1659;
wire   [31:0] select_ln136_fu_1300_p3;
reg   [31:0] select_ln136_reg_1664;
reg    ap_enable_reg_pp1_iter3;
wire   [31:0] select_ln138_fu_1325_p3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire    ap_CS_fsm_state12;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_condition_pp1_exit_iter3_state16;
reg   [127:0] empty_reg_256;
reg    ap_block_state18;
reg   [0:0] e_1_reg_268;
reg   [31:0] ap_phi_mux_empty_41_phi_fu_292_p4;
reg   [31:0] ap_phi_mux_conv3_i461577_phi_fu_302_p4;
reg   [31:0] ap_phi_mux_conv3_i462_phi_fu_397_p4;
wire   [20:0] ap_phi_reg_pp0_iter0_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter1_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter2_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter3_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter4_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter5_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter6_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter7_zext_ln886_lcssa_reg_320;
reg   [20:0] ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320;
wire   [31:0] sub_ln696_fu_1148_p2;
reg   [31:0] ap_phi_reg_pp0_iter8_conv3_i462_reg_393;
wire   [31:0] ap_phi_reg_pp0_iter0_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter1_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter2_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter3_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter4_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter5_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter6_conv3_i462_reg_393;
reg   [31:0] ap_phi_reg_pp0_iter7_conv3_i462_reg_393;
reg   [127:0] ap_phi_mux_empty_42_phi_fu_419_p4;
reg   [127:0] ap_phi_mux_p_Val2_1_phi_fu_431_p4;
wire   [127:0] ap_phi_reg_pp1_iter0_p_Val2_1_reg_427;
reg   [127:0] ap_phi_reg_pp1_iter1_p_Val2_1_reg_427;
reg   [127:0] ap_phi_reg_pp1_iter2_p_Val2_1_reg_427;
reg   [31:0] ap_phi_mux_conv3_i_i474614_phi_fu_442_p4;
wire   [15:0] trunc_ln0_fu_461_p1;
wire   [15:0] lshr_ln_fu_473_p4;
wire   [7:0] trunc_ln674_fu_508_p1;
wire   [7:0] p_Result_1_1_fu_516_p4;
wire   [8:0] zext_ln674_fu_512_p1;
wire   [8:0] zext_ln695_2_fu_526_p1;
wire   [8:0] add_ln695_fu_530_p2;
wire   [7:0] p_Result_3_2_fu_540_p4;
wire   [9:0] zext_ln674_1_fu_536_p1;
wire   [9:0] zext_ln695_3_fu_550_p1;
wire   [9:0] zext_ln215_fu_690_p1;
wire   [9:0] zext_ln695_4_fu_700_p1;
wire   [9:0] add_ln695_4_fu_703_p2;
wire   [10:0] zext_ln674_2_fu_708_p1;
wire   [10:0] zext_ln695_5_fu_712_p1;
wire   [10:0] add_ln695_5_fu_715_p2;
wire   [10:0] zext_ln695_6_fu_721_p1;
wire   [10:0] add_ln695_6_fu_724_p2;
wire   [10:0] zext_ln695_7_fu_730_p1;
wire   [10:0] zext_ln215_1_fu_739_p1;
wire   [11:0] zext_ln1350_fu_752_p1;
wire   [11:0] zext_ln215_2_fu_748_p1;
wire   [10:0] add_ln1350_1_fu_742_p2;
wire   [11:0] zext_ln1350_1_fu_765_p1;
wire   [11:0] zext_ln215_12_fu_762_p1;
wire   [10:0] zext_ln695_8_fu_775_p1;
wire   [10:0] add_ln695_8_fu_778_p2;
wire   [11:0] zext_ln674_3_fu_783_p1;
wire   [11:0] zext_ln695_9_fu_787_p1;
wire   [11:0] zext_ln695_10_fu_796_p1;
wire   [11:0] zext_ln215_3_fu_805_p1;
wire   [11:0] add_ln1350_3_fu_808_p2;
wire   [12:0] zext_ln1350_2_fu_817_p1;
wire   [12:0] zext_ln215_13_fu_814_p1;
wire   [11:0] zext_ln695_11_fu_827_p1;
wire   [11:0] add_ln695_11_fu_830_p2;
wire   [11:0] zext_ln695_12_fu_835_p1;
wire   [11:0] add_ln695_12_fu_838_p2;
wire   [11:0] zext_ln695_13_fu_844_p1;
wire   [12:0] zext_ln215_5_fu_856_p1;
wire   [12:0] zext_ln215_4_fu_853_p1;
wire   [12:0] zext_ln215_7_fu_869_p1;
wire   [12:0] zext_ln215_6_fu_865_p1;
wire   [13:0] zext_ln1350_3_fu_882_p1;
wire   [13:0] zext_ln215_18_fu_879_p1;
wire   [11:0] zext_ln695_14_fu_891_p1;
wire   [11:0] add_ln695_14_fu_894_p2;
wire   [11:0] zext_ln695_15_fu_899_p1;
wire   [11:0] zext_ln695_16_fu_908_p1;
wire   [12:0] zext_ln215_9_fu_920_p1;
wire   [12:0] zext_ln215_8_fu_917_p1;
wire   [13:0] zext_ln215_15_fu_933_p1;
wire   [13:0] zext_ln215_14_fu_930_p1;
wire   [12:0] zext_ln215_11_fu_951_p1;
wire   [12:0] zext_ln215_10_fu_948_p1;
wire   [12:0] add_ln1350_7_fu_954_p2;
wire   [13:0] zext_ln215_17_fu_963_p1;
wire   [13:0] zext_ln215_16_fu_960_p1;
wire   [13:0] add_ln1350_11_fu_967_p2;
wire   [14:0] zext_ln215_20_fu_976_p1;
wire   [14:0] zext_ln215_19_fu_973_p1;
wire   [31:0] zext_ln695_1_fu_986_p1;
wire   [31:0] add_ln695_19_fu_989_p2;
wire   [0:0] icmp_ln886_3_fu_995_p2;
wire   [31:0] add_ln696_2_fu_1001_p2;
wire   [15:0] zext_ln215_22_fu_1018_p1;
wire   [15:0] zext_ln215_21_fu_1015_p1;
wire   [15:0] add_ln1350_14_fu_1021_p2;
wire   [31:0] zext_ln695_fu_1027_p1;
wire   [31:0] add_ln695_18_fu_1031_p2;
wire   [31:0] zext_ln696_fu_1144_p1;
wire   [6:0] or_ln135_fu_1179_p2;
wire   [7:0] zext_ln674_4_fu_1189_p1;
wire   [7:0] zext_ln674_5_fu_1192_p1;
wire   [0:0] icmp_ln674_fu_1184_p2;
wire   [7:0] sub_ln674_fu_1206_p2;
wire   [7:0] sub_ln674_3_fu_1218_p2;
reg   [127:0] tmp_fu_1196_p4;
wire   [7:0] xor_ln674_fu_1212_p2;
wire   [7:0] select_ln674_fu_1224_p3;
wire   [7:0] select_ln674_4_fu_1240_p3;
wire   [127:0] select_ln674_3_fu_1232_p3;
wire   [127:0] zext_ln674_6_fu_1254_p1;
wire   [127:0] zext_ln674_7_fu_1264_p1;
wire   [127:0] lshr_ln674_2_fu_1267_p2;
wire   [127:0] p_Result_s_fu_1273_p2;
wire   [31:0] trunc_ln695_fu_1278_p1;
wire   [31:0] add_ln695_1_fu_1282_p2;
wire   [0:0] icmp_ln886_fu_1288_p2;
wire   [31:0] add_ln696_fu_1294_p2;
wire   [31:0] add_ln695_2_fu_1308_p2;
wire   [0:0] icmp_ln886_1_fu_1313_p2;
wire   [31:0] add_ln696_1_fu_1319_p2;
wire   [31:0] shl_ln1501_fu_1333_p2;
reg   [5:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_702;
reg    ap_condition_578;
reg    ap_condition_582;
reg    ap_condition_586;
reg    ap_condition_590;
reg    ap_condition_594;
reg    ap_condition_598;
reg    ap_condition_602;
reg    ap_condition_606;
reg    ap_condition_610;
reg    ap_condition_614;
reg    ap_condition_618;
reg    ap_condition_622;
reg    ap_condition_626;
reg    ap_condition_630;
reg    ap_condition_634;
reg    ap_condition_638;
reg    ap_condition_443;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter3_state16)))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter3_state16))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_i13476613_reg_450 <= conv3_i461577_reg_299;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter3_reg == 1'd0))) begin
        add_i13476613_reg_450 <= select_ln138_fu_1325_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        if ((1'b1 == ap_condition_702)) begin
            ap_phi_reg_pp0_iter8_conv3_i462_reg_393 <= add_ln695_17_fu_1036_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter7_conv3_i462_reg_393;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        if ((1'b1 == ap_condition_638)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd65521;
        end else if ((1'b1 == ap_condition_634)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd131042;
        end else if ((1'b1 == ap_condition_630)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd196563;
        end else if ((1'b1 == ap_condition_626)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd262084;
        end else if ((1'b1 == ap_condition_622)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd327605;
        end else if ((1'b1 == ap_condition_618)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd393126;
        end else if ((1'b1 == ap_condition_614)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd458647;
        end else if ((1'b1 == ap_condition_610)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd524168;
        end else if ((1'b1 == ap_condition_606)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd589689;
        end else if ((1'b1 == ap_condition_602)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd655210;
        end else if ((1'b1 == ap_condition_598)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd720731;
        end else if ((1'b1 == ap_condition_594)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd786252;
        end else if ((1'b1 == ap_condition_590)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd851773;
        end else if ((1'b1 == ap_condition_586)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd917294;
        end else if ((1'b1 == ap_condition_582)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd982815;
        end else if ((1'b1 == ap_condition_578)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd1048336;
        end else if (((icmp_ln886_2_fu_1042_p2 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= 21'd1113857;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter7_zext_ln886_lcssa_reg_320;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_443)) begin
        if (((icmp_ln134_reg_1638 == 1'd1) & (icmp_ln882_reg_1629 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_p_Val2_1_reg_427 <= inStrm_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_p_Val2_1_reg_427 <= ap_phi_reg_pp1_iter1_p_Val2_1_reg_427;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) begin
        conv3_i461577_reg_299 <= ap_phi_mux_conv3_i462_phi_fu_397_p4;
    end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        conv3_i461577_reg_299 <= zext_ln1501_1_fu_483_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv3_i_i474614_reg_439 <= empty_41_reg_289;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter3_reg == 1'd0))) begin
        conv3_i_i474614_reg_439 <= select_ln136_reg_1664;
    end
end

always @ (posedge ap_clk) begin
    if ((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        e_1_reg_268 <= tmp_3_reg_1356;
    end else if ((~((endInLenStrm_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        e_1_reg_268 <= endInLenStrm_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln92_fu_497_p2 == 1'd0))) begin
        empty_40_reg_278 <= add_ln695_20_fu_502_p2;
    end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_40_reg_278 <= 28'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        empty_41_reg_289 <= select_ln128_reg_1550;
    end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_41_reg_289 <= zext_ln1501_fu_469_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        empty_42_reg_415 <= p_phi_reg_309;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter2_reg == 1'd0))) begin
        empty_42_reg_415 <= p_Val2_1_reg_427;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_reg_404 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln882_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_reg_404 <= j_1_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        if (((icmp_ln134_reg_1638_pp1_iter1_reg == 1'd0) & (icmp_ln882_reg_1629_pp1_iter1_reg == 1'd0))) begin
            p_Val2_1_reg_427 <= ap_phi_mux_empty_42_phi_fu_419_p4;
        end else if ((1'b1 == 1'b1)) begin
            p_Val2_1_reg_427 <= ap_phi_reg_pp1_iter2_p_Val2_1_reg_427;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) begin
        p_phi_reg_309 <= p_Val2_s_reg_1385_pp0_iter7_reg;
    end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_phi_reg_309 <= empty_reg_256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter4_reg == 1'd0))) begin
        add_ln1350_10_reg_1535 <= add_ln1350_10_fu_936_p2;
        add_ln1350_6_reg_1530 <= add_ln1350_6_fu_924_p2;
        add_ln695_15_reg_1519 <= add_ln695_15_fu_902_p2;
        add_ln695_16_reg_1524 <= add_ln695_16_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter3_reg == 1'd0))) begin
        add_ln1350_12_reg_1514 <= add_ln1350_12_fu_885_p2;
        add_ln1350_4_reg_1504 <= add_ln1350_4_fu_859_p2;
        add_ln1350_5_reg_1509 <= add_ln1350_5_fu_873_p2;
        add_ln695_13_reg_1498 <= add_ln695_13_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1350_12_reg_1514_pp0_iter5_reg <= add_ln1350_12_reg_1514;
        add_ln1350_12_reg_1514_pp0_iter6_reg <= add_ln1350_12_reg_1514_pp0_iter5_reg;
        add_ln1350_8_reg_1477_pp0_iter3_reg <= add_ln1350_8_reg_1477;
        icmp_ln92_reg_1376_pp0_iter2_reg <= icmp_ln92_reg_1376_pp0_iter1_reg;
        icmp_ln92_reg_1376_pp0_iter3_reg <= icmp_ln92_reg_1376_pp0_iter2_reg;
        icmp_ln92_reg_1376_pp0_iter4_reg <= icmp_ln92_reg_1376_pp0_iter3_reg;
        icmp_ln92_reg_1376_pp0_iter5_reg <= icmp_ln92_reg_1376_pp0_iter4_reg;
        icmp_ln92_reg_1376_pp0_iter6_reg <= icmp_ln92_reg_1376_pp0_iter5_reg;
        icmp_ln92_reg_1376_pp0_iter7_reg <= icmp_ln92_reg_1376_pp0_iter6_reg;
        p_Result_10_9_reg_1426_pp0_iter2_reg <= p_Result_10_9_reg_1426;
        p_Result_11_s_reg_1431_pp0_iter2_reg <= p_Result_11_s_reg_1431;
        p_Result_11_s_reg_1431_pp0_iter3_reg <= p_Result_11_s_reg_1431_pp0_iter2_reg;
        p_Result_12_s_reg_1436_pp0_iter2_reg <= p_Result_12_s_reg_1436;
        p_Result_12_s_reg_1436_pp0_iter3_reg <= p_Result_12_s_reg_1436_pp0_iter2_reg;
        p_Result_13_s_reg_1441_pp0_iter2_reg <= p_Result_13_s_reg_1441;
        p_Result_13_s_reg_1441_pp0_iter3_reg <= p_Result_13_s_reg_1441_pp0_iter2_reg;
        p_Result_14_s_reg_1446_pp0_iter2_reg <= p_Result_14_s_reg_1446;
        p_Result_14_s_reg_1446_pp0_iter3_reg <= p_Result_14_s_reg_1446_pp0_iter2_reg;
        p_Result_14_s_reg_1446_pp0_iter4_reg <= p_Result_14_s_reg_1446_pp0_iter3_reg;
        p_Result_15_s_reg_1451_pp0_iter2_reg <= p_Result_15_s_reg_1451;
        p_Result_15_s_reg_1451_pp0_iter3_reg <= p_Result_15_s_reg_1451_pp0_iter2_reg;
        p_Result_15_s_reg_1451_pp0_iter4_reg <= p_Result_15_s_reg_1451_pp0_iter3_reg;
        p_Result_16_s_reg_1456_pp0_iter2_reg <= p_Result_16_s_reg_1456;
        p_Result_16_s_reg_1456_pp0_iter3_reg <= p_Result_16_s_reg_1456_pp0_iter2_reg;
        p_Result_16_s_reg_1456_pp0_iter4_reg <= p_Result_16_s_reg_1456_pp0_iter3_reg;
        p_Result_8_7_reg_1416_pp0_iter2_reg <= p_Result_8_7_reg_1416;
        p_Result_9_8_reg_1421_pp0_iter2_reg <= p_Result_9_8_reg_1421;
        p_Val2_s_reg_1385_pp0_iter2_reg <= p_Val2_s_reg_1385;
        p_Val2_s_reg_1385_pp0_iter3_reg <= p_Val2_s_reg_1385_pp0_iter2_reg;
        p_Val2_s_reg_1385_pp0_iter4_reg <= p_Val2_s_reg_1385_pp0_iter3_reg;
        p_Val2_s_reg_1385_pp0_iter5_reg <= p_Val2_s_reg_1385_pp0_iter4_reg;
        p_Val2_s_reg_1385_pp0_iter6_reg <= p_Val2_s_reg_1385_pp0_iter5_reg;
        p_Val2_s_reg_1385_pp0_iter7_reg <= p_Val2_s_reg_1385_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter5_reg == 1'd0))) begin
        add_ln1350_13_reg_1545 <= add_ln1350_13_fu_980_p2;
        shl_ln695_reg_1540[31 : 4] <= shl_ln695_fu_942_p2[31 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter1_reg == 1'd0))) begin
        add_ln1350_2_reg_1472 <= add_ln1350_2_fu_756_p2;
        add_ln1350_8_reg_1477 <= add_ln1350_8_fu_769_p2;
        add_ln695_7_reg_1466 <= add_ln695_7_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter2_reg == 1'd0))) begin
        add_ln1350_9_reg_1493 <= add_ln1350_9_fu_821_p2;
        add_ln695_10_reg_1487 <= add_ln695_10_fu_799_p2;
        add_ln695_9_reg_1482 <= add_ln695_9_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1350_reg_1461 <= add_ln1350_fu_694_p2;
        add_ln695_3_reg_1390 <= add_ln695_3_fu_554_p2;
        p_Result_10_9_reg_1426 <= {{inStrm_dout[79:72]}};
        p_Result_11_s_reg_1431 <= {{inStrm_dout[87:80]}};
        p_Result_12_s_reg_1436 <= {{inStrm_dout[95:88]}};
        p_Result_13_s_reg_1441 <= {{inStrm_dout[103:96]}};
        p_Result_14_s_reg_1446 <= {{inStrm_dout[111:104]}};
        p_Result_15_s_reg_1451 <= {{inStrm_dout[119:112]}};
        p_Result_16_s_reg_1456 <= {{inStrm_dout[127:120]}};
        p_Result_4_3_reg_1396 <= {{inStrm_dout[31:24]}};
        p_Result_5_4_reg_1401 <= {{inStrm_dout[39:32]}};
        p_Result_6_5_reg_1406 <= {{inStrm_dout[47:40]}};
        p_Result_7_6_reg_1411 <= {{inStrm_dout[55:48]}};
        p_Result_8_7_reg_1416 <= {{inStrm_dout[63:56]}};
        p_Result_9_8_reg_1421 <= {{inStrm_dout[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        add_ln695_17_reg_1555 <= add_ln695_17_fu_1036_p2;
        icmp_ln886_2_reg_1561 <= icmp_ln886_2_fu_1042_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter0_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter1_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter0_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter1_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter2_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter1_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter2_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter3_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter2_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter3_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter4_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter3_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter4_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter5_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter4_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter5_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter6_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter5_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_conv3_i462_reg_393 <= ap_phi_reg_pp0_iter6_conv3_i462_reg_393;
        ap_phi_reg_pp0_iter7_zext_ln886_lcssa_reg_320 <= ap_phi_reg_pp0_iter6_zext_ln886_lcssa_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_p_Val2_1_reg_427 <= ap_phi_reg_pp1_iter0_p_Val2_1_reg_427;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        div_i_i_cast_reg_1371 <= {{inLenStrm_dout[31:4]}};
        tmp_3_reg_1356 <= endInLenStrm_dout;
        trunc_ln0_1_reg_1351 <= trunc_ln0_1_fu_465_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        empty_reg_256 <= empty_42_reg_415;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_fu_1154_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln134_reg_1638 <= icmp_ln134_fu_1165_p2;
        shl_ln2_reg_1642[6 : 3] <= shl_ln2_fu_1171_p3[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln134_reg_1638_pp1_iter1_reg <= icmp_ln134_reg_1638;
        icmp_ln882_reg_1629 <= icmp_ln882_fu_1154_p2;
        icmp_ln882_reg_1629_pp1_iter1_reg <= icmp_ln882_reg_1629;
        shl_ln2_reg_1642_pp1_iter1_reg[6 : 3] <= shl_ln2_reg_1642[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln882_reg_1629_pp1_iter2_reg <= icmp_ln882_reg_1629_pp1_iter1_reg;
        icmp_ln882_reg_1629_pp1_iter3_reg <= icmp_ln882_reg_1629_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_10_reg_1589 <= icmp_ln886_10_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_11_reg_1593 <= icmp_ln886_11_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_12_reg_1597 <= icmp_ln886_12_fu_1096_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_13_reg_1601 <= icmp_ln886_13_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_14_reg_1605 <= icmp_ln886_14_fu_1108_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_15_reg_1609 <= icmp_ln886_15_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_16_reg_1613 <= icmp_ln886_16_fu_1120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_17_reg_1617 <= icmp_ln886_17_fu_1126_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_17_fu_1126_p2 == 1'd1) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_18_reg_1621 <= icmp_ln886_18_fu_1132_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_18_fu_1132_p2 == 1'd1) & (icmp_ln886_17_fu_1126_p2 == 1'd1) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_19_reg_1625 <= icmp_ln886_19_fu_1138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_4_reg_1565 <= icmp_ln886_4_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_5_reg_1569 <= icmp_ln886_5_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_6_reg_1573 <= icmp_ln886_6_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_7_reg_1577 <= icmp_ln886_7_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_8_reg_1581 <= icmp_ln886_8_fu_1072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        icmp_ln886_9_reg_1585 <= icmp_ln886_9_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln92_reg_1376 <= icmp_ln92_fu_497_p2;
        icmp_ln92_reg_1376_pp0_iter1_reg <= icmp_ln92_reg_1376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_reg_1629_pp1_iter1_reg == 1'd0))) begin
        lshr_ln674_reg_1659 <= lshr_ln674_fu_1258_p2;
        sub_ln674_4_reg_1654[7 : 1] <= sub_ln674_4_fu_1248_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln92_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_1385 <= inStrm_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter5_reg == 1'd0))) begin
        select_ln128_reg_1550 <= select_ln128_fu_1007_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter2_reg == 1'd0))) begin
        select_ln136_reg_1664 <= select_ln136_fu_1300_p3;
    end
end

always @ (*) begin
    if (((e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        adlerStrm_blk_n = adlerStrm_empty_n;
    end else begin
        adlerStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        adlerStrm_read = 1'b1;
    end else begin
        adlerStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln92_fu_497_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_condition_pp1_exit_iter3_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter3_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln882_fu_1154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) begin
        ap_phi_mux_conv3_i461577_phi_fu_302_p4 = ap_phi_mux_conv3_i462_phi_fu_397_p4;
    end else begin
        ap_phi_mux_conv3_i461577_phi_fu_302_p4 = conv3_i461577_reg_299;
    end
end

always @ (*) begin
    if (((((((((((((((((((icmp_ln886_18_reg_1621 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0)) | ((icmp_ln886_19_reg_1625 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_17_reg_1617 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_16_reg_1613 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_15_reg_1609 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_14_reg_1605 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_13_reg_1601 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_12_reg_1597 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_11_reg_1593 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_10_reg_1589 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_9_reg_1585 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_8_reg_1581 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_7_reg_1577 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_6_reg_1573 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_5_reg_1569 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_4_reg_1565 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0))) | ((icmp_ln886_2_reg_1561 == 1'd0) & (icmp_ln92_reg_1376_pp0_iter7_reg == 1'd0)))) begin
        ap_phi_mux_conv3_i462_phi_fu_397_p4 = sub_ln696_fu_1148_p2;
    end else begin
        ap_phi_mux_conv3_i462_phi_fu_397_p4 = ap_phi_reg_pp0_iter8_conv3_i462_reg_393;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_conv3_i_i474614_phi_fu_442_p4 = select_ln136_reg_1664;
    end else begin
        ap_phi_mux_conv3_i_i474614_phi_fu_442_p4 = conv3_i_i474614_reg_439;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0))) begin
        ap_phi_mux_empty_41_phi_fu_292_p4 = select_ln128_reg_1550;
    end else begin
        ap_phi_mux_empty_41_phi_fu_292_p4 = empty_41_reg_289;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln882_reg_1629_pp1_iter2_reg == 1'd0))) begin
        ap_phi_mux_empty_42_phi_fu_419_p4 = p_Val2_1_reg_427;
    end else begin
        ap_phi_mux_empty_42_phi_fu_419_p4 = empty_42_reg_415;
    end
end

always @ (*) begin
    if (((icmp_ln134_reg_1638_pp1_iter1_reg == 1'd0) & (icmp_ln882_reg_1629_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_p_Val2_1_phi_fu_431_p4 = ap_phi_mux_empty_42_phi_fu_419_p4;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_431_p4 = ap_phi_reg_pp1_iter2_p_Val2_1_reg_427;
    end
end

always @ (*) begin
    if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        endInLenStrm_blk_n = endInLenStrm_empty_n;
    end else begin
        endInLenStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | (~((endInLenStrm_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        endInLenStrm_read = 1'b1;
    end else begin
        endInLenStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        endOutStrm_blk_n = endOutStrm_full_n;
    end else begin
        endOutStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        endOutStrm_din = 1'd0;
    end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        endOutStrm_din = 1'd1;
    end else begin
        endOutStrm_din = 'bx;
    end
end

always @ (*) begin
    if (((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18)) | (~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        endOutStrm_write = 1'b1;
    end else begin
        endOutStrm_write = 1'b0;
    end
end

always @ (*) begin
    if (((e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        inLenStrm_blk_n = inLenStrm_empty_n;
    end else begin
        inLenStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        inLenStrm_read = 1'b1;
    end else begin
        inLenStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_1638 == 1'd1) & (icmp_ln882_reg_1629 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln92_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inStrm_blk_n = inStrm_empty_n;
    end else begin
        inStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op202_read_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln92_reg_1376 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        inStrm_read = 1'b1;
    end else begin
        inStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        outStrm_blk_n = outStrm_full_n;
    end else begin
        outStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        outStrm_write = 1'b1;
    end else begin
        outStrm_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((endInLenStrm_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0))) & (e_1_reg_268 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (ap_enable_reg_pp0_iter7 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            if ((~((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1350_10_fu_936_p2 = (zext_ln215_15_fu_933_p1 + zext_ln215_14_fu_930_p1);

assign add_ln1350_11_fu_967_p2 = (zext_ln215_17_fu_963_p1 + zext_ln215_16_fu_960_p1);

assign add_ln1350_12_fu_885_p2 = (zext_ln1350_3_fu_882_p1 + zext_ln215_18_fu_879_p1);

assign add_ln1350_13_fu_980_p2 = (zext_ln215_20_fu_976_p1 + zext_ln215_19_fu_973_p1);

assign add_ln1350_14_fu_1021_p2 = (zext_ln215_22_fu_1018_p1 + zext_ln215_21_fu_1015_p1);

assign add_ln1350_1_fu_742_p2 = (zext_ln674_2_fu_708_p1 + zext_ln215_1_fu_739_p1);

assign add_ln1350_2_fu_756_p2 = (zext_ln1350_fu_752_p1 + zext_ln215_2_fu_748_p1);

assign add_ln1350_3_fu_808_p2 = (zext_ln674_3_fu_783_p1 + zext_ln215_3_fu_805_p1);

assign add_ln1350_4_fu_859_p2 = (zext_ln215_5_fu_856_p1 + zext_ln215_4_fu_853_p1);

assign add_ln1350_5_fu_873_p2 = (zext_ln215_7_fu_869_p1 + zext_ln215_6_fu_865_p1);

assign add_ln1350_6_fu_924_p2 = (zext_ln215_9_fu_920_p1 + zext_ln215_8_fu_917_p1);

assign add_ln1350_7_fu_954_p2 = (zext_ln215_11_fu_951_p1 + zext_ln215_10_fu_948_p1);

assign add_ln1350_8_fu_769_p2 = (zext_ln1350_1_fu_765_p1 + zext_ln215_12_fu_762_p1);

assign add_ln1350_9_fu_821_p2 = (zext_ln1350_2_fu_817_p1 + zext_ln215_13_fu_814_p1);

assign add_ln1350_fu_694_p2 = (zext_ln674_1_fu_536_p1 + zext_ln215_fu_690_p1);

assign add_ln695_10_fu_799_p2 = (add_ln695_9_fu_790_p2 + zext_ln695_10_fu_796_p1);

assign add_ln695_11_fu_830_p2 = (add_ln695_10_reg_1487 + zext_ln695_11_fu_827_p1);

assign add_ln695_12_fu_838_p2 = (add_ln695_11_fu_830_p2 + zext_ln695_12_fu_835_p1);

assign add_ln695_13_fu_847_p2 = (add_ln695_12_fu_838_p2 + zext_ln695_13_fu_844_p1);

assign add_ln695_14_fu_894_p2 = (add_ln695_13_reg_1498 + zext_ln695_14_fu_891_p1);

assign add_ln695_15_fu_902_p2 = (add_ln695_14_fu_894_p2 + zext_ln695_15_fu_899_p1);

assign add_ln695_16_fu_911_p2 = (add_ln695_15_fu_902_p2 + zext_ln695_16_fu_908_p1);

assign add_ln695_17_fu_1036_p2 = (add_ln695_18_fu_1031_p2 + ap_phi_mux_conv3_i461577_phi_fu_302_p4);

assign add_ln695_18_fu_1031_p2 = (shl_ln695_reg_1540 + zext_ln695_fu_1027_p1);

assign add_ln695_19_fu_989_p2 = (ap_phi_mux_empty_41_phi_fu_292_p4 + zext_ln695_1_fu_986_p1);

assign add_ln695_1_fu_1282_p2 = (trunc_ln695_fu_1278_p1 + ap_phi_mux_conv3_i_i474614_phi_fu_442_p4);

assign add_ln695_20_fu_502_p2 = (empty_40_reg_278 + 28'd1);

assign add_ln695_2_fu_1308_p2 = (select_ln136_reg_1664 + add_i13476613_reg_450);

assign add_ln695_3_fu_554_p2 = (zext_ln674_1_fu_536_p1 + zext_ln695_3_fu_550_p1);

assign add_ln695_4_fu_703_p2 = (add_ln695_3_reg_1390 + zext_ln695_4_fu_700_p1);

assign add_ln695_5_fu_715_p2 = (zext_ln674_2_fu_708_p1 + zext_ln695_5_fu_712_p1);

assign add_ln695_6_fu_724_p2 = (add_ln695_5_fu_715_p2 + zext_ln695_6_fu_721_p1);

assign add_ln695_7_fu_733_p2 = (add_ln695_6_fu_724_p2 + zext_ln695_7_fu_730_p1);

assign add_ln695_8_fu_778_p2 = (add_ln695_7_reg_1466 + zext_ln695_8_fu_775_p1);

assign add_ln695_9_fu_790_p2 = (zext_ln674_3_fu_783_p1 + zext_ln695_9_fu_787_p1);

assign add_ln695_fu_530_p2 = (zext_ln674_fu_512_p1 + zext_ln695_2_fu_526_p1);

assign add_ln696_1_fu_1319_p2 = ($signed(32'd4294901775) + $signed(add_ln695_2_fu_1308_p2));

assign add_ln696_2_fu_1001_p2 = ($signed(add_ln695_19_fu_989_p2) + $signed(32'd4294901775));

assign add_ln696_fu_1294_p2 = ($signed(32'd4294901775) + $signed(add_ln695_1_fu_1282_p2));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln92_reg_1376 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (inStrm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln92_reg_1376 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (inStrm_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op202_read_state14 == 1'b1) & (inStrm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_predicate_op202_read_state14 == 1'b1) & (inStrm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((endInLenStrm_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp1_stage0_iter1 = ((ap_predicate_op202_read_state14 == 1'b1) & (inStrm_empty_n == 1'b0));
end

assign ap_block_state15_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18 = ((endOutStrm_full_n == 1'b0) | (outStrm_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state2 = (((e_1_reg_268 == 1'd0) & (inLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd0) & (1'b0 == adlerStrm_empty_n)) | ((e_1_reg_268 == 1'd0) & (endInLenStrm_empty_n == 1'b0)) | ((e_1_reg_268 == 1'd1) & (endOutStrm_full_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln92_reg_1376 == 1'd0) & (inStrm_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_443 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_578 = ((icmp_ln886_4_fu_1048_p2 == 1'd0) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_582 = ((icmp_ln886_5_fu_1054_p2 == 1'd0) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_586 = ((icmp_ln886_6_fu_1060_p2 == 1'd0) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_590 = ((icmp_ln886_7_fu_1066_p2 == 1'd0) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_594 = ((icmp_ln886_8_fu_1072_p2 == 1'd0) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_598 = ((icmp_ln886_9_fu_1078_p2 == 1'd0) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_602 = ((icmp_ln886_10_fu_1084_p2 == 1'd0) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_606 = ((icmp_ln886_11_fu_1090_p2 == 1'd0) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_610 = ((icmp_ln886_12_fu_1096_p2 == 1'd0) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_614 = ((icmp_ln886_13_fu_1102_p2 == 1'd0) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_618 = ((icmp_ln886_14_fu_1108_p2 == 1'd0) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_622 = ((icmp_ln886_15_fu_1114_p2 == 1'd0) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_626 = ((icmp_ln886_16_fu_1120_p2 == 1'd0) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_630 = ((icmp_ln886_17_fu_1126_p2 == 1'd0) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_634 = ((icmp_ln886_18_fu_1132_p2 == 1'd0) & (icmp_ln886_17_fu_1126_p2 == 1'd1) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_638 = ((icmp_ln886_19_fu_1138_p2 == 1'd0) & (icmp_ln886_18_fu_1132_p2 == 1'd1) & (icmp_ln886_17_fu_1126_p2 == 1'd1) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_condition_702 = ((icmp_ln886_19_fu_1138_p2 == 1'd1) & (icmp_ln886_18_fu_1132_p2 == 1'd1) & (icmp_ln886_17_fu_1126_p2 == 1'd1) & (icmp_ln886_16_fu_1120_p2 == 1'd1) & (icmp_ln886_15_fu_1114_p2 == 1'd1) & (icmp_ln886_14_fu_1108_p2 == 1'd1) & (icmp_ln886_13_fu_1102_p2 == 1'd1) & (icmp_ln886_12_fu_1096_p2 == 1'd1) & (icmp_ln886_11_fu_1090_p2 == 1'd1) & (icmp_ln886_10_fu_1084_p2 == 1'd1) & (icmp_ln886_9_fu_1078_p2 == 1'd1) & (icmp_ln886_8_fu_1072_p2 == 1'd1) & (icmp_ln886_7_fu_1066_p2 == 1'd1) & (icmp_ln886_6_fu_1060_p2 == 1'd1) & (icmp_ln886_5_fu_1054_p2 == 1'd1) & (icmp_ln886_4_fu_1048_p2 == 1'd1) & (icmp_ln886_2_fu_1042_p2 == 1'd1) & (icmp_ln92_reg_1376_pp0_iter6_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (outStrm_blk_n & inStrm_blk_n & inLenStrm_blk_n & endOutStrm_blk_n & endInLenStrm_blk_n & adlerStrm_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_phi_reg_pp0_iter0_conv3_i462_reg_393 = 'bx;

assign ap_phi_reg_pp0_iter0_zext_ln886_lcssa_reg_320 = 'bx;

assign ap_phi_reg_pp1_iter0_p_Val2_1_reg_427 = 'bx;

always @ (*) begin
    ap_predicate_op202_read_state14 = ((icmp_ln134_reg_1638 == 1'd1) & (icmp_ln882_reg_1629 == 1'd0));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign icmp_ln134_fu_1165_p2 = ((j_reg_404 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_1184_p2 = ((shl_ln2_reg_1642_pp1_iter1_reg > or_ln135_fu_1179_p2) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_1154_p2 = ((j_reg_404 == trunc_ln0_1_reg_1351) ? 1'b1 : 1'b0);

assign icmp_ln886_10_fu_1084_p2 = ((add_ln695_17_fu_1036_p2 < 32'd655210) ? 1'b1 : 1'b0);

assign icmp_ln886_11_fu_1090_p2 = ((add_ln695_17_fu_1036_p2 < 32'd589689) ? 1'b1 : 1'b0);

assign icmp_ln886_12_fu_1096_p2 = ((add_ln695_17_fu_1036_p2 < 32'd524168) ? 1'b1 : 1'b0);

assign icmp_ln886_13_fu_1102_p2 = ((add_ln695_17_fu_1036_p2 < 32'd458647) ? 1'b1 : 1'b0);

assign icmp_ln886_14_fu_1108_p2 = ((add_ln695_17_fu_1036_p2 < 32'd393126) ? 1'b1 : 1'b0);

assign icmp_ln886_15_fu_1114_p2 = ((add_ln695_17_fu_1036_p2 < 32'd327605) ? 1'b1 : 1'b0);

assign icmp_ln886_16_fu_1120_p2 = ((add_ln695_17_fu_1036_p2 < 32'd262084) ? 1'b1 : 1'b0);

assign icmp_ln886_17_fu_1126_p2 = ((add_ln695_17_fu_1036_p2 < 32'd196563) ? 1'b1 : 1'b0);

assign icmp_ln886_18_fu_1132_p2 = ((add_ln695_17_fu_1036_p2 < 32'd131042) ? 1'b1 : 1'b0);

assign icmp_ln886_19_fu_1138_p2 = ((add_ln695_17_fu_1036_p2 < 32'd65521) ? 1'b1 : 1'b0);

assign icmp_ln886_1_fu_1313_p2 = ((add_ln695_2_fu_1308_p2 > 32'd65520) ? 1'b1 : 1'b0);

assign icmp_ln886_2_fu_1042_p2 = ((add_ln695_17_fu_1036_p2 < 32'd1113857) ? 1'b1 : 1'b0);

assign icmp_ln886_3_fu_995_p2 = ((add_ln695_19_fu_989_p2 > 32'd65520) ? 1'b1 : 1'b0);

assign icmp_ln886_4_fu_1048_p2 = ((add_ln695_17_fu_1036_p2 < 32'd1048336) ? 1'b1 : 1'b0);

assign icmp_ln886_5_fu_1054_p2 = ((add_ln695_17_fu_1036_p2 < 32'd982815) ? 1'b1 : 1'b0);

assign icmp_ln886_6_fu_1060_p2 = ((add_ln695_17_fu_1036_p2 < 32'd917294) ? 1'b1 : 1'b0);

assign icmp_ln886_7_fu_1066_p2 = ((add_ln695_17_fu_1036_p2 < 32'd851773) ? 1'b1 : 1'b0);

assign icmp_ln886_8_fu_1072_p2 = ((add_ln695_17_fu_1036_p2 < 32'd786252) ? 1'b1 : 1'b0);

assign icmp_ln886_9_fu_1078_p2 = ((add_ln695_17_fu_1036_p2 < 32'd720731) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_1288_p2 = ((add_ln695_1_fu_1282_p2 > 32'd65520) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_497_p2 = ((empty_40_reg_278 == div_i_i_cast_reg_1371) ? 1'b1 : 1'b0);

assign j_1_fu_1159_p2 = (j_reg_404 + 4'd1);

assign lshr_ln674_2_fu_1267_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln674_7_fu_1264_p1;

assign lshr_ln674_fu_1258_p2 = select_ln674_3_fu_1232_p3 >> zext_ln674_6_fu_1254_p1;

assign lshr_ln_fu_473_p4 = {{adlerStrm_dout[31:16]}};

assign or_ln135_fu_1179_p2 = (shl_ln2_reg_1642_pp1_iter1_reg | 7'd7);

assign outStrm_din = (shl_ln1501_fu_1333_p2 + conv3_i_i474614_reg_439);

assign p_Result_1_1_fu_516_p4 = {{inStrm_dout[15:8]}};

assign p_Result_3_2_fu_540_p4 = {{inStrm_dout[23:16]}};

assign p_Result_s_fu_1273_p2 = (lshr_ln674_reg_1659 & lshr_ln674_2_fu_1267_p2);

assign select_ln128_fu_1007_p3 = ((icmp_ln886_3_fu_995_p2[0:0] === 1'b1) ? add_ln696_2_fu_1001_p2 : add_ln695_19_fu_989_p2);

assign select_ln136_fu_1300_p3 = ((icmp_ln886_fu_1288_p2[0:0] === 1'b1) ? add_ln696_fu_1294_p2 : add_ln695_1_fu_1282_p2);

assign select_ln138_fu_1325_p3 = ((icmp_ln886_1_fu_1313_p2[0:0] === 1'b1) ? add_ln696_1_fu_1319_p2 : add_ln695_2_fu_1308_p2);

assign select_ln674_3_fu_1232_p3 = ((icmp_ln674_fu_1184_p2[0:0] === 1'b1) ? tmp_fu_1196_p4 : ap_phi_mux_p_Val2_1_phi_fu_431_p4);

assign select_ln674_4_fu_1240_p3 = ((icmp_ln674_fu_1184_p2[0:0] === 1'b1) ? xor_ln674_fu_1212_p2 : zext_ln674_4_fu_1189_p1);

assign select_ln674_fu_1224_p3 = ((icmp_ln674_fu_1184_p2[0:0] === 1'b1) ? sub_ln674_fu_1206_p2 : sub_ln674_3_fu_1218_p2);

assign shl_ln1501_fu_1333_p2 = add_i13476613_reg_450 << 32'd16;

assign shl_ln2_fu_1171_p3 = {{j_reg_404}, {3'd0}};

assign shl_ln695_fu_942_p2 = ap_phi_mux_empty_41_phi_fu_292_p4 << 32'd4;

assign sub_ln674_3_fu_1218_p2 = (zext_ln674_5_fu_1192_p1 - zext_ln674_4_fu_1189_p1);

assign sub_ln674_4_fu_1248_p2 = (8'd127 - select_ln674_fu_1224_p3);

assign sub_ln674_fu_1206_p2 = (zext_ln674_4_fu_1189_p1 - zext_ln674_5_fu_1192_p1);

assign sub_ln696_fu_1148_p2 = (add_ln695_17_reg_1555 - zext_ln696_fu_1144_p1);

integer ap_tvar_int_0;

always @ (ap_phi_mux_p_Val2_1_phi_fu_431_p4) begin
    for (ap_tvar_int_0 = 128 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 127 - 0) begin
            tmp_fu_1196_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_fu_1196_p4[ap_tvar_int_0] = ap_phi_mux_p_Val2_1_phi_fu_431_p4[127 - ap_tvar_int_0];
        end
    end
end

assign trunc_ln0_1_fu_465_p1 = inLenStrm_dout[3:0];

assign trunc_ln0_fu_461_p1 = adlerStrm_dout[15:0];

assign trunc_ln674_fu_508_p1 = inStrm_dout[7:0];

assign trunc_ln695_fu_1278_p1 = p_Result_s_fu_1273_p2[31:0];

assign xor_ln674_fu_1212_p2 = (zext_ln674_4_fu_1189_p1 ^ 8'd127);

assign zext_ln1350_1_fu_765_p1 = add_ln1350_1_fu_742_p2;

assign zext_ln1350_2_fu_817_p1 = add_ln1350_3_fu_808_p2;

assign zext_ln1350_3_fu_882_p1 = add_ln1350_9_reg_1493;

assign zext_ln1350_fu_752_p1 = add_ln695_6_fu_724_p2;

assign zext_ln1501_1_fu_483_p1 = lshr_ln_fu_473_p4;

assign zext_ln1501_fu_469_p1 = trunc_ln0_fu_461_p1;

assign zext_ln215_10_fu_948_p1 = add_ln695_15_reg_1519;

assign zext_ln215_11_fu_951_p1 = add_ln695_16_reg_1524;

assign zext_ln215_12_fu_762_p1 = add_ln1350_reg_1461;

assign zext_ln215_13_fu_814_p1 = add_ln1350_2_reg_1472;

assign zext_ln215_14_fu_930_p1 = add_ln1350_4_reg_1504;

assign zext_ln215_15_fu_933_p1 = add_ln1350_5_reg_1509;

assign zext_ln215_16_fu_960_p1 = add_ln1350_6_reg_1530;

assign zext_ln215_17_fu_963_p1 = add_ln1350_7_fu_954_p2;

assign zext_ln215_18_fu_879_p1 = add_ln1350_8_reg_1477_pp0_iter3_reg;

assign zext_ln215_19_fu_973_p1 = add_ln1350_10_reg_1535;

assign zext_ln215_1_fu_739_p1 = add_ln695_3_reg_1390;

assign zext_ln215_20_fu_976_p1 = add_ln1350_11_fu_967_p2;

assign zext_ln215_21_fu_1015_p1 = add_ln1350_12_reg_1514_pp0_iter6_reg;

assign zext_ln215_22_fu_1018_p1 = add_ln1350_13_reg_1545;

assign zext_ln215_2_fu_748_p1 = add_ln695_5_fu_715_p2;

assign zext_ln215_3_fu_805_p1 = add_ln695_7_reg_1466;

assign zext_ln215_4_fu_853_p1 = add_ln695_9_reg_1482;

assign zext_ln215_5_fu_856_p1 = add_ln695_10_reg_1487;

assign zext_ln215_6_fu_865_p1 = add_ln695_11_fu_830_p2;

assign zext_ln215_7_fu_869_p1 = add_ln695_12_fu_838_p2;

assign zext_ln215_8_fu_917_p1 = add_ln695_13_reg_1498;

assign zext_ln215_9_fu_920_p1 = add_ln695_14_fu_894_p2;

assign zext_ln215_fu_690_p1 = trunc_ln674_fu_508_p1;

assign zext_ln674_1_fu_536_p1 = add_ln695_fu_530_p2;

assign zext_ln674_2_fu_708_p1 = add_ln695_4_fu_703_p2;

assign zext_ln674_3_fu_783_p1 = add_ln695_8_fu_778_p2;

assign zext_ln674_4_fu_1189_p1 = shl_ln2_reg_1642_pp1_iter1_reg;

assign zext_ln674_5_fu_1192_p1 = or_ln135_fu_1179_p2;

assign zext_ln674_6_fu_1254_p1 = select_ln674_4_fu_1240_p3;

assign zext_ln674_7_fu_1264_p1 = sub_ln674_4_reg_1654;

assign zext_ln674_fu_512_p1 = trunc_ln674_fu_508_p1;

assign zext_ln695_10_fu_796_p1 = p_Result_10_9_reg_1426_pp0_iter2_reg;

assign zext_ln695_11_fu_827_p1 = p_Result_11_s_reg_1431_pp0_iter3_reg;

assign zext_ln695_12_fu_835_p1 = p_Result_12_s_reg_1436_pp0_iter3_reg;

assign zext_ln695_13_fu_844_p1 = p_Result_13_s_reg_1441_pp0_iter3_reg;

assign zext_ln695_14_fu_891_p1 = p_Result_14_s_reg_1446_pp0_iter4_reg;

assign zext_ln695_15_fu_899_p1 = p_Result_15_s_reg_1451_pp0_iter4_reg;

assign zext_ln695_16_fu_908_p1 = p_Result_16_s_reg_1456_pp0_iter4_reg;

assign zext_ln695_1_fu_986_p1 = add_ln695_16_reg_1524;

assign zext_ln695_2_fu_526_p1 = p_Result_1_1_fu_516_p4;

assign zext_ln695_3_fu_550_p1 = p_Result_3_2_fu_540_p4;

assign zext_ln695_4_fu_700_p1 = p_Result_4_3_reg_1396;

assign zext_ln695_5_fu_712_p1 = p_Result_5_4_reg_1401;

assign zext_ln695_6_fu_721_p1 = p_Result_6_5_reg_1406;

assign zext_ln695_7_fu_730_p1 = p_Result_7_6_reg_1411;

assign zext_ln695_8_fu_775_p1 = p_Result_8_7_reg_1416_pp0_iter2_reg;

assign zext_ln695_9_fu_787_p1 = p_Result_9_8_reg_1421_pp0_iter2_reg;

assign zext_ln695_fu_1027_p1 = add_ln1350_14_fu_1021_p2;

assign zext_ln696_fu_1144_p1 = ap_phi_reg_pp0_iter8_zext_ln886_lcssa_reg_320;

always @ (posedge ap_clk) begin
    shl_ln695_reg_1540[3:0] <= 4'b0000;
    shl_ln2_reg_1642[2:0] <= 3'b000;
    shl_ln2_reg_1642_pp1_iter1_reg[2:0] <= 3'b000;
    sub_ln674_4_reg_1654[0] <= 1'b0;
end

endmodule //Adler32Kernel_adler32_16_s
