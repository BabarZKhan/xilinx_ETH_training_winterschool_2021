#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[8997].first = 1;
        (*_glb_hdl_sc_channel_map)[8997].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[8980].first = 1;
        (*_glb_hdl_sc_channel_map)[8980].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[9010].first = 1;
        (*_glb_hdl_sc_channel_map)[9010].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[9009].first = 1;
        (*_glb_hdl_sc_channel_map)[9009].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[8943].first = 1;
        (*_glb_hdl_sc_channel_map)[8943].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[8942].first = 1;
        (*_glb_hdl_sc_channel_map)[8942].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(8052616);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[9011].first = 3;
        (*_glb_hdl_sc_channel_map)[9011].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[9038].first = 1;
        (*_glb_hdl_sc_channel_map)[9038].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[9029].first = 3;
        (*_glb_hdl_sc_channel_map)[9029].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[9020].first = 3;
        (*_glb_hdl_sc_channel_map)[9020].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[9056].first = 1;
        (*_glb_hdl_sc_channel_map)[9056].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(8052952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(8053008);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[9039].first = 1;
        (*_glb_hdl_sc_channel_map)[9039].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[9030].first = 3;
        (*_glb_hdl_sc_channel_map)[9030].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[9021].first = 3;
        (*_glb_hdl_sc_channel_map)[9021].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[9057].first = 1;
        (*_glb_hdl_sc_channel_map)[9057].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[9013].first = 3;
        (*_glb_hdl_sc_channel_map)[9013].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(8053344);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[9040].first = 1;
        (*_glb_hdl_sc_channel_map)[9040].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[9031].first = 3;
        (*_glb_hdl_sc_channel_map)[9031].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[9022].first = 3;
        (*_glb_hdl_sc_channel_map)[9022].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[9058].first = 1;
        (*_glb_hdl_sc_channel_map)[9058].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[9014].first = 3;
        (*_glb_hdl_sc_channel_map)[9014].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(8053680);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[9041].first = 1;
        (*_glb_hdl_sc_channel_map)[9041].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[9032].first = 3;
        (*_glb_hdl_sc_channel_map)[9032].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[9023].first = 3;
        (*_glb_hdl_sc_channel_map)[9023].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[9059].first = 1;
        (*_glb_hdl_sc_channel_map)[9059].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[9015].first = 3;
        (*_glb_hdl_sc_channel_map)[9015].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(8054016);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[9042].first = 1;
        (*_glb_hdl_sc_channel_map)[9042].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[9033].first = 3;
        (*_glb_hdl_sc_channel_map)[9033].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[9024].first = 3;
        (*_glb_hdl_sc_channel_map)[9024].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[9060].first = 1;
        (*_glb_hdl_sc_channel_map)[9060].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[9016].first = 3;
        (*_glb_hdl_sc_channel_map)[9016].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(8054352);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[9043].first = 1;
        (*_glb_hdl_sc_channel_map)[9043].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[9034].first = 3;
        (*_glb_hdl_sc_channel_map)[9034].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[9025].first = 3;
        (*_glb_hdl_sc_channel_map)[9025].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[9061].first = 1;
        (*_glb_hdl_sc_channel_map)[9061].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map)[9017].first = 3;
        (*_glb_hdl_sc_channel_map)[9017].second.push_front(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(8054688);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map)[9044].first = 1;
        (*_glb_hdl_sc_channel_map)[9044].second.push_front(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map)[9035].first = 3;
        (*_glb_hdl_sc_channel_map)[9035].second.push_front(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map)[9026].first = 3;
        (*_glb_hdl_sc_channel_map)[9026].second.push_front(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map)[9062].first = 1;
        (*_glb_hdl_sc_channel_map)[9062].second.push_front(p_1_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata7.bind(*p_1_trace_tdata7);
        (*_glb_hdl_sc_channel_map)[9018].first = 3;
        (*_glb_hdl_sc_channel_map)[9018].second.push_front(p_1_trace_tdata7);
        xsim_sc_channel<0, bool > *p_1_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready7.bind(*p_1_trace_tready7);
        p_1_trace_tready7->set_sv_netview_offsetfromdp(8055024);
        xsim_sc_channel<0, bool > *p_1_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast7.bind(*p_1_trace_tlast7);
        (*_glb_hdl_sc_channel_map)[9045].first = 1;
        (*_glb_hdl_sc_channel_map)[9045].second.push_front(p_1_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid7.bind(*p_1_trace_tid7);
        (*_glb_hdl_sc_channel_map)[9036].first = 3;
        (*_glb_hdl_sc_channel_map)[9036].second.push_front(p_1_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest7.bind(*p_1_trace_tdest7);
        (*_glb_hdl_sc_channel_map)[9027].first = 3;
        (*_glb_hdl_sc_channel_map)[9027].second.push_front(p_1_trace_tdest7);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid7.bind(*p_1_trace_tvalid7);
        (*_glb_hdl_sc_channel_map)[9063].first = 1;
        (*_glb_hdl_sc_channel_map)[9063].second.push_front(p_1_trace_tvalid7);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata8 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata8.bind(*p_1_trace_tdata8);
        (*_glb_hdl_sc_channel_map)[9019].first = 3;
        (*_glb_hdl_sc_channel_map)[9019].second.push_front(p_1_trace_tdata8);
        xsim_sc_channel<0, bool > *p_1_trace_tready8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready8.bind(*p_1_trace_tready8);
        p_1_trace_tready8->set_sv_netview_offsetfromdp(8055360);
        xsim_sc_channel<0, bool > *p_1_trace_tlast8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast8.bind(*p_1_trace_tlast8);
        (*_glb_hdl_sc_channel_map)[9046].first = 1;
        (*_glb_hdl_sc_channel_map)[9046].second.push_front(p_1_trace_tlast8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid8.bind(*p_1_trace_tid8);
        (*_glb_hdl_sc_channel_map)[9037].first = 3;
        (*_glb_hdl_sc_channel_map)[9037].second.push_front(p_1_trace_tid8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest8.bind(*p_1_trace_tdest8);
        (*_glb_hdl_sc_channel_map)[9028].first = 3;
        (*_glb_hdl_sc_channel_map)[9028].second.push_front(p_1_trace_tdest8);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid8 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid8.bind(*p_1_trace_tvalid8);
        (*_glb_hdl_sc_channel_map)[9064].first = 1;
        (*_glb_hdl_sc_channel_map)[9064].second.push_front(p_1_trace_tvalid8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[8947].first = 3;
        (*_glb_hdl_sc_channel_map)[8947].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[8949].first = 1;
        (*_glb_hdl_sc_channel_map)[8949].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(8055752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[8957].first = 3;
        (*_glb_hdl_sc_channel_map)[8957].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[8959].first = 3;
        (*_glb_hdl_sc_channel_map)[8959].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[8960].first = 1;
        (*_glb_hdl_sc_channel_map)[8960].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(8055976);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(8056032);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[8950].first = 1;
        (*_glb_hdl_sc_channel_map)[8950].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(8056144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[8944].first = 3;
        (*_glb_hdl_sc_channel_map)[8944].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[8946].first = 1;
        (*_glb_hdl_sc_channel_map)[8946].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(8056312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(8056368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(8056424);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(8056480);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[8954].first = 1;
        (*_glb_hdl_sc_channel_map)[8954].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[8964].first = 3;
        (*_glb_hdl_sc_channel_map)[8964].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[8966].first = 1;
        (*_glb_hdl_sc_channel_map)[8966].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(8056704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[8974].first = 3;
        (*_glb_hdl_sc_channel_map)[8974].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[8976].first = 3;
        (*_glb_hdl_sc_channel_map)[8976].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[8977].first = 1;
        (*_glb_hdl_sc_channel_map)[8977].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(8056928);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(8056984);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[8967].first = 1;
        (*_glb_hdl_sc_channel_map)[8967].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(8057096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[8961].first = 3;
        (*_glb_hdl_sc_channel_map)[8961].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[8963].first = 1;
        (*_glb_hdl_sc_channel_map)[8963].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(8057264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(8057320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(8057376);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(8057432);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[8971].first = 1;
        (*_glb_hdl_sc_channel_map)[8971].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[8986].first = 3;
        (*_glb_hdl_sc_channel_map)[8986].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[8992].first = 1;
        (*_glb_hdl_sc_channel_map)[8992].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(8057656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[8989].first = 3;
        (*_glb_hdl_sc_channel_map)[8989].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[8991].first = 3;
        (*_glb_hdl_sc_channel_map)[8991].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[8987].first = 3;
        (*_glb_hdl_sc_channel_map)[8987].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[8988].first = 3;
        (*_glb_hdl_sc_channel_map)[8988].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[9004].first = 3;
        (*_glb_hdl_sc_channel_map)[9004].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[9007].first = 3;
        (*_glb_hdl_sc_channel_map)[9007].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[9008].first = 1;
        (*_glb_hdl_sc_channel_map)[9008].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(8058104);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(8058160);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[8994].first = 1;
        (*_glb_hdl_sc_channel_map)[8994].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[9005].first = 1;
        (*_glb_hdl_sc_channel_map)[9005].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(8058328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(8058384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(8058440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[8978].first = 3;
        (*_glb_hdl_sc_channel_map)[8978].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[8985].first = 1;
        (*_glb_hdl_sc_channel_map)[8985].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(8058608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[8982].first = 3;
        (*_glb_hdl_sc_channel_map)[8982].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[8984].first = 3;
        (*_glb_hdl_sc_channel_map)[8984].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[8979].first = 3;
        (*_glb_hdl_sc_channel_map)[8979].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[8981].first = 3;
        (*_glb_hdl_sc_channel_map)[8981].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(8058888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(8058944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(8059000);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(8059056);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[9001].first = 1;
        (*_glb_hdl_sc_channel_map)[9001].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[9086].first = 1;
        (*_glb_hdl_sc_channel_map)[9086].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[9087].first = 1;
        (*_glb_hdl_sc_channel_map)[9087].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[9107].first = 1;
        (*_glb_hdl_sc_channel_map)[9107].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[9108].first = 1;
        (*_glb_hdl_sc_channel_map)[9108].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9092].first = 3;
        (*_glb_hdl_sc_channel_map)[9092].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[9093].first = 3;
        (*_glb_hdl_sc_channel_map)[9093].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9095].first = 1;
        (*_glb_hdl_sc_channel_map)[9095].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(8059608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9103].first = 3;
        (*_glb_hdl_sc_channel_map)[9103].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9105].first = 3;
        (*_glb_hdl_sc_channel_map)[9105].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9106].first = 1;
        (*_glb_hdl_sc_channel_map)[9106].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(8059832);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(8059888);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[9096].first = 1;
        (*_glb_hdl_sc_channel_map)[9096].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(8060000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9088].first = 3;
        (*_glb_hdl_sc_channel_map)[9088].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[9089].first = 3;
        (*_glb_hdl_sc_channel_map)[9089].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9091].first = 1;
        (*_glb_hdl_sc_channel_map)[9091].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(8060224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(8060280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(8060336);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(8060392);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[9100].first = 1;
        (*_glb_hdl_sc_channel_map)[9100].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[9074].first = 1;
        (*_glb_hdl_sc_channel_map)[9074].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[9073].first = 1;
        (*_glb_hdl_sc_channel_map)[9073].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[4472].first = 3;
        (*_glb_hdl_sc_channel_map)[4472].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[9085].first = 1;
        (*_glb_hdl_sc_channel_map)[9085].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[9083].first = 1;
        (*_glb_hdl_sc_channel_map)[9083].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[9082].first = 3;
        (*_glb_hdl_sc_channel_map)[9082].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[9084].first = 3;
        (*_glb_hdl_sc_channel_map)[9084].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[9072].first = 1;
        (*_glb_hdl_sc_channel_map)[9072].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[9071].first = 1;
        (*_glb_hdl_sc_channel_map)[9071].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[4473].first = 3;
        (*_glb_hdl_sc_channel_map)[4473].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[9081].first = 1;
        (*_glb_hdl_sc_channel_map)[9081].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[9079].first = 1;
        (*_glb_hdl_sc_channel_map)[9079].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[9078].first = 3;
        (*_glb_hdl_sc_channel_map)[9078].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[9080].first = 3;
        (*_glb_hdl_sc_channel_map)[9080].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[9077].first = 1;
        (*_glb_hdl_sc_channel_map)[9077].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[9075].first = 1;
        (*_glb_hdl_sc_channel_map)[9075].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[9076].first = 3;
        (*_glb_hdl_sc_channel_map)[9076].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[9069].first = 3;
        (*_glb_hdl_sc_channel_map)[9069].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(8061512);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(8061568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(8061624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(8061680);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(8061736);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[9146].first = 1;
        (*_glb_hdl_sc_channel_map)[9146].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[9147].first = 1;
        (*_glb_hdl_sc_channel_map)[9147].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[9182].first = 1;
        (*_glb_hdl_sc_channel_map)[9182].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[9183].first = 1;
        (*_glb_hdl_sc_channel_map)[9183].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9154].first = 3;
        (*_glb_hdl_sc_channel_map)[9154].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9158].first = 1;
        (*_glb_hdl_sc_channel_map)[9158].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(8062176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9174].first = 3;
        (*_glb_hdl_sc_channel_map)[9174].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9178].first = 3;
        (*_glb_hdl_sc_channel_map)[9178].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9180].first = 1;
        (*_glb_hdl_sc_channel_map)[9180].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(8062400);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(8062456);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[9160].first = 1;
        (*_glb_hdl_sc_channel_map)[9160].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(8062568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9148].first = 3;
        (*_glb_hdl_sc_channel_map)[9148].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9152].first = 1;
        (*_glb_hdl_sc_channel_map)[9152].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(8062736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(8062792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(8062848);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(8062904);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[9168].first = 1;
        (*_glb_hdl_sc_channel_map)[9168].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[9130].first = 1;
        (*_glb_hdl_sc_channel_map)[9130].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[9128].first = 1;
        (*_glb_hdl_sc_channel_map)[9128].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[9126].first = 3;
        (*_glb_hdl_sc_channel_map)[9126].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[4468].first = 3;
        (*_glb_hdl_sc_channel_map)[4468].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[9127].first = 3;
        (*_glb_hdl_sc_channel_map)[9127].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[9129].first = 3;
        (*_glb_hdl_sc_channel_map)[9129].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[4469].first = 3;
        (*_glb_hdl_sc_channel_map)[4469].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[9145].first = 1;
        (*_glb_hdl_sc_channel_map)[9145].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[9143].first = 1;
        (*_glb_hdl_sc_channel_map)[9143].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[9141].first = 3;
        (*_glb_hdl_sc_channel_map)[9141].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[9144].first = 3;
        (*_glb_hdl_sc_channel_map)[9144].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[9142].first = 1;
        (*_glb_hdl_sc_channel_map)[9142].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[9125].first = 1;
        (*_glb_hdl_sc_channel_map)[9125].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[9123].first = 1;
        (*_glb_hdl_sc_channel_map)[9123].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[9121].first = 3;
        (*_glb_hdl_sc_channel_map)[9121].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[4470].first = 3;
        (*_glb_hdl_sc_channel_map)[4470].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[9122].first = 3;
        (*_glb_hdl_sc_channel_map)[9122].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[9124].first = 3;
        (*_glb_hdl_sc_channel_map)[9124].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[4471].first = 3;
        (*_glb_hdl_sc_channel_map)[4471].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[9140].first = 1;
        (*_glb_hdl_sc_channel_map)[9140].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[9138].first = 1;
        (*_glb_hdl_sc_channel_map)[9138].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[9135].first = 3;
        (*_glb_hdl_sc_channel_map)[9135].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[9137].first = 1;
        (*_glb_hdl_sc_channel_map)[9137].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[9136].first = 3;
        (*_glb_hdl_sc_channel_map)[9136].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[9139].first = 3;
        (*_glb_hdl_sc_channel_map)[9139].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[9134].first = 1;
        (*_glb_hdl_sc_channel_map)[9134].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[9132].first = 1;
        (*_glb_hdl_sc_channel_map)[9132].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[9133].first = 3;
        (*_glb_hdl_sc_channel_map)[9133].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[9131].first = 3;
        (*_glb_hdl_sc_channel_map)[9131].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[9113].first = 1;
        (*_glb_hdl_sc_channel_map)[9113].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8064696);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8064752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(8064808);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8064864);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[9119].first = 1;
        (*_glb_hdl_sc_channel_map)[9119].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8064976);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8065032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(8065088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8065144);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8065200);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8065256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[4466].first = 3;
        (*_glb_hdl_sc_channel_map)[4466].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[9155].first = 3;
        (*_glb_hdl_sc_channel_map)[9155].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[9159].first = 1;
        (*_glb_hdl_sc_channel_map)[9159].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[9157].first = 1;
        (*_glb_hdl_sc_channel_map)[9157].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[9175].first = 3;
        (*_glb_hdl_sc_channel_map)[9175].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[9179].first = 3;
        (*_glb_hdl_sc_channel_map)[9179].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[9181].first = 1;
        (*_glb_hdl_sc_channel_map)[9181].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[9177].first = 1;
        (*_glb_hdl_sc_channel_map)[9177].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[9163].first = 3;
        (*_glb_hdl_sc_channel_map)[9163].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[9165].first = 1;
        (*_glb_hdl_sc_channel_map)[9165].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[9161].first = 1;
        (*_glb_hdl_sc_channel_map)[9161].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[4467].first = 3;
        (*_glb_hdl_sc_channel_map)[4467].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[9149].first = 3;
        (*_glb_hdl_sc_channel_map)[9149].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[9153].first = 1;
        (*_glb_hdl_sc_channel_map)[9153].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[9151].first = 1;
        (*_glb_hdl_sc_channel_map)[9151].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[9167].first = 3;
        (*_glb_hdl_sc_channel_map)[9167].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[9171].first = 3;
        (*_glb_hdl_sc_channel_map)[9171].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[9173].first = 1;
        (*_glb_hdl_sc_channel_map)[9173].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[9169].first = 1;
        (*_glb_hdl_sc_channel_map)[9169].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(536);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[9221].first = 1;
        (*_glb_hdl_sc_channel_map)[9221].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[9222].first = 1;
        (*_glb_hdl_sc_channel_map)[9222].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[9257].first = 1;
        (*_glb_hdl_sc_channel_map)[9257].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[9258].first = 1;
        (*_glb_hdl_sc_channel_map)[9258].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9229].first = 3;
        (*_glb_hdl_sc_channel_map)[9229].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9233].first = 1;
        (*_glb_hdl_sc_channel_map)[9233].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(8066760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9249].first = 3;
        (*_glb_hdl_sc_channel_map)[9249].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9253].first = 3;
        (*_glb_hdl_sc_channel_map)[9253].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9255].first = 1;
        (*_glb_hdl_sc_channel_map)[9255].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(8066984);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(8067040);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[9235].first = 1;
        (*_glb_hdl_sc_channel_map)[9235].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(8067152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9223].first = 3;
        (*_glb_hdl_sc_channel_map)[9223].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9227].first = 1;
        (*_glb_hdl_sc_channel_map)[9227].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(8067320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(8067376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(8067432);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(8067488);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[9243].first = 1;
        (*_glb_hdl_sc_channel_map)[9243].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[9205].first = 1;
        (*_glb_hdl_sc_channel_map)[9205].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[9203].first = 1;
        (*_glb_hdl_sc_channel_map)[9203].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[9201].first = 3;
        (*_glb_hdl_sc_channel_map)[9201].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map)[4462].first = 3;
        (*_glb_hdl_sc_channel_map)[4462].second.push_front(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[9202].first = 3;
        (*_glb_hdl_sc_channel_map)[9202].second.push_front(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[9204].first = 3;
        (*_glb_hdl_sc_channel_map)[9204].second.push_front(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[4463].first = 3;
        (*_glb_hdl_sc_channel_map)[4463].second.push_front(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[9220].first = 1;
        (*_glb_hdl_sc_channel_map)[9220].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[9218].first = 1;
        (*_glb_hdl_sc_channel_map)[9218].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[9216].first = 3;
        (*_glb_hdl_sc_channel_map)[9216].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[9219].first = 3;
        (*_glb_hdl_sc_channel_map)[9219].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[9217].first = 1;
        (*_glb_hdl_sc_channel_map)[9217].second.push_front(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[9200].first = 1;
        (*_glb_hdl_sc_channel_map)[9200].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[9198].first = 1;
        (*_glb_hdl_sc_channel_map)[9198].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[9196].first = 3;
        (*_glb_hdl_sc_channel_map)[9196].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map)[4464].first = 3;
        (*_glb_hdl_sc_channel_map)[4464].second.push_front(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[9197].first = 3;
        (*_glb_hdl_sc_channel_map)[9197].second.push_front(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[9199].first = 3;
        (*_glb_hdl_sc_channel_map)[9199].second.push_front(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[4465].first = 3;
        (*_glb_hdl_sc_channel_map)[4465].second.push_front(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[9215].first = 1;
        (*_glb_hdl_sc_channel_map)[9215].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[9213].first = 1;
        (*_glb_hdl_sc_channel_map)[9213].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[9210].first = 3;
        (*_glb_hdl_sc_channel_map)[9210].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[9212].first = 1;
        (*_glb_hdl_sc_channel_map)[9212].second.push_front(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map)[9211].first = 3;
        (*_glb_hdl_sc_channel_map)[9211].second.push_front(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[9214].first = 3;
        (*_glb_hdl_sc_channel_map)[9214].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[9209].first = 1;
        (*_glb_hdl_sc_channel_map)[9209].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[9207].first = 1;
        (*_glb_hdl_sc_channel_map)[9207].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[9208].first = 3;
        (*_glb_hdl_sc_channel_map)[9208].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map)[9206].first = 3;
        (*_glb_hdl_sc_channel_map)[9206].second.push_front(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[9188].first = 1;
        (*_glb_hdl_sc_channel_map)[9188].second.push_front(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8069280);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8069336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(8069392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8069448);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[9194].first = 1;
        (*_glb_hdl_sc_channel_map)[9194].second.push_front(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8069560);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8069616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(8069672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8069728);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8069784);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8069840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[4460].first = 3;
        (*_glb_hdl_sc_channel_map)[4460].second.push_front(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[9230].first = 3;
        (*_glb_hdl_sc_channel_map)[9230].second.push_front(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[9234].first = 1;
        (*_glb_hdl_sc_channel_map)[9234].second.push_front(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[9232].first = 1;
        (*_glb_hdl_sc_channel_map)[9232].second.push_front(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[9250].first = 3;
        (*_glb_hdl_sc_channel_map)[9250].second.push_front(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[9254].first = 3;
        (*_glb_hdl_sc_channel_map)[9254].second.push_front(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[9256].first = 1;
        (*_glb_hdl_sc_channel_map)[9256].second.push_front(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[9252].first = 1;
        (*_glb_hdl_sc_channel_map)[9252].second.push_front(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[9238].first = 3;
        (*_glb_hdl_sc_channel_map)[9238].second.push_front(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[9240].first = 1;
        (*_glb_hdl_sc_channel_map)[9240].second.push_front(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[9236].first = 1;
        (*_glb_hdl_sc_channel_map)[9236].second.push_front(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[4461].first = 3;
        (*_glb_hdl_sc_channel_map)[4461].second.push_front(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[9224].first = 3;
        (*_glb_hdl_sc_channel_map)[9224].second.push_front(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[9228].first = 1;
        (*_glb_hdl_sc_channel_map)[9228].second.push_front(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[9226].first = 1;
        (*_glb_hdl_sc_channel_map)[9226].second.push_front(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[9242].first = 3;
        (*_glb_hdl_sc_channel_map)[9242].second.push_front(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[9246].first = 3;
        (*_glb_hdl_sc_channel_map)[9246].second.push_front(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[9248].first = 1;
        (*_glb_hdl_sc_channel_map)[9248].second.push_front(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[9244].first = 1;
        (*_glb_hdl_sc_channel_map)[9244].second.push_front(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(537);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[9296].first = 1;
        (*_glb_hdl_sc_channel_map)[9296].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[9297].first = 1;
        (*_glb_hdl_sc_channel_map)[9297].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[9332].first = 1;
        (*_glb_hdl_sc_channel_map)[9332].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[9333].first = 1;
        (*_glb_hdl_sc_channel_map)[9333].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9304].first = 3;
        (*_glb_hdl_sc_channel_map)[9304].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9308].first = 1;
        (*_glb_hdl_sc_channel_map)[9308].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8071344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9324].first = 3;
        (*_glb_hdl_sc_channel_map)[9324].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9328].first = 3;
        (*_glb_hdl_sc_channel_map)[9328].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9330].first = 1;
        (*_glb_hdl_sc_channel_map)[9330].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8071568);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8071624);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[9310].first = 1;
        (*_glb_hdl_sc_channel_map)[9310].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8071736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9298].first = 3;
        (*_glb_hdl_sc_channel_map)[9298].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9302].first = 1;
        (*_glb_hdl_sc_channel_map)[9302].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8071904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8071960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8072016);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8072072);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[9318].first = 1;
        (*_glb_hdl_sc_channel_map)[9318].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[9280].first = 1;
        (*_glb_hdl_sc_channel_map)[9280].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[9278].first = 1;
        (*_glb_hdl_sc_channel_map)[9278].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[9276].first = 3;
        (*_glb_hdl_sc_channel_map)[9276].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[4456].first = 3;
        (*_glb_hdl_sc_channel_map)[4456].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[9277].first = 3;
        (*_glb_hdl_sc_channel_map)[9277].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[9279].first = 3;
        (*_glb_hdl_sc_channel_map)[9279].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[4457].first = 3;
        (*_glb_hdl_sc_channel_map)[4457].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[9295].first = 1;
        (*_glb_hdl_sc_channel_map)[9295].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[9293].first = 1;
        (*_glb_hdl_sc_channel_map)[9293].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[9291].first = 3;
        (*_glb_hdl_sc_channel_map)[9291].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[9294].first = 3;
        (*_glb_hdl_sc_channel_map)[9294].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[9292].first = 1;
        (*_glb_hdl_sc_channel_map)[9292].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[9275].first = 1;
        (*_glb_hdl_sc_channel_map)[9275].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[9273].first = 1;
        (*_glb_hdl_sc_channel_map)[9273].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[9271].first = 3;
        (*_glb_hdl_sc_channel_map)[9271].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[4458].first = 3;
        (*_glb_hdl_sc_channel_map)[4458].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[9272].first = 3;
        (*_glb_hdl_sc_channel_map)[9272].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[9274].first = 3;
        (*_glb_hdl_sc_channel_map)[9274].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[4459].first = 3;
        (*_glb_hdl_sc_channel_map)[4459].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[9290].first = 1;
        (*_glb_hdl_sc_channel_map)[9290].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[9288].first = 1;
        (*_glb_hdl_sc_channel_map)[9288].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[9285].first = 3;
        (*_glb_hdl_sc_channel_map)[9285].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[9287].first = 1;
        (*_glb_hdl_sc_channel_map)[9287].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[9286].first = 3;
        (*_glb_hdl_sc_channel_map)[9286].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[9289].first = 3;
        (*_glb_hdl_sc_channel_map)[9289].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[9284].first = 1;
        (*_glb_hdl_sc_channel_map)[9284].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[9282].first = 1;
        (*_glb_hdl_sc_channel_map)[9282].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[9283].first = 3;
        (*_glb_hdl_sc_channel_map)[9283].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[9281].first = 3;
        (*_glb_hdl_sc_channel_map)[9281].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[9263].first = 1;
        (*_glb_hdl_sc_channel_map)[9263].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8073864);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8073920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(8073976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8074032);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[9269].first = 1;
        (*_glb_hdl_sc_channel_map)[9269].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8074144);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8074200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(8074256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8074312);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8074368);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8074424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[4454].first = 3;
        (*_glb_hdl_sc_channel_map)[4454].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[9305].first = 3;
        (*_glb_hdl_sc_channel_map)[9305].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[9309].first = 1;
        (*_glb_hdl_sc_channel_map)[9309].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[9307].first = 1;
        (*_glb_hdl_sc_channel_map)[9307].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[9325].first = 3;
        (*_glb_hdl_sc_channel_map)[9325].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[9329].first = 3;
        (*_glb_hdl_sc_channel_map)[9329].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[9331].first = 1;
        (*_glb_hdl_sc_channel_map)[9331].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[9327].first = 1;
        (*_glb_hdl_sc_channel_map)[9327].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[9313].first = 3;
        (*_glb_hdl_sc_channel_map)[9313].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[9315].first = 1;
        (*_glb_hdl_sc_channel_map)[9315].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[9311].first = 1;
        (*_glb_hdl_sc_channel_map)[9311].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[4455].first = 3;
        (*_glb_hdl_sc_channel_map)[4455].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[9299].first = 3;
        (*_glb_hdl_sc_channel_map)[9299].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[9303].first = 1;
        (*_glb_hdl_sc_channel_map)[9303].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[9301].first = 1;
        (*_glb_hdl_sc_channel_map)[9301].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[9317].first = 3;
        (*_glb_hdl_sc_channel_map)[9317].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[9321].first = 3;
        (*_glb_hdl_sc_channel_map)[9321].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[9323].first = 1;
        (*_glb_hdl_sc_channel_map)[9323].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[9319].first = 1;
        (*_glb_hdl_sc_channel_map)[9319].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_dpa_mon4_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon4");
        sc_inst_6->xsim_set_dbg_index(538);
        xsim_sc_channel<0, bool > *p_6_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_clk.bind(*p_6_mon_clk);
        (*_glb_hdl_sc_channel_map)[9371].first = 1;
        (*_glb_hdl_sc_channel_map)[9371].second.push_front(p_6_mon_clk);
        xsim_sc_channel<0, bool > *p_6_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_resetn.bind(*p_6_mon_resetn);
        (*_glb_hdl_sc_channel_map)[9372].first = 1;
        (*_glb_hdl_sc_channel_map)[9372].second.push_front(p_6_mon_resetn);
        xsim_sc_channel<0, bool > *p_6_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_clk.bind(*p_6_trace_clk);
        (*_glb_hdl_sc_channel_map)[9407].first = 1;
        (*_glb_hdl_sc_channel_map)[9407].second.push_front(p_6_trace_clk);
        xsim_sc_channel<0, bool > *p_6_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_6->trace_rst.bind(*p_6_trace_rst);
        (*_glb_hdl_sc_channel_map)[9408].first = 1;
        (*_glb_hdl_sc_channel_map)[9408].second.push_front(p_6_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9379].first = 3;
        (*_glb_hdl_sc_channel_map)[9379].second.push_front(p_6_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9383].first = 1;
        (*_glb_hdl_sc_channel_map)[9383].second.push_front(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8075928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9399].first = 3;
        (*_glb_hdl_sc_channel_map)[9399].second.push_front(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9403].first = 3;
        (*_glb_hdl_sc_channel_map)[9403].second.push_front(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9405].first = 1;
        (*_glb_hdl_sc_channel_map)[9405].second.push_front(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8076152);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8076208);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[9385].first = 1;
        (*_glb_hdl_sc_channel_map)[9385].second.push_front(p_6_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8076320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9373].first = 3;
        (*_glb_hdl_sc_channel_map)[9373].second.push_front(p_6_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9377].first = 1;
        (*_glb_hdl_sc_channel_map)[9377].second.push_front(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8076488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8076544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8076600);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8076656);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[9393].first = 1;
        (*_glb_hdl_sc_channel_map)[9393].second.push_front(p_6_s_axi_rready);
        xsim_sc_channel<0, bool > *p_6_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWVALID.bind(*p_6_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[9355].first = 1;
        (*_glb_hdl_sc_channel_map)[9355].second.push_front(p_6_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_6_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_AWREADY.bind(*p_6_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[9353].first = 1;
        (*_glb_hdl_sc_channel_map)[9353].second.push_front(p_6_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_AWADDR.bind(*p_6_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[9351].first = 3;
        (*_glb_hdl_sc_channel_map)[9351].second.push_front(p_6_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_AWID.bind(*p_6_mon_AWID);
        (*_glb_hdl_sc_channel_map)[4450].first = 3;
        (*_glb_hdl_sc_channel_map)[4450].second.push_front(p_6_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_AWLEN.bind(*p_6_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[9352].first = 3;
        (*_glb_hdl_sc_channel_map)[9352].second.push_front(p_6_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_AWSIZE.bind(*p_6_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[9354].first = 3;
        (*_glb_hdl_sc_channel_map)[9354].second.push_front(p_6_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_AWBURST.bind(*p_6_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[4451].first = 3;
        (*_glb_hdl_sc_channel_map)[4451].second.push_front(p_6_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_6_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WVALID.bind(*p_6_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[9370].first = 1;
        (*_glb_hdl_sc_channel_map)[9370].second.push_front(p_6_mon_WVALID);
        xsim_sc_channel<0, bool > *p_6_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WREADY.bind(*p_6_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[9368].first = 1;
        (*_glb_hdl_sc_channel_map)[9368].second.push_front(p_6_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_WDATA.bind(*p_6_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[9366].first = 3;
        (*_glb_hdl_sc_channel_map)[9366].second.push_front(p_6_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->mon_WSTRB.bind(*p_6_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[9369].first = 3;
        (*_glb_hdl_sc_channel_map)[9369].second.push_front(p_6_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_6_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_WLAST.bind(*p_6_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[9367].first = 1;
        (*_glb_hdl_sc_channel_map)[9367].second.push_front(p_6_mon_WLAST);
        xsim_sc_channel<0, bool > *p_6_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARVALID.bind(*p_6_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[9350].first = 1;
        (*_glb_hdl_sc_channel_map)[9350].second.push_front(p_6_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_6_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_ARREADY.bind(*p_6_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[9348].first = 1;
        (*_glb_hdl_sc_channel_map)[9348].second.push_front(p_6_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->mon_ARADDR.bind(*p_6_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[9346].first = 3;
        (*_glb_hdl_sc_channel_map)[9346].second.push_front(p_6_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_ARID.bind(*p_6_mon_ARID);
        (*_glb_hdl_sc_channel_map)[4452].first = 3;
        (*_glb_hdl_sc_channel_map)[4452].second.push_front(p_6_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->mon_ARLEN.bind(*p_6_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[9347].first = 3;
        (*_glb_hdl_sc_channel_map)[9347].second.push_front(p_6_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->mon_ARSIZE.bind(*p_6_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[9349].first = 3;
        (*_glb_hdl_sc_channel_map)[9349].second.push_front(p_6_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_ARBURST.bind(*p_6_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[4453].first = 3;
        (*_glb_hdl_sc_channel_map)[4453].second.push_front(p_6_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_6_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RVALID.bind(*p_6_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[9365].first = 1;
        (*_glb_hdl_sc_channel_map)[9365].second.push_front(p_6_mon_RVALID);
        xsim_sc_channel<0, bool > *p_6_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RREADY.bind(*p_6_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[9363].first = 1;
        (*_glb_hdl_sc_channel_map)[9363].second.push_front(p_6_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->mon_RDATA.bind(*p_6_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[9360].first = 3;
        (*_glb_hdl_sc_channel_map)[9360].second.push_front(p_6_mon_RDATA);
        xsim_sc_channel<0, bool > *p_6_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_RLAST.bind(*p_6_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[9362].first = 1;
        (*_glb_hdl_sc_channel_map)[9362].second.push_front(p_6_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_RID.bind(*p_6_mon_RID);
        (*_glb_hdl_sc_channel_map)[9361].first = 3;
        (*_glb_hdl_sc_channel_map)[9361].second.push_front(p_6_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_RRESP.bind(*p_6_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[9364].first = 3;
        (*_glb_hdl_sc_channel_map)[9364].second.push_front(p_6_mon_RRESP);
        xsim_sc_channel<0, bool > *p_6_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BVALID.bind(*p_6_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[9359].first = 1;
        (*_glb_hdl_sc_channel_map)[9359].second.push_front(p_6_mon_BVALID);
        xsim_sc_channel<0, bool > *p_6_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_6->mon_BREADY.bind(*p_6_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[9357].first = 1;
        (*_glb_hdl_sc_channel_map)[9357].second.push_front(p_6_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->mon_BRESP.bind(*p_6_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[9358].first = 3;
        (*_glb_hdl_sc_channel_map)[9358].second.push_front(p_6_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->mon_BID.bind(*p_6_mon_BID);
        (*_glb_hdl_sc_channel_map)[9356].first = 3;
        (*_glb_hdl_sc_channel_map)[9356].second.push_front(p_6_mon_BID);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tready.bind(*p_6_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[9338].first = 1;
        (*_glb_hdl_sc_channel_map)[9338].second.push_front(p_6_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_rd_tdata.bind(*p_6_m_axis_rd_tdata);
        p_6_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8078448);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tlast.bind(*p_6_m_axis_rd_tlast);
        p_6_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8078504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tid.bind(*p_6_m_axis_rd_tid);
        p_6_m_axis_rd_tid->set_sv_netview_offsetfromdp(8078560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_rd_tdest.bind(*p_6_m_axis_rd_tdest);
        p_6_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8078616);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tready.bind(*p_6_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[9344].first = 1;
        (*_glb_hdl_sc_channel_map)[9344].second.push_front(p_6_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->m_axis_wr_tdata.bind(*p_6_m_axis_wr_tdata);
        p_6_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8078728);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tlast.bind(*p_6_m_axis_wr_tlast);
        p_6_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8078784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tid.bind(*p_6_m_axis_wr_tid);
        p_6_m_axis_wr_tid->set_sv_netview_offsetfromdp(8078840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axis_wr_tdest.bind(*p_6_m_axis_wr_tdest);
        p_6_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8078896);
        xsim_sc_channel<0, bool > *p_6_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_wr_tvalid.bind(*p_6_m_axis_wr_tvalid);
        p_6_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8078952);
        xsim_sc_channel<0, bool > *p_6_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axis_rd_tvalid.bind(*p_6_m_axis_rd_tvalid);
        p_6_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8079008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr_mon.bind(*p_6_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[4448].first = 3;
        (*_glb_hdl_sc_channel_map)[4448].second.push_front(p_6_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot_mon.bind(*p_6_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[9380].first = 3;
        (*_glb_hdl_sc_channel_map)[9380].second.push_front(p_6_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid_mon.bind(*p_6_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[9384].first = 1;
        (*_glb_hdl_sc_channel_map)[9384].second.push_front(p_6_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready_mon.bind(*p_6_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[9382].first = 1;
        (*_glb_hdl_sc_channel_map)[9382].second.push_front(p_6_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata_mon.bind(*p_6_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[9400].first = 3;
        (*_glb_hdl_sc_channel_map)[9400].second.push_front(p_6_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb_mon.bind(*p_6_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[9404].first = 3;
        (*_glb_hdl_sc_channel_map)[9404].second.push_front(p_6_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid_mon.bind(*p_6_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[9406].first = 1;
        (*_glb_hdl_sc_channel_map)[9406].second.push_front(p_6_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready_mon.bind(*p_6_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[9402].first = 1;
        (*_glb_hdl_sc_channel_map)[9402].second.push_front(p_6_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp_mon.bind(*p_6_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[9388].first = 3;
        (*_glb_hdl_sc_channel_map)[9388].second.push_front(p_6_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid_mon.bind(*p_6_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[9390].first = 1;
        (*_glb_hdl_sc_channel_map)[9390].second.push_front(p_6_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready_mon.bind(*p_6_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[9386].first = 1;
        (*_glb_hdl_sc_channel_map)[9386].second.push_front(p_6_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr_mon.bind(*p_6_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[4449].first = 3;
        (*_glb_hdl_sc_channel_map)[4449].second.push_front(p_6_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot_mon.bind(*p_6_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[9374].first = 3;
        (*_glb_hdl_sc_channel_map)[9374].second.push_front(p_6_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid_mon.bind(*p_6_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[9378].first = 1;
        (*_glb_hdl_sc_channel_map)[9378].second.push_front(p_6_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready_mon.bind(*p_6_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[9376].first = 1;
        (*_glb_hdl_sc_channel_map)[9376].second.push_front(p_6_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata_mon.bind(*p_6_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[9392].first = 3;
        (*_glb_hdl_sc_channel_map)[9392].second.push_front(p_6_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp_mon.bind(*p_6_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[9396].first = 3;
        (*_glb_hdl_sc_channel_map)[9396].second.push_front(p_6_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid_mon.bind(*p_6_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[9398].first = 1;
        (*_glb_hdl_sc_channel_map)[9398].second.push_front(p_6_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready_mon.bind(*p_6_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[9394].first = 1;
        (*_glb_hdl_sc_channel_map)[9394].second.push_front(p_6_s_axi_rready_mon);
        sc_inst_7 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_7->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_7_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->aclk.bind(*p_7_aclk);
        (*_glb_hdl_sc_channel_map)[9900].first = 1;
        (*_glb_hdl_sc_channel_map)[9900].second.push_front(p_7_aclk);
        xsim_sc_channel<0, bool > *p_7_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_7->aclk1.bind(*p_7_aclk1);
        (*_glb_hdl_sc_channel_map)[9901].first = 1;
        (*_glb_hdl_sc_channel_map)[9901].second.push_front(p_7_aclk1);
        xsim_sc_channel<0, bool > *p_7_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->aresetn.bind(*p_7_aresetn);
        (*_glb_hdl_sc_channel_map)[9902].first = 1;
        (*_glb_hdl_sc_channel_map)[9902].second.push_front(p_7_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_awid.bind(*p_7_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[9623].first = 3;
        (*_glb_hdl_sc_channel_map)[9623].second.push_front(p_7_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S00_AXI_awaddr.bind(*p_7_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9620].first = 3;
        (*_glb_hdl_sc_channel_map)[9620].second.push_front(p_7_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S00_AXI_awlen.bind(*p_7_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9624].first = 3;
        (*_glb_hdl_sc_channel_map)[9624].second.push_front(p_7_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S00_AXI_awsize.bind(*p_7_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9629].first = 3;
        (*_glb_hdl_sc_channel_map)[9629].second.push_front(p_7_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S00_AXI_awburst.bind(*p_7_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[9621].first = 3;
        (*_glb_hdl_sc_channel_map)[9621].second.push_front(p_7_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_7_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S00_AXI_awlock.bind(*p_7_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[9625].first = 1;
        (*_glb_hdl_sc_channel_map)[9625].second.push_front(p_7_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S00_AXI_awcache.bind(*p_7_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9622].first = 3;
        (*_glb_hdl_sc_channel_map)[9622].second.push_front(p_7_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S00_AXI_awprot.bind(*p_7_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9626].first = 3;
        (*_glb_hdl_sc_channel_map)[9626].second.push_front(p_7_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S00_AXI_awqos.bind(*p_7_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9627].first = 3;
        (*_glb_hdl_sc_channel_map)[9627].second.push_front(p_7_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_awuser.bind(*p_7_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[9630].first = 3;
        (*_glb_hdl_sc_channel_map)[9630].second.push_front(p_7_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_awvalid.bind(*p_7_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9631].first = 3;
        (*_glb_hdl_sc_channel_map)[9631].second.push_front(p_7_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_awready.bind(*p_7_S00_AXI_awready);
        p_7_S00_AXI_awready->set_sv_netview_offsetfromdp(8112728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S00_AXI_wdata.bind(*p_7_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9644].first = 3;
        (*_glb_hdl_sc_channel_map)[9644].second.push_front(p_7_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S00_AXI_wstrb.bind(*p_7_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9647].first = 3;
        (*_glb_hdl_sc_channel_map)[9647].second.push_front(p_7_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_wlast.bind(*p_7_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9645].first = 3;
        (*_glb_hdl_sc_channel_map)[9645].second.push_front(p_7_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_wuser.bind(*p_7_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[9648].first = 3;
        (*_glb_hdl_sc_channel_map)[9648].second.push_front(p_7_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_wvalid.bind(*p_7_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9649].first = 3;
        (*_glb_hdl_sc_channel_map)[9649].second.push_front(p_7_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_wready.bind(*p_7_S00_AXI_wready);
        p_7_S00_AXI_wready->set_sv_netview_offsetfromdp(8113064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_bid.bind(*p_7_S00_AXI_bid);
        p_7_S00_AXI_bid->set_sv_netview_offsetfromdp(8113120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S00_AXI_bresp.bind(*p_7_S00_AXI_bresp);
        p_7_S00_AXI_bresp->set_sv_netview_offsetfromdp(8113176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_buser.bind(*p_7_S00_AXI_buser);
        p_7_S00_AXI_buser->set_sv_netview_offsetfromdp(8113232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_bvalid.bind(*p_7_S00_AXI_bvalid);
        p_7_S00_AXI_bvalid->set_sv_netview_offsetfromdp(8113288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_bready.bind(*p_7_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9633].first = 3;
        (*_glb_hdl_sc_channel_map)[9633].second.push_front(p_7_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_arid.bind(*p_7_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[9611].first = 3;
        (*_glb_hdl_sc_channel_map)[9611].second.push_front(p_7_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S00_AXI_araddr.bind(*p_7_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9608].first = 3;
        (*_glb_hdl_sc_channel_map)[9608].second.push_front(p_7_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S00_AXI_arlen.bind(*p_7_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9612].first = 3;
        (*_glb_hdl_sc_channel_map)[9612].second.push_front(p_7_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S00_AXI_arsize.bind(*p_7_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9617].first = 3;
        (*_glb_hdl_sc_channel_map)[9617].second.push_front(p_7_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S00_AXI_arburst.bind(*p_7_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[9609].first = 3;
        (*_glb_hdl_sc_channel_map)[9609].second.push_front(p_7_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_7_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S00_AXI_arlock.bind(*p_7_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[9613].first = 1;
        (*_glb_hdl_sc_channel_map)[9613].second.push_front(p_7_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S00_AXI_arcache.bind(*p_7_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9610].first = 3;
        (*_glb_hdl_sc_channel_map)[9610].second.push_front(p_7_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S00_AXI_arprot.bind(*p_7_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9614].first = 3;
        (*_glb_hdl_sc_channel_map)[9614].second.push_front(p_7_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S00_AXI_arqos.bind(*p_7_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9615].first = 3;
        (*_glb_hdl_sc_channel_map)[9615].second.push_front(p_7_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_aruser.bind(*p_7_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[9618].first = 3;
        (*_glb_hdl_sc_channel_map)[9618].second.push_front(p_7_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_arvalid.bind(*p_7_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9619].first = 3;
        (*_glb_hdl_sc_channel_map)[9619].second.push_front(p_7_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_arready.bind(*p_7_S00_AXI_arready);
        p_7_S00_AXI_arready->set_sv_netview_offsetfromdp(8114016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_rid.bind(*p_7_S00_AXI_rid);
        p_7_S00_AXI_rid->set_sv_netview_offsetfromdp(8114072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S00_AXI_rdata.bind(*p_7_S00_AXI_rdata);
        p_7_S00_AXI_rdata->set_sv_netview_offsetfromdp(8114128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S00_AXI_rresp.bind(*p_7_S00_AXI_rresp);
        p_7_S00_AXI_rresp->set_sv_netview_offsetfromdp(8114184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_rlast.bind(*p_7_S00_AXI_rlast);
        p_7_S00_AXI_rlast->set_sv_netview_offsetfromdp(8114240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_ruser.bind(*p_7_S00_AXI_ruser);
        p_7_S00_AXI_ruser->set_sv_netview_offsetfromdp(8114296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_rvalid.bind(*p_7_S00_AXI_rvalid);
        p_7_S00_AXI_rvalid->set_sv_netview_offsetfromdp(8114352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S00_AXI_rready.bind(*p_7_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9640].first = 3;
        (*_glb_hdl_sc_channel_map)[9640].second.push_front(p_7_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_awid.bind(*p_7_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[9665].first = 3;
        (*_glb_hdl_sc_channel_map)[9665].second.push_front(p_7_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S01_AXI_awaddr.bind(*p_7_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9662].first = 3;
        (*_glb_hdl_sc_channel_map)[9662].second.push_front(p_7_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S01_AXI_awlen.bind(*p_7_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9666].first = 3;
        (*_glb_hdl_sc_channel_map)[9666].second.push_front(p_7_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S01_AXI_awsize.bind(*p_7_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9671].first = 3;
        (*_glb_hdl_sc_channel_map)[9671].second.push_front(p_7_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S01_AXI_awburst.bind(*p_7_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[9663].first = 3;
        (*_glb_hdl_sc_channel_map)[9663].second.push_front(p_7_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_7_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S01_AXI_awlock.bind(*p_7_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[9667].first = 1;
        (*_glb_hdl_sc_channel_map)[9667].second.push_front(p_7_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S01_AXI_awcache.bind(*p_7_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9664].first = 3;
        (*_glb_hdl_sc_channel_map)[9664].second.push_front(p_7_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S01_AXI_awprot.bind(*p_7_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9668].first = 3;
        (*_glb_hdl_sc_channel_map)[9668].second.push_front(p_7_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S01_AXI_awqos.bind(*p_7_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9669].first = 3;
        (*_glb_hdl_sc_channel_map)[9669].second.push_front(p_7_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_awuser.bind(*p_7_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[9672].first = 3;
        (*_glb_hdl_sc_channel_map)[9672].second.push_front(p_7_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_awvalid.bind(*p_7_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9673].first = 3;
        (*_glb_hdl_sc_channel_map)[9673].second.push_front(p_7_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_awready.bind(*p_7_S01_AXI_awready);
        p_7_S01_AXI_awready->set_sv_netview_offsetfromdp(8115080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S01_AXI_wdata.bind(*p_7_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9686].first = 3;
        (*_glb_hdl_sc_channel_map)[9686].second.push_front(p_7_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S01_AXI_wstrb.bind(*p_7_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9689].first = 3;
        (*_glb_hdl_sc_channel_map)[9689].second.push_front(p_7_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_wlast.bind(*p_7_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9687].first = 3;
        (*_glb_hdl_sc_channel_map)[9687].second.push_front(p_7_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_wuser.bind(*p_7_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[9690].first = 3;
        (*_glb_hdl_sc_channel_map)[9690].second.push_front(p_7_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_wvalid.bind(*p_7_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9691].first = 3;
        (*_glb_hdl_sc_channel_map)[9691].second.push_front(p_7_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_wready.bind(*p_7_S01_AXI_wready);
        p_7_S01_AXI_wready->set_sv_netview_offsetfromdp(8115416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_bid.bind(*p_7_S01_AXI_bid);
        p_7_S01_AXI_bid->set_sv_netview_offsetfromdp(8115472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S01_AXI_bresp.bind(*p_7_S01_AXI_bresp);
        p_7_S01_AXI_bresp->set_sv_netview_offsetfromdp(8115528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_buser.bind(*p_7_S01_AXI_buser);
        p_7_S01_AXI_buser->set_sv_netview_offsetfromdp(8115584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_bvalid.bind(*p_7_S01_AXI_bvalid);
        p_7_S01_AXI_bvalid->set_sv_netview_offsetfromdp(8115640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_bready.bind(*p_7_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9675].first = 3;
        (*_glb_hdl_sc_channel_map)[9675].second.push_front(p_7_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_arid.bind(*p_7_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[9653].first = 3;
        (*_glb_hdl_sc_channel_map)[9653].second.push_front(p_7_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S01_AXI_araddr.bind(*p_7_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9650].first = 3;
        (*_glb_hdl_sc_channel_map)[9650].second.push_front(p_7_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S01_AXI_arlen.bind(*p_7_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9654].first = 3;
        (*_glb_hdl_sc_channel_map)[9654].second.push_front(p_7_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S01_AXI_arsize.bind(*p_7_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9659].first = 3;
        (*_glb_hdl_sc_channel_map)[9659].second.push_front(p_7_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S01_AXI_arburst.bind(*p_7_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[9651].first = 3;
        (*_glb_hdl_sc_channel_map)[9651].second.push_front(p_7_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_7_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S01_AXI_arlock.bind(*p_7_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[9655].first = 1;
        (*_glb_hdl_sc_channel_map)[9655].second.push_front(p_7_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S01_AXI_arcache.bind(*p_7_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9652].first = 3;
        (*_glb_hdl_sc_channel_map)[9652].second.push_front(p_7_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S01_AXI_arprot.bind(*p_7_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9656].first = 3;
        (*_glb_hdl_sc_channel_map)[9656].second.push_front(p_7_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S01_AXI_arqos.bind(*p_7_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9657].first = 3;
        (*_glb_hdl_sc_channel_map)[9657].second.push_front(p_7_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_aruser.bind(*p_7_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[9660].first = 3;
        (*_glb_hdl_sc_channel_map)[9660].second.push_front(p_7_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_arvalid.bind(*p_7_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9661].first = 3;
        (*_glb_hdl_sc_channel_map)[9661].second.push_front(p_7_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_arready.bind(*p_7_S01_AXI_arready);
        p_7_S01_AXI_arready->set_sv_netview_offsetfromdp(8116368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_rid.bind(*p_7_S01_AXI_rid);
        p_7_S01_AXI_rid->set_sv_netview_offsetfromdp(8116424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S01_AXI_rdata.bind(*p_7_S01_AXI_rdata);
        p_7_S01_AXI_rdata->set_sv_netview_offsetfromdp(8116480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S01_AXI_rresp.bind(*p_7_S01_AXI_rresp);
        p_7_S01_AXI_rresp->set_sv_netview_offsetfromdp(8116536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_rlast.bind(*p_7_S01_AXI_rlast);
        p_7_S01_AXI_rlast->set_sv_netview_offsetfromdp(8116592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_ruser.bind(*p_7_S01_AXI_ruser);
        p_7_S01_AXI_ruser->set_sv_netview_offsetfromdp(8116648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_rvalid.bind(*p_7_S01_AXI_rvalid);
        p_7_S01_AXI_rvalid->set_sv_netview_offsetfromdp(8116704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S01_AXI_rready.bind(*p_7_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9682].first = 3;
        (*_glb_hdl_sc_channel_map)[9682].second.push_front(p_7_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_awid.bind(*p_7_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[9707].first = 3;
        (*_glb_hdl_sc_channel_map)[9707].second.push_front(p_7_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S02_AXI_awaddr.bind(*p_7_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9704].first = 3;
        (*_glb_hdl_sc_channel_map)[9704].second.push_front(p_7_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S02_AXI_awlen.bind(*p_7_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9708].first = 3;
        (*_glb_hdl_sc_channel_map)[9708].second.push_front(p_7_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S02_AXI_awsize.bind(*p_7_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9713].first = 3;
        (*_glb_hdl_sc_channel_map)[9713].second.push_front(p_7_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S02_AXI_awburst.bind(*p_7_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[9705].first = 3;
        (*_glb_hdl_sc_channel_map)[9705].second.push_front(p_7_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_7_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S02_AXI_awlock.bind(*p_7_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[9709].first = 1;
        (*_glb_hdl_sc_channel_map)[9709].second.push_front(p_7_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S02_AXI_awcache.bind(*p_7_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9706].first = 3;
        (*_glb_hdl_sc_channel_map)[9706].second.push_front(p_7_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S02_AXI_awprot.bind(*p_7_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9710].first = 3;
        (*_glb_hdl_sc_channel_map)[9710].second.push_front(p_7_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S02_AXI_awqos.bind(*p_7_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9711].first = 3;
        (*_glb_hdl_sc_channel_map)[9711].second.push_front(p_7_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_awuser.bind(*p_7_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[9714].first = 3;
        (*_glb_hdl_sc_channel_map)[9714].second.push_front(p_7_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_awvalid.bind(*p_7_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9715].first = 3;
        (*_glb_hdl_sc_channel_map)[9715].second.push_front(p_7_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_awready.bind(*p_7_S02_AXI_awready);
        p_7_S02_AXI_awready->set_sv_netview_offsetfromdp(8117432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S02_AXI_wdata.bind(*p_7_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9728].first = 3;
        (*_glb_hdl_sc_channel_map)[9728].second.push_front(p_7_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S02_AXI_wstrb.bind(*p_7_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9731].first = 3;
        (*_glb_hdl_sc_channel_map)[9731].second.push_front(p_7_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_wlast.bind(*p_7_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9729].first = 3;
        (*_glb_hdl_sc_channel_map)[9729].second.push_front(p_7_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_wuser.bind(*p_7_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[9732].first = 3;
        (*_glb_hdl_sc_channel_map)[9732].second.push_front(p_7_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_wvalid.bind(*p_7_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9733].first = 3;
        (*_glb_hdl_sc_channel_map)[9733].second.push_front(p_7_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_wready.bind(*p_7_S02_AXI_wready);
        p_7_S02_AXI_wready->set_sv_netview_offsetfromdp(8117768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_bid.bind(*p_7_S02_AXI_bid);
        p_7_S02_AXI_bid->set_sv_netview_offsetfromdp(8117824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S02_AXI_bresp.bind(*p_7_S02_AXI_bresp);
        p_7_S02_AXI_bresp->set_sv_netview_offsetfromdp(8117880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_buser.bind(*p_7_S02_AXI_buser);
        p_7_S02_AXI_buser->set_sv_netview_offsetfromdp(8117936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_bvalid.bind(*p_7_S02_AXI_bvalid);
        p_7_S02_AXI_bvalid->set_sv_netview_offsetfromdp(8117992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_bready.bind(*p_7_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9717].first = 3;
        (*_glb_hdl_sc_channel_map)[9717].second.push_front(p_7_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_arid.bind(*p_7_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[9695].first = 3;
        (*_glb_hdl_sc_channel_map)[9695].second.push_front(p_7_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S02_AXI_araddr.bind(*p_7_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9692].first = 3;
        (*_glb_hdl_sc_channel_map)[9692].second.push_front(p_7_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S02_AXI_arlen.bind(*p_7_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9696].first = 3;
        (*_glb_hdl_sc_channel_map)[9696].second.push_front(p_7_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S02_AXI_arsize.bind(*p_7_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9701].first = 3;
        (*_glb_hdl_sc_channel_map)[9701].second.push_front(p_7_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S02_AXI_arburst.bind(*p_7_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[9693].first = 3;
        (*_glb_hdl_sc_channel_map)[9693].second.push_front(p_7_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_7_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S02_AXI_arlock.bind(*p_7_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[9697].first = 1;
        (*_glb_hdl_sc_channel_map)[9697].second.push_front(p_7_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S02_AXI_arcache.bind(*p_7_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9694].first = 3;
        (*_glb_hdl_sc_channel_map)[9694].second.push_front(p_7_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S02_AXI_arprot.bind(*p_7_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9698].first = 3;
        (*_glb_hdl_sc_channel_map)[9698].second.push_front(p_7_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S02_AXI_arqos.bind(*p_7_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9699].first = 3;
        (*_glb_hdl_sc_channel_map)[9699].second.push_front(p_7_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_aruser.bind(*p_7_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[9702].first = 3;
        (*_glb_hdl_sc_channel_map)[9702].second.push_front(p_7_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_arvalid.bind(*p_7_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9703].first = 3;
        (*_glb_hdl_sc_channel_map)[9703].second.push_front(p_7_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_arready.bind(*p_7_S02_AXI_arready);
        p_7_S02_AXI_arready->set_sv_netview_offsetfromdp(8118720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_rid.bind(*p_7_S02_AXI_rid);
        p_7_S02_AXI_rid->set_sv_netview_offsetfromdp(8118776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S02_AXI_rdata.bind(*p_7_S02_AXI_rdata);
        p_7_S02_AXI_rdata->set_sv_netview_offsetfromdp(8118832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S02_AXI_rresp.bind(*p_7_S02_AXI_rresp);
        p_7_S02_AXI_rresp->set_sv_netview_offsetfromdp(8118888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_rlast.bind(*p_7_S02_AXI_rlast);
        p_7_S02_AXI_rlast->set_sv_netview_offsetfromdp(8118944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_ruser.bind(*p_7_S02_AXI_ruser);
        p_7_S02_AXI_ruser->set_sv_netview_offsetfromdp(8119000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_rvalid.bind(*p_7_S02_AXI_rvalid);
        p_7_S02_AXI_rvalid->set_sv_netview_offsetfromdp(8119056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S02_AXI_rready.bind(*p_7_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9724].first = 3;
        (*_glb_hdl_sc_channel_map)[9724].second.push_front(p_7_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_awid.bind(*p_7_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[9749].first = 3;
        (*_glb_hdl_sc_channel_map)[9749].second.push_front(p_7_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S03_AXI_awaddr.bind(*p_7_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9746].first = 3;
        (*_glb_hdl_sc_channel_map)[9746].second.push_front(p_7_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S03_AXI_awlen.bind(*p_7_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9750].first = 3;
        (*_glb_hdl_sc_channel_map)[9750].second.push_front(p_7_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S03_AXI_awsize.bind(*p_7_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9755].first = 3;
        (*_glb_hdl_sc_channel_map)[9755].second.push_front(p_7_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S03_AXI_awburst.bind(*p_7_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[9747].first = 3;
        (*_glb_hdl_sc_channel_map)[9747].second.push_front(p_7_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_7_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S03_AXI_awlock.bind(*p_7_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[9751].first = 1;
        (*_glb_hdl_sc_channel_map)[9751].second.push_front(p_7_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S03_AXI_awcache.bind(*p_7_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9748].first = 3;
        (*_glb_hdl_sc_channel_map)[9748].second.push_front(p_7_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S03_AXI_awprot.bind(*p_7_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9752].first = 3;
        (*_glb_hdl_sc_channel_map)[9752].second.push_front(p_7_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S03_AXI_awqos.bind(*p_7_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9753].first = 3;
        (*_glb_hdl_sc_channel_map)[9753].second.push_front(p_7_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_awuser.bind(*p_7_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[9756].first = 3;
        (*_glb_hdl_sc_channel_map)[9756].second.push_front(p_7_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_awvalid.bind(*p_7_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9757].first = 3;
        (*_glb_hdl_sc_channel_map)[9757].second.push_front(p_7_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_awready.bind(*p_7_S03_AXI_awready);
        p_7_S03_AXI_awready->set_sv_netview_offsetfromdp(8119784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S03_AXI_wdata.bind(*p_7_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9770].first = 3;
        (*_glb_hdl_sc_channel_map)[9770].second.push_front(p_7_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S03_AXI_wstrb.bind(*p_7_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9773].first = 3;
        (*_glb_hdl_sc_channel_map)[9773].second.push_front(p_7_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_wlast.bind(*p_7_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9771].first = 3;
        (*_glb_hdl_sc_channel_map)[9771].second.push_front(p_7_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_wuser.bind(*p_7_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[9774].first = 3;
        (*_glb_hdl_sc_channel_map)[9774].second.push_front(p_7_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_wvalid.bind(*p_7_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9775].first = 3;
        (*_glb_hdl_sc_channel_map)[9775].second.push_front(p_7_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_wready.bind(*p_7_S03_AXI_wready);
        p_7_S03_AXI_wready->set_sv_netview_offsetfromdp(8120120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_bid.bind(*p_7_S03_AXI_bid);
        p_7_S03_AXI_bid->set_sv_netview_offsetfromdp(8120176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S03_AXI_bresp.bind(*p_7_S03_AXI_bresp);
        p_7_S03_AXI_bresp->set_sv_netview_offsetfromdp(8120232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_buser.bind(*p_7_S03_AXI_buser);
        p_7_S03_AXI_buser->set_sv_netview_offsetfromdp(8120288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_bvalid.bind(*p_7_S03_AXI_bvalid);
        p_7_S03_AXI_bvalid->set_sv_netview_offsetfromdp(8120344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_bready.bind(*p_7_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9759].first = 3;
        (*_glb_hdl_sc_channel_map)[9759].second.push_front(p_7_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_arid.bind(*p_7_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[9737].first = 3;
        (*_glb_hdl_sc_channel_map)[9737].second.push_front(p_7_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S03_AXI_araddr.bind(*p_7_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9734].first = 3;
        (*_glb_hdl_sc_channel_map)[9734].second.push_front(p_7_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S03_AXI_arlen.bind(*p_7_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9738].first = 3;
        (*_glb_hdl_sc_channel_map)[9738].second.push_front(p_7_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S03_AXI_arsize.bind(*p_7_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9743].first = 3;
        (*_glb_hdl_sc_channel_map)[9743].second.push_front(p_7_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S03_AXI_arburst.bind(*p_7_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[9735].first = 3;
        (*_glb_hdl_sc_channel_map)[9735].second.push_front(p_7_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_7_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S03_AXI_arlock.bind(*p_7_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[9739].first = 1;
        (*_glb_hdl_sc_channel_map)[9739].second.push_front(p_7_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S03_AXI_arcache.bind(*p_7_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9736].first = 3;
        (*_glb_hdl_sc_channel_map)[9736].second.push_front(p_7_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S03_AXI_arprot.bind(*p_7_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9740].first = 3;
        (*_glb_hdl_sc_channel_map)[9740].second.push_front(p_7_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S03_AXI_arqos.bind(*p_7_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9741].first = 3;
        (*_glb_hdl_sc_channel_map)[9741].second.push_front(p_7_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_aruser.bind(*p_7_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[9744].first = 3;
        (*_glb_hdl_sc_channel_map)[9744].second.push_front(p_7_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_arvalid.bind(*p_7_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9745].first = 3;
        (*_glb_hdl_sc_channel_map)[9745].second.push_front(p_7_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_arready.bind(*p_7_S03_AXI_arready);
        p_7_S03_AXI_arready->set_sv_netview_offsetfromdp(8121072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_rid.bind(*p_7_S03_AXI_rid);
        p_7_S03_AXI_rid->set_sv_netview_offsetfromdp(8121128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S03_AXI_rdata.bind(*p_7_S03_AXI_rdata);
        p_7_S03_AXI_rdata->set_sv_netview_offsetfromdp(8121184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S03_AXI_rresp.bind(*p_7_S03_AXI_rresp);
        p_7_S03_AXI_rresp->set_sv_netview_offsetfromdp(8121240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_rlast.bind(*p_7_S03_AXI_rlast);
        p_7_S03_AXI_rlast->set_sv_netview_offsetfromdp(8121296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_ruser.bind(*p_7_S03_AXI_ruser);
        p_7_S03_AXI_ruser->set_sv_netview_offsetfromdp(8121352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_rvalid.bind(*p_7_S03_AXI_rvalid);
        p_7_S03_AXI_rvalid->set_sv_netview_offsetfromdp(8121408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S03_AXI_rready.bind(*p_7_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9766].first = 3;
        (*_glb_hdl_sc_channel_map)[9766].second.push_front(p_7_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S04_AXI_awaddr.bind(*p_7_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9785].first = 3;
        (*_glb_hdl_sc_channel_map)[9785].second.push_front(p_7_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S04_AXI_awlen.bind(*p_7_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9787].first = 3;
        (*_glb_hdl_sc_channel_map)[9787].second.push_front(p_7_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S04_AXI_awsize.bind(*p_7_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9792].first = 3;
        (*_glb_hdl_sc_channel_map)[9792].second.push_front(p_7_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_7_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S04_AXI_awlock.bind(*p_7_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1323].first = 1;
        (*_glb_hdl_sc_channel_map)[1323].second.push_front(p_7_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_awcache.bind(*p_7_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9786].first = 3;
        (*_glb_hdl_sc_channel_map)[9786].second.push_front(p_7_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S04_AXI_awprot.bind(*p_7_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9788].first = 3;
        (*_glb_hdl_sc_channel_map)[9788].second.push_front(p_7_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_awregion.bind(*p_7_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[9791].first = 3;
        (*_glb_hdl_sc_channel_map)[9791].second.push_front(p_7_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_awqos.bind(*p_7_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9789].first = 3;
        (*_glb_hdl_sc_channel_map)[9789].second.push_front(p_7_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_awvalid.bind(*p_7_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9793].first = 3;
        (*_glb_hdl_sc_channel_map)[9793].second.push_front(p_7_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_awready.bind(*p_7_S04_AXI_awready);
        p_7_S04_AXI_awready->set_sv_netview_offsetfromdp(8122024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S04_AXI_wdata.bind(*p_7_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9802].first = 3;
        (*_glb_hdl_sc_channel_map)[9802].second.push_front(p_7_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_wstrb.bind(*p_7_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9805].first = 3;
        (*_glb_hdl_sc_channel_map)[9805].second.push_front(p_7_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_wlast.bind(*p_7_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9803].first = 3;
        (*_glb_hdl_sc_channel_map)[9803].second.push_front(p_7_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_wvalid.bind(*p_7_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9806].first = 3;
        (*_glb_hdl_sc_channel_map)[9806].second.push_front(p_7_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_wready.bind(*p_7_S04_AXI_wready);
        p_7_S04_AXI_wready->set_sv_netview_offsetfromdp(8122304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S04_AXI_bresp.bind(*p_7_S04_AXI_bresp);
        p_7_S04_AXI_bresp->set_sv_netview_offsetfromdp(8122360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_bvalid.bind(*p_7_S04_AXI_bvalid);
        p_7_S04_AXI_bvalid->set_sv_netview_offsetfromdp(8122416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_bready.bind(*p_7_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9794].first = 3;
        (*_glb_hdl_sc_channel_map)[9794].second.push_front(p_7_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S04_AXI_araddr.bind(*p_7_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9776].first = 3;
        (*_glb_hdl_sc_channel_map)[9776].second.push_front(p_7_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S04_AXI_arlen.bind(*p_7_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9778].first = 3;
        (*_glb_hdl_sc_channel_map)[9778].second.push_front(p_7_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S04_AXI_arsize.bind(*p_7_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9783].first = 3;
        (*_glb_hdl_sc_channel_map)[9783].second.push_front(p_7_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_7_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S04_AXI_arlock.bind(*p_7_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1324].first = 1;
        (*_glb_hdl_sc_channel_map)[1324].second.push_front(p_7_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_arcache.bind(*p_7_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9777].first = 3;
        (*_glb_hdl_sc_channel_map)[9777].second.push_front(p_7_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S04_AXI_arprot.bind(*p_7_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9779].first = 3;
        (*_glb_hdl_sc_channel_map)[9779].second.push_front(p_7_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_arregion.bind(*p_7_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[9782].first = 3;
        (*_glb_hdl_sc_channel_map)[9782].second.push_front(p_7_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S04_AXI_arqos.bind(*p_7_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9780].first = 3;
        (*_glb_hdl_sc_channel_map)[9780].second.push_front(p_7_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_arvalid.bind(*p_7_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9784].first = 3;
        (*_glb_hdl_sc_channel_map)[9784].second.push_front(p_7_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_arready.bind(*p_7_S04_AXI_arready);
        p_7_S04_AXI_arready->set_sv_netview_offsetfromdp(8123032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S04_AXI_rdata.bind(*p_7_S04_AXI_rdata);
        p_7_S04_AXI_rdata->set_sv_netview_offsetfromdp(8123088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S04_AXI_rresp.bind(*p_7_S04_AXI_rresp);
        p_7_S04_AXI_rresp->set_sv_netview_offsetfromdp(8123144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_rlast.bind(*p_7_S04_AXI_rlast);
        p_7_S04_AXI_rlast->set_sv_netview_offsetfromdp(8123200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_rvalid.bind(*p_7_S04_AXI_rvalid);
        p_7_S04_AXI_rvalid->set_sv_netview_offsetfromdp(8123256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S04_AXI_rready.bind(*p_7_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9799].first = 3;
        (*_glb_hdl_sc_channel_map)[9799].second.push_front(p_7_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S05_AXI_awaddr.bind(*p_7_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9816].first = 3;
        (*_glb_hdl_sc_channel_map)[9816].second.push_front(p_7_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S05_AXI_awlen.bind(*p_7_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9818].first = 3;
        (*_glb_hdl_sc_channel_map)[9818].second.push_front(p_7_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S05_AXI_awsize.bind(*p_7_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9823].first = 3;
        (*_glb_hdl_sc_channel_map)[9823].second.push_front(p_7_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_7_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S05_AXI_awlock.bind(*p_7_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1321].first = 1;
        (*_glb_hdl_sc_channel_map)[1321].second.push_front(p_7_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_awcache.bind(*p_7_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9817].first = 3;
        (*_glb_hdl_sc_channel_map)[9817].second.push_front(p_7_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S05_AXI_awprot.bind(*p_7_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9819].first = 3;
        (*_glb_hdl_sc_channel_map)[9819].second.push_front(p_7_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_awregion.bind(*p_7_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[9822].first = 3;
        (*_glb_hdl_sc_channel_map)[9822].second.push_front(p_7_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_awqos.bind(*p_7_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9820].first = 3;
        (*_glb_hdl_sc_channel_map)[9820].second.push_front(p_7_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_awvalid.bind(*p_7_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9824].first = 3;
        (*_glb_hdl_sc_channel_map)[9824].second.push_front(p_7_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_awready.bind(*p_7_S05_AXI_awready);
        p_7_S05_AXI_awready->set_sv_netview_offsetfromdp(8123872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S05_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S05_AXI_wdata.bind(*p_7_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9833].first = 3;
        (*_glb_hdl_sc_channel_map)[9833].second.push_front(p_7_S05_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_wstrb.bind(*p_7_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9836].first = 3;
        (*_glb_hdl_sc_channel_map)[9836].second.push_front(p_7_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_wlast.bind(*p_7_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9834].first = 3;
        (*_glb_hdl_sc_channel_map)[9834].second.push_front(p_7_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_wvalid.bind(*p_7_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9837].first = 3;
        (*_glb_hdl_sc_channel_map)[9837].second.push_front(p_7_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_wready.bind(*p_7_S05_AXI_wready);
        p_7_S05_AXI_wready->set_sv_netview_offsetfromdp(8124152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S05_AXI_bresp.bind(*p_7_S05_AXI_bresp);
        p_7_S05_AXI_bresp->set_sv_netview_offsetfromdp(8124208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_bvalid.bind(*p_7_S05_AXI_bvalid);
        p_7_S05_AXI_bvalid->set_sv_netview_offsetfromdp(8124264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_bready.bind(*p_7_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9825].first = 3;
        (*_glb_hdl_sc_channel_map)[9825].second.push_front(p_7_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S05_AXI_araddr.bind(*p_7_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9807].first = 3;
        (*_glb_hdl_sc_channel_map)[9807].second.push_front(p_7_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S05_AXI_arlen.bind(*p_7_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9809].first = 3;
        (*_glb_hdl_sc_channel_map)[9809].second.push_front(p_7_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S05_AXI_arsize.bind(*p_7_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9814].first = 3;
        (*_glb_hdl_sc_channel_map)[9814].second.push_front(p_7_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_7_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S05_AXI_arlock.bind(*p_7_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1322].first = 1;
        (*_glb_hdl_sc_channel_map)[1322].second.push_front(p_7_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_arcache.bind(*p_7_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9808].first = 3;
        (*_glb_hdl_sc_channel_map)[9808].second.push_front(p_7_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S05_AXI_arprot.bind(*p_7_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9810].first = 3;
        (*_glb_hdl_sc_channel_map)[9810].second.push_front(p_7_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_arregion.bind(*p_7_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[9813].first = 3;
        (*_glb_hdl_sc_channel_map)[9813].second.push_front(p_7_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S05_AXI_arqos.bind(*p_7_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9811].first = 3;
        (*_glb_hdl_sc_channel_map)[9811].second.push_front(p_7_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_arvalid.bind(*p_7_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9815].first = 3;
        (*_glb_hdl_sc_channel_map)[9815].second.push_front(p_7_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_arready.bind(*p_7_S05_AXI_arready);
        p_7_S05_AXI_arready->set_sv_netview_offsetfromdp(8124880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S05_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S05_AXI_rdata.bind(*p_7_S05_AXI_rdata);
        p_7_S05_AXI_rdata->set_sv_netview_offsetfromdp(8124936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S05_AXI_rresp.bind(*p_7_S05_AXI_rresp);
        p_7_S05_AXI_rresp->set_sv_netview_offsetfromdp(8124992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_rlast.bind(*p_7_S05_AXI_rlast);
        p_7_S05_AXI_rlast->set_sv_netview_offsetfromdp(8125048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_rvalid.bind(*p_7_S05_AXI_rvalid);
        p_7_S05_AXI_rvalid->set_sv_netview_offsetfromdp(8125104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S05_AXI_rready.bind(*p_7_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9830].first = 3;
        (*_glb_hdl_sc_channel_map)[9830].second.push_front(p_7_S05_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S06_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S06_AXI_awaddr.bind(*p_7_S06_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9847].first = 3;
        (*_glb_hdl_sc_channel_map)[9847].second.push_front(p_7_S06_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S06_AXI_awlen.bind(*p_7_S06_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9849].first = 3;
        (*_glb_hdl_sc_channel_map)[9849].second.push_front(p_7_S06_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S06_AXI_awsize.bind(*p_7_S06_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9854].first = 3;
        (*_glb_hdl_sc_channel_map)[9854].second.push_front(p_7_S06_AXI_awsize);
        xsim_sc_channel<0, bool > *p_7_S06_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S06_AXI_awlock.bind(*p_7_S06_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1319].first = 1;
        (*_glb_hdl_sc_channel_map)[1319].second.push_front(p_7_S06_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_awcache.bind(*p_7_S06_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9848].first = 3;
        (*_glb_hdl_sc_channel_map)[9848].second.push_front(p_7_S06_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S06_AXI_awprot.bind(*p_7_S06_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9850].first = 3;
        (*_glb_hdl_sc_channel_map)[9850].second.push_front(p_7_S06_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_awregion.bind(*p_7_S06_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[9853].first = 3;
        (*_glb_hdl_sc_channel_map)[9853].second.push_front(p_7_S06_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_awqos.bind(*p_7_S06_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9851].first = 3;
        (*_glb_hdl_sc_channel_map)[9851].second.push_front(p_7_S06_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_awvalid.bind(*p_7_S06_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9855].first = 3;
        (*_glb_hdl_sc_channel_map)[9855].second.push_front(p_7_S06_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_awready.bind(*p_7_S06_AXI_awready);
        p_7_S06_AXI_awready->set_sv_netview_offsetfromdp(8125720);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_S06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->S06_AXI_wdata.bind(*p_7_S06_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9864].first = 3;
        (*_glb_hdl_sc_channel_map)[9864].second.push_front(p_7_S06_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S06_AXI_wstrb.bind(*p_7_S06_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9867].first = 3;
        (*_glb_hdl_sc_channel_map)[9867].second.push_front(p_7_S06_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_wlast.bind(*p_7_S06_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9865].first = 3;
        (*_glb_hdl_sc_channel_map)[9865].second.push_front(p_7_S06_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_wvalid.bind(*p_7_S06_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9868].first = 3;
        (*_glb_hdl_sc_channel_map)[9868].second.push_front(p_7_S06_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_wready.bind(*p_7_S06_AXI_wready);
        p_7_S06_AXI_wready->set_sv_netview_offsetfromdp(8126000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S06_AXI_bresp.bind(*p_7_S06_AXI_bresp);
        p_7_S06_AXI_bresp->set_sv_netview_offsetfromdp(8126056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_bvalid.bind(*p_7_S06_AXI_bvalid);
        p_7_S06_AXI_bvalid->set_sv_netview_offsetfromdp(8126112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_bready.bind(*p_7_S06_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9856].first = 3;
        (*_glb_hdl_sc_channel_map)[9856].second.push_front(p_7_S06_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S06_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S06_AXI_araddr.bind(*p_7_S06_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9838].first = 3;
        (*_glb_hdl_sc_channel_map)[9838].second.push_front(p_7_S06_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S06_AXI_arlen.bind(*p_7_S06_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9840].first = 3;
        (*_glb_hdl_sc_channel_map)[9840].second.push_front(p_7_S06_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S06_AXI_arsize.bind(*p_7_S06_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9845].first = 3;
        (*_glb_hdl_sc_channel_map)[9845].second.push_front(p_7_S06_AXI_arsize);
        xsim_sc_channel<0, bool > *p_7_S06_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S06_AXI_arlock.bind(*p_7_S06_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1320].first = 1;
        (*_glb_hdl_sc_channel_map)[1320].second.push_front(p_7_S06_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_arcache.bind(*p_7_S06_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9839].first = 3;
        (*_glb_hdl_sc_channel_map)[9839].second.push_front(p_7_S06_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S06_AXI_arprot.bind(*p_7_S06_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9841].first = 3;
        (*_glb_hdl_sc_channel_map)[9841].second.push_front(p_7_S06_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_arregion.bind(*p_7_S06_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[9844].first = 3;
        (*_glb_hdl_sc_channel_map)[9844].second.push_front(p_7_S06_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S06_AXI_arqos.bind(*p_7_S06_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9842].first = 3;
        (*_glb_hdl_sc_channel_map)[9842].second.push_front(p_7_S06_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_arvalid.bind(*p_7_S06_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9846].first = 3;
        (*_glb_hdl_sc_channel_map)[9846].second.push_front(p_7_S06_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_arready.bind(*p_7_S06_AXI_arready);
        p_7_S06_AXI_arready->set_sv_netview_offsetfromdp(8126728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_S06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->S06_AXI_rdata.bind(*p_7_S06_AXI_rdata);
        p_7_S06_AXI_rdata->set_sv_netview_offsetfromdp(8126784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S06_AXI_rresp.bind(*p_7_S06_AXI_rresp);
        p_7_S06_AXI_rresp->set_sv_netview_offsetfromdp(8126840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_rlast.bind(*p_7_S06_AXI_rlast);
        p_7_S06_AXI_rlast->set_sv_netview_offsetfromdp(8126896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_rvalid.bind(*p_7_S06_AXI_rvalid);
        p_7_S06_AXI_rvalid->set_sv_netview_offsetfromdp(8126952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S06_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S06_AXI_rready.bind(*p_7_S06_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9861].first = 3;
        (*_glb_hdl_sc_channel_map)[9861].second.push_front(p_7_S06_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S07_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S07_AXI_awaddr.bind(*p_7_S07_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[9878].first = 3;
        (*_glb_hdl_sc_channel_map)[9878].second.push_front(p_7_S07_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S07_AXI_awlen.bind(*p_7_S07_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[9880].first = 3;
        (*_glb_hdl_sc_channel_map)[9880].second.push_front(p_7_S07_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S07_AXI_awsize.bind(*p_7_S07_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[9885].first = 3;
        (*_glb_hdl_sc_channel_map)[9885].second.push_front(p_7_S07_AXI_awsize);
        xsim_sc_channel<0, bool > *p_7_S07_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S07_AXI_awlock.bind(*p_7_S07_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1317].first = 1;
        (*_glb_hdl_sc_channel_map)[1317].second.push_front(p_7_S07_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_awcache.bind(*p_7_S07_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[9879].first = 3;
        (*_glb_hdl_sc_channel_map)[9879].second.push_front(p_7_S07_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S07_AXI_awprot.bind(*p_7_S07_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[9881].first = 3;
        (*_glb_hdl_sc_channel_map)[9881].second.push_front(p_7_S07_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_awregion.bind(*p_7_S07_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[9884].first = 3;
        (*_glb_hdl_sc_channel_map)[9884].second.push_front(p_7_S07_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_awqos.bind(*p_7_S07_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[9882].first = 3;
        (*_glb_hdl_sc_channel_map)[9882].second.push_front(p_7_S07_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_awvalid.bind(*p_7_S07_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[9886].first = 3;
        (*_glb_hdl_sc_channel_map)[9886].second.push_front(p_7_S07_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_awready.bind(*p_7_S07_AXI_awready);
        p_7_S07_AXI_awready->set_sv_netview_offsetfromdp(8127568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S07_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S07_AXI_wdata.bind(*p_7_S07_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[9895].first = 3;
        (*_glb_hdl_sc_channel_map)[9895].second.push_front(p_7_S07_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_wstrb.bind(*p_7_S07_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[9898].first = 3;
        (*_glb_hdl_sc_channel_map)[9898].second.push_front(p_7_S07_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_wlast.bind(*p_7_S07_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[9896].first = 3;
        (*_glb_hdl_sc_channel_map)[9896].second.push_front(p_7_S07_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_wvalid.bind(*p_7_S07_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[9899].first = 3;
        (*_glb_hdl_sc_channel_map)[9899].second.push_front(p_7_S07_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_wready.bind(*p_7_S07_AXI_wready);
        p_7_S07_AXI_wready->set_sv_netview_offsetfromdp(8127848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S07_AXI_bresp.bind(*p_7_S07_AXI_bresp);
        p_7_S07_AXI_bresp->set_sv_netview_offsetfromdp(8127904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_bvalid.bind(*p_7_S07_AXI_bvalid);
        p_7_S07_AXI_bvalid->set_sv_netview_offsetfromdp(8127960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_bready.bind(*p_7_S07_AXI_bready);
        (*_glb_hdl_sc_channel_map)[9887].first = 3;
        (*_glb_hdl_sc_channel_map)[9887].second.push_front(p_7_S07_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_S07_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->S07_AXI_araddr.bind(*p_7_S07_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[9869].first = 3;
        (*_glb_hdl_sc_channel_map)[9869].second.push_front(p_7_S07_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_S07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->S07_AXI_arlen.bind(*p_7_S07_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[9871].first = 3;
        (*_glb_hdl_sc_channel_map)[9871].second.push_front(p_7_S07_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S07_AXI_arsize.bind(*p_7_S07_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[9876].first = 3;
        (*_glb_hdl_sc_channel_map)[9876].second.push_front(p_7_S07_AXI_arsize);
        xsim_sc_channel<0, bool > *p_7_S07_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->S07_AXI_arlock.bind(*p_7_S07_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1318].first = 1;
        (*_glb_hdl_sc_channel_map)[1318].second.push_front(p_7_S07_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_arcache.bind(*p_7_S07_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[9870].first = 3;
        (*_glb_hdl_sc_channel_map)[9870].second.push_front(p_7_S07_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_S07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->S07_AXI_arprot.bind(*p_7_S07_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[9872].first = 3;
        (*_glb_hdl_sc_channel_map)[9872].second.push_front(p_7_S07_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_arregion.bind(*p_7_S07_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[9875].first = 3;
        (*_glb_hdl_sc_channel_map)[9875].second.push_front(p_7_S07_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_S07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->S07_AXI_arqos.bind(*p_7_S07_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[9873].first = 3;
        (*_glb_hdl_sc_channel_map)[9873].second.push_front(p_7_S07_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_arvalid.bind(*p_7_S07_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[9877].first = 3;
        (*_glb_hdl_sc_channel_map)[9877].second.push_front(p_7_S07_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_arready.bind(*p_7_S07_AXI_arready);
        p_7_S07_AXI_arready->set_sv_netview_offsetfromdp(8128576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_S07_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->S07_AXI_rdata.bind(*p_7_S07_AXI_rdata);
        p_7_S07_AXI_rdata->set_sv_netview_offsetfromdp(8128632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_S07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->S07_AXI_rresp.bind(*p_7_S07_AXI_rresp);
        p_7_S07_AXI_rresp->set_sv_netview_offsetfromdp(8128688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_rlast.bind(*p_7_S07_AXI_rlast);
        p_7_S07_AXI_rlast->set_sv_netview_offsetfromdp(8128744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_rvalid.bind(*p_7_S07_AXI_rvalid);
        p_7_S07_AXI_rvalid->set_sv_netview_offsetfromdp(8128800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_S07_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->S07_AXI_rready.bind(*p_7_S07_AXI_rready);
        (*_glb_hdl_sc_channel_map)[9892].first = 3;
        (*_glb_hdl_sc_channel_map)[9892].second.push_front(p_7_S07_AXI_rready);
        xsim_sc_channel<0, bool > *p_7_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_7->ddr4_mem_calib_complete.bind(*p_7_ddr4_mem_calib_complete);
        p_7_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(8128912);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M00_AXI_awid.bind(*p_7_M00_AXI_awid);
        p_7_M00_AXI_awid->set_sv_netview_offsetfromdp(8128968);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M00_AXI_awaddr.bind(*p_7_M00_AXI_awaddr);
        p_7_M00_AXI_awaddr->set_sv_netview_offsetfromdp(8129024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M00_AXI_awlen.bind(*p_7_M00_AXI_awlen);
        p_7_M00_AXI_awlen->set_sv_netview_offsetfromdp(8129080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M00_AXI_awsize.bind(*p_7_M00_AXI_awsize);
        p_7_M00_AXI_awsize->set_sv_netview_offsetfromdp(8129136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M00_AXI_awburst.bind(*p_7_M00_AXI_awburst);
        p_7_M00_AXI_awburst->set_sv_netview_offsetfromdp(8129192);
        xsim_sc_channel<0, bool > *p_7_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M00_AXI_awlock.bind(*p_7_M00_AXI_awlock);
        p_7_M00_AXI_awlock->set_sv_netview_offsetfromdp(8129248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M00_AXI_awcache.bind(*p_7_M00_AXI_awcache);
        p_7_M00_AXI_awcache->set_sv_netview_offsetfromdp(8129304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M00_AXI_awprot.bind(*p_7_M00_AXI_awprot);
        p_7_M00_AXI_awprot->set_sv_netview_offsetfromdp(8129360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M00_AXI_awqos.bind(*p_7_M00_AXI_awqos);
        p_7_M00_AXI_awqos->set_sv_netview_offsetfromdp(8129416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M00_AXI_awuser.bind(*p_7_M00_AXI_awuser);
        p_7_M00_AXI_awuser->set_sv_netview_offsetfromdp(8129472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_awvalid.bind(*p_7_M00_AXI_awvalid);
        p_7_M00_AXI_awvalid->set_sv_netview_offsetfromdp(8129528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_awready.bind(*p_7_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[9475].first = 3;
        (*_glb_hdl_sc_channel_map)[9475].second.push_front(p_7_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M00_AXI_wdata.bind(*p_7_M00_AXI_wdata);
        p_7_M00_AXI_wdata->set_sv_netview_offsetfromdp(8129640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->M00_AXI_wstrb.bind(*p_7_M00_AXI_wstrb);
        p_7_M00_AXI_wstrb->set_sv_netview_offsetfromdp(8129696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_wlast.bind(*p_7_M00_AXI_wlast);
        p_7_M00_AXI_wlast->set_sv_netview_offsetfromdp(8129752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_wuser.bind(*p_7_M00_AXI_wuser);
        p_7_M00_AXI_wuser->set_sv_netview_offsetfromdp(8129808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_wvalid.bind(*p_7_M00_AXI_wvalid);
        p_7_M00_AXI_wvalid->set_sv_netview_offsetfromdp(8129864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_wready.bind(*p_7_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[9493].first = 3;
        (*_glb_hdl_sc_channel_map)[9493].second.push_front(p_7_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M00_AXI_bid.bind(*p_7_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[9479].first = 3;
        (*_glb_hdl_sc_channel_map)[9479].second.push_front(p_7_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M00_AXI_bresp.bind(*p_7_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[9481].first = 3;
        (*_glb_hdl_sc_channel_map)[9481].second.push_front(p_7_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_buser.bind(*p_7_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[9482].first = 3;
        (*_glb_hdl_sc_channel_map)[9482].second.push_front(p_7_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_bvalid.bind(*p_7_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[9483].first = 3;
        (*_glb_hdl_sc_channel_map)[9483].second.push_front(p_7_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_bready.bind(*p_7_M00_AXI_bready);
        p_7_M00_AXI_bready->set_sv_netview_offsetfromdp(8130200);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M00_AXI_arid.bind(*p_7_M00_AXI_arid);
        p_7_M00_AXI_arid->set_sv_netview_offsetfromdp(8130256);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M00_AXI_araddr.bind(*p_7_M00_AXI_araddr);
        p_7_M00_AXI_araddr->set_sv_netview_offsetfromdp(8130312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M00_AXI_arlen.bind(*p_7_M00_AXI_arlen);
        p_7_M00_AXI_arlen->set_sv_netview_offsetfromdp(8130368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M00_AXI_arsize.bind(*p_7_M00_AXI_arsize);
        p_7_M00_AXI_arsize->set_sv_netview_offsetfromdp(8130424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M00_AXI_arburst.bind(*p_7_M00_AXI_arburst);
        p_7_M00_AXI_arburst->set_sv_netview_offsetfromdp(8130480);
        xsim_sc_channel<0, bool > *p_7_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M00_AXI_arlock.bind(*p_7_M00_AXI_arlock);
        p_7_M00_AXI_arlock->set_sv_netview_offsetfromdp(8130536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M00_AXI_arcache.bind(*p_7_M00_AXI_arcache);
        p_7_M00_AXI_arcache->set_sv_netview_offsetfromdp(8130592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M00_AXI_arprot.bind(*p_7_M00_AXI_arprot);
        p_7_M00_AXI_arprot->set_sv_netview_offsetfromdp(8130648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M00_AXI_arqos.bind(*p_7_M00_AXI_arqos);
        p_7_M00_AXI_arqos->set_sv_netview_offsetfromdp(8130704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M00_AXI_aruser.bind(*p_7_M00_AXI_aruser);
        p_7_M00_AXI_aruser->set_sv_netview_offsetfromdp(8130760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_arvalid.bind(*p_7_M00_AXI_arvalid);
        p_7_M00_AXI_arvalid->set_sv_netview_offsetfromdp(8130816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_arready.bind(*p_7_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[9463].first = 3;
        (*_glb_hdl_sc_channel_map)[9463].second.push_front(p_7_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M00_AXI_rid.bind(*p_7_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[9485].first = 3;
        (*_glb_hdl_sc_channel_map)[9485].second.push_front(p_7_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M00_AXI_rdata.bind(*p_7_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[9484].first = 3;
        (*_glb_hdl_sc_channel_map)[9484].second.push_front(p_7_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M00_AXI_rresp.bind(*p_7_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[9488].first = 3;
        (*_glb_hdl_sc_channel_map)[9488].second.push_front(p_7_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_rlast.bind(*p_7_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[9486].first = 3;
        (*_glb_hdl_sc_channel_map)[9486].second.push_front(p_7_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_ruser.bind(*p_7_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[9489].first = 3;
        (*_glb_hdl_sc_channel_map)[9489].second.push_front(p_7_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_rvalid.bind(*p_7_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[9490].first = 3;
        (*_glb_hdl_sc_channel_map)[9490].second.push_front(p_7_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M00_AXI_rready.bind(*p_7_M00_AXI_rready);
        p_7_M00_AXI_rready->set_sv_netview_offsetfromdp(8131264);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_7_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_7->M01_AXI_awaddr.bind(*p_7_M01_AXI_awaddr);
        p_7_M01_AXI_awaddr->set_sv_netview_offsetfromdp(8131320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M01_AXI_awlen.bind(*p_7_M01_AXI_awlen);
        p_7_M01_AXI_awlen->set_sv_netview_offsetfromdp(8131376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M01_AXI_awsize.bind(*p_7_M01_AXI_awsize);
        p_7_M01_AXI_awsize->set_sv_netview_offsetfromdp(8131432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M01_AXI_awburst.bind(*p_7_M01_AXI_awburst);
        p_7_M01_AXI_awburst->set_sv_netview_offsetfromdp(8131488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M01_AXI_awprot.bind(*p_7_M01_AXI_awprot);
        p_7_M01_AXI_awprot->set_sv_netview_offsetfromdp(8131544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_awvalid.bind(*p_7_M01_AXI_awvalid);
        p_7_M01_AXI_awvalid->set_sv_netview_offsetfromdp(8131600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_awready.bind(*p_7_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[9508].first = 3;
        (*_glb_hdl_sc_channel_map)[9508].second.push_front(p_7_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M01_AXI_wdata.bind(*p_7_M01_AXI_wdata);
        p_7_M01_AXI_wdata->set_sv_netview_offsetfromdp(8131712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->M01_AXI_wstrb.bind(*p_7_M01_AXI_wstrb);
        p_7_M01_AXI_wstrb->set_sv_netview_offsetfromdp(8131768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_wlast.bind(*p_7_M01_AXI_wlast);
        p_7_M01_AXI_wlast->set_sv_netview_offsetfromdp(8131824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_wvalid.bind(*p_7_M01_AXI_wvalid);
        p_7_M01_AXI_wvalid->set_sv_netview_offsetfromdp(8131880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_wready.bind(*p_7_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[9521].first = 3;
        (*_glb_hdl_sc_channel_map)[9521].second.push_front(p_7_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M01_AXI_bresp.bind(*p_7_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[9512].first = 3;
        (*_glb_hdl_sc_channel_map)[9512].second.push_front(p_7_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_bvalid.bind(*p_7_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[9513].first = 3;
        (*_glb_hdl_sc_channel_map)[9513].second.push_front(p_7_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_bready.bind(*p_7_M01_AXI_bready);
        p_7_M01_AXI_bready->set_sv_netview_offsetfromdp(8132104);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_7_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_7->M01_AXI_araddr.bind(*p_7_M01_AXI_araddr);
        p_7_M01_AXI_araddr->set_sv_netview_offsetfromdp(8132160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M01_AXI_arlen.bind(*p_7_M01_AXI_arlen);
        p_7_M01_AXI_arlen->set_sv_netview_offsetfromdp(8132216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M01_AXI_arsize.bind(*p_7_M01_AXI_arsize);
        p_7_M01_AXI_arsize->set_sv_netview_offsetfromdp(8132272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M01_AXI_arburst.bind(*p_7_M01_AXI_arburst);
        p_7_M01_AXI_arburst->set_sv_netview_offsetfromdp(8132328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M01_AXI_arprot.bind(*p_7_M01_AXI_arprot);
        p_7_M01_AXI_arprot->set_sv_netview_offsetfromdp(8132384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_arvalid.bind(*p_7_M01_AXI_arvalid);
        p_7_M01_AXI_arvalid->set_sv_netview_offsetfromdp(8132440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_arready.bind(*p_7_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[9501].first = 3;
        (*_glb_hdl_sc_channel_map)[9501].second.push_front(p_7_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M01_AXI_rdata.bind(*p_7_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[9514].first = 3;
        (*_glb_hdl_sc_channel_map)[9514].second.push_front(p_7_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M01_AXI_rresp.bind(*p_7_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[9517].first = 3;
        (*_glb_hdl_sc_channel_map)[9517].second.push_front(p_7_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_rlast.bind(*p_7_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[9515].first = 3;
        (*_glb_hdl_sc_channel_map)[9515].second.push_front(p_7_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_rvalid.bind(*p_7_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[9518].first = 3;
        (*_glb_hdl_sc_channel_map)[9518].second.push_front(p_7_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M01_AXI_rready.bind(*p_7_M01_AXI_rready);
        p_7_M01_AXI_rready->set_sv_netview_offsetfromdp(8132776);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M02_AXI_awid.bind(*p_7_M02_AXI_awid);
        p_7_M02_AXI_awid->set_sv_netview_offsetfromdp(8132832);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M02_AXI_awaddr.bind(*p_7_M02_AXI_awaddr);
        p_7_M02_AXI_awaddr->set_sv_netview_offsetfromdp(8132888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M02_AXI_awlen.bind(*p_7_M02_AXI_awlen);
        p_7_M02_AXI_awlen->set_sv_netview_offsetfromdp(8132944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M02_AXI_awsize.bind(*p_7_M02_AXI_awsize);
        p_7_M02_AXI_awsize->set_sv_netview_offsetfromdp(8133000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M02_AXI_awburst.bind(*p_7_M02_AXI_awburst);
        p_7_M02_AXI_awburst->set_sv_netview_offsetfromdp(8133056);
        xsim_sc_channel<0, bool > *p_7_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M02_AXI_awlock.bind(*p_7_M02_AXI_awlock);
        p_7_M02_AXI_awlock->set_sv_netview_offsetfromdp(8133112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M02_AXI_awcache.bind(*p_7_M02_AXI_awcache);
        p_7_M02_AXI_awcache->set_sv_netview_offsetfromdp(8133168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M02_AXI_awprot.bind(*p_7_M02_AXI_awprot);
        p_7_M02_AXI_awprot->set_sv_netview_offsetfromdp(8133224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M02_AXI_awqos.bind(*p_7_M02_AXI_awqos);
        p_7_M02_AXI_awqos->set_sv_netview_offsetfromdp(8133280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M02_AXI_awuser.bind(*p_7_M02_AXI_awuser);
        p_7_M02_AXI_awuser->set_sv_netview_offsetfromdp(8133336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_awvalid.bind(*p_7_M02_AXI_awvalid);
        p_7_M02_AXI_awvalid->set_sv_netview_offsetfromdp(8133392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_awready.bind(*p_7_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[9544].first = 3;
        (*_glb_hdl_sc_channel_map)[9544].second.push_front(p_7_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M02_AXI_wdata.bind(*p_7_M02_AXI_wdata);
        p_7_M02_AXI_wdata->set_sv_netview_offsetfromdp(8133504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->M02_AXI_wstrb.bind(*p_7_M02_AXI_wstrb);
        p_7_M02_AXI_wstrb->set_sv_netview_offsetfromdp(8133560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_wlast.bind(*p_7_M02_AXI_wlast);
        p_7_M02_AXI_wlast->set_sv_netview_offsetfromdp(8133616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_wuser.bind(*p_7_M02_AXI_wuser);
        p_7_M02_AXI_wuser->set_sv_netview_offsetfromdp(8133672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_wvalid.bind(*p_7_M02_AXI_wvalid);
        p_7_M02_AXI_wvalid->set_sv_netview_offsetfromdp(8133728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_wready.bind(*p_7_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[9562].first = 3;
        (*_glb_hdl_sc_channel_map)[9562].second.push_front(p_7_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M02_AXI_bid.bind(*p_7_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[9548].first = 3;
        (*_glb_hdl_sc_channel_map)[9548].second.push_front(p_7_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M02_AXI_bresp.bind(*p_7_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[9550].first = 3;
        (*_glb_hdl_sc_channel_map)[9550].second.push_front(p_7_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_buser.bind(*p_7_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[9551].first = 3;
        (*_glb_hdl_sc_channel_map)[9551].second.push_front(p_7_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_bvalid.bind(*p_7_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[9552].first = 3;
        (*_glb_hdl_sc_channel_map)[9552].second.push_front(p_7_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_bready.bind(*p_7_M02_AXI_bready);
        p_7_M02_AXI_bready->set_sv_netview_offsetfromdp(8134064);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M02_AXI_arid.bind(*p_7_M02_AXI_arid);
        p_7_M02_AXI_arid->set_sv_netview_offsetfromdp(8134120);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M02_AXI_araddr.bind(*p_7_M02_AXI_araddr);
        p_7_M02_AXI_araddr->set_sv_netview_offsetfromdp(8134176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M02_AXI_arlen.bind(*p_7_M02_AXI_arlen);
        p_7_M02_AXI_arlen->set_sv_netview_offsetfromdp(8134232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M02_AXI_arsize.bind(*p_7_M02_AXI_arsize);
        p_7_M02_AXI_arsize->set_sv_netview_offsetfromdp(8134288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M02_AXI_arburst.bind(*p_7_M02_AXI_arburst);
        p_7_M02_AXI_arburst->set_sv_netview_offsetfromdp(8134344);
        xsim_sc_channel<0, bool > *p_7_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M02_AXI_arlock.bind(*p_7_M02_AXI_arlock);
        p_7_M02_AXI_arlock->set_sv_netview_offsetfromdp(8134400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M02_AXI_arcache.bind(*p_7_M02_AXI_arcache);
        p_7_M02_AXI_arcache->set_sv_netview_offsetfromdp(8134456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M02_AXI_arprot.bind(*p_7_M02_AXI_arprot);
        p_7_M02_AXI_arprot->set_sv_netview_offsetfromdp(8134512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M02_AXI_arqos.bind(*p_7_M02_AXI_arqos);
        p_7_M02_AXI_arqos->set_sv_netview_offsetfromdp(8134568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M02_AXI_aruser.bind(*p_7_M02_AXI_aruser);
        p_7_M02_AXI_aruser->set_sv_netview_offsetfromdp(8134624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_arvalid.bind(*p_7_M02_AXI_arvalid);
        p_7_M02_AXI_arvalid->set_sv_netview_offsetfromdp(8134680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_arready.bind(*p_7_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[9532].first = 3;
        (*_glb_hdl_sc_channel_map)[9532].second.push_front(p_7_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M02_AXI_rid.bind(*p_7_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[9554].first = 3;
        (*_glb_hdl_sc_channel_map)[9554].second.push_front(p_7_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M02_AXI_rdata.bind(*p_7_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[9553].first = 3;
        (*_glb_hdl_sc_channel_map)[9553].second.push_front(p_7_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M02_AXI_rresp.bind(*p_7_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[9557].first = 3;
        (*_glb_hdl_sc_channel_map)[9557].second.push_front(p_7_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_rlast.bind(*p_7_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[9555].first = 3;
        (*_glb_hdl_sc_channel_map)[9555].second.push_front(p_7_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_ruser.bind(*p_7_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[9558].first = 3;
        (*_glb_hdl_sc_channel_map)[9558].second.push_front(p_7_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_rvalid.bind(*p_7_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[9559].first = 3;
        (*_glb_hdl_sc_channel_map)[9559].second.push_front(p_7_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M02_AXI_rready.bind(*p_7_M02_AXI_rready);
        p_7_M02_AXI_rready->set_sv_netview_offsetfromdp(8135128);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M03_AXI_awid.bind(*p_7_M03_AXI_awid);
        p_7_M03_AXI_awid->set_sv_netview_offsetfromdp(8135184);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M03_AXI_awaddr.bind(*p_7_M03_AXI_awaddr);
        p_7_M03_AXI_awaddr->set_sv_netview_offsetfromdp(8135240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M03_AXI_awlen.bind(*p_7_M03_AXI_awlen);
        p_7_M03_AXI_awlen->set_sv_netview_offsetfromdp(8135296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M03_AXI_awsize.bind(*p_7_M03_AXI_awsize);
        p_7_M03_AXI_awsize->set_sv_netview_offsetfromdp(8135352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M03_AXI_awburst.bind(*p_7_M03_AXI_awburst);
        p_7_M03_AXI_awburst->set_sv_netview_offsetfromdp(8135408);
        xsim_sc_channel<0, bool > *p_7_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M03_AXI_awlock.bind(*p_7_M03_AXI_awlock);
        p_7_M03_AXI_awlock->set_sv_netview_offsetfromdp(8135464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M03_AXI_awcache.bind(*p_7_M03_AXI_awcache);
        p_7_M03_AXI_awcache->set_sv_netview_offsetfromdp(8135520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M03_AXI_awprot.bind(*p_7_M03_AXI_awprot);
        p_7_M03_AXI_awprot->set_sv_netview_offsetfromdp(8135576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M03_AXI_awqos.bind(*p_7_M03_AXI_awqos);
        p_7_M03_AXI_awqos->set_sv_netview_offsetfromdp(8135632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M03_AXI_awuser.bind(*p_7_M03_AXI_awuser);
        p_7_M03_AXI_awuser->set_sv_netview_offsetfromdp(8135688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_awvalid.bind(*p_7_M03_AXI_awvalid);
        p_7_M03_AXI_awvalid->set_sv_netview_offsetfromdp(8135744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_awready.bind(*p_7_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[9586].first = 3;
        (*_glb_hdl_sc_channel_map)[9586].second.push_front(p_7_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M03_AXI_wdata.bind(*p_7_M03_AXI_wdata);
        p_7_M03_AXI_wdata->set_sv_netview_offsetfromdp(8135856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->M03_AXI_wstrb.bind(*p_7_M03_AXI_wstrb);
        p_7_M03_AXI_wstrb->set_sv_netview_offsetfromdp(8135912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_wlast.bind(*p_7_M03_AXI_wlast);
        p_7_M03_AXI_wlast->set_sv_netview_offsetfromdp(8135968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_wuser.bind(*p_7_M03_AXI_wuser);
        p_7_M03_AXI_wuser->set_sv_netview_offsetfromdp(8136024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_wvalid.bind(*p_7_M03_AXI_wvalid);
        p_7_M03_AXI_wvalid->set_sv_netview_offsetfromdp(8136080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_wready.bind(*p_7_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[9604].first = 3;
        (*_glb_hdl_sc_channel_map)[9604].second.push_front(p_7_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M03_AXI_bid.bind(*p_7_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[9590].first = 3;
        (*_glb_hdl_sc_channel_map)[9590].second.push_front(p_7_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M03_AXI_bresp.bind(*p_7_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[9592].first = 3;
        (*_glb_hdl_sc_channel_map)[9592].second.push_front(p_7_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_buser.bind(*p_7_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[9593].first = 3;
        (*_glb_hdl_sc_channel_map)[9593].second.push_front(p_7_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_bvalid.bind(*p_7_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[9594].first = 3;
        (*_glb_hdl_sc_channel_map)[9594].second.push_front(p_7_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_bready.bind(*p_7_M03_AXI_bready);
        p_7_M03_AXI_bready->set_sv_netview_offsetfromdp(8136416);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M03_AXI_arid.bind(*p_7_M03_AXI_arid);
        p_7_M03_AXI_arid->set_sv_netview_offsetfromdp(8136472);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->M03_AXI_araddr.bind(*p_7_M03_AXI_araddr);
        p_7_M03_AXI_araddr->set_sv_netview_offsetfromdp(8136528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->M03_AXI_arlen.bind(*p_7_M03_AXI_arlen);
        p_7_M03_AXI_arlen->set_sv_netview_offsetfromdp(8136584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M03_AXI_arsize.bind(*p_7_M03_AXI_arsize);
        p_7_M03_AXI_arsize->set_sv_netview_offsetfromdp(8136640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M03_AXI_arburst.bind(*p_7_M03_AXI_arburst);
        p_7_M03_AXI_arburst->set_sv_netview_offsetfromdp(8136696);
        xsim_sc_channel<0, bool > *p_7_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->M03_AXI_arlock.bind(*p_7_M03_AXI_arlock);
        p_7_M03_AXI_arlock->set_sv_netview_offsetfromdp(8136752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M03_AXI_arcache.bind(*p_7_M03_AXI_arcache);
        p_7_M03_AXI_arcache->set_sv_netview_offsetfromdp(8136808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->M03_AXI_arprot.bind(*p_7_M03_AXI_arprot);
        p_7_M03_AXI_arprot->set_sv_netview_offsetfromdp(8136864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->M03_AXI_arqos.bind(*p_7_M03_AXI_arqos);
        p_7_M03_AXI_arqos->set_sv_netview_offsetfromdp(8136920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->M03_AXI_aruser.bind(*p_7_M03_AXI_aruser);
        p_7_M03_AXI_aruser->set_sv_netview_offsetfromdp(8136976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_arvalid.bind(*p_7_M03_AXI_arvalid);
        p_7_M03_AXI_arvalid->set_sv_netview_offsetfromdp(8137032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_arready.bind(*p_7_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[9574].first = 3;
        (*_glb_hdl_sc_channel_map)[9574].second.push_front(p_7_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->M03_AXI_rid.bind(*p_7_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[9596].first = 3;
        (*_glb_hdl_sc_channel_map)[9596].second.push_front(p_7_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->M03_AXI_rdata.bind(*p_7_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[9595].first = 3;
        (*_glb_hdl_sc_channel_map)[9595].second.push_front(p_7_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->M03_AXI_rresp.bind(*p_7_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[9599].first = 3;
        (*_glb_hdl_sc_channel_map)[9599].second.push_front(p_7_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_rlast.bind(*p_7_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[9597].first = 3;
        (*_glb_hdl_sc_channel_map)[9597].second.push_front(p_7_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_ruser.bind(*p_7_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[9600].first = 3;
        (*_glb_hdl_sc_channel_map)[9600].second.push_front(p_7_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_rvalid.bind(*p_7_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[9601].first = 3;
        (*_glb_hdl_sc_channel_map)[9601].second.push_front(p_7_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->M03_AXI_rready.bind(*p_7_M03_AXI_rready);
        p_7_M03_AXI_rready->set_sv_netview_offsetfromdp(8137480);
        sc_inst_8 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_8->xsim_set_dbg_index(31);
        sc_inst_9 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_9->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[9948].first = 1;
        (*_glb_hdl_sc_channel_map)[9948].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[9921].first = 3;
        (*_glb_hdl_sc_channel_map)[9921].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[9918].first = 3;
        (*_glb_hdl_sc_channel_map)[9918].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[9922].first = 3;
        (*_glb_hdl_sc_channel_map)[9922].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[9927].first = 3;
        (*_glb_hdl_sc_channel_map)[9927].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[9919].first = 3;
        (*_glb_hdl_sc_channel_map)[9919].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[9923].first = 1;
        (*_glb_hdl_sc_channel_map)[9923].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[9920].first = 3;
        (*_glb_hdl_sc_channel_map)[9920].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[9924].first = 3;
        (*_glb_hdl_sc_channel_map)[9924].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1315].first = 3;
        (*_glb_hdl_sc_channel_map)[1315].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[9925].first = 3;
        (*_glb_hdl_sc_channel_map)[9925].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[9928].first = 3;
        (*_glb_hdl_sc_channel_map)[9928].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[9929].first = 1;
        (*_glb_hdl_sc_channel_map)[9929].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8138360);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[9942].first = 3;
        (*_glb_hdl_sc_channel_map)[9942].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[9945].first = 3;
        (*_glb_hdl_sc_channel_map)[9945].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[9943].first = 1;
        (*_glb_hdl_sc_channel_map)[9943].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[9946].first = 3;
        (*_glb_hdl_sc_channel_map)[9946].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[9947].first = 1;
        (*_glb_hdl_sc_channel_map)[9947].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8138696);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8138752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8138808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8138864);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8138920);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[9931].first = 1;
        (*_glb_hdl_sc_channel_map)[9931].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[9909].first = 3;
        (*_glb_hdl_sc_channel_map)[9909].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[9905].first = 3;
        (*_glb_hdl_sc_channel_map)[9905].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[9910].first = 3;
        (*_glb_hdl_sc_channel_map)[9910].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[9915].first = 3;
        (*_glb_hdl_sc_channel_map)[9915].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[9906].first = 3;
        (*_glb_hdl_sc_channel_map)[9906].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[9911].first = 1;
        (*_glb_hdl_sc_channel_map)[9911].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[9907].first = 3;
        (*_glb_hdl_sc_channel_map)[9907].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[9912].first = 3;
        (*_glb_hdl_sc_channel_map)[9912].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1316].first = 3;
        (*_glb_hdl_sc_channel_map)[1316].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[9913].first = 3;
        (*_glb_hdl_sc_channel_map)[9913].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[9916].first = 3;
        (*_glb_hdl_sc_channel_map)[9916].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[9917].first = 1;
        (*_glb_hdl_sc_channel_map)[9917].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8139704);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8139760);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8139816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8139872);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8139928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8139984);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8140040);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[9938].first = 1;
        (*_glb_hdl_sc_channel_map)[9938].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[9904].first = 1;
        (*_glb_hdl_sc_channel_map)[9904].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[9908].first = 1;
        (*_glb_hdl_sc_channel_map)[9908].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1299].first = 3;
        (*_glb_hdl_sc_channel_map)[1299].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1302].first = 3;
        (*_glb_hdl_sc_channel_map)[1302].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1298].first = 3;
        (*_glb_hdl_sc_channel_map)[1298].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1293].first = 3;
        (*_glb_hdl_sc_channel_map)[1293].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1301].first = 3;
        (*_glb_hdl_sc_channel_map)[1301].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1297].first = 1;
        (*_glb_hdl_sc_channel_map)[1297].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1300].first = 3;
        (*_glb_hdl_sc_channel_map)[1300].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1296].first = 3;
        (*_glb_hdl_sc_channel_map)[1296].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1294].first = 3;
        (*_glb_hdl_sc_channel_map)[1294].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1295].first = 3;
        (*_glb_hdl_sc_channel_map)[1295].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1292].first = 3;
        (*_glb_hdl_sc_channel_map)[1292].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1291].first = 1;
        (*_glb_hdl_sc_channel_map)[1291].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8140936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1288].first = 3;
        (*_glb_hdl_sc_channel_map)[1288].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1286].first = 3;
        (*_glb_hdl_sc_channel_map)[1286].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1287].first = 1;
        (*_glb_hdl_sc_channel_map)[1287].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1285].first = 3;
        (*_glb_hdl_sc_channel_map)[1285].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1284].first = 1;
        (*_glb_hdl_sc_channel_map)[1284].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8141272);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8141328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8141384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8141440);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8141496);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1290].first = 1;
        (*_glb_hdl_sc_channel_map)[1290].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1311].first = 3;
        (*_glb_hdl_sc_channel_map)[1311].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1314].first = 3;
        (*_glb_hdl_sc_channel_map)[1314].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1310].first = 3;
        (*_glb_hdl_sc_channel_map)[1310].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1305].first = 3;
        (*_glb_hdl_sc_channel_map)[1305].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1313].first = 3;
        (*_glb_hdl_sc_channel_map)[1313].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1309].first = 1;
        (*_glb_hdl_sc_channel_map)[1309].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1312].first = 3;
        (*_glb_hdl_sc_channel_map)[1312].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1308].first = 3;
        (*_glb_hdl_sc_channel_map)[1308].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1306].first = 3;
        (*_glb_hdl_sc_channel_map)[1306].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1307].first = 3;
        (*_glb_hdl_sc_channel_map)[1307].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1304].first = 3;
        (*_glb_hdl_sc_channel_map)[1304].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1303].first = 1;
        (*_glb_hdl_sc_channel_map)[1303].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8142280);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8142336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8142392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8142448);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8142504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8142560);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8142616);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1289].first = 1;
        (*_glb_hdl_sc_channel_map)[1289].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[9949].first = 1;
        (*_glb_hdl_sc_channel_map)[9949].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[9950].first = 1;
        (*_glb_hdl_sc_channel_map)[9950].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_10->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[10008].first = 1;
        (*_glb_hdl_sc_channel_map)[10008].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[9981].first = 3;
        (*_glb_hdl_sc_channel_map)[9981].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[9978].first = 3;
        (*_glb_hdl_sc_channel_map)[9978].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[9982].first = 3;
        (*_glb_hdl_sc_channel_map)[9982].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[9987].first = 3;
        (*_glb_hdl_sc_channel_map)[9987].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[9979].first = 3;
        (*_glb_hdl_sc_channel_map)[9979].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[9983].first = 1;
        (*_glb_hdl_sc_channel_map)[9983].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[9980].first = 3;
        (*_glb_hdl_sc_channel_map)[9980].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[9984].first = 3;
        (*_glb_hdl_sc_channel_map)[9984].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1282].first = 3;
        (*_glb_hdl_sc_channel_map)[1282].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[9985].first = 3;
        (*_glb_hdl_sc_channel_map)[9985].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[9988].first = 3;
        (*_glb_hdl_sc_channel_map)[9988].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[9989].first = 1;
        (*_glb_hdl_sc_channel_map)[9989].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8143616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[10002].first = 3;
        (*_glb_hdl_sc_channel_map)[10002].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[10005].first = 3;
        (*_glb_hdl_sc_channel_map)[10005].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[10003].first = 1;
        (*_glb_hdl_sc_channel_map)[10003].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[10006].first = 3;
        (*_glb_hdl_sc_channel_map)[10006].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[10007].first = 1;
        (*_glb_hdl_sc_channel_map)[10007].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8143952);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8144008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8144064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8144120);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8144176);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[9991].first = 1;
        (*_glb_hdl_sc_channel_map)[9991].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[9969].first = 3;
        (*_glb_hdl_sc_channel_map)[9969].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[9965].first = 3;
        (*_glb_hdl_sc_channel_map)[9965].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[9970].first = 3;
        (*_glb_hdl_sc_channel_map)[9970].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[9975].first = 3;
        (*_glb_hdl_sc_channel_map)[9975].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[9966].first = 3;
        (*_glb_hdl_sc_channel_map)[9966].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[9971].first = 1;
        (*_glb_hdl_sc_channel_map)[9971].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[9967].first = 3;
        (*_glb_hdl_sc_channel_map)[9967].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[9972].first = 3;
        (*_glb_hdl_sc_channel_map)[9972].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1283].first = 3;
        (*_glb_hdl_sc_channel_map)[1283].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[9973].first = 3;
        (*_glb_hdl_sc_channel_map)[9973].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[9976].first = 3;
        (*_glb_hdl_sc_channel_map)[9976].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[9977].first = 1;
        (*_glb_hdl_sc_channel_map)[9977].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8144960);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8145016);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8145072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8145128);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8145184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8145240);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8145296);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[9998].first = 1;
        (*_glb_hdl_sc_channel_map)[9998].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[9964].first = 1;
        (*_glb_hdl_sc_channel_map)[9964].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[9968].first = 1;
        (*_glb_hdl_sc_channel_map)[9968].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1264].first = 1;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1263].first = 3;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1258].first = 1;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8146192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1254].first = 1;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8146528);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8146584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8146640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8146696);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8146752);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1278].first = 3;
        (*_glb_hdl_sc_channel_map)[1278].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1281].first = 3;
        (*_glb_hdl_sc_channel_map)[1281].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1277].first = 3;
        (*_glb_hdl_sc_channel_map)[1277].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1272].first = 3;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1280].first = 3;
        (*_glb_hdl_sc_channel_map)[1280].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1276].first = 1;
        (*_glb_hdl_sc_channel_map)[1276].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1279].first = 3;
        (*_glb_hdl_sc_channel_map)[1279].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1275].first = 3;
        (*_glb_hdl_sc_channel_map)[1275].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1273].first = 3;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1274].first = 3;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1271].first = 3;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1270].first = 1;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8147536);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8147592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8147648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8147704);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8147760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8147816);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8147872);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1256].first = 1;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10009].first = 1;
        (*_glb_hdl_sc_channel_map)[10009].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10010].first = 1;
        (*_glb_hdl_sc_channel_map)[10010].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_11->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_11_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ui_clk.bind(*p_11_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[10068].first = 1;
        (*_glb_hdl_sc_channel_map)[10068].second.push_front(p_11_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_awid.bind(*p_11_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[10041].first = 3;
        (*_glb_hdl_sc_channel_map)[10041].second.push_front(p_11_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_awaddr.bind(*p_11_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[10038].first = 3;
        (*_glb_hdl_sc_channel_map)[10038].second.push_front(p_11_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_awlen.bind(*p_11_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[10042].first = 3;
        (*_glb_hdl_sc_channel_map)[10042].second.push_front(p_11_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awsize.bind(*p_11_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[10047].first = 3;
        (*_glb_hdl_sc_channel_map)[10047].second.push_front(p_11_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_awburst.bind(*p_11_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[10039].first = 3;
        (*_glb_hdl_sc_channel_map)[10039].second.push_front(p_11_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awlock.bind(*p_11_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[10043].first = 1;
        (*_glb_hdl_sc_channel_map)[10043].second.push_front(p_11_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awcache.bind(*p_11_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[10040].first = 3;
        (*_glb_hdl_sc_channel_map)[10040].second.push_front(p_11_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_awprot.bind(*p_11_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[10044].first = 3;
        (*_glb_hdl_sc_channel_map)[10044].second.push_front(p_11_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awregion.bind(*p_11_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_11_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_awqos.bind(*p_11_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[10045].first = 3;
        (*_glb_hdl_sc_channel_map)[10045].second.push_front(p_11_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_awuser.bind(*p_11_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[10048].first = 3;
        (*_glb_hdl_sc_channel_map)[10048].second.push_front(p_11_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awvalid.bind(*p_11_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[10049].first = 1;
        (*_glb_hdl_sc_channel_map)[10049].second.push_front(p_11_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_awready.bind(*p_11_c0_ddr_saxi_awready);
        p_11_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(8148872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_wdata.bind(*p_11_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[10062].first = 3;
        (*_glb_hdl_sc_channel_map)[10062].second.push_front(p_11_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->c0_ddr_saxi_wstrb.bind(*p_11_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[10065].first = 3;
        (*_glb_hdl_sc_channel_map)[10065].second.push_front(p_11_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wlast.bind(*p_11_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[10063].first = 1;
        (*_glb_hdl_sc_channel_map)[10063].second.push_front(p_11_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_wuser.bind(*p_11_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[10066].first = 3;
        (*_glb_hdl_sc_channel_map)[10066].second.push_front(p_11_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wvalid.bind(*p_11_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[10067].first = 1;
        (*_glb_hdl_sc_channel_map)[10067].second.push_front(p_11_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_wready.bind(*p_11_c0_ddr_saxi_wready);
        p_11_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(8149208);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_bid.bind(*p_11_c0_ddr_saxi_bid);
        p_11_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(8149264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_bresp.bind(*p_11_c0_ddr_saxi_bresp);
        p_11_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(8149320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_buser.bind(*p_11_c0_ddr_saxi_buser);
        p_11_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(8149376);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bvalid.bind(*p_11_c0_ddr_saxi_bvalid);
        p_11_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(8149432);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_bready.bind(*p_11_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[10051].first = 1;
        (*_glb_hdl_sc_channel_map)[10051].second.push_front(p_11_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_arid.bind(*p_11_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[10029].first = 3;
        (*_glb_hdl_sc_channel_map)[10029].second.push_front(p_11_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_11_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_11->c0_ddr_saxi_araddr.bind(*p_11_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[10025].first = 3;
        (*_glb_hdl_sc_channel_map)[10025].second.push_front(p_11_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->c0_ddr_saxi_arlen.bind(*p_11_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[10030].first = 3;
        (*_glb_hdl_sc_channel_map)[10030].second.push_front(p_11_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arsize.bind(*p_11_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[10035].first = 3;
        (*_glb_hdl_sc_channel_map)[10035].second.push_front(p_11_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_arburst.bind(*p_11_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[10026].first = 3;
        (*_glb_hdl_sc_channel_map)[10026].second.push_front(p_11_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arlock.bind(*p_11_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[10031].first = 1;
        (*_glb_hdl_sc_channel_map)[10031].second.push_front(p_11_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arcache.bind(*p_11_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[10027].first = 3;
        (*_glb_hdl_sc_channel_map)[10027].second.push_front(p_11_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->c0_ddr_saxi_arprot.bind(*p_11_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[10032].first = 3;
        (*_glb_hdl_sc_channel_map)[10032].second.push_front(p_11_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arregion.bind(*p_11_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_11_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->c0_ddr_saxi_arqos.bind(*p_11_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[10033].first = 3;
        (*_glb_hdl_sc_channel_map)[10033].second.push_front(p_11_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->c0_ddr_saxi_aruser.bind(*p_11_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[10036].first = 3;
        (*_glb_hdl_sc_channel_map)[10036].second.push_front(p_11_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arvalid.bind(*p_11_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[10037].first = 1;
        (*_glb_hdl_sc_channel_map)[10037].second.push_front(p_11_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_arready.bind(*p_11_c0_ddr_saxi_arready);
        p_11_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(8150216);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->c0_ddr_saxi_rid.bind(*p_11_c0_ddr_saxi_rid);
        p_11_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(8150272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_11_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_11->c0_ddr_saxi_rdata.bind(*p_11_c0_ddr_saxi_rdata);
        p_11_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(8150328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->c0_ddr_saxi_rresp.bind(*p_11_c0_ddr_saxi_rresp);
        p_11_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(8150384);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rlast.bind(*p_11_c0_ddr_saxi_rlast);
        p_11_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(8150440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->c0_ddr_saxi_ruser.bind(*p_11_c0_ddr_saxi_ruser);
        p_11_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(8150496);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rvalid.bind(*p_11_c0_ddr_saxi_rvalid);
        p_11_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(8150552);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_rready.bind(*p_11_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[10058].first = 1;
        (*_glb_hdl_sc_channel_map)[10058].second.push_front(p_11_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aclk.bind(*p_11_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[10024].first = 1;
        (*_glb_hdl_sc_channel_map)[10024].second.push_front(p_11_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_11_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->c0_ddr_saxi_aresetn.bind(*p_11_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[10028].first = 1;
        (*_glb_hdl_sc_channel_map)[10028].second.push_front(p_11_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_awid.bind(*p_11_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_11_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awaddr.bind(*p_11_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_11_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_awlen.bind(*p_11_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_11_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awsize.bind(*p_11_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_11_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_awburst.bind(*p_11_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_11_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awlock.bind(*p_11_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1231].first = 1;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_11_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awcache.bind(*p_11_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_11_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_awprot.bind(*p_11_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1230].first = 3;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_11_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awregion.bind(*p_11_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_11_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_awqos.bind(*p_11_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_11_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_awuser.bind(*p_11_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_11_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awvalid.bind(*p_11_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1225].first = 1;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_11_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_awready.bind(*p_11_s_xdma_axi_awready);
        p_11_s_xdma_axi_awready->set_sv_netview_offsetfromdp(8151448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_wdata.bind(*p_11_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_11_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_wstrb.bind(*p_11_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_11_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wlast.bind(*p_11_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1221].first = 1;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_11_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_wuser.bind(*p_11_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_11_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wvalid.bind(*p_11_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_11_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_wready.bind(*p_11_s_xdma_axi_wready);
        p_11_s_xdma_axi_wready->set_sv_netview_offsetfromdp(8151784);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_bid.bind(*p_11_s_xdma_axi_bid);
        p_11_s_xdma_axi_bid->set_sv_netview_offsetfromdp(8151840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_bresp.bind(*p_11_s_xdma_axi_bresp);
        p_11_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(8151896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_buser.bind(*p_11_s_xdma_axi_buser);
        p_11_s_xdma_axi_buser->set_sv_netview_offsetfromdp(8151952);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bvalid.bind(*p_11_s_xdma_axi_bvalid);
        p_11_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(8152008);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_bready.bind(*p_11_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_11_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_arid.bind(*p_11_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1245].first = 3;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_11_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_araddr.bind(*p_11_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_11_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_xdma_axi_arlen.bind(*p_11_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1244].first = 3;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_11_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arsize.bind(*p_11_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_11_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_arburst.bind(*p_11_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_11_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arlock.bind(*p_11_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_11_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arcache.bind(*p_11_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_11_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_xdma_axi_arprot.bind(*p_11_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_11_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arregion.bind(*p_11_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_11_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_xdma_axi_arqos.bind(*p_11_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1241].first = 3;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_11_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_aruser.bind(*p_11_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1238].first = 3;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_11_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arvalid.bind(*p_11_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1237].first = 1;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_11_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_arready.bind(*p_11_s_xdma_axi_arready);
        p_11_s_xdma_axi_arready->set_sv_netview_offsetfromdp(8152792);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_11_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_11->s_xdma_axi_rid.bind(*p_11_s_xdma_axi_rid);
        p_11_s_xdma_axi_rid->set_sv_netview_offsetfromdp(8152848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_xdma_axi_rdata.bind(*p_11_s_xdma_axi_rdata);
        p_11_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(8152904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_xdma_axi_rresp.bind(*p_11_s_xdma_axi_rresp);
        p_11_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(8152960);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rlast.bind(*p_11_s_xdma_axi_rlast);
        p_11_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(8153016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s_xdma_axi_ruser.bind(*p_11_s_xdma_axi_ruser);
        p_11_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(8153072);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rvalid.bind(*p_11_s_xdma_axi_rvalid);
        p_11_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(8153128);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_rready.bind(*p_11_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1223].first = 1;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_11_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aclk.bind(*p_11_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10069].first = 1;
        (*_glb_hdl_sc_channel_map)[10069].second.push_front(p_11_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_xdma_axi_aresetn.bind(*p_11_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10070].first = 1;
        (*_glb_hdl_sc_channel_map)[10070].second.push_front(p_11_s_xdma_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_12->xsim_set_dbg_index(719);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[10304].first = 3;
        (*_glb_hdl_sc_channel_map)[10304].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[10242].first = 3;
        (*_glb_hdl_sc_channel_map)[10242].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[10305].first = 3;
        (*_glb_hdl_sc_channel_map)[10305].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[10310].first = 3;
        (*_glb_hdl_sc_channel_map)[10310].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[10302].first = 3;
        (*_glb_hdl_sc_channel_map)[10302].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[10306].first = 1;
        (*_glb_hdl_sc_channel_map)[10306].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[10303].first = 3;
        (*_glb_hdl_sc_channel_map)[10303].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[10307].first = 3;
        (*_glb_hdl_sc_channel_map)[10307].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[10241].first = 3;
        (*_glb_hdl_sc_channel_map)[10241].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[10308].first = 3;
        (*_glb_hdl_sc_channel_map)[10308].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[10311].first = 3;
        (*_glb_hdl_sc_channel_map)[10311].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[10312].first = 1;
        (*_glb_hdl_sc_channel_map)[10312].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(8224504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[10325].first = 3;
        (*_glb_hdl_sc_channel_map)[10325].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[10328].first = 3;
        (*_glb_hdl_sc_channel_map)[10328].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[10326].first = 1;
        (*_glb_hdl_sc_channel_map)[10326].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[10329].first = 3;
        (*_glb_hdl_sc_channel_map)[10329].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[10330].first = 1;
        (*_glb_hdl_sc_channel_map)[10330].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(8224840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(8224896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(8224952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(8225008);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(8225064);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[10314].first = 1;
        (*_glb_hdl_sc_channel_map)[10314].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[10293].first = 3;
        (*_glb_hdl_sc_channel_map)[10293].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[10244].first = 3;
        (*_glb_hdl_sc_channel_map)[10244].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[10294].first = 3;
        (*_glb_hdl_sc_channel_map)[10294].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[10299].first = 3;
        (*_glb_hdl_sc_channel_map)[10299].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[10290].first = 3;
        (*_glb_hdl_sc_channel_map)[10290].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[10295].first = 1;
        (*_glb_hdl_sc_channel_map)[10295].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[10291].first = 3;
        (*_glb_hdl_sc_channel_map)[10291].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[10296].first = 3;
        (*_glb_hdl_sc_channel_map)[10296].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[10243].first = 3;
        (*_glb_hdl_sc_channel_map)[10243].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[10297].first = 3;
        (*_glb_hdl_sc_channel_map)[10297].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[10300].first = 3;
        (*_glb_hdl_sc_channel_map)[10300].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[10301].first = 1;
        (*_glb_hdl_sc_channel_map)[10301].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(8225848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(8225904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(8225960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(8226016);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(8226072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(8226128);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(8226184);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[10321].first = 1;
        (*_glb_hdl_sc_channel_map)[10321].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10289].first = 1;
        (*_glb_hdl_sc_channel_map)[10289].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10292].first = 1;
        (*_glb_hdl_sc_channel_map)[10292].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(8226408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(8226464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(8226520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(8226576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(8226632);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(8226688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(8226744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(8226800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(8226856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(8226912);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(8226968);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[10267].first = 1;
        (*_glb_hdl_sc_channel_map)[10267].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(8227080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(8227136);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(8227192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(8227248);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(8227304);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[10285].first = 1;
        (*_glb_hdl_sc_channel_map)[10285].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[10271].first = 3;
        (*_glb_hdl_sc_channel_map)[10271].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[10273].first = 3;
        (*_glb_hdl_sc_channel_map)[10273].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[10274].first = 3;
        (*_glb_hdl_sc_channel_map)[10274].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[10275].first = 1;
        (*_glb_hdl_sc_channel_map)[10275].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(8227640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(8227696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(8227752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(8227808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(8227864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(8227920);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(8227976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(8228032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(8228088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(8228144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(8228200);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(8228256);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[10255].first = 1;
        (*_glb_hdl_sc_channel_map)[10255].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[10277].first = 3;
        (*_glb_hdl_sc_channel_map)[10277].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[10276].first = 3;
        (*_glb_hdl_sc_channel_map)[10276].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[10280].first = 3;
        (*_glb_hdl_sc_channel_map)[10280].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[10278].first = 1;
        (*_glb_hdl_sc_channel_map)[10278].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[10281].first = 3;
        (*_glb_hdl_sc_channel_map)[10281].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[10282].first = 1;
        (*_glb_hdl_sc_channel_map)[10282].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(8228704);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10245].first = 1;
        (*_glb_hdl_sc_channel_map)[10245].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10249].first = 1;
        (*_glb_hdl_sc_channel_map)[10249].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_13->xsim_set_dbg_index(873);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[12234].first = 3;
        (*_glb_hdl_sc_channel_map)[12234].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[12172].first = 3;
        (*_glb_hdl_sc_channel_map)[12172].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[12235].first = 3;
        (*_glb_hdl_sc_channel_map)[12235].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[12240].first = 3;
        (*_glb_hdl_sc_channel_map)[12240].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[12232].first = 3;
        (*_glb_hdl_sc_channel_map)[12232].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[12236].first = 1;
        (*_glb_hdl_sc_channel_map)[12236].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[12233].first = 3;
        (*_glb_hdl_sc_channel_map)[12233].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[12237].first = 3;
        (*_glb_hdl_sc_channel_map)[12237].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[12171].first = 3;
        (*_glb_hdl_sc_channel_map)[12171].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[12238].first = 3;
        (*_glb_hdl_sc_channel_map)[12238].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[12241].first = 3;
        (*_glb_hdl_sc_channel_map)[12241].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[12242].first = 1;
        (*_glb_hdl_sc_channel_map)[12242].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(8799304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[12255].first = 3;
        (*_glb_hdl_sc_channel_map)[12255].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[12258].first = 3;
        (*_glb_hdl_sc_channel_map)[12258].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[12256].first = 1;
        (*_glb_hdl_sc_channel_map)[12256].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[12259].first = 3;
        (*_glb_hdl_sc_channel_map)[12259].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[12260].first = 1;
        (*_glb_hdl_sc_channel_map)[12260].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(8799640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(8799696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(8799752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(8799808);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(8799864);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[12244].first = 1;
        (*_glb_hdl_sc_channel_map)[12244].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[12223].first = 3;
        (*_glb_hdl_sc_channel_map)[12223].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[12174].first = 3;
        (*_glb_hdl_sc_channel_map)[12174].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[12224].first = 3;
        (*_glb_hdl_sc_channel_map)[12224].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[12229].first = 3;
        (*_glb_hdl_sc_channel_map)[12229].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[12220].first = 3;
        (*_glb_hdl_sc_channel_map)[12220].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[12225].first = 1;
        (*_glb_hdl_sc_channel_map)[12225].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[12221].first = 3;
        (*_glb_hdl_sc_channel_map)[12221].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[12226].first = 3;
        (*_glb_hdl_sc_channel_map)[12226].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[12173].first = 3;
        (*_glb_hdl_sc_channel_map)[12173].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[12227].first = 3;
        (*_glb_hdl_sc_channel_map)[12227].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[12230].first = 3;
        (*_glb_hdl_sc_channel_map)[12230].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[12231].first = 1;
        (*_glb_hdl_sc_channel_map)[12231].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(8800648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(8800704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(8800760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(8800816);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(8800872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(8800928);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(8800984);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[12251].first = 1;
        (*_glb_hdl_sc_channel_map)[12251].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12219].first = 1;
        (*_glb_hdl_sc_channel_map)[12219].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12222].first = 1;
        (*_glb_hdl_sc_channel_map)[12222].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(8801208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(8801264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(8801320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(8801376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(8801432);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(8801488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(8801544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(8801600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(8801656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(8801712);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(8801768);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[12197].first = 1;
        (*_glb_hdl_sc_channel_map)[12197].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(8801880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(8801936);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(8801992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(8802048);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(8802104);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[12215].first = 1;
        (*_glb_hdl_sc_channel_map)[12215].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[12201].first = 3;
        (*_glb_hdl_sc_channel_map)[12201].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[12203].first = 3;
        (*_glb_hdl_sc_channel_map)[12203].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[12204].first = 3;
        (*_glb_hdl_sc_channel_map)[12204].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[12205].first = 1;
        (*_glb_hdl_sc_channel_map)[12205].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(8802440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(8802496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(8802552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(8802608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(8802664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(8802720);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(8802776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(8802832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(8802888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(8802944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(8803000);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(8803056);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[12185].first = 1;
        (*_glb_hdl_sc_channel_map)[12185].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[12207].first = 3;
        (*_glb_hdl_sc_channel_map)[12207].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[12206].first = 3;
        (*_glb_hdl_sc_channel_map)[12206].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[12210].first = 3;
        (*_glb_hdl_sc_channel_map)[12210].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[12208].first = 1;
        (*_glb_hdl_sc_channel_map)[12208].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[12211].first = 3;
        (*_glb_hdl_sc_channel_map)[12211].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[12212].first = 1;
        (*_glb_hdl_sc_channel_map)[12212].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(8803504);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12175].first = 1;
        (*_glb_hdl_sc_channel_map)[12175].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12179].first = 1;
        (*_glb_hdl_sc_channel_map)[12179].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_14->xsim_set_dbg_index(874);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[12320].first = 3;
        (*_glb_hdl_sc_channel_map)[12320].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[12168].first = 3;
        (*_glb_hdl_sc_channel_map)[12168].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[12321].first = 3;
        (*_glb_hdl_sc_channel_map)[12321].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[12326].first = 3;
        (*_glb_hdl_sc_channel_map)[12326].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[12318].first = 3;
        (*_glb_hdl_sc_channel_map)[12318].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[12322].first = 1;
        (*_glb_hdl_sc_channel_map)[12322].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[12319].first = 3;
        (*_glb_hdl_sc_channel_map)[12319].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[12323].first = 3;
        (*_glb_hdl_sc_channel_map)[12323].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[12167].first = 3;
        (*_glb_hdl_sc_channel_map)[12167].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[12324].first = 3;
        (*_glb_hdl_sc_channel_map)[12324].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[12327].first = 3;
        (*_glb_hdl_sc_channel_map)[12327].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[12328].first = 1;
        (*_glb_hdl_sc_channel_map)[12328].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(8804392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[12341].first = 3;
        (*_glb_hdl_sc_channel_map)[12341].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[12344].first = 3;
        (*_glb_hdl_sc_channel_map)[12344].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[12342].first = 1;
        (*_glb_hdl_sc_channel_map)[12342].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[12345].first = 3;
        (*_glb_hdl_sc_channel_map)[12345].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[12346].first = 1;
        (*_glb_hdl_sc_channel_map)[12346].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(8804728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(8804784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(8804840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(8804896);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(8804952);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[12330].first = 1;
        (*_glb_hdl_sc_channel_map)[12330].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[12309].first = 3;
        (*_glb_hdl_sc_channel_map)[12309].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[12170].first = 3;
        (*_glb_hdl_sc_channel_map)[12170].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[12310].first = 3;
        (*_glb_hdl_sc_channel_map)[12310].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[12315].first = 3;
        (*_glb_hdl_sc_channel_map)[12315].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[12306].first = 3;
        (*_glb_hdl_sc_channel_map)[12306].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[12311].first = 1;
        (*_glb_hdl_sc_channel_map)[12311].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[12307].first = 3;
        (*_glb_hdl_sc_channel_map)[12307].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[12312].first = 3;
        (*_glb_hdl_sc_channel_map)[12312].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[12169].first = 3;
        (*_glb_hdl_sc_channel_map)[12169].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[12313].first = 3;
        (*_glb_hdl_sc_channel_map)[12313].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[12316].first = 3;
        (*_glb_hdl_sc_channel_map)[12316].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[12317].first = 1;
        (*_glb_hdl_sc_channel_map)[12317].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(8805736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(8805792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(8805848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(8805904);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(8805960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(8806016);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(8806072);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[12337].first = 1;
        (*_glb_hdl_sc_channel_map)[12337].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12305].first = 1;
        (*_glb_hdl_sc_channel_map)[12305].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12308].first = 1;
        (*_glb_hdl_sc_channel_map)[12308].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(8806296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(8806352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(8806408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(8806464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(8806520);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(8806576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(8806632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(8806688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(8806744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(8806800);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(8806856);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[12283].first = 1;
        (*_glb_hdl_sc_channel_map)[12283].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(8806968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(8807024);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(8807080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(8807136);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(8807192);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[12301].first = 1;
        (*_glb_hdl_sc_channel_map)[12301].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[12287].first = 3;
        (*_glb_hdl_sc_channel_map)[12287].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[12289].first = 3;
        (*_glb_hdl_sc_channel_map)[12289].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[12290].first = 3;
        (*_glb_hdl_sc_channel_map)[12290].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[12291].first = 1;
        (*_glb_hdl_sc_channel_map)[12291].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(8807528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(8807584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(8807640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(8807696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(8807752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(8807808);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(8807864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(8807920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(8807976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(8808032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(8808088);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(8808144);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[12271].first = 1;
        (*_glb_hdl_sc_channel_map)[12271].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[12293].first = 3;
        (*_glb_hdl_sc_channel_map)[12293].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[12292].first = 3;
        (*_glb_hdl_sc_channel_map)[12292].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[12296].first = 3;
        (*_glb_hdl_sc_channel_map)[12296].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[12294].first = 1;
        (*_glb_hdl_sc_channel_map)[12294].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[12297].first = 3;
        (*_glb_hdl_sc_channel_map)[12297].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[12298].first = 1;
        (*_glb_hdl_sc_channel_map)[12298].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(8808592);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12261].first = 1;
        (*_glb_hdl_sc_channel_map)[12261].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12265].first = 1;
        (*_glb_hdl_sc_channel_map)[12265].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_15->xsim_set_dbg_index(1072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[14779].first = 3;
        (*_glb_hdl_sc_channel_map)[14779].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14717].first = 3;
        (*_glb_hdl_sc_channel_map)[14717].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[14780].first = 3;
        (*_glb_hdl_sc_channel_map)[14780].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[14785].first = 3;
        (*_glb_hdl_sc_channel_map)[14785].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[14777].first = 3;
        (*_glb_hdl_sc_channel_map)[14777].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14781].first = 1;
        (*_glb_hdl_sc_channel_map)[14781].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14778].first = 3;
        (*_glb_hdl_sc_channel_map)[14778].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[14782].first = 3;
        (*_glb_hdl_sc_channel_map)[14782].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14716].first = 3;
        (*_glb_hdl_sc_channel_map)[14716].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14783].first = 3;
        (*_glb_hdl_sc_channel_map)[14783].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awuser.bind(*p_15_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[14786].first = 3;
        (*_glb_hdl_sc_channel_map)[14786].second.push_front(p_15_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[14787].first = 1;
        (*_glb_hdl_sc_channel_map)[14787].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(9382472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[14800].first = 3;
        (*_glb_hdl_sc_channel_map)[14800].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[14803].first = 3;
        (*_glb_hdl_sc_channel_map)[14803].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[14801].first = 1;
        (*_glb_hdl_sc_channel_map)[14801].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_wuser.bind(*p_15_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[14804].first = 3;
        (*_glb_hdl_sc_channel_map)[14804].second.push_front(p_15_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[14805].first = 1;
        (*_glb_hdl_sc_channel_map)[14805].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(9382808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(9382864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(9382920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_buser.bind(*p_15_s00_axi_buser);
        p_15_s00_axi_buser->set_sv_netview_offsetfromdp(9382976);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(9383032);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[14789].first = 1;
        (*_glb_hdl_sc_channel_map)[14789].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[14768].first = 3;
        (*_glb_hdl_sc_channel_map)[14768].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_15_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14719].first = 3;
        (*_glb_hdl_sc_channel_map)[14719].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[14769].first = 3;
        (*_glb_hdl_sc_channel_map)[14769].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[14774].first = 3;
        (*_glb_hdl_sc_channel_map)[14774].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[14765].first = 3;
        (*_glb_hdl_sc_channel_map)[14765].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14770].first = 1;
        (*_glb_hdl_sc_channel_map)[14770].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14766].first = 3;
        (*_glb_hdl_sc_channel_map)[14766].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[14771].first = 3;
        (*_glb_hdl_sc_channel_map)[14771].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14718].first = 3;
        (*_glb_hdl_sc_channel_map)[14718].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14772].first = 3;
        (*_glb_hdl_sc_channel_map)[14772].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_aruser.bind(*p_15_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[14775].first = 3;
        (*_glb_hdl_sc_channel_map)[14775].second.push_front(p_15_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[14776].first = 1;
        (*_glb_hdl_sc_channel_map)[14776].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(9383816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(9383872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(9383928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(9383984);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(9384040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_ruser.bind(*p_15_s00_axi_ruser);
        p_15_s00_axi_ruser->set_sv_netview_offsetfromdp(9384096);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(9384152);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[14796].first = 1;
        (*_glb_hdl_sc_channel_map)[14796].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14764].first = 1;
        (*_glb_hdl_sc_channel_map)[14764].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14767].first = 1;
        (*_glb_hdl_sc_channel_map)[14767].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(9384376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(9384432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(9384488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(9384544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(9384600);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(9384656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(9384712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(9384768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(9384824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(9384880);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(9384936);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[14742].first = 1;
        (*_glb_hdl_sc_channel_map)[14742].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(9385048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(9385104);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(9385160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(9385216);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(9385272);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[14760].first = 1;
        (*_glb_hdl_sc_channel_map)[14760].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[14746].first = 3;
        (*_glb_hdl_sc_channel_map)[14746].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[14748].first = 3;
        (*_glb_hdl_sc_channel_map)[14748].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[14749].first = 3;
        (*_glb_hdl_sc_channel_map)[14749].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[14750].first = 1;
        (*_glb_hdl_sc_channel_map)[14750].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(9385608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(9385664);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(9385720);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(9385776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(9385832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(9385888);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(9385944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(9386000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(9386056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(9386112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(9386168);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(9386224);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[14730].first = 1;
        (*_glb_hdl_sc_channel_map)[14730].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[14752].first = 3;
        (*_glb_hdl_sc_channel_map)[14752].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[14751].first = 3;
        (*_glb_hdl_sc_channel_map)[14751].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[14755].first = 3;
        (*_glb_hdl_sc_channel_map)[14755].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[14753].first = 1;
        (*_glb_hdl_sc_channel_map)[14753].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[14756].first = 3;
        (*_glb_hdl_sc_channel_map)[14756].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[14757].first = 1;
        (*_glb_hdl_sc_channel_map)[14757].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(9386672);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14720].first = 1;
        (*_glb_hdl_sc_channel_map)[14720].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14724].first = 1;
        (*_glb_hdl_sc_channel_map)[14724].second.push_front(p_15_m00_axi_aresetn);
        sc_inst_16 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_16->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_awid.bind(*p_16_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[17919].first = 3;
        (*_glb_hdl_sc_channel_map)[17919].second.push_front(p_16_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_awaddr.bind(*p_16_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17916].first = 3;
        (*_glb_hdl_sc_channel_map)[17916].second.push_front(p_16_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_awlen.bind(*p_16_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17920].first = 3;
        (*_glb_hdl_sc_channel_map)[17920].second.push_front(p_16_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awsize.bind(*p_16_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17926].first = 3;
        (*_glb_hdl_sc_channel_map)[17926].second.push_front(p_16_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_awburst.bind(*p_16_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17917].first = 3;
        (*_glb_hdl_sc_channel_map)[17917].second.push_front(p_16_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awlock.bind(*p_16_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17921].first = 1;
        (*_glb_hdl_sc_channel_map)[17921].second.push_front(p_16_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awcache.bind(*p_16_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17918].first = 3;
        (*_glb_hdl_sc_channel_map)[17918].second.push_front(p_16_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awprot.bind(*p_16_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17922].first = 3;
        (*_glb_hdl_sc_channel_map)[17922].second.push_front(p_16_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awregion.bind(*p_16_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17925].first = 3;
        (*_glb_hdl_sc_channel_map)[17925].second.push_front(p_16_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awqos.bind(*p_16_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17923].first = 3;
        (*_glb_hdl_sc_channel_map)[17923].second.push_front(p_16_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awvalid.bind(*p_16_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17927].first = 1;
        (*_glb_hdl_sc_channel_map)[17927].second.push_front(p_16_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awready.bind(*p_16_s00_axi_awready);
        p_16_s00_axi_awready->set_sv_netview_offsetfromdp(10137184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_wdata.bind(*p_16_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17938].first = 3;
        (*_glb_hdl_sc_channel_map)[17938].second.push_front(p_16_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_wstrb.bind(*p_16_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17941].first = 3;
        (*_glb_hdl_sc_channel_map)[17941].second.push_front(p_16_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wlast.bind(*p_16_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17939].first = 1;
        (*_glb_hdl_sc_channel_map)[17939].second.push_front(p_16_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wvalid.bind(*p_16_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17942].first = 1;
        (*_glb_hdl_sc_channel_map)[17942].second.push_front(p_16_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wready.bind(*p_16_s00_axi_wready);
        p_16_s00_axi_wready->set_sv_netview_offsetfromdp(10137464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_bid.bind(*p_16_s00_axi_bid);
        p_16_s00_axi_bid->set_sv_netview_offsetfromdp(10137520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_bresp.bind(*p_16_s00_axi_bresp);
        p_16_s00_axi_bresp->set_sv_netview_offsetfromdp(10137576);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bvalid.bind(*p_16_s00_axi_bvalid);
        p_16_s00_axi_bvalid->set_sv_netview_offsetfromdp(10137632);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bready.bind(*p_16_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[17929].first = 1;
        (*_glb_hdl_sc_channel_map)[17929].second.push_front(p_16_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_arid.bind(*p_16_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[17907].first = 3;
        (*_glb_hdl_sc_channel_map)[17907].second.push_front(p_16_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_araddr.bind(*p_16_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17903].first = 3;
        (*_glb_hdl_sc_channel_map)[17903].second.push_front(p_16_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_arlen.bind(*p_16_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17908].first = 3;
        (*_glb_hdl_sc_channel_map)[17908].second.push_front(p_16_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arsize.bind(*p_16_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17914].first = 3;
        (*_glb_hdl_sc_channel_map)[17914].second.push_front(p_16_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_arburst.bind(*p_16_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17904].first = 3;
        (*_glb_hdl_sc_channel_map)[17904].second.push_front(p_16_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arlock.bind(*p_16_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17909].first = 1;
        (*_glb_hdl_sc_channel_map)[17909].second.push_front(p_16_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arcache.bind(*p_16_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17905].first = 3;
        (*_glb_hdl_sc_channel_map)[17905].second.push_front(p_16_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arprot.bind(*p_16_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17910].first = 3;
        (*_glb_hdl_sc_channel_map)[17910].second.push_front(p_16_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arregion.bind(*p_16_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17913].first = 3;
        (*_glb_hdl_sc_channel_map)[17913].second.push_front(p_16_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arqos.bind(*p_16_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17911].first = 3;
        (*_glb_hdl_sc_channel_map)[17911].second.push_front(p_16_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arvalid.bind(*p_16_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17915].first = 1;
        (*_glb_hdl_sc_channel_map)[17915].second.push_front(p_16_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arready.bind(*p_16_s00_axi_arready);
        p_16_s00_axi_arready->set_sv_netview_offsetfromdp(10138360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s00_axi_rid.bind(*p_16_s00_axi_rid);
        p_16_s00_axi_rid->set_sv_netview_offsetfromdp(10138416);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s00_axi_rdata.bind(*p_16_s00_axi_rdata);
        p_16_s00_axi_rdata->set_sv_netview_offsetfromdp(10138472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_rresp.bind(*p_16_s00_axi_rresp);
        p_16_s00_axi_rresp->set_sv_netview_offsetfromdp(10138528);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rlast.bind(*p_16_s00_axi_rlast);
        p_16_s00_axi_rlast->set_sv_netview_offsetfromdp(10138584);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rvalid.bind(*p_16_s00_axi_rvalid);
        p_16_s00_axi_rvalid->set_sv_netview_offsetfromdp(10138640);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rready.bind(*p_16_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[17935].first = 1;
        (*_glb_hdl_sc_channel_map)[17935].second.push_front(p_16_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aclk.bind(*p_16_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17902].first = 1;
        (*_glb_hdl_sc_channel_map)[17902].second.push_front(p_16_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aresetn.bind(*p_16_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17906].first = 1;
        (*_glb_hdl_sc_channel_map)[17906].second.push_front(p_16_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awid.bind(*p_16_m00_axi_awid);
        p_16_m00_axi_awid->set_sv_netview_offsetfromdp(10138864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_awaddr.bind(*p_16_m00_axi_awaddr);
        p_16_m00_axi_awaddr->set_sv_netview_offsetfromdp(10138920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_awlen.bind(*p_16_m00_axi_awlen);
        p_16_m00_axi_awlen->set_sv_netview_offsetfromdp(10138976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awsize.bind(*p_16_m00_axi_awsize);
        p_16_m00_axi_awsize->set_sv_netview_offsetfromdp(10139032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_awburst.bind(*p_16_m00_axi_awburst);
        p_16_m00_axi_awburst->set_sv_netview_offsetfromdp(10139088);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awlock.bind(*p_16_m00_axi_awlock);
        p_16_m00_axi_awlock->set_sv_netview_offsetfromdp(10139144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awcache.bind(*p_16_m00_axi_awcache);
        p_16_m00_axi_awcache->set_sv_netview_offsetfromdp(10139200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awprot.bind(*p_16_m00_axi_awprot);
        p_16_m00_axi_awprot->set_sv_netview_offsetfromdp(10139256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awqos.bind(*p_16_m00_axi_awqos);
        p_16_m00_axi_awqos->set_sv_netview_offsetfromdp(10139312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awuser.bind(*p_16_m00_axi_awuser);
        p_16_m00_axi_awuser->set_sv_netview_offsetfromdp(10139368);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awvalid.bind(*p_16_m00_axi_awvalid);
        p_16_m00_axi_awvalid->set_sv_netview_offsetfromdp(10139424);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awready.bind(*p_16_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[17717].first = 1;
        (*_glb_hdl_sc_channel_map)[17717].second.push_front(p_16_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_wdata.bind(*p_16_m00_axi_wdata);
        p_16_m00_axi_wdata->set_sv_netview_offsetfromdp(10139536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_wstrb.bind(*p_16_m00_axi_wstrb);
        p_16_m00_axi_wstrb->set_sv_netview_offsetfromdp(10139592);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wlast.bind(*p_16_m00_axi_wlast);
        p_16_m00_axi_wlast->set_sv_netview_offsetfromdp(10139648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_wuser.bind(*p_16_m00_axi_wuser);
        p_16_m00_axi_wuser->set_sv_netview_offsetfromdp(10139704);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wvalid.bind(*p_16_m00_axi_wvalid);
        p_16_m00_axi_wvalid->set_sv_netview_offsetfromdp(10139760);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wready.bind(*p_16_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[17735].first = 1;
        (*_glb_hdl_sc_channel_map)[17735].second.push_front(p_16_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_bid.bind(*p_16_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[17721].first = 3;
        (*_glb_hdl_sc_channel_map)[17721].second.push_front(p_16_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_bresp.bind(*p_16_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17723].first = 3;
        (*_glb_hdl_sc_channel_map)[17723].second.push_front(p_16_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_buser.bind(*p_16_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[17724].first = 3;
        (*_glb_hdl_sc_channel_map)[17724].second.push_front(p_16_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bvalid.bind(*p_16_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17725].first = 1;
        (*_glb_hdl_sc_channel_map)[17725].second.push_front(p_16_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bready.bind(*p_16_m00_axi_bready);
        p_16_m00_axi_bready->set_sv_netview_offsetfromdp(10140096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_arid.bind(*p_16_m00_axi_arid);
        p_16_m00_axi_arid->set_sv_netview_offsetfromdp(10140152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_araddr.bind(*p_16_m00_axi_araddr);
        p_16_m00_axi_araddr->set_sv_netview_offsetfromdp(10140208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_arlen.bind(*p_16_m00_axi_arlen);
        p_16_m00_axi_arlen->set_sv_netview_offsetfromdp(10140264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arsize.bind(*p_16_m00_axi_arsize);
        p_16_m00_axi_arsize->set_sv_netview_offsetfromdp(10140320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_arburst.bind(*p_16_m00_axi_arburst);
        p_16_m00_axi_arburst->set_sv_netview_offsetfromdp(10140376);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arlock.bind(*p_16_m00_axi_arlock);
        p_16_m00_axi_arlock->set_sv_netview_offsetfromdp(10140432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arcache.bind(*p_16_m00_axi_arcache);
        p_16_m00_axi_arcache->set_sv_netview_offsetfromdp(10140488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arprot.bind(*p_16_m00_axi_arprot);
        p_16_m00_axi_arprot->set_sv_netview_offsetfromdp(10140544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arqos.bind(*p_16_m00_axi_arqos);
        p_16_m00_axi_arqos->set_sv_netview_offsetfromdp(10140600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_aruser.bind(*p_16_m00_axi_aruser);
        p_16_m00_axi_aruser->set_sv_netview_offsetfromdp(10140656);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arvalid.bind(*p_16_m00_axi_arvalid);
        p_16_m00_axi_arvalid->set_sv_netview_offsetfromdp(10140712);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arready.bind(*p_16_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[17705].first = 1;
        (*_glb_hdl_sc_channel_map)[17705].second.push_front(p_16_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_rid.bind(*p_16_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[17727].first = 3;
        (*_glb_hdl_sc_channel_map)[17727].second.push_front(p_16_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m00_axi_rdata.bind(*p_16_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17726].first = 3;
        (*_glb_hdl_sc_channel_map)[17726].second.push_front(p_16_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_rresp.bind(*p_16_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17730].first = 3;
        (*_glb_hdl_sc_channel_map)[17730].second.push_front(p_16_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rlast.bind(*p_16_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17728].first = 1;
        (*_glb_hdl_sc_channel_map)[17728].second.push_front(p_16_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_ruser.bind(*p_16_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17731].first = 3;
        (*_glb_hdl_sc_channel_map)[17731].second.push_front(p_16_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rvalid.bind(*p_16_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17732].first = 1;
        (*_glb_hdl_sc_channel_map)[17732].second.push_front(p_16_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rready.bind(*p_16_m00_axi_rready);
        p_16_m00_axi_rready->set_sv_netview_offsetfromdp(10141160);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aclk.bind(*p_16_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17695].first = 1;
        (*_glb_hdl_sc_channel_map)[17695].second.push_front(p_16_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aresetn.bind(*p_16_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17699].first = 1;
        (*_glb_hdl_sc_channel_map)[17699].second.push_front(p_16_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_awid.bind(*p_16_m02_axi_awid);
        p_16_m02_axi_awid->set_sv_netview_offsetfromdp(10141328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m02_axi_awaddr.bind(*p_16_m02_axi_awaddr);
        p_16_m02_axi_awaddr->set_sv_netview_offsetfromdp(10141384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m02_axi_awlen.bind(*p_16_m02_axi_awlen);
        p_16_m02_axi_awlen->set_sv_netview_offsetfromdp(10141440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m02_axi_awsize.bind(*p_16_m02_axi_awsize);
        p_16_m02_axi_awsize->set_sv_netview_offsetfromdp(10141496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m02_axi_awburst.bind(*p_16_m02_axi_awburst);
        p_16_m02_axi_awburst->set_sv_netview_offsetfromdp(10141552);
        xsim_sc_channel<0, bool > *p_16_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_awlock.bind(*p_16_m02_axi_awlock);
        p_16_m02_axi_awlock->set_sv_netview_offsetfromdp(10141608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m02_axi_awcache.bind(*p_16_m02_axi_awcache);
        p_16_m02_axi_awcache->set_sv_netview_offsetfromdp(10141664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m02_axi_awprot.bind(*p_16_m02_axi_awprot);
        p_16_m02_axi_awprot->set_sv_netview_offsetfromdp(10141720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m02_axi_awqos.bind(*p_16_m02_axi_awqos);
        p_16_m02_axi_awqos->set_sv_netview_offsetfromdp(10141776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_awuser.bind(*p_16_m02_axi_awuser);
        p_16_m02_axi_awuser->set_sv_netview_offsetfromdp(10141832);
        xsim_sc_channel<0, bool > *p_16_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_awvalid.bind(*p_16_m02_axi_awvalid);
        p_16_m02_axi_awvalid->set_sv_netview_offsetfromdp(10141888);
        xsim_sc_channel<0, bool > *p_16_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_awready.bind(*p_16_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[17805].first = 1;
        (*_glb_hdl_sc_channel_map)[17805].second.push_front(p_16_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m02_axi_wdata.bind(*p_16_m02_axi_wdata);
        p_16_m02_axi_wdata->set_sv_netview_offsetfromdp(10142000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m02_axi_wstrb.bind(*p_16_m02_axi_wstrb);
        p_16_m02_axi_wstrb->set_sv_netview_offsetfromdp(10142056);
        xsim_sc_channel<0, bool > *p_16_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_wlast.bind(*p_16_m02_axi_wlast);
        p_16_m02_axi_wlast->set_sv_netview_offsetfromdp(10142112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_wuser.bind(*p_16_m02_axi_wuser);
        p_16_m02_axi_wuser->set_sv_netview_offsetfromdp(10142168);
        xsim_sc_channel<0, bool > *p_16_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_wvalid.bind(*p_16_m02_axi_wvalid);
        p_16_m02_axi_wvalid->set_sv_netview_offsetfromdp(10142224);
        xsim_sc_channel<0, bool > *p_16_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_wready.bind(*p_16_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[17823].first = 1;
        (*_glb_hdl_sc_channel_map)[17823].second.push_front(p_16_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_bid.bind(*p_16_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[17809].first = 3;
        (*_glb_hdl_sc_channel_map)[17809].second.push_front(p_16_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m02_axi_bresp.bind(*p_16_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17811].first = 3;
        (*_glb_hdl_sc_channel_map)[17811].second.push_front(p_16_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_buser.bind(*p_16_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[17812].first = 3;
        (*_glb_hdl_sc_channel_map)[17812].second.push_front(p_16_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_bvalid.bind(*p_16_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17813].first = 1;
        (*_glb_hdl_sc_channel_map)[17813].second.push_front(p_16_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_bready.bind(*p_16_m02_axi_bready);
        p_16_m02_axi_bready->set_sv_netview_offsetfromdp(10142560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_arid.bind(*p_16_m02_axi_arid);
        p_16_m02_axi_arid->set_sv_netview_offsetfromdp(10142616);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m02_axi_araddr.bind(*p_16_m02_axi_araddr);
        p_16_m02_axi_araddr->set_sv_netview_offsetfromdp(10142672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m02_axi_arlen.bind(*p_16_m02_axi_arlen);
        p_16_m02_axi_arlen->set_sv_netview_offsetfromdp(10142728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m02_axi_arsize.bind(*p_16_m02_axi_arsize);
        p_16_m02_axi_arsize->set_sv_netview_offsetfromdp(10142784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m02_axi_arburst.bind(*p_16_m02_axi_arburst);
        p_16_m02_axi_arburst->set_sv_netview_offsetfromdp(10142840);
        xsim_sc_channel<0, bool > *p_16_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_arlock.bind(*p_16_m02_axi_arlock);
        p_16_m02_axi_arlock->set_sv_netview_offsetfromdp(10142896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m02_axi_arcache.bind(*p_16_m02_axi_arcache);
        p_16_m02_axi_arcache->set_sv_netview_offsetfromdp(10142952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m02_axi_arprot.bind(*p_16_m02_axi_arprot);
        p_16_m02_axi_arprot->set_sv_netview_offsetfromdp(10143008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m02_axi_arqos.bind(*p_16_m02_axi_arqos);
        p_16_m02_axi_arqos->set_sv_netview_offsetfromdp(10143064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_aruser.bind(*p_16_m02_axi_aruser);
        p_16_m02_axi_aruser->set_sv_netview_offsetfromdp(10143120);
        xsim_sc_channel<0, bool > *p_16_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_arvalid.bind(*p_16_m02_axi_arvalid);
        p_16_m02_axi_arvalid->set_sv_netview_offsetfromdp(10143176);
        xsim_sc_channel<0, bool > *p_16_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_arready.bind(*p_16_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[17793].first = 1;
        (*_glb_hdl_sc_channel_map)[17793].second.push_front(p_16_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_rid.bind(*p_16_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[17815].first = 3;
        (*_glb_hdl_sc_channel_map)[17815].second.push_front(p_16_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m02_axi_rdata.bind(*p_16_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17814].first = 3;
        (*_glb_hdl_sc_channel_map)[17814].second.push_front(p_16_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m02_axi_rresp.bind(*p_16_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17818].first = 3;
        (*_glb_hdl_sc_channel_map)[17818].second.push_front(p_16_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_rlast.bind(*p_16_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17816].first = 1;
        (*_glb_hdl_sc_channel_map)[17816].second.push_front(p_16_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m02_axi_ruser.bind(*p_16_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17819].first = 3;
        (*_glb_hdl_sc_channel_map)[17819].second.push_front(p_16_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_rvalid.bind(*p_16_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17820].first = 1;
        (*_glb_hdl_sc_channel_map)[17820].second.push_front(p_16_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_rready.bind(*p_16_m02_axi_rready);
        p_16_m02_axi_rready->set_sv_netview_offsetfromdp(10143624);
        xsim_sc_channel<0, bool > *p_16_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_aclk.bind(*p_16_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17783].first = 1;
        (*_glb_hdl_sc_channel_map)[17783].second.push_front(p_16_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m02_axi_aresetn.bind(*p_16_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17787].first = 1;
        (*_glb_hdl_sc_channel_map)[17787].second.push_front(p_16_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_awid.bind(*p_16_m03_axi_awid);
        p_16_m03_axi_awid->set_sv_netview_offsetfromdp(10143792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m03_axi_awaddr.bind(*p_16_m03_axi_awaddr);
        p_16_m03_axi_awaddr->set_sv_netview_offsetfromdp(10143848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m03_axi_awlen.bind(*p_16_m03_axi_awlen);
        p_16_m03_axi_awlen->set_sv_netview_offsetfromdp(10143904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m03_axi_awsize.bind(*p_16_m03_axi_awsize);
        p_16_m03_axi_awsize->set_sv_netview_offsetfromdp(10143960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m03_axi_awburst.bind(*p_16_m03_axi_awburst);
        p_16_m03_axi_awburst->set_sv_netview_offsetfromdp(10144016);
        xsim_sc_channel<0, bool > *p_16_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_awlock.bind(*p_16_m03_axi_awlock);
        p_16_m03_axi_awlock->set_sv_netview_offsetfromdp(10144072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m03_axi_awcache.bind(*p_16_m03_axi_awcache);
        p_16_m03_axi_awcache->set_sv_netview_offsetfromdp(10144128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m03_axi_awprot.bind(*p_16_m03_axi_awprot);
        p_16_m03_axi_awprot->set_sv_netview_offsetfromdp(10144184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m03_axi_awqos.bind(*p_16_m03_axi_awqos);
        p_16_m03_axi_awqos->set_sv_netview_offsetfromdp(10144240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_awuser.bind(*p_16_m03_axi_awuser);
        p_16_m03_axi_awuser->set_sv_netview_offsetfromdp(10144296);
        xsim_sc_channel<0, bool > *p_16_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_awvalid.bind(*p_16_m03_axi_awvalid);
        p_16_m03_axi_awvalid->set_sv_netview_offsetfromdp(10144352);
        xsim_sc_channel<0, bool > *p_16_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_awready.bind(*p_16_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[17849].first = 1;
        (*_glb_hdl_sc_channel_map)[17849].second.push_front(p_16_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m03_axi_wdata.bind(*p_16_m03_axi_wdata);
        p_16_m03_axi_wdata->set_sv_netview_offsetfromdp(10144464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m03_axi_wstrb.bind(*p_16_m03_axi_wstrb);
        p_16_m03_axi_wstrb->set_sv_netview_offsetfromdp(10144520);
        xsim_sc_channel<0, bool > *p_16_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_wlast.bind(*p_16_m03_axi_wlast);
        p_16_m03_axi_wlast->set_sv_netview_offsetfromdp(10144576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_wuser.bind(*p_16_m03_axi_wuser);
        p_16_m03_axi_wuser->set_sv_netview_offsetfromdp(10144632);
        xsim_sc_channel<0, bool > *p_16_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_wvalid.bind(*p_16_m03_axi_wvalid);
        p_16_m03_axi_wvalid->set_sv_netview_offsetfromdp(10144688);
        xsim_sc_channel<0, bool > *p_16_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_wready.bind(*p_16_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[17867].first = 1;
        (*_glb_hdl_sc_channel_map)[17867].second.push_front(p_16_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_bid.bind(*p_16_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[17853].first = 3;
        (*_glb_hdl_sc_channel_map)[17853].second.push_front(p_16_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m03_axi_bresp.bind(*p_16_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17855].first = 3;
        (*_glb_hdl_sc_channel_map)[17855].second.push_front(p_16_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_buser.bind(*p_16_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[17856].first = 3;
        (*_glb_hdl_sc_channel_map)[17856].second.push_front(p_16_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_bvalid.bind(*p_16_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17857].first = 1;
        (*_glb_hdl_sc_channel_map)[17857].second.push_front(p_16_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_bready.bind(*p_16_m03_axi_bready);
        p_16_m03_axi_bready->set_sv_netview_offsetfromdp(10145024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_arid.bind(*p_16_m03_axi_arid);
        p_16_m03_axi_arid->set_sv_netview_offsetfromdp(10145080);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m03_axi_araddr.bind(*p_16_m03_axi_araddr);
        p_16_m03_axi_araddr->set_sv_netview_offsetfromdp(10145136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m03_axi_arlen.bind(*p_16_m03_axi_arlen);
        p_16_m03_axi_arlen->set_sv_netview_offsetfromdp(10145192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m03_axi_arsize.bind(*p_16_m03_axi_arsize);
        p_16_m03_axi_arsize->set_sv_netview_offsetfromdp(10145248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m03_axi_arburst.bind(*p_16_m03_axi_arburst);
        p_16_m03_axi_arburst->set_sv_netview_offsetfromdp(10145304);
        xsim_sc_channel<0, bool > *p_16_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_arlock.bind(*p_16_m03_axi_arlock);
        p_16_m03_axi_arlock->set_sv_netview_offsetfromdp(10145360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m03_axi_arcache.bind(*p_16_m03_axi_arcache);
        p_16_m03_axi_arcache->set_sv_netview_offsetfromdp(10145416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m03_axi_arprot.bind(*p_16_m03_axi_arprot);
        p_16_m03_axi_arprot->set_sv_netview_offsetfromdp(10145472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m03_axi_arqos.bind(*p_16_m03_axi_arqos);
        p_16_m03_axi_arqos->set_sv_netview_offsetfromdp(10145528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_aruser.bind(*p_16_m03_axi_aruser);
        p_16_m03_axi_aruser->set_sv_netview_offsetfromdp(10145584);
        xsim_sc_channel<0, bool > *p_16_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_arvalid.bind(*p_16_m03_axi_arvalid);
        p_16_m03_axi_arvalid->set_sv_netview_offsetfromdp(10145640);
        xsim_sc_channel<0, bool > *p_16_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_arready.bind(*p_16_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[17837].first = 1;
        (*_glb_hdl_sc_channel_map)[17837].second.push_front(p_16_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_rid.bind(*p_16_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[17859].first = 3;
        (*_glb_hdl_sc_channel_map)[17859].second.push_front(p_16_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m03_axi_rdata.bind(*p_16_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17858].first = 3;
        (*_glb_hdl_sc_channel_map)[17858].second.push_front(p_16_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m03_axi_rresp.bind(*p_16_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17862].first = 3;
        (*_glb_hdl_sc_channel_map)[17862].second.push_front(p_16_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_rlast.bind(*p_16_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17860].first = 1;
        (*_glb_hdl_sc_channel_map)[17860].second.push_front(p_16_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m03_axi_ruser.bind(*p_16_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17863].first = 3;
        (*_glb_hdl_sc_channel_map)[17863].second.push_front(p_16_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_rvalid.bind(*p_16_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17864].first = 1;
        (*_glb_hdl_sc_channel_map)[17864].second.push_front(p_16_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_rready.bind(*p_16_m03_axi_rready);
        p_16_m03_axi_rready->set_sv_netview_offsetfromdp(10146088);
        xsim_sc_channel<0, bool > *p_16_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_aclk.bind(*p_16_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17827].first = 1;
        (*_glb_hdl_sc_channel_map)[17827].second.push_front(p_16_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m03_axi_aresetn.bind(*p_16_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17831].first = 1;
        (*_glb_hdl_sc_channel_map)[17831].second.push_front(p_16_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_awid.bind(*p_16_m04_axi_awid);
        p_16_m04_axi_awid->set_sv_netview_offsetfromdp(10146256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m04_axi_awaddr.bind(*p_16_m04_axi_awaddr);
        p_16_m04_axi_awaddr->set_sv_netview_offsetfromdp(10146312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m04_axi_awlen.bind(*p_16_m04_axi_awlen);
        p_16_m04_axi_awlen->set_sv_netview_offsetfromdp(10146368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m04_axi_awsize.bind(*p_16_m04_axi_awsize);
        p_16_m04_axi_awsize->set_sv_netview_offsetfromdp(10146424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m04_axi_awburst.bind(*p_16_m04_axi_awburst);
        p_16_m04_axi_awburst->set_sv_netview_offsetfromdp(10146480);
        xsim_sc_channel<0, bool > *p_16_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_awlock.bind(*p_16_m04_axi_awlock);
        p_16_m04_axi_awlock->set_sv_netview_offsetfromdp(10146536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m04_axi_awcache.bind(*p_16_m04_axi_awcache);
        p_16_m04_axi_awcache->set_sv_netview_offsetfromdp(10146592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m04_axi_awprot.bind(*p_16_m04_axi_awprot);
        p_16_m04_axi_awprot->set_sv_netview_offsetfromdp(10146648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m04_axi_awqos.bind(*p_16_m04_axi_awqos);
        p_16_m04_axi_awqos->set_sv_netview_offsetfromdp(10146704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_awuser.bind(*p_16_m04_axi_awuser);
        p_16_m04_axi_awuser->set_sv_netview_offsetfromdp(10146760);
        xsim_sc_channel<0, bool > *p_16_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_awvalid.bind(*p_16_m04_axi_awvalid);
        p_16_m04_axi_awvalid->set_sv_netview_offsetfromdp(10146816);
        xsim_sc_channel<0, bool > *p_16_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_awready.bind(*p_16_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[17884].first = 1;
        (*_glb_hdl_sc_channel_map)[17884].second.push_front(p_16_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m04_axi_wdata.bind(*p_16_m04_axi_wdata);
        p_16_m04_axi_wdata->set_sv_netview_offsetfromdp(10146928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m04_axi_wstrb.bind(*p_16_m04_axi_wstrb);
        p_16_m04_axi_wstrb->set_sv_netview_offsetfromdp(10146984);
        xsim_sc_channel<0, bool > *p_16_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_wlast.bind(*p_16_m04_axi_wlast);
        p_16_m04_axi_wlast->set_sv_netview_offsetfromdp(10147040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_wuser.bind(*p_16_m04_axi_wuser);
        p_16_m04_axi_wuser->set_sv_netview_offsetfromdp(10147096);
        xsim_sc_channel<0, bool > *p_16_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_wvalid.bind(*p_16_m04_axi_wvalid);
        p_16_m04_axi_wvalid->set_sv_netview_offsetfromdp(10147152);
        xsim_sc_channel<0, bool > *p_16_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_wready.bind(*p_16_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[17899].first = 1;
        (*_glb_hdl_sc_channel_map)[17899].second.push_front(p_16_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_bid.bind(*p_16_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[17887].first = 3;
        (*_glb_hdl_sc_channel_map)[17887].second.push_front(p_16_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m04_axi_bresp.bind(*p_16_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17889].first = 3;
        (*_glb_hdl_sc_channel_map)[17889].second.push_front(p_16_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_buser.bind(*p_16_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_16_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_bvalid.bind(*p_16_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17890].first = 1;
        (*_glb_hdl_sc_channel_map)[17890].second.push_front(p_16_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_bready.bind(*p_16_m04_axi_bready);
        p_16_m04_axi_bready->set_sv_netview_offsetfromdp(10147488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_arid.bind(*p_16_m04_axi_arid);
        p_16_m04_axi_arid->set_sv_netview_offsetfromdp(10147544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m04_axi_araddr.bind(*p_16_m04_axi_araddr);
        p_16_m04_axi_araddr->set_sv_netview_offsetfromdp(10147600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m04_axi_arlen.bind(*p_16_m04_axi_arlen);
        p_16_m04_axi_arlen->set_sv_netview_offsetfromdp(10147656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m04_axi_arsize.bind(*p_16_m04_axi_arsize);
        p_16_m04_axi_arsize->set_sv_netview_offsetfromdp(10147712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m04_axi_arburst.bind(*p_16_m04_axi_arburst);
        p_16_m04_axi_arburst->set_sv_netview_offsetfromdp(10147768);
        xsim_sc_channel<0, bool > *p_16_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_arlock.bind(*p_16_m04_axi_arlock);
        p_16_m04_axi_arlock->set_sv_netview_offsetfromdp(10147824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m04_axi_arcache.bind(*p_16_m04_axi_arcache);
        p_16_m04_axi_arcache->set_sv_netview_offsetfromdp(10147880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m04_axi_arprot.bind(*p_16_m04_axi_arprot);
        p_16_m04_axi_arprot->set_sv_netview_offsetfromdp(10147936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m04_axi_arqos.bind(*p_16_m04_axi_arqos);
        p_16_m04_axi_arqos->set_sv_netview_offsetfromdp(10147992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_aruser.bind(*p_16_m04_axi_aruser);
        p_16_m04_axi_aruser->set_sv_netview_offsetfromdp(10148048);
        xsim_sc_channel<0, bool > *p_16_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_arvalid.bind(*p_16_m04_axi_arvalid);
        p_16_m04_axi_arvalid->set_sv_netview_offsetfromdp(10148104);
        xsim_sc_channel<0, bool > *p_16_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_arready.bind(*p_16_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[17877].first = 1;
        (*_glb_hdl_sc_channel_map)[17877].second.push_front(p_16_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_rid.bind(*p_16_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[17892].first = 3;
        (*_glb_hdl_sc_channel_map)[17892].second.push_front(p_16_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m04_axi_rdata.bind(*p_16_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17891].first = 3;
        (*_glb_hdl_sc_channel_map)[17891].second.push_front(p_16_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m04_axi_rresp.bind(*p_16_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17895].first = 3;
        (*_glb_hdl_sc_channel_map)[17895].second.push_front(p_16_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_rlast.bind(*p_16_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17893].first = 1;
        (*_glb_hdl_sc_channel_map)[17893].second.push_front(p_16_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m04_axi_ruser.bind(*p_16_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_16_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_rvalid.bind(*p_16_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17896].first = 1;
        (*_glb_hdl_sc_channel_map)[17896].second.push_front(p_16_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_rready.bind(*p_16_m04_axi_rready);
        p_16_m04_axi_rready->set_sv_netview_offsetfromdp(10148552);
        xsim_sc_channel<0, bool > *p_16_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_aclk.bind(*p_16_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17871].first = 1;
        (*_glb_hdl_sc_channel_map)[17871].second.push_front(p_16_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m04_axi_aresetn.bind(*p_16_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17874].first = 1;
        (*_glb_hdl_sc_channel_map)[17874].second.push_front(p_16_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_awid.bind(*p_16_m01_axi_awid);
        p_16_m01_axi_awid->set_sv_netview_offsetfromdp(10148720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m01_axi_awaddr.bind(*p_16_m01_axi_awaddr);
        p_16_m01_axi_awaddr->set_sv_netview_offsetfromdp(10148776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m01_axi_awlen.bind(*p_16_m01_axi_awlen);
        p_16_m01_axi_awlen->set_sv_netview_offsetfromdp(10148832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m01_axi_awsize.bind(*p_16_m01_axi_awsize);
        p_16_m01_axi_awsize->set_sv_netview_offsetfromdp(10148888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m01_axi_awburst.bind(*p_16_m01_axi_awburst);
        p_16_m01_axi_awburst->set_sv_netview_offsetfromdp(10148944);
        xsim_sc_channel<0, bool > *p_16_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_awlock.bind(*p_16_m01_axi_awlock);
        p_16_m01_axi_awlock->set_sv_netview_offsetfromdp(10149000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m01_axi_awcache.bind(*p_16_m01_axi_awcache);
        p_16_m01_axi_awcache->set_sv_netview_offsetfromdp(10149056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m01_axi_awprot.bind(*p_16_m01_axi_awprot);
        p_16_m01_axi_awprot->set_sv_netview_offsetfromdp(10149112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m01_axi_awqos.bind(*p_16_m01_axi_awqos);
        p_16_m01_axi_awqos->set_sv_netview_offsetfromdp(10149168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_awuser.bind(*p_16_m01_axi_awuser);
        p_16_m01_axi_awuser->set_sv_netview_offsetfromdp(10149224);
        xsim_sc_channel<0, bool > *p_16_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_awvalid.bind(*p_16_m01_axi_awvalid);
        p_16_m01_axi_awvalid->set_sv_netview_offsetfromdp(10149280);
        xsim_sc_channel<0, bool > *p_16_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_awready.bind(*p_16_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[17761].first = 1;
        (*_glb_hdl_sc_channel_map)[17761].second.push_front(p_16_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m01_axi_wdata.bind(*p_16_m01_axi_wdata);
        p_16_m01_axi_wdata->set_sv_netview_offsetfromdp(10149392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m01_axi_wstrb.bind(*p_16_m01_axi_wstrb);
        p_16_m01_axi_wstrb->set_sv_netview_offsetfromdp(10149448);
        xsim_sc_channel<0, bool > *p_16_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_wlast.bind(*p_16_m01_axi_wlast);
        p_16_m01_axi_wlast->set_sv_netview_offsetfromdp(10149504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_wuser.bind(*p_16_m01_axi_wuser);
        p_16_m01_axi_wuser->set_sv_netview_offsetfromdp(10149560);
        xsim_sc_channel<0, bool > *p_16_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_wvalid.bind(*p_16_m01_axi_wvalid);
        p_16_m01_axi_wvalid->set_sv_netview_offsetfromdp(10149616);
        xsim_sc_channel<0, bool > *p_16_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_wready.bind(*p_16_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[17779].first = 1;
        (*_glb_hdl_sc_channel_map)[17779].second.push_front(p_16_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_bid.bind(*p_16_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[17765].first = 3;
        (*_glb_hdl_sc_channel_map)[17765].second.push_front(p_16_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m01_axi_bresp.bind(*p_16_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17767].first = 3;
        (*_glb_hdl_sc_channel_map)[17767].second.push_front(p_16_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_buser.bind(*p_16_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[17768].first = 3;
        (*_glb_hdl_sc_channel_map)[17768].second.push_front(p_16_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_bvalid.bind(*p_16_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17769].first = 1;
        (*_glb_hdl_sc_channel_map)[17769].second.push_front(p_16_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_bready.bind(*p_16_m01_axi_bready);
        p_16_m01_axi_bready->set_sv_netview_offsetfromdp(10149952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_arid.bind(*p_16_m01_axi_arid);
        p_16_m01_axi_arid->set_sv_netview_offsetfromdp(10150008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m01_axi_araddr.bind(*p_16_m01_axi_araddr);
        p_16_m01_axi_araddr->set_sv_netview_offsetfromdp(10150064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m01_axi_arlen.bind(*p_16_m01_axi_arlen);
        p_16_m01_axi_arlen->set_sv_netview_offsetfromdp(10150120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m01_axi_arsize.bind(*p_16_m01_axi_arsize);
        p_16_m01_axi_arsize->set_sv_netview_offsetfromdp(10150176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m01_axi_arburst.bind(*p_16_m01_axi_arburst);
        p_16_m01_axi_arburst->set_sv_netview_offsetfromdp(10150232);
        xsim_sc_channel<0, bool > *p_16_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_arlock.bind(*p_16_m01_axi_arlock);
        p_16_m01_axi_arlock->set_sv_netview_offsetfromdp(10150288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m01_axi_arcache.bind(*p_16_m01_axi_arcache);
        p_16_m01_axi_arcache->set_sv_netview_offsetfromdp(10150344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m01_axi_arprot.bind(*p_16_m01_axi_arprot);
        p_16_m01_axi_arprot->set_sv_netview_offsetfromdp(10150400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m01_axi_arqos.bind(*p_16_m01_axi_arqos);
        p_16_m01_axi_arqos->set_sv_netview_offsetfromdp(10150456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_aruser.bind(*p_16_m01_axi_aruser);
        p_16_m01_axi_aruser->set_sv_netview_offsetfromdp(10150512);
        xsim_sc_channel<0, bool > *p_16_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_arvalid.bind(*p_16_m01_axi_arvalid);
        p_16_m01_axi_arvalid->set_sv_netview_offsetfromdp(10150568);
        xsim_sc_channel<0, bool > *p_16_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_arready.bind(*p_16_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[17749].first = 1;
        (*_glb_hdl_sc_channel_map)[17749].second.push_front(p_16_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_rid.bind(*p_16_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[17771].first = 3;
        (*_glb_hdl_sc_channel_map)[17771].second.push_front(p_16_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m01_axi_rdata.bind(*p_16_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17770].first = 3;
        (*_glb_hdl_sc_channel_map)[17770].second.push_front(p_16_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m01_axi_rresp.bind(*p_16_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17774].first = 3;
        (*_glb_hdl_sc_channel_map)[17774].second.push_front(p_16_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_rlast.bind(*p_16_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17772].first = 1;
        (*_glb_hdl_sc_channel_map)[17772].second.push_front(p_16_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m01_axi_ruser.bind(*p_16_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17775].first = 3;
        (*_glb_hdl_sc_channel_map)[17775].second.push_front(p_16_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_rvalid.bind(*p_16_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17776].first = 1;
        (*_glb_hdl_sc_channel_map)[17776].second.push_front(p_16_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_rready.bind(*p_16_m01_axi_rready);
        p_16_m01_axi_rready->set_sv_netview_offsetfromdp(10151016);
        xsim_sc_channel<0, bool > *p_16_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_aclk.bind(*p_16_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17739].first = 1;
        (*_glb_hdl_sc_channel_map)[17739].second.push_front(p_16_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m01_axi_aresetn.bind(*p_16_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17743].first = 1;
        (*_glb_hdl_sc_channel_map)[17743].second.push_front(p_16_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s03_axi_awid.bind(*p_16_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[18042].first = 3;
        (*_glb_hdl_sc_channel_map)[18042].second.push_front(p_16_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s03_axi_awaddr.bind(*p_16_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18039].first = 3;
        (*_glb_hdl_sc_channel_map)[18039].second.push_front(p_16_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s03_axi_awlen.bind(*p_16_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[18043].first = 3;
        (*_glb_hdl_sc_channel_map)[18043].second.push_front(p_16_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s03_axi_awsize.bind(*p_16_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[18049].first = 3;
        (*_glb_hdl_sc_channel_map)[18049].second.push_front(p_16_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s03_axi_awburst.bind(*p_16_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[18040].first = 3;
        (*_glb_hdl_sc_channel_map)[18040].second.push_front(p_16_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_awlock.bind(*p_16_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18044].first = 1;
        (*_glb_hdl_sc_channel_map)[18044].second.push_front(p_16_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_awcache.bind(*p_16_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18041].first = 3;
        (*_glb_hdl_sc_channel_map)[18041].second.push_front(p_16_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s03_axi_awprot.bind(*p_16_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[18045].first = 3;
        (*_glb_hdl_sc_channel_map)[18045].second.push_front(p_16_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_awregion.bind(*p_16_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18048].first = 3;
        (*_glb_hdl_sc_channel_map)[18048].second.push_front(p_16_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_awqos.bind(*p_16_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18046].first = 3;
        (*_glb_hdl_sc_channel_map)[18046].second.push_front(p_16_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_awvalid.bind(*p_16_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[18050].first = 1;
        (*_glb_hdl_sc_channel_map)[18050].second.push_front(p_16_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_awready.bind(*p_16_s03_axi_awready);
        p_16_s03_axi_awready->set_sv_netview_offsetfromdp(10151800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s03_axi_wdata.bind(*p_16_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[18061].first = 3;
        (*_glb_hdl_sc_channel_map)[18061].second.push_front(p_16_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s03_axi_wstrb.bind(*p_16_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[18064].first = 3;
        (*_glb_hdl_sc_channel_map)[18064].second.push_front(p_16_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_wlast.bind(*p_16_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[18062].first = 1;
        (*_glb_hdl_sc_channel_map)[18062].second.push_front(p_16_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_wvalid.bind(*p_16_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[18065].first = 1;
        (*_glb_hdl_sc_channel_map)[18065].second.push_front(p_16_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_wready.bind(*p_16_s03_axi_wready);
        p_16_s03_axi_wready->set_sv_netview_offsetfromdp(10152080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s03_axi_bid.bind(*p_16_s03_axi_bid);
        p_16_s03_axi_bid->set_sv_netview_offsetfromdp(10152136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s03_axi_bresp.bind(*p_16_s03_axi_bresp);
        p_16_s03_axi_bresp->set_sv_netview_offsetfromdp(10152192);
        xsim_sc_channel<0, bool > *p_16_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_bvalid.bind(*p_16_s03_axi_bvalid);
        p_16_s03_axi_bvalid->set_sv_netview_offsetfromdp(10152248);
        xsim_sc_channel<0, bool > *p_16_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_bready.bind(*p_16_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[18052].first = 1;
        (*_glb_hdl_sc_channel_map)[18052].second.push_front(p_16_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s03_axi_arid.bind(*p_16_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[18030].first = 3;
        (*_glb_hdl_sc_channel_map)[18030].second.push_front(p_16_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s03_axi_araddr.bind(*p_16_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18026].first = 3;
        (*_glb_hdl_sc_channel_map)[18026].second.push_front(p_16_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s03_axi_arlen.bind(*p_16_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[18031].first = 3;
        (*_glb_hdl_sc_channel_map)[18031].second.push_front(p_16_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s03_axi_arsize.bind(*p_16_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[18037].first = 3;
        (*_glb_hdl_sc_channel_map)[18037].second.push_front(p_16_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s03_axi_arburst.bind(*p_16_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[18027].first = 3;
        (*_glb_hdl_sc_channel_map)[18027].second.push_front(p_16_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_arlock.bind(*p_16_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18032].first = 1;
        (*_glb_hdl_sc_channel_map)[18032].second.push_front(p_16_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_arcache.bind(*p_16_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18028].first = 3;
        (*_glb_hdl_sc_channel_map)[18028].second.push_front(p_16_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s03_axi_arprot.bind(*p_16_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[18033].first = 3;
        (*_glb_hdl_sc_channel_map)[18033].second.push_front(p_16_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_arregion.bind(*p_16_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18036].first = 3;
        (*_glb_hdl_sc_channel_map)[18036].second.push_front(p_16_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s03_axi_arqos.bind(*p_16_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18034].first = 3;
        (*_glb_hdl_sc_channel_map)[18034].second.push_front(p_16_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_arvalid.bind(*p_16_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[18038].first = 1;
        (*_glb_hdl_sc_channel_map)[18038].second.push_front(p_16_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_arready.bind(*p_16_s03_axi_arready);
        p_16_s03_axi_arready->set_sv_netview_offsetfromdp(10152976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s03_axi_rid.bind(*p_16_s03_axi_rid);
        p_16_s03_axi_rid->set_sv_netview_offsetfromdp(10153032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s03_axi_rdata.bind(*p_16_s03_axi_rdata);
        p_16_s03_axi_rdata->set_sv_netview_offsetfromdp(10153088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s03_axi_rresp.bind(*p_16_s03_axi_rresp);
        p_16_s03_axi_rresp->set_sv_netview_offsetfromdp(10153144);
        xsim_sc_channel<0, bool > *p_16_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_rlast.bind(*p_16_s03_axi_rlast);
        p_16_s03_axi_rlast->set_sv_netview_offsetfromdp(10153200);
        xsim_sc_channel<0, bool > *p_16_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_rvalid.bind(*p_16_s03_axi_rvalid);
        p_16_s03_axi_rvalid->set_sv_netview_offsetfromdp(10153256);
        xsim_sc_channel<0, bool > *p_16_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_rready.bind(*p_16_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[18058].first = 1;
        (*_glb_hdl_sc_channel_map)[18058].second.push_front(p_16_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_aclk.bind(*p_16_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[18025].first = 1;
        (*_glb_hdl_sc_channel_map)[18025].second.push_front(p_16_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s03_axi_aresetn.bind(*p_16_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[18029].first = 1;
        (*_glb_hdl_sc_channel_map)[18029].second.push_front(p_16_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s01_axi_awid.bind(*p_16_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[17960].first = 3;
        (*_glb_hdl_sc_channel_map)[17960].second.push_front(p_16_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s01_axi_awaddr.bind(*p_16_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17957].first = 3;
        (*_glb_hdl_sc_channel_map)[17957].second.push_front(p_16_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s01_axi_awlen.bind(*p_16_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17961].first = 3;
        (*_glb_hdl_sc_channel_map)[17961].second.push_front(p_16_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s01_axi_awsize.bind(*p_16_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17967].first = 3;
        (*_glb_hdl_sc_channel_map)[17967].second.push_front(p_16_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s01_axi_awburst.bind(*p_16_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17958].first = 3;
        (*_glb_hdl_sc_channel_map)[17958].second.push_front(p_16_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_awlock.bind(*p_16_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17962].first = 1;
        (*_glb_hdl_sc_channel_map)[17962].second.push_front(p_16_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_awcache.bind(*p_16_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17959].first = 3;
        (*_glb_hdl_sc_channel_map)[17959].second.push_front(p_16_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s01_axi_awprot.bind(*p_16_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17963].first = 3;
        (*_glb_hdl_sc_channel_map)[17963].second.push_front(p_16_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_awregion.bind(*p_16_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17966].first = 3;
        (*_glb_hdl_sc_channel_map)[17966].second.push_front(p_16_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_awqos.bind(*p_16_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17964].first = 3;
        (*_glb_hdl_sc_channel_map)[17964].second.push_front(p_16_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_awvalid.bind(*p_16_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17968].first = 1;
        (*_glb_hdl_sc_channel_map)[17968].second.push_front(p_16_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_awready.bind(*p_16_s01_axi_awready);
        p_16_s01_axi_awready->set_sv_netview_offsetfromdp(10154096);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s01_axi_wdata.bind(*p_16_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17979].first = 3;
        (*_glb_hdl_sc_channel_map)[17979].second.push_front(p_16_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s01_axi_wstrb.bind(*p_16_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17982].first = 3;
        (*_glb_hdl_sc_channel_map)[17982].second.push_front(p_16_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_wlast.bind(*p_16_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17980].first = 1;
        (*_glb_hdl_sc_channel_map)[17980].second.push_front(p_16_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_wvalid.bind(*p_16_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17983].first = 1;
        (*_glb_hdl_sc_channel_map)[17983].second.push_front(p_16_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_wready.bind(*p_16_s01_axi_wready);
        p_16_s01_axi_wready->set_sv_netview_offsetfromdp(10154376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s01_axi_bid.bind(*p_16_s01_axi_bid);
        p_16_s01_axi_bid->set_sv_netview_offsetfromdp(10154432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s01_axi_bresp.bind(*p_16_s01_axi_bresp);
        p_16_s01_axi_bresp->set_sv_netview_offsetfromdp(10154488);
        xsim_sc_channel<0, bool > *p_16_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_bvalid.bind(*p_16_s01_axi_bvalid);
        p_16_s01_axi_bvalid->set_sv_netview_offsetfromdp(10154544);
        xsim_sc_channel<0, bool > *p_16_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_bready.bind(*p_16_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[17970].first = 1;
        (*_glb_hdl_sc_channel_map)[17970].second.push_front(p_16_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s01_axi_arid.bind(*p_16_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[17948].first = 3;
        (*_glb_hdl_sc_channel_map)[17948].second.push_front(p_16_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s01_axi_araddr.bind(*p_16_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17944].first = 3;
        (*_glb_hdl_sc_channel_map)[17944].second.push_front(p_16_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s01_axi_arlen.bind(*p_16_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17949].first = 3;
        (*_glb_hdl_sc_channel_map)[17949].second.push_front(p_16_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s01_axi_arsize.bind(*p_16_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17955].first = 3;
        (*_glb_hdl_sc_channel_map)[17955].second.push_front(p_16_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s01_axi_arburst.bind(*p_16_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17945].first = 3;
        (*_glb_hdl_sc_channel_map)[17945].second.push_front(p_16_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_arlock.bind(*p_16_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17950].first = 1;
        (*_glb_hdl_sc_channel_map)[17950].second.push_front(p_16_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_arcache.bind(*p_16_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17946].first = 3;
        (*_glb_hdl_sc_channel_map)[17946].second.push_front(p_16_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s01_axi_arprot.bind(*p_16_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17951].first = 3;
        (*_glb_hdl_sc_channel_map)[17951].second.push_front(p_16_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_arregion.bind(*p_16_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17954].first = 3;
        (*_glb_hdl_sc_channel_map)[17954].second.push_front(p_16_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s01_axi_arqos.bind(*p_16_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17952].first = 3;
        (*_glb_hdl_sc_channel_map)[17952].second.push_front(p_16_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_arvalid.bind(*p_16_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17956].first = 1;
        (*_glb_hdl_sc_channel_map)[17956].second.push_front(p_16_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_arready.bind(*p_16_s01_axi_arready);
        p_16_s01_axi_arready->set_sv_netview_offsetfromdp(10155272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s01_axi_rid.bind(*p_16_s01_axi_rid);
        p_16_s01_axi_rid->set_sv_netview_offsetfromdp(10155328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s01_axi_rdata.bind(*p_16_s01_axi_rdata);
        p_16_s01_axi_rdata->set_sv_netview_offsetfromdp(10155384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s01_axi_rresp.bind(*p_16_s01_axi_rresp);
        p_16_s01_axi_rresp->set_sv_netview_offsetfromdp(10155440);
        xsim_sc_channel<0, bool > *p_16_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_rlast.bind(*p_16_s01_axi_rlast);
        p_16_s01_axi_rlast->set_sv_netview_offsetfromdp(10155496);
        xsim_sc_channel<0, bool > *p_16_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_rvalid.bind(*p_16_s01_axi_rvalid);
        p_16_s01_axi_rvalid->set_sv_netview_offsetfromdp(10155552);
        xsim_sc_channel<0, bool > *p_16_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_rready.bind(*p_16_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[17976].first = 1;
        (*_glb_hdl_sc_channel_map)[17976].second.push_front(p_16_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_aclk.bind(*p_16_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17943].first = 1;
        (*_glb_hdl_sc_channel_map)[17943].second.push_front(p_16_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s01_axi_aresetn.bind(*p_16_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17947].first = 1;
        (*_glb_hdl_sc_channel_map)[17947].second.push_front(p_16_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s02_axi_awid.bind(*p_16_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[18001].first = 3;
        (*_glb_hdl_sc_channel_map)[18001].second.push_front(p_16_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s02_axi_awaddr.bind(*p_16_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17998].first = 3;
        (*_glb_hdl_sc_channel_map)[17998].second.push_front(p_16_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s02_axi_awlen.bind(*p_16_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[18002].first = 3;
        (*_glb_hdl_sc_channel_map)[18002].second.push_front(p_16_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s02_axi_awsize.bind(*p_16_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[18008].first = 3;
        (*_glb_hdl_sc_channel_map)[18008].second.push_front(p_16_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s02_axi_awburst.bind(*p_16_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17999].first = 3;
        (*_glb_hdl_sc_channel_map)[17999].second.push_front(p_16_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_awlock.bind(*p_16_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18003].first = 1;
        (*_glb_hdl_sc_channel_map)[18003].second.push_front(p_16_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_awcache.bind(*p_16_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18000].first = 3;
        (*_glb_hdl_sc_channel_map)[18000].second.push_front(p_16_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s02_axi_awprot.bind(*p_16_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[18004].first = 3;
        (*_glb_hdl_sc_channel_map)[18004].second.push_front(p_16_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_awregion.bind(*p_16_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18007].first = 3;
        (*_glb_hdl_sc_channel_map)[18007].second.push_front(p_16_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_awqos.bind(*p_16_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18005].first = 3;
        (*_glb_hdl_sc_channel_map)[18005].second.push_front(p_16_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_awvalid.bind(*p_16_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[18009].first = 1;
        (*_glb_hdl_sc_channel_map)[18009].second.push_front(p_16_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_awready.bind(*p_16_s02_axi_awready);
        p_16_s02_axi_awready->set_sv_netview_offsetfromdp(10156392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s02_axi_wdata.bind(*p_16_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[18020].first = 3;
        (*_glb_hdl_sc_channel_map)[18020].second.push_front(p_16_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s02_axi_wstrb.bind(*p_16_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[18023].first = 3;
        (*_glb_hdl_sc_channel_map)[18023].second.push_front(p_16_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_wlast.bind(*p_16_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[18021].first = 1;
        (*_glb_hdl_sc_channel_map)[18021].second.push_front(p_16_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_wvalid.bind(*p_16_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[18024].first = 1;
        (*_glb_hdl_sc_channel_map)[18024].second.push_front(p_16_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_wready.bind(*p_16_s02_axi_wready);
        p_16_s02_axi_wready->set_sv_netview_offsetfromdp(10156672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s02_axi_bid.bind(*p_16_s02_axi_bid);
        p_16_s02_axi_bid->set_sv_netview_offsetfromdp(10156728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s02_axi_bresp.bind(*p_16_s02_axi_bresp);
        p_16_s02_axi_bresp->set_sv_netview_offsetfromdp(10156784);
        xsim_sc_channel<0, bool > *p_16_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_bvalid.bind(*p_16_s02_axi_bvalid);
        p_16_s02_axi_bvalid->set_sv_netview_offsetfromdp(10156840);
        xsim_sc_channel<0, bool > *p_16_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_bready.bind(*p_16_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[18011].first = 1;
        (*_glb_hdl_sc_channel_map)[18011].second.push_front(p_16_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s02_axi_arid.bind(*p_16_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[17989].first = 3;
        (*_glb_hdl_sc_channel_map)[17989].second.push_front(p_16_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s02_axi_araddr.bind(*p_16_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17985].first = 3;
        (*_glb_hdl_sc_channel_map)[17985].second.push_front(p_16_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s02_axi_arlen.bind(*p_16_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17990].first = 3;
        (*_glb_hdl_sc_channel_map)[17990].second.push_front(p_16_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s02_axi_arsize.bind(*p_16_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17996].first = 3;
        (*_glb_hdl_sc_channel_map)[17996].second.push_front(p_16_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s02_axi_arburst.bind(*p_16_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17986].first = 3;
        (*_glb_hdl_sc_channel_map)[17986].second.push_front(p_16_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_arlock.bind(*p_16_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17991].first = 1;
        (*_glb_hdl_sc_channel_map)[17991].second.push_front(p_16_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_arcache.bind(*p_16_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17987].first = 3;
        (*_glb_hdl_sc_channel_map)[17987].second.push_front(p_16_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s02_axi_arprot.bind(*p_16_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17992].first = 3;
        (*_glb_hdl_sc_channel_map)[17992].second.push_front(p_16_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_arregion.bind(*p_16_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17995].first = 3;
        (*_glb_hdl_sc_channel_map)[17995].second.push_front(p_16_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s02_axi_arqos.bind(*p_16_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17993].first = 3;
        (*_glb_hdl_sc_channel_map)[17993].second.push_front(p_16_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_arvalid.bind(*p_16_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17997].first = 1;
        (*_glb_hdl_sc_channel_map)[17997].second.push_front(p_16_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_arready.bind(*p_16_s02_axi_arready);
        p_16_s02_axi_arready->set_sv_netview_offsetfromdp(10157568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s02_axi_rid.bind(*p_16_s02_axi_rid);
        p_16_s02_axi_rid->set_sv_netview_offsetfromdp(10157624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s02_axi_rdata.bind(*p_16_s02_axi_rdata);
        p_16_s02_axi_rdata->set_sv_netview_offsetfromdp(10157680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s02_axi_rresp.bind(*p_16_s02_axi_rresp);
        p_16_s02_axi_rresp->set_sv_netview_offsetfromdp(10157736);
        xsim_sc_channel<0, bool > *p_16_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_rlast.bind(*p_16_s02_axi_rlast);
        p_16_s02_axi_rlast->set_sv_netview_offsetfromdp(10157792);
        xsim_sc_channel<0, bool > *p_16_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_rvalid.bind(*p_16_s02_axi_rvalid);
        p_16_s02_axi_rvalid->set_sv_netview_offsetfromdp(10157848);
        xsim_sc_channel<0, bool > *p_16_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_rready.bind(*p_16_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[18017].first = 1;
        (*_glb_hdl_sc_channel_map)[18017].second.push_front(p_16_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_aclk.bind(*p_16_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17984].first = 1;
        (*_glb_hdl_sc_channel_map)[17984].second.push_front(p_16_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s02_axi_aresetn.bind(*p_16_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17988].first = 1;
        (*_glb_hdl_sc_channel_map)[17988].second.push_front(p_16_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s04_axi_awid.bind(*p_16_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[18083].first = 3;
        (*_glb_hdl_sc_channel_map)[18083].second.push_front(p_16_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s04_axi_awaddr.bind(*p_16_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18080].first = 3;
        (*_glb_hdl_sc_channel_map)[18080].second.push_front(p_16_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s04_axi_awlen.bind(*p_16_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[18084].first = 3;
        (*_glb_hdl_sc_channel_map)[18084].second.push_front(p_16_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s04_axi_awsize.bind(*p_16_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[18090].first = 3;
        (*_glb_hdl_sc_channel_map)[18090].second.push_front(p_16_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s04_axi_awburst.bind(*p_16_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[18081].first = 3;
        (*_glb_hdl_sc_channel_map)[18081].second.push_front(p_16_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_awlock.bind(*p_16_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18085].first = 1;
        (*_glb_hdl_sc_channel_map)[18085].second.push_front(p_16_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_awcache.bind(*p_16_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18082].first = 3;
        (*_glb_hdl_sc_channel_map)[18082].second.push_front(p_16_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s04_axi_awprot.bind(*p_16_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[18086].first = 3;
        (*_glb_hdl_sc_channel_map)[18086].second.push_front(p_16_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_awregion.bind(*p_16_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18089].first = 3;
        (*_glb_hdl_sc_channel_map)[18089].second.push_front(p_16_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_awqos.bind(*p_16_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18087].first = 3;
        (*_glb_hdl_sc_channel_map)[18087].second.push_front(p_16_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_awvalid.bind(*p_16_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[18091].first = 1;
        (*_glb_hdl_sc_channel_map)[18091].second.push_front(p_16_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_awready.bind(*p_16_s04_axi_awready);
        p_16_s04_axi_awready->set_sv_netview_offsetfromdp(10158688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s04_axi_wdata.bind(*p_16_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[18102].first = 3;
        (*_glb_hdl_sc_channel_map)[18102].second.push_front(p_16_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s04_axi_wstrb.bind(*p_16_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[18105].first = 3;
        (*_glb_hdl_sc_channel_map)[18105].second.push_front(p_16_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_wlast.bind(*p_16_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[18103].first = 1;
        (*_glb_hdl_sc_channel_map)[18103].second.push_front(p_16_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_wvalid.bind(*p_16_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[18106].first = 1;
        (*_glb_hdl_sc_channel_map)[18106].second.push_front(p_16_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_wready.bind(*p_16_s04_axi_wready);
        p_16_s04_axi_wready->set_sv_netview_offsetfromdp(10158968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s04_axi_bid.bind(*p_16_s04_axi_bid);
        p_16_s04_axi_bid->set_sv_netview_offsetfromdp(10159024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s04_axi_bresp.bind(*p_16_s04_axi_bresp);
        p_16_s04_axi_bresp->set_sv_netview_offsetfromdp(10159080);
        xsim_sc_channel<0, bool > *p_16_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_bvalid.bind(*p_16_s04_axi_bvalid);
        p_16_s04_axi_bvalid->set_sv_netview_offsetfromdp(10159136);
        xsim_sc_channel<0, bool > *p_16_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_bready.bind(*p_16_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[18093].first = 1;
        (*_glb_hdl_sc_channel_map)[18093].second.push_front(p_16_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s04_axi_arid.bind(*p_16_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[18071].first = 3;
        (*_glb_hdl_sc_channel_map)[18071].second.push_front(p_16_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s04_axi_araddr.bind(*p_16_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18067].first = 3;
        (*_glb_hdl_sc_channel_map)[18067].second.push_front(p_16_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s04_axi_arlen.bind(*p_16_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[18072].first = 3;
        (*_glb_hdl_sc_channel_map)[18072].second.push_front(p_16_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s04_axi_arsize.bind(*p_16_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[18078].first = 3;
        (*_glb_hdl_sc_channel_map)[18078].second.push_front(p_16_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s04_axi_arburst.bind(*p_16_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[18068].first = 3;
        (*_glb_hdl_sc_channel_map)[18068].second.push_front(p_16_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_arlock.bind(*p_16_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18073].first = 1;
        (*_glb_hdl_sc_channel_map)[18073].second.push_front(p_16_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_arcache.bind(*p_16_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18069].first = 3;
        (*_glb_hdl_sc_channel_map)[18069].second.push_front(p_16_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s04_axi_arprot.bind(*p_16_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[18074].first = 3;
        (*_glb_hdl_sc_channel_map)[18074].second.push_front(p_16_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_arregion.bind(*p_16_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18077].first = 3;
        (*_glb_hdl_sc_channel_map)[18077].second.push_front(p_16_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s04_axi_arqos.bind(*p_16_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18075].first = 3;
        (*_glb_hdl_sc_channel_map)[18075].second.push_front(p_16_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_arvalid.bind(*p_16_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[18079].first = 1;
        (*_glb_hdl_sc_channel_map)[18079].second.push_front(p_16_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_arready.bind(*p_16_s04_axi_arready);
        p_16_s04_axi_arready->set_sv_netview_offsetfromdp(10159864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->s04_axi_rid.bind(*p_16_s04_axi_rid);
        p_16_s04_axi_rid->set_sv_netview_offsetfromdp(10159920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s04_axi_rdata.bind(*p_16_s04_axi_rdata);
        p_16_s04_axi_rdata->set_sv_netview_offsetfromdp(10159976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s04_axi_rresp.bind(*p_16_s04_axi_rresp);
        p_16_s04_axi_rresp->set_sv_netview_offsetfromdp(10160032);
        xsim_sc_channel<0, bool > *p_16_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_rlast.bind(*p_16_s04_axi_rlast);
        p_16_s04_axi_rlast->set_sv_netview_offsetfromdp(10160088);
        xsim_sc_channel<0, bool > *p_16_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_rvalid.bind(*p_16_s04_axi_rvalid);
        p_16_s04_axi_rvalid->set_sv_netview_offsetfromdp(10160144);
        xsim_sc_channel<0, bool > *p_16_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_rready.bind(*p_16_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[18099].first = 1;
        (*_glb_hdl_sc_channel_map)[18099].second.push_front(p_16_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_aclk.bind(*p_16_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[18066].first = 1;
        (*_glb_hdl_sc_channel_map)[18066].second.push_front(p_16_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s04_axi_aresetn.bind(*p_16_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[18070].first = 1;
        (*_glb_hdl_sc_channel_map)[18070].second.push_front(p_16_s04_axi_aresetn);
        sc_inst_17 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_17->xsim_set_dbg_index(23);
        sc_inst_18 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_18->xsim_set_dbg_index(1623);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->saxi_lite_cq_awaddr.bind(*p_18_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[24251].first = 3;
        (*_glb_hdl_sc_channel_map)[24251].second.push_front(p_18_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxi_lite_cq_awprot.bind(*p_18_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[24252].first = 3;
        (*_glb_hdl_sc_channel_map)[24252].second.push_front(p_18_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_awvalid.bind(*p_18_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[24254].first = 1;
        (*_glb_hdl_sc_channel_map)[24254].second.push_front(p_18_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_awready.bind(*p_18_saxi_lite_cq_awready);
        p_18_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(12325560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->saxi_lite_cq_wdata.bind(*p_18_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[24262].first = 3;
        (*_glb_hdl_sc_channel_map)[24262].second.push_front(p_18_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->saxi_lite_cq_wstrb.bind(*p_18_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[24264].first = 3;
        (*_glb_hdl_sc_channel_map)[24264].second.push_front(p_18_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_wvalid.bind(*p_18_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[24265].first = 1;
        (*_glb_hdl_sc_channel_map)[24265].second.push_front(p_18_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_wready.bind(*p_18_saxi_lite_cq_wready);
        p_18_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(12325784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxi_lite_cq_bresp.bind(*p_18_saxi_lite_cq_bresp);
        p_18_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(12325840);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_bvalid.bind(*p_18_saxi_lite_cq_bvalid);
        p_18_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(12325896);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_bready.bind(*p_18_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[24255].first = 1;
        (*_glb_hdl_sc_channel_map)[24255].second.push_front(p_18_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->saxi_lite_cq_araddr.bind(*p_18_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[24246].first = 3;
        (*_glb_hdl_sc_channel_map)[24246].second.push_front(p_18_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->saxi_lite_cq_arprot.bind(*p_18_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[24248].first = 3;
        (*_glb_hdl_sc_channel_map)[24248].second.push_front(p_18_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_arvalid.bind(*p_18_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[24250].first = 1;
        (*_glb_hdl_sc_channel_map)[24250].second.push_front(p_18_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_arready.bind(*p_18_saxi_lite_cq_arready);
        p_18_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(12326176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->saxi_lite_cq_rdata.bind(*p_18_saxi_lite_cq_rdata);
        p_18_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(12326232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->saxi_lite_cq_rresp.bind(*p_18_saxi_lite_cq_rresp);
        p_18_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(12326288);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_rvalid.bind(*p_18_saxi_lite_cq_rvalid);
        p_18_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(12326344);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_rready.bind(*p_18_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[24259].first = 1;
        (*_glb_hdl_sc_channel_map)[24259].second.push_front(p_18_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_aclk.bind(*p_18_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[24245].first = 1;
        (*_glb_hdl_sc_channel_map)[24245].second.push_front(p_18_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_18_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->saxi_lite_cq_aresetn.bind(*p_18_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[24247].first = 1;
        (*_glb_hdl_sc_channel_map)[24247].second.push_front(p_18_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->maxi_lite_mb_awaddr.bind(*p_18_maxi_lite_mb_awaddr);
        p_18_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(12326568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxi_lite_mb_awprot.bind(*p_18_maxi_lite_mb_awprot);
        p_18_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(12326624);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_awvalid.bind(*p_18_maxi_lite_mb_awvalid);
        p_18_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(12326680);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_awready.bind(*p_18_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[24232].first = 1;
        (*_glb_hdl_sc_channel_map)[24232].second.push_front(p_18_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->maxi_lite_mb_wdata.bind(*p_18_maxi_lite_mb_wdata);
        p_18_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(12326792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->maxi_lite_mb_wstrb.bind(*p_18_maxi_lite_mb_wstrb);
        p_18_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(12326848);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_wvalid.bind(*p_18_maxi_lite_mb_wvalid);
        p_18_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(12326904);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_wready.bind(*p_18_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[24242].first = 1;
        (*_glb_hdl_sc_channel_map)[24242].second.push_front(p_18_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxi_lite_mb_bresp.bind(*p_18_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[24235].first = 3;
        (*_glb_hdl_sc_channel_map)[24235].second.push_front(p_18_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_bvalid.bind(*p_18_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[24236].first = 1;
        (*_glb_hdl_sc_channel_map)[24236].second.push_front(p_18_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_bready.bind(*p_18_maxi_lite_mb_bready);
        p_18_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(12327128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->maxi_lite_mb_araddr.bind(*p_18_maxi_lite_mb_araddr);
        p_18_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(12327184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->maxi_lite_mb_arprot.bind(*p_18_maxi_lite_mb_arprot);
        p_18_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(12327240);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_arvalid.bind(*p_18_maxi_lite_mb_arvalid);
        p_18_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(12327296);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_arready.bind(*p_18_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[24228].first = 1;
        (*_glb_hdl_sc_channel_map)[24228].second.push_front(p_18_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->maxi_lite_mb_rdata.bind(*p_18_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[24237].first = 3;
        (*_glb_hdl_sc_channel_map)[24237].second.push_front(p_18_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->maxi_lite_mb_rresp.bind(*p_18_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[24239].first = 3;
        (*_glb_hdl_sc_channel_map)[24239].second.push_front(p_18_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_rvalid.bind(*p_18_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[24240].first = 1;
        (*_glb_hdl_sc_channel_map)[24240].second.push_front(p_18_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_rready.bind(*p_18_maxi_lite_mb_rready);
        p_18_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(12327576);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_aclk.bind(*p_18_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[24224].first = 1;
        (*_glb_hdl_sc_channel_map)[24224].second.push_front(p_18_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_18_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->maxi_lite_mb_aresetn.bind(*p_18_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[24226].first = 1;
        (*_glb_hdl_sc_channel_map)[24226].second.push_front(p_18_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_18_irq = new xsim_sc_channel<0, bool >();
        sc_inst_18->irq.bind(*p_18_irq);
        (*_glb_hdl_sc_channel_map)[24223].first = 1;
        (*_glb_hdl_sc_channel_map)[24223].second.push_front(p_18_irq);
        sc_inst_19 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_19->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s00_axi_awaddr.bind(*p_19_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18725].first = 3;
        (*_glb_hdl_sc_channel_map)[18725].second.push_front(p_19_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s00_axi_awlen.bind(*p_19_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[24348].first = 3;
        (*_glb_hdl_sc_channel_map)[24348].second.push_front(p_19_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s00_axi_awsize.bind(*p_19_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[24351].first = 3;
        (*_glb_hdl_sc_channel_map)[24351].second.push_front(p_19_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s00_axi_awburst.bind(*p_19_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[24347].first = 3;
        (*_glb_hdl_sc_channel_map)[24347].second.push_front(p_19_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_19_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_awlock.bind(*p_19_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18723].first = 1;
        (*_glb_hdl_sc_channel_map)[18723].second.push_front(p_19_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_awcache.bind(*p_19_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18724].first = 3;
        (*_glb_hdl_sc_channel_map)[18724].second.push_front(p_19_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s00_axi_awprot.bind(*p_19_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[24349].first = 3;
        (*_glb_hdl_sc_channel_map)[24349].second.push_front(p_19_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_awregion.bind(*p_19_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18721].first = 3;
        (*_glb_hdl_sc_channel_map)[18721].second.push_front(p_19_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_awqos.bind(*p_19_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18722].first = 3;
        (*_glb_hdl_sc_channel_map)[18722].second.push_front(p_19_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_19_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_awvalid.bind(*p_19_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[24352].first = 1;
        (*_glb_hdl_sc_channel_map)[24352].second.push_front(p_19_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_awready.bind(*p_19_s00_axi_awready);
        p_19_s00_axi_awready->set_sv_netview_offsetfromdp(12338128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->s00_axi_wdata.bind(*p_19_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[24361].first = 3;
        (*_glb_hdl_sc_channel_map)[24361].second.push_front(p_19_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s00_axi_wstrb.bind(*p_19_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[24364].first = 3;
        (*_glb_hdl_sc_channel_map)[24364].second.push_front(p_19_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_wlast.bind(*p_19_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[24362].first = 1;
        (*_glb_hdl_sc_channel_map)[24362].second.push_front(p_19_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_19_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_wvalid.bind(*p_19_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[24365].first = 1;
        (*_glb_hdl_sc_channel_map)[24365].second.push_front(p_19_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_wready.bind(*p_19_s00_axi_wready);
        p_19_s00_axi_wready->set_sv_netview_offsetfromdp(12338408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s00_axi_bresp.bind(*p_19_s00_axi_bresp);
        p_19_s00_axi_bresp->set_sv_netview_offsetfromdp(12338464);
        xsim_sc_channel<0, bool > *p_19_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_bvalid.bind(*p_19_s00_axi_bvalid);
        p_19_s00_axi_bvalid->set_sv_netview_offsetfromdp(12338520);
        xsim_sc_channel<0, bool > *p_19_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_bready.bind(*p_19_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[24353].first = 1;
        (*_glb_hdl_sc_channel_map)[24353].second.push_front(p_19_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->s00_axi_araddr.bind(*p_19_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18730].first = 3;
        (*_glb_hdl_sc_channel_map)[18730].second.push_front(p_19_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s00_axi_arlen.bind(*p_19_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[24342].first = 3;
        (*_glb_hdl_sc_channel_map)[24342].second.push_front(p_19_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s00_axi_arsize.bind(*p_19_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[24345].first = 3;
        (*_glb_hdl_sc_channel_map)[24345].second.push_front(p_19_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s00_axi_arburst.bind(*p_19_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[24340].first = 3;
        (*_glb_hdl_sc_channel_map)[24340].second.push_front(p_19_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_19_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_arlock.bind(*p_19_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18728].first = 1;
        (*_glb_hdl_sc_channel_map)[18728].second.push_front(p_19_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_arcache.bind(*p_19_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18729].first = 3;
        (*_glb_hdl_sc_channel_map)[18729].second.push_front(p_19_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s00_axi_arprot.bind(*p_19_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[24343].first = 3;
        (*_glb_hdl_sc_channel_map)[24343].second.push_front(p_19_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_arregion.bind(*p_19_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18726].first = 3;
        (*_glb_hdl_sc_channel_map)[18726].second.push_front(p_19_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s00_axi_arqos.bind(*p_19_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18727].first = 3;
        (*_glb_hdl_sc_channel_map)[18727].second.push_front(p_19_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_19_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_arvalid.bind(*p_19_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[24346].first = 1;
        (*_glb_hdl_sc_channel_map)[24346].second.push_front(p_19_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_arready.bind(*p_19_s00_axi_arready);
        p_19_s00_axi_arready->set_sv_netview_offsetfromdp(12339192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->s00_axi_rdata.bind(*p_19_s00_axi_rdata);
        p_19_s00_axi_rdata->set_sv_netview_offsetfromdp(12339248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s00_axi_rresp.bind(*p_19_s00_axi_rresp);
        p_19_s00_axi_rresp->set_sv_netview_offsetfromdp(12339304);
        xsim_sc_channel<0, bool > *p_19_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_rlast.bind(*p_19_s00_axi_rlast);
        p_19_s00_axi_rlast->set_sv_netview_offsetfromdp(12339360);
        xsim_sc_channel<0, bool > *p_19_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_rvalid.bind(*p_19_s00_axi_rvalid);
        p_19_s00_axi_rvalid->set_sv_netview_offsetfromdp(12339416);
        xsim_sc_channel<0, bool > *p_19_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_rready.bind(*p_19_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[24358].first = 1;
        (*_glb_hdl_sc_channel_map)[24358].second.push_front(p_19_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_19_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_aclk.bind(*p_19_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[24339].first = 1;
        (*_glb_hdl_sc_channel_map)[24339].second.push_front(p_19_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_19_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->s00_axi_aresetn.bind(*p_19_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[24341].first = 1;
        (*_glb_hdl_sc_channel_map)[24341].second.push_front(p_19_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_awid.bind(*p_19_m00_axi_awid);
        p_19_m00_axi_awid->set_sv_netview_offsetfromdp(12339640);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_19_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_19->m00_axi_awaddr.bind(*p_19_m00_axi_awaddr);
        p_19_m00_axi_awaddr->set_sv_netview_offsetfromdp(12339696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m00_axi_awlen.bind(*p_19_m00_axi_awlen);
        p_19_m00_axi_awlen->set_sv_netview_offsetfromdp(12339752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m00_axi_awsize.bind(*p_19_m00_axi_awsize);
        p_19_m00_axi_awsize->set_sv_netview_offsetfromdp(12339808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m00_axi_awburst.bind(*p_19_m00_axi_awburst);
        p_19_m00_axi_awburst->set_sv_netview_offsetfromdp(12339864);
        xsim_sc_channel<0, bool > *p_19_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_awlock.bind(*p_19_m00_axi_awlock);
        p_19_m00_axi_awlock->set_sv_netview_offsetfromdp(12339920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m00_axi_awcache.bind(*p_19_m00_axi_awcache);
        p_19_m00_axi_awcache->set_sv_netview_offsetfromdp(12339976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m00_axi_awprot.bind(*p_19_m00_axi_awprot);
        p_19_m00_axi_awprot->set_sv_netview_offsetfromdp(12340032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m00_axi_awqos.bind(*p_19_m00_axi_awqos);
        p_19_m00_axi_awqos->set_sv_netview_offsetfromdp(12340088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_awuser.bind(*p_19_m00_axi_awuser);
        p_19_m00_axi_awuser->set_sv_netview_offsetfromdp(12340144);
        xsim_sc_channel<0, bool > *p_19_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_awvalid.bind(*p_19_m00_axi_awvalid);
        p_19_m00_axi_awvalid->set_sv_netview_offsetfromdp(12340200);
        xsim_sc_channel<0, bool > *p_19_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_awready.bind(*p_19_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[24317].first = 1;
        (*_glb_hdl_sc_channel_map)[24317].second.push_front(p_19_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m00_axi_wdata.bind(*p_19_m00_axi_wdata);
        p_19_m00_axi_wdata->set_sv_netview_offsetfromdp(12340312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m00_axi_wstrb.bind(*p_19_m00_axi_wstrb);
        p_19_m00_axi_wstrb->set_sv_netview_offsetfromdp(12340368);
        xsim_sc_channel<0, bool > *p_19_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_wlast.bind(*p_19_m00_axi_wlast);
        p_19_m00_axi_wlast->set_sv_netview_offsetfromdp(12340424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_wuser.bind(*p_19_m00_axi_wuser);
        p_19_m00_axi_wuser->set_sv_netview_offsetfromdp(12340480);
        xsim_sc_channel<0, bool > *p_19_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_wvalid.bind(*p_19_m00_axi_wvalid);
        p_19_m00_axi_wvalid->set_sv_netview_offsetfromdp(12340536);
        xsim_sc_channel<0, bool > *p_19_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_wready.bind(*p_19_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[24335].first = 1;
        (*_glb_hdl_sc_channel_map)[24335].second.push_front(p_19_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_bid.bind(*p_19_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[24321].first = 3;
        (*_glb_hdl_sc_channel_map)[24321].second.push_front(p_19_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m00_axi_bresp.bind(*p_19_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[24323].first = 3;
        (*_glb_hdl_sc_channel_map)[24323].second.push_front(p_19_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_buser.bind(*p_19_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[24324].first = 3;
        (*_glb_hdl_sc_channel_map)[24324].second.push_front(p_19_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_19_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_bvalid.bind(*p_19_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[24325].first = 1;
        (*_glb_hdl_sc_channel_map)[24325].second.push_front(p_19_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_19_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_bready.bind(*p_19_m00_axi_bready);
        p_19_m00_axi_bready->set_sv_netview_offsetfromdp(12340872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_arid.bind(*p_19_m00_axi_arid);
        p_19_m00_axi_arid->set_sv_netview_offsetfromdp(12340928);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_19_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_19->m00_axi_araddr.bind(*p_19_m00_axi_araddr);
        p_19_m00_axi_araddr->set_sv_netview_offsetfromdp(12340984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m00_axi_arlen.bind(*p_19_m00_axi_arlen);
        p_19_m00_axi_arlen->set_sv_netview_offsetfromdp(12341040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m00_axi_arsize.bind(*p_19_m00_axi_arsize);
        p_19_m00_axi_arsize->set_sv_netview_offsetfromdp(12341096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m00_axi_arburst.bind(*p_19_m00_axi_arburst);
        p_19_m00_axi_arburst->set_sv_netview_offsetfromdp(12341152);
        xsim_sc_channel<0, bool > *p_19_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_arlock.bind(*p_19_m00_axi_arlock);
        p_19_m00_axi_arlock->set_sv_netview_offsetfromdp(12341208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m00_axi_arcache.bind(*p_19_m00_axi_arcache);
        p_19_m00_axi_arcache->set_sv_netview_offsetfromdp(12341264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m00_axi_arprot.bind(*p_19_m00_axi_arprot);
        p_19_m00_axi_arprot->set_sv_netview_offsetfromdp(12341320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m00_axi_arqos.bind(*p_19_m00_axi_arqos);
        p_19_m00_axi_arqos->set_sv_netview_offsetfromdp(12341376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_aruser.bind(*p_19_m00_axi_aruser);
        p_19_m00_axi_aruser->set_sv_netview_offsetfromdp(12341432);
        xsim_sc_channel<0, bool > *p_19_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_arvalid.bind(*p_19_m00_axi_arvalid);
        p_19_m00_axi_arvalid->set_sv_netview_offsetfromdp(12341488);
        xsim_sc_channel<0, bool > *p_19_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_arready.bind(*p_19_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[24305].first = 1;
        (*_glb_hdl_sc_channel_map)[24305].second.push_front(p_19_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_rid.bind(*p_19_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[24327].first = 3;
        (*_glb_hdl_sc_channel_map)[24327].second.push_front(p_19_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m00_axi_rdata.bind(*p_19_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[24326].first = 3;
        (*_glb_hdl_sc_channel_map)[24326].second.push_front(p_19_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m00_axi_rresp.bind(*p_19_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[24330].first = 3;
        (*_glb_hdl_sc_channel_map)[24330].second.push_front(p_19_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_19_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_rlast.bind(*p_19_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[24328].first = 1;
        (*_glb_hdl_sc_channel_map)[24328].second.push_front(p_19_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m00_axi_ruser.bind(*p_19_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[24331].first = 3;
        (*_glb_hdl_sc_channel_map)[24331].second.push_front(p_19_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_19_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_rvalid.bind(*p_19_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[24332].first = 1;
        (*_glb_hdl_sc_channel_map)[24332].second.push_front(p_19_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_19_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_rready.bind(*p_19_m00_axi_rready);
        p_19_m00_axi_rready->set_sv_netview_offsetfromdp(12341936);
        xsim_sc_channel<0, bool > *p_19_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_aclk.bind(*p_19_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[24295].first = 1;
        (*_glb_hdl_sc_channel_map)[24295].second.push_front(p_19_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_19_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->m00_axi_aresetn.bind(*p_19_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[24299].first = 1;
        (*_glb_hdl_sc_channel_map)[24299].second.push_front(p_19_m00_axi_aresetn);
        sc_inst_20 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_20->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18716].first = 3;
        (*_glb_hdl_sc_channel_map)[18716].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24653].first = 1;
        (*_glb_hdl_sc_channel_map)[24653].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(12388440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24661].first = 3;
        (*_glb_hdl_sc_channel_map)[24661].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24663].first = 3;
        (*_glb_hdl_sc_channel_map)[24663].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24664].first = 1;
        (*_glb_hdl_sc_channel_map)[24664].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(12388664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(12388720);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(12388776);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24654].first = 1;
        (*_glb_hdl_sc_channel_map)[24654].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18717].first = 3;
        (*_glb_hdl_sc_channel_map)[18717].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24651].first = 1;
        (*_glb_hdl_sc_channel_map)[24651].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(12389000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(12389056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(12389112);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(12389168);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24658].first = 1;
        (*_glb_hdl_sc_channel_map)[24658].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[24612].first = 1;
        (*_glb_hdl_sc_channel_map)[24612].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24613].first = 1;
        (*_glb_hdl_sc_channel_map)[24613].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(12389392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(12389448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(12389504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(12389560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(12389616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(12389672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(12389728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(12389784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(12389840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(12389896);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(12389952);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24633].first = 1;
        (*_glb_hdl_sc_channel_map)[24633].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(12390064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(12390120);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(12390176);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(12390232);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24647].first = 1;
        (*_glb_hdl_sc_channel_map)[24647].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24638].first = 3;
        (*_glb_hdl_sc_channel_map)[24638].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24639].first = 1;
        (*_glb_hdl_sc_channel_map)[24639].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(12390456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(12390512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(12390568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(12390624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(12390680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(12390736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(12390792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(12390848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(12390904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(12390960);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(12391016);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24622].first = 1;
        (*_glb_hdl_sc_channel_map)[24622].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24640].first = 3;
        (*_glb_hdl_sc_channel_map)[24640].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24643].first = 3;
        (*_glb_hdl_sc_channel_map)[24643].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24641].first = 1;
        (*_glb_hdl_sc_channel_map)[24641].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24644].first = 1;
        (*_glb_hdl_sc_channel_map)[24644].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(12391352);
        sc_inst_21 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_21->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18714].first = 3;
        (*_glb_hdl_sc_channel_map)[18714].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24705].first = 1;
        (*_glb_hdl_sc_channel_map)[24705].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(12391568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24713].first = 3;
        (*_glb_hdl_sc_channel_map)[24713].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24715].first = 3;
        (*_glb_hdl_sc_channel_map)[24715].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24716].first = 1;
        (*_glb_hdl_sc_channel_map)[24716].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(12391792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(12391848);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(12391904);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24706].first = 1;
        (*_glb_hdl_sc_channel_map)[24706].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18715].first = 3;
        (*_glb_hdl_sc_channel_map)[18715].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24703].first = 1;
        (*_glb_hdl_sc_channel_map)[24703].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(12392128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(12392184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(12392240);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(12392296);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24710].first = 1;
        (*_glb_hdl_sc_channel_map)[24710].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[24665].first = 1;
        (*_glb_hdl_sc_channel_map)[24665].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24666].first = 1;
        (*_glb_hdl_sc_channel_map)[24666].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(12392520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(12392576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(12392632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(12392688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(12392744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(12392800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(12392856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(12392912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(12392968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(12393024);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(12393080);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24685].first = 1;
        (*_glb_hdl_sc_channel_map)[24685].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(12393192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(12393248);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(12393304);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(12393360);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24699].first = 1;
        (*_glb_hdl_sc_channel_map)[24699].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24690].first = 3;
        (*_glb_hdl_sc_channel_map)[24690].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24691].first = 1;
        (*_glb_hdl_sc_channel_map)[24691].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(12393584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(12393640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(12393696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(12393752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(12393808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(12393864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(12393920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(12393976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(12394032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(12394088);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(12394144);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24674].first = 1;
        (*_glb_hdl_sc_channel_map)[24674].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24692].first = 3;
        (*_glb_hdl_sc_channel_map)[24692].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24695].first = 3;
        (*_glb_hdl_sc_channel_map)[24695].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24693].first = 1;
        (*_glb_hdl_sc_channel_map)[24693].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24696].first = 1;
        (*_glb_hdl_sc_channel_map)[24696].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(12394480);
        sc_inst_22 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_22->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18712].first = 3;
        (*_glb_hdl_sc_channel_map)[18712].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24758].first = 1;
        (*_glb_hdl_sc_channel_map)[24758].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(12394696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24766].first = 3;
        (*_glb_hdl_sc_channel_map)[24766].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24768].first = 3;
        (*_glb_hdl_sc_channel_map)[24768].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24769].first = 1;
        (*_glb_hdl_sc_channel_map)[24769].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(12394920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(12394976);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(12395032);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24759].first = 1;
        (*_glb_hdl_sc_channel_map)[24759].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18713].first = 3;
        (*_glb_hdl_sc_channel_map)[18713].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24756].first = 1;
        (*_glb_hdl_sc_channel_map)[24756].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(12395256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(12395312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(12395368);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(12395424);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24763].first = 1;
        (*_glb_hdl_sc_channel_map)[24763].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[24718].first = 1;
        (*_glb_hdl_sc_channel_map)[24718].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24719].first = 1;
        (*_glb_hdl_sc_channel_map)[24719].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(12395648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(12395704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(12395760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(12395816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(12395872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(12395928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(12395984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(12396040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(12396096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(12396152);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(12396208);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24738].first = 1;
        (*_glb_hdl_sc_channel_map)[24738].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(12396320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(12396376);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(12396432);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(12396488);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24752].first = 1;
        (*_glb_hdl_sc_channel_map)[24752].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24743].first = 3;
        (*_glb_hdl_sc_channel_map)[24743].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24744].first = 1;
        (*_glb_hdl_sc_channel_map)[24744].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(12396712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(12396768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(12396824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(12396880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(12396936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(12396992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(12397048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(12397104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(12397160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(12397216);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(12397272);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24727].first = 1;
        (*_glb_hdl_sc_channel_map)[24727].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24745].first = 3;
        (*_glb_hdl_sc_channel_map)[24745].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24748].first = 3;
        (*_glb_hdl_sc_channel_map)[24748].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24746].first = 1;
        (*_glb_hdl_sc_channel_map)[24746].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24749].first = 1;
        (*_glb_hdl_sc_channel_map)[24749].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(12397608);
        sc_inst_23 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_23->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_control_AWADDR.bind(*p_23_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[18710].first = 3;
        (*_glb_hdl_sc_channel_map)[18710].second.push_front(p_23_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_AWVALID.bind(*p_23_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[24811].first = 1;
        (*_glb_hdl_sc_channel_map)[24811].second.push_front(p_23_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_AWREADY.bind(*p_23_s_axi_control_AWREADY);
        p_23_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(12397824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_control_WDATA.bind(*p_23_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[24819].first = 3;
        (*_glb_hdl_sc_channel_map)[24819].second.push_front(p_23_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_control_WSTRB.bind(*p_23_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[24821].first = 3;
        (*_glb_hdl_sc_channel_map)[24821].second.push_front(p_23_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_WVALID.bind(*p_23_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[24822].first = 1;
        (*_glb_hdl_sc_channel_map)[24822].second.push_front(p_23_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_WREADY.bind(*p_23_s_axi_control_WREADY);
        p_23_s_axi_control_WREADY->set_sv_netview_offsetfromdp(12398048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_control_BRESP.bind(*p_23_s_axi_control_BRESP);
        p_23_s_axi_control_BRESP->set_sv_netview_offsetfromdp(12398104);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_BVALID.bind(*p_23_s_axi_control_BVALID);
        p_23_s_axi_control_BVALID->set_sv_netview_offsetfromdp(12398160);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_BREADY.bind(*p_23_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[24812].first = 1;
        (*_glb_hdl_sc_channel_map)[24812].second.push_front(p_23_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_23_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_23->s_axi_control_ARADDR.bind(*p_23_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[18711].first = 3;
        (*_glb_hdl_sc_channel_map)[18711].second.push_front(p_23_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_ARVALID.bind(*p_23_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[24809].first = 1;
        (*_glb_hdl_sc_channel_map)[24809].second.push_front(p_23_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_ARREADY.bind(*p_23_s_axi_control_ARREADY);
        p_23_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(12398384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_control_RDATA.bind(*p_23_s_axi_control_RDATA);
        p_23_s_axi_control_RDATA->set_sv_netview_offsetfromdp(12398440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_control_RRESP.bind(*p_23_s_axi_control_RRESP);
        p_23_s_axi_control_RRESP->set_sv_netview_offsetfromdp(12398496);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_RVALID.bind(*p_23_s_axi_control_RVALID);
        p_23_s_axi_control_RVALID->set_sv_netview_offsetfromdp(12398552);
        xsim_sc_channel<0, bool > *p_23_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_control_RREADY.bind(*p_23_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[24816].first = 1;
        (*_glb_hdl_sc_channel_map)[24816].second.push_front(p_23_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_23_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->ap_clk.bind(*p_23_ap_clk);
        (*_glb_hdl_sc_channel_map)[24771].first = 1;
        (*_glb_hdl_sc_channel_map)[24771].second.push_front(p_23_ap_clk);
        xsim_sc_channel<0, bool > *p_23_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_23->ap_rst_n.bind(*p_23_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[24772].first = 1;
        (*_glb_hdl_sc_channel_map)[24772].second.push_front(p_23_ap_rst_n);
        xsim_sc_channel<0, bool > *p_23_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_23->interrupt.bind(*p_23_interrupt);
        p_23_interrupt->set_sv_netview_offsetfromdp(12398776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_AWADDR.bind(*p_23_m_axi_gmem_AWADDR);
        p_23_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(12398832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_axi_gmem_AWLEN.bind(*p_23_m_axi_gmem_AWLEN);
        p_23_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(12398888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_AWSIZE.bind(*p_23_m_axi_gmem_AWSIZE);
        p_23_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(12398944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_AWBURST.bind(*p_23_m_axi_gmem_AWBURST);
        p_23_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(12399000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_axi_gmem_AWLOCK.bind(*p_23_m_axi_gmem_AWLOCK);
        p_23_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(12399056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWREGION.bind(*p_23_m_axi_gmem_AWREGION);
        p_23_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(12399112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWCACHE.bind(*p_23_m_axi_gmem_AWCACHE);
        p_23_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(12399168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_AWPROT.bind(*p_23_m_axi_gmem_AWPROT);
        p_23_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(12399224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_AWQOS.bind(*p_23_m_axi_gmem_AWQOS);
        p_23_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(12399280);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_AWVALID.bind(*p_23_m_axi_gmem_AWVALID);
        p_23_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(12399336);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_AWREADY.bind(*p_23_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[24791].first = 1;
        (*_glb_hdl_sc_channel_map)[24791].second.push_front(p_23_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->m_axi_gmem_WDATA.bind(*p_23_m_axi_gmem_WDATA);
        p_23_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(12399448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_WSTRB.bind(*p_23_m_axi_gmem_WSTRB);
        p_23_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(12399504);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WLAST.bind(*p_23_m_axi_gmem_WLAST);
        p_23_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(12399560);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WVALID.bind(*p_23_m_axi_gmem_WVALID);
        p_23_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(12399616);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_WREADY.bind(*p_23_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[24805].first = 1;
        (*_glb_hdl_sc_channel_map)[24805].second.push_front(p_23_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_BRESP.bind(*p_23_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[24796].first = 3;
        (*_glb_hdl_sc_channel_map)[24796].second.push_front(p_23_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_BVALID.bind(*p_23_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[24797].first = 1;
        (*_glb_hdl_sc_channel_map)[24797].second.push_front(p_23_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_BREADY.bind(*p_23_m_axi_gmem_BREADY);
        p_23_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(12399840);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_gmem_ARADDR.bind(*p_23_m_axi_gmem_ARADDR);
        p_23_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(12399896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_axi_gmem_ARLEN.bind(*p_23_m_axi_gmem_ARLEN);
        p_23_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(12399952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_ARSIZE.bind(*p_23_m_axi_gmem_ARSIZE);
        p_23_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(12400008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_ARBURST.bind(*p_23_m_axi_gmem_ARBURST);
        p_23_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(12400064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_axi_gmem_ARLOCK.bind(*p_23_m_axi_gmem_ARLOCK);
        p_23_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(12400120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARREGION.bind(*p_23_m_axi_gmem_ARREGION);
        p_23_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(12400176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARCACHE.bind(*p_23_m_axi_gmem_ARCACHE);
        p_23_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(12400232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_gmem_ARPROT.bind(*p_23_m_axi_gmem_ARPROT);
        p_23_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(12400288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_gmem_ARQOS.bind(*p_23_m_axi_gmem_ARQOS);
        p_23_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(12400344);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_ARVALID.bind(*p_23_m_axi_gmem_ARVALID);
        p_23_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(12400400);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_ARREADY.bind(*p_23_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[24780].first = 1;
        (*_glb_hdl_sc_channel_map)[24780].second.push_front(p_23_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->m_axi_gmem_RDATA.bind(*p_23_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[24798].first = 3;
        (*_glb_hdl_sc_channel_map)[24798].second.push_front(p_23_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_gmem_RRESP.bind(*p_23_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[24801].first = 3;
        (*_glb_hdl_sc_channel_map)[24801].second.push_front(p_23_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RLAST.bind(*p_23_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[24799].first = 1;
        (*_glb_hdl_sc_channel_map)[24799].second.push_front(p_23_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RVALID.bind(*p_23_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[24802].first = 1;
        (*_glb_hdl_sc_channel_map)[24802].second.push_front(p_23_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_23_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_gmem_RREADY.bind(*p_23_m_axi_gmem_RREADY);
        p_23_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(12400736);
        sc_inst_24 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_24->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_24_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ui_clk.bind(*p_24_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[24868].first = 1;
        (*_glb_hdl_sc_channel_map)[24868].second.push_front(p_24_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_awid.bind(*p_24_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[24841].first = 3;
        (*_glb_hdl_sc_channel_map)[24841].second.push_front(p_24_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->c0_ddr_saxi_awaddr.bind(*p_24_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[24838].first = 3;
        (*_glb_hdl_sc_channel_map)[24838].second.push_front(p_24_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->c0_ddr_saxi_awlen.bind(*p_24_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[24842].first = 3;
        (*_glb_hdl_sc_channel_map)[24842].second.push_front(p_24_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->c0_ddr_saxi_awsize.bind(*p_24_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[24847].first = 3;
        (*_glb_hdl_sc_channel_map)[24847].second.push_front(p_24_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->c0_ddr_saxi_awburst.bind(*p_24_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[24839].first = 3;
        (*_glb_hdl_sc_channel_map)[24839].second.push_front(p_24_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_awlock.bind(*p_24_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[24843].first = 1;
        (*_glb_hdl_sc_channel_map)[24843].second.push_front(p_24_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_awcache.bind(*p_24_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[24840].first = 3;
        (*_glb_hdl_sc_channel_map)[24840].second.push_front(p_24_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->c0_ddr_saxi_awprot.bind(*p_24_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[24844].first = 3;
        (*_glb_hdl_sc_channel_map)[24844].second.push_front(p_24_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_awregion.bind(*p_24_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[18708].first = 3;
        (*_glb_hdl_sc_channel_map)[18708].second.push_front(p_24_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_awqos.bind(*p_24_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[24845].first = 3;
        (*_glb_hdl_sc_channel_map)[24845].second.push_front(p_24_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_awuser.bind(*p_24_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[24848].first = 3;
        (*_glb_hdl_sc_channel_map)[24848].second.push_front(p_24_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_awvalid.bind(*p_24_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[24849].first = 1;
        (*_glb_hdl_sc_channel_map)[24849].second.push_front(p_24_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_awready.bind(*p_24_c0_ddr_saxi_awready);
        p_24_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(12401568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->c0_ddr_saxi_wdata.bind(*p_24_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[24862].first = 3;
        (*_glb_hdl_sc_channel_map)[24862].second.push_front(p_24_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->c0_ddr_saxi_wstrb.bind(*p_24_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[24865].first = 3;
        (*_glb_hdl_sc_channel_map)[24865].second.push_front(p_24_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_wlast.bind(*p_24_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[24863].first = 1;
        (*_glb_hdl_sc_channel_map)[24863].second.push_front(p_24_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_wuser.bind(*p_24_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[24866].first = 3;
        (*_glb_hdl_sc_channel_map)[24866].second.push_front(p_24_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_wvalid.bind(*p_24_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[24867].first = 1;
        (*_glb_hdl_sc_channel_map)[24867].second.push_front(p_24_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_wready.bind(*p_24_c0_ddr_saxi_wready);
        p_24_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(12401904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_bid.bind(*p_24_c0_ddr_saxi_bid);
        p_24_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(12401960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->c0_ddr_saxi_bresp.bind(*p_24_c0_ddr_saxi_bresp);
        p_24_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(12402016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_buser.bind(*p_24_c0_ddr_saxi_buser);
        p_24_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(12402072);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_bvalid.bind(*p_24_c0_ddr_saxi_bvalid);
        p_24_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(12402128);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_bready.bind(*p_24_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[24851].first = 1;
        (*_glb_hdl_sc_channel_map)[24851].second.push_front(p_24_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_arid.bind(*p_24_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[24829].first = 3;
        (*_glb_hdl_sc_channel_map)[24829].second.push_front(p_24_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_24_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_24->c0_ddr_saxi_araddr.bind(*p_24_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[24825].first = 3;
        (*_glb_hdl_sc_channel_map)[24825].second.push_front(p_24_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->c0_ddr_saxi_arlen.bind(*p_24_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[24830].first = 3;
        (*_glb_hdl_sc_channel_map)[24830].second.push_front(p_24_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->c0_ddr_saxi_arsize.bind(*p_24_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[24835].first = 3;
        (*_glb_hdl_sc_channel_map)[24835].second.push_front(p_24_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->c0_ddr_saxi_arburst.bind(*p_24_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[24826].first = 3;
        (*_glb_hdl_sc_channel_map)[24826].second.push_front(p_24_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_arlock.bind(*p_24_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[24831].first = 1;
        (*_glb_hdl_sc_channel_map)[24831].second.push_front(p_24_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_arcache.bind(*p_24_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[24827].first = 3;
        (*_glb_hdl_sc_channel_map)[24827].second.push_front(p_24_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->c0_ddr_saxi_arprot.bind(*p_24_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[24832].first = 3;
        (*_glb_hdl_sc_channel_map)[24832].second.push_front(p_24_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_arregion.bind(*p_24_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[18709].first = 3;
        (*_glb_hdl_sc_channel_map)[18709].second.push_front(p_24_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->c0_ddr_saxi_arqos.bind(*p_24_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[24833].first = 3;
        (*_glb_hdl_sc_channel_map)[24833].second.push_front(p_24_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_aruser.bind(*p_24_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[24836].first = 3;
        (*_glb_hdl_sc_channel_map)[24836].second.push_front(p_24_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_arvalid.bind(*p_24_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[24837].first = 1;
        (*_glb_hdl_sc_channel_map)[24837].second.push_front(p_24_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_arready.bind(*p_24_c0_ddr_saxi_arready);
        p_24_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(12402912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_rid.bind(*p_24_c0_ddr_saxi_rid);
        p_24_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(12402968);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_24_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_24->c0_ddr_saxi_rdata.bind(*p_24_c0_ddr_saxi_rdata);
        p_24_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(12403024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->c0_ddr_saxi_rresp.bind(*p_24_c0_ddr_saxi_rresp);
        p_24_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(12403080);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_rlast.bind(*p_24_c0_ddr_saxi_rlast);
        p_24_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(12403136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->c0_ddr_saxi_ruser.bind(*p_24_c0_ddr_saxi_ruser);
        p_24_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(12403192);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_rvalid.bind(*p_24_c0_ddr_saxi_rvalid);
        p_24_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(12403248);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_rready.bind(*p_24_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[24858].first = 1;
        (*_glb_hdl_sc_channel_map)[24858].second.push_front(p_24_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_aclk.bind(*p_24_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[24824].first = 1;
        (*_glb_hdl_sc_channel_map)[24824].second.push_front(p_24_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_24_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->c0_ddr_saxi_aresetn.bind(*p_24_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[24828].first = 1;
        (*_glb_hdl_sc_channel_map)[24828].second.push_front(p_24_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_24_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_24->s_xdma_axi_awid.bind(*p_24_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[18692].first = 3;
        (*_glb_hdl_sc_channel_map)[18692].second.push_front(p_24_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_awaddr.bind(*p_24_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[18695].first = 3;
        (*_glb_hdl_sc_channel_map)[18695].second.push_front(p_24_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->s_xdma_axi_awlen.bind(*p_24_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[18691].first = 3;
        (*_glb_hdl_sc_channel_map)[18691].second.push_front(p_24_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_xdma_axi_awsize.bind(*p_24_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[18686].first = 3;
        (*_glb_hdl_sc_channel_map)[18686].second.push_front(p_24_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_xdma_axi_awburst.bind(*p_24_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[18694].first = 3;
        (*_glb_hdl_sc_channel_map)[18694].second.push_front(p_24_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_awlock.bind(*p_24_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[18690].first = 1;
        (*_glb_hdl_sc_channel_map)[18690].second.push_front(p_24_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_awcache.bind(*p_24_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[18693].first = 3;
        (*_glb_hdl_sc_channel_map)[18693].second.push_front(p_24_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_xdma_axi_awprot.bind(*p_24_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[18689].first = 3;
        (*_glb_hdl_sc_channel_map)[18689].second.push_front(p_24_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_awregion.bind(*p_24_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[18687].first = 3;
        (*_glb_hdl_sc_channel_map)[18687].second.push_front(p_24_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_awqos.bind(*p_24_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[18688].first = 3;
        (*_glb_hdl_sc_channel_map)[18688].second.push_front(p_24_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_awuser.bind(*p_24_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[18685].first = 3;
        (*_glb_hdl_sc_channel_map)[18685].second.push_front(p_24_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_awvalid.bind(*p_24_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[18684].first = 1;
        (*_glb_hdl_sc_channel_map)[18684].second.push_front(p_24_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_awready.bind(*p_24_s_xdma_axi_awready);
        p_24_s_xdma_axi_awready->set_sv_netview_offsetfromdp(12404144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_wdata.bind(*p_24_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[18681].first = 3;
        (*_glb_hdl_sc_channel_map)[18681].second.push_front(p_24_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_wstrb.bind(*p_24_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[18679].first = 3;
        (*_glb_hdl_sc_channel_map)[18679].second.push_front(p_24_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_wlast.bind(*p_24_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[18680].first = 1;
        (*_glb_hdl_sc_channel_map)[18680].second.push_front(p_24_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_xdma_axi_wuser.bind(*p_24_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[18678].first = 3;
        (*_glb_hdl_sc_channel_map)[18678].second.push_front(p_24_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_wvalid.bind(*p_24_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[18677].first = 1;
        (*_glb_hdl_sc_channel_map)[18677].second.push_front(p_24_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_wready.bind(*p_24_s_xdma_axi_wready);
        p_24_s_xdma_axi_wready->set_sv_netview_offsetfromdp(12404480);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_24_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_24->s_xdma_axi_bid.bind(*p_24_s_xdma_axi_bid);
        p_24_s_xdma_axi_bid->set_sv_netview_offsetfromdp(12404536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_xdma_axi_bresp.bind(*p_24_s_xdma_axi_bresp);
        p_24_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(12404592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_xdma_axi_buser.bind(*p_24_s_xdma_axi_buser);
        p_24_s_xdma_axi_buser->set_sv_netview_offsetfromdp(12404648);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_bvalid.bind(*p_24_s_xdma_axi_bvalid);
        p_24_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(12404704);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_bready.bind(*p_24_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[18683].first = 1;
        (*_glb_hdl_sc_channel_map)[18683].second.push_front(p_24_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_24_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_24->s_xdma_axi_arid.bind(*p_24_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[18704].first = 3;
        (*_glb_hdl_sc_channel_map)[18704].second.push_front(p_24_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_araddr.bind(*p_24_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[18707].first = 3;
        (*_glb_hdl_sc_channel_map)[18707].second.push_front(p_24_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->s_xdma_axi_arlen.bind(*p_24_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[18703].first = 3;
        (*_glb_hdl_sc_channel_map)[18703].second.push_front(p_24_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_xdma_axi_arsize.bind(*p_24_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[18698].first = 3;
        (*_glb_hdl_sc_channel_map)[18698].second.push_front(p_24_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_xdma_axi_arburst.bind(*p_24_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[18706].first = 3;
        (*_glb_hdl_sc_channel_map)[18706].second.push_front(p_24_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_arlock.bind(*p_24_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[18702].first = 1;
        (*_glb_hdl_sc_channel_map)[18702].second.push_front(p_24_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_arcache.bind(*p_24_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[18705].first = 3;
        (*_glb_hdl_sc_channel_map)[18705].second.push_front(p_24_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_xdma_axi_arprot.bind(*p_24_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[18701].first = 3;
        (*_glb_hdl_sc_channel_map)[18701].second.push_front(p_24_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_arregion.bind(*p_24_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[18699].first = 3;
        (*_glb_hdl_sc_channel_map)[18699].second.push_front(p_24_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_xdma_axi_arqos.bind(*p_24_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[18700].first = 3;
        (*_glb_hdl_sc_channel_map)[18700].second.push_front(p_24_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_aruser.bind(*p_24_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[18697].first = 3;
        (*_glb_hdl_sc_channel_map)[18697].second.push_front(p_24_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_arvalid.bind(*p_24_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[18696].first = 1;
        (*_glb_hdl_sc_channel_map)[18696].second.push_front(p_24_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_arready.bind(*p_24_s_xdma_axi_arready);
        p_24_s_xdma_axi_arready->set_sv_netview_offsetfromdp(12405488);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_24_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_24->s_xdma_axi_rid.bind(*p_24_s_xdma_axi_rid);
        p_24_s_xdma_axi_rid->set_sv_netview_offsetfromdp(12405544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_xdma_axi_rdata.bind(*p_24_s_xdma_axi_rdata);
        p_24_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(12405600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_xdma_axi_rresp.bind(*p_24_s_xdma_axi_rresp);
        p_24_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(12405656);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_rlast.bind(*p_24_s_xdma_axi_rlast);
        p_24_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(12405712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_xdma_axi_ruser.bind(*p_24_s_xdma_axi_ruser);
        p_24_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(12405768);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_rvalid.bind(*p_24_s_xdma_axi_rvalid);
        p_24_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(12405824);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_rready.bind(*p_24_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[18682].first = 1;
        (*_glb_hdl_sc_channel_map)[18682].second.push_front(p_24_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_aclk.bind(*p_24_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[24869].first = 1;
        (*_glb_hdl_sc_channel_map)[24869].second.push_front(p_24_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_24_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->s_xdma_axi_aresetn.bind(*p_24_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[24870].first = 1;
        (*_glb_hdl_sc_channel_map)[24870].second.push_front(p_24_s_xdma_axi_aresetn);
        sc_inst_25 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_25->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_awid.bind(*p_25_m_aximm_awid);
        p_25_m_aximm_awid->set_sv_netview_offsetfromdp(12406096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_aximm_awaddr.bind(*p_25_m_aximm_awaddr);
        p_25_m_aximm_awaddr->set_sv_netview_offsetfromdp(12406152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_aximm_awlen.bind(*p_25_m_aximm_awlen);
        p_25_m_aximm_awlen->set_sv_netview_offsetfromdp(12406208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_aximm_awsize.bind(*p_25_m_aximm_awsize);
        p_25_m_aximm_awsize->set_sv_netview_offsetfromdp(12406264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_aximm_awburst.bind(*p_25_m_aximm_awburst);
        p_25_m_aximm_awburst->set_sv_netview_offsetfromdp(12406320);
        xsim_sc_channel<0, bool > *p_25_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_awlock.bind(*p_25_m_aximm_awlock);
        p_25_m_aximm_awlock->set_sv_netview_offsetfromdp(12406376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_aximm_awcache.bind(*p_25_m_aximm_awcache);
        p_25_m_aximm_awcache->set_sv_netview_offsetfromdp(12406432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_aximm_awprot.bind(*p_25_m_aximm_awprot);
        p_25_m_aximm_awprot->set_sv_netview_offsetfromdp(12406488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_aximm_awqos.bind(*p_25_m_aximm_awqos);
        p_25_m_aximm_awqos->set_sv_netview_offsetfromdp(12406544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_aximm_awuser.bind(*p_25_m_aximm_awuser);
        p_25_m_aximm_awuser->set_sv_netview_offsetfromdp(12406600);
        xsim_sc_channel<0, bool > *p_25_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_awvalid.bind(*p_25_m_aximm_awvalid);
        p_25_m_aximm_awvalid->set_sv_netview_offsetfromdp(12406656);
        xsim_sc_channel<0, bool > *p_25_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_awready.bind(*p_25_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[24926].first = 1;
        (*_glb_hdl_sc_channel_map)[24926].second.push_front(p_25_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_aximm_wdata.bind(*p_25_m_aximm_wdata);
        p_25_m_aximm_wdata->set_sv_netview_offsetfromdp(12406768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_aximm_wstrb.bind(*p_25_m_aximm_wstrb);
        p_25_m_aximm_wstrb->set_sv_netview_offsetfromdp(12406824);
        xsim_sc_channel<0, bool > *p_25_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_wlast.bind(*p_25_m_aximm_wlast);
        p_25_m_aximm_wlast->set_sv_netview_offsetfromdp(12406880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_wuser.bind(*p_25_m_aximm_wuser);
        p_25_m_aximm_wuser->set_sv_netview_offsetfromdp(12406936);
        xsim_sc_channel<0, bool > *p_25_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_wvalid.bind(*p_25_m_aximm_wvalid);
        p_25_m_aximm_wvalid->set_sv_netview_offsetfromdp(12406992);
        xsim_sc_channel<0, bool > *p_25_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_wready.bind(*p_25_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[24941].first = 1;
        (*_glb_hdl_sc_channel_map)[24941].second.push_front(p_25_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_bid.bind(*p_25_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[24929].first = 3;
        (*_glb_hdl_sc_channel_map)[24929].second.push_front(p_25_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_aximm_bresp.bind(*p_25_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[24931].first = 3;
        (*_glb_hdl_sc_channel_map)[24931].second.push_front(p_25_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_buser.bind(*p_25_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[18676].first = 3;
        (*_glb_hdl_sc_channel_map)[18676].second.push_front(p_25_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_25_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_bvalid.bind(*p_25_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[24932].first = 1;
        (*_glb_hdl_sc_channel_map)[24932].second.push_front(p_25_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_bready.bind(*p_25_m_aximm_bready);
        p_25_m_aximm_bready->set_sv_netview_offsetfromdp(12407328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_arid.bind(*p_25_m_aximm_arid);
        p_25_m_aximm_arid->set_sv_netview_offsetfromdp(12407384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_aximm_araddr.bind(*p_25_m_aximm_araddr);
        p_25_m_aximm_araddr->set_sv_netview_offsetfromdp(12407440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->m_aximm_arlen.bind(*p_25_m_aximm_arlen);
        p_25_m_aximm_arlen->set_sv_netview_offsetfromdp(12407496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_aximm_arsize.bind(*p_25_m_aximm_arsize);
        p_25_m_aximm_arsize->set_sv_netview_offsetfromdp(12407552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_aximm_arburst.bind(*p_25_m_aximm_arburst);
        p_25_m_aximm_arburst->set_sv_netview_offsetfromdp(12407608);
        xsim_sc_channel<0, bool > *p_25_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_arlock.bind(*p_25_m_aximm_arlock);
        p_25_m_aximm_arlock->set_sv_netview_offsetfromdp(12407664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_aximm_arcache.bind(*p_25_m_aximm_arcache);
        p_25_m_aximm_arcache->set_sv_netview_offsetfromdp(12407720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_aximm_arprot.bind(*p_25_m_aximm_arprot);
        p_25_m_aximm_arprot->set_sv_netview_offsetfromdp(12407776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_aximm_arqos.bind(*p_25_m_aximm_arqos);
        p_25_m_aximm_arqos->set_sv_netview_offsetfromdp(12407832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_aximm_aruser.bind(*p_25_m_aximm_aruser);
        p_25_m_aximm_aruser->set_sv_netview_offsetfromdp(12407888);
        xsim_sc_channel<0, bool > *p_25_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_arvalid.bind(*p_25_m_aximm_arvalid);
        p_25_m_aximm_arvalid->set_sv_netview_offsetfromdp(12407944);
        xsim_sc_channel<0, bool > *p_25_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_arready.bind(*p_25_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[24915].first = 1;
        (*_glb_hdl_sc_channel_map)[24915].second.push_front(p_25_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_rid.bind(*p_25_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[24934].first = 3;
        (*_glb_hdl_sc_channel_map)[24934].second.push_front(p_25_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_aximm_rdata.bind(*p_25_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[24933].first = 3;
        (*_glb_hdl_sc_channel_map)[24933].second.push_front(p_25_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_aximm_rresp.bind(*p_25_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[24937].first = 3;
        (*_glb_hdl_sc_channel_map)[24937].second.push_front(p_25_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_25_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_rlast.bind(*p_25_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[24935].first = 1;
        (*_glb_hdl_sc_channel_map)[24935].second.push_front(p_25_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->m_aximm_ruser.bind(*p_25_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[18675].first = 3;
        (*_glb_hdl_sc_channel_map)[18675].second.push_front(p_25_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_25_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_rvalid.bind(*p_25_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[24938].first = 1;
        (*_glb_hdl_sc_channel_map)[24938].second.push_front(p_25_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_rready.bind(*p_25_m_aximm_rready);
        p_25_m_aximm_rready->set_sv_netview_offsetfromdp(12408392);
        xsim_sc_channel<0, bool > *p_25_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_aclk.bind(*p_25_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[24905].first = 1;
        (*_glb_hdl_sc_channel_map)[24905].second.push_front(p_25_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_25_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_aximm_aresetn.bind(*p_25_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[24909].first = 1;
        (*_glb_hdl_sc_channel_map)[24909].second.push_front(p_25_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axictrl_awaddr.bind(*p_25_m_axictrl_awaddr);
        p_25_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12408560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axictrl_awprot.bind(*p_25_m_axictrl_awprot);
        p_25_m_axictrl_awprot->set_sv_netview_offsetfromdp(12408616);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_awvalid.bind(*p_25_m_axictrl_awvalid);
        p_25_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12408672);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_awready.bind(*p_25_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[24892].first = 1;
        (*_glb_hdl_sc_channel_map)[24892].second.push_front(p_25_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axictrl_wdata.bind(*p_25_m_axictrl_wdata);
        p_25_m_axictrl_wdata->set_sv_netview_offsetfromdp(12408784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->m_axictrl_wstrb.bind(*p_25_m_axictrl_wstrb);
        p_25_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12408840);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_wvalid.bind(*p_25_m_axictrl_wvalid);
        p_25_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12408896);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_wready.bind(*p_25_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[24902].first = 1;
        (*_glb_hdl_sc_channel_map)[24902].second.push_front(p_25_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axictrl_bresp.bind(*p_25_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[24895].first = 3;
        (*_glb_hdl_sc_channel_map)[24895].second.push_front(p_25_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_bvalid.bind(*p_25_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[24896].first = 1;
        (*_glb_hdl_sc_channel_map)[24896].second.push_front(p_25_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_bready.bind(*p_25_m_axictrl_bready);
        p_25_m_axictrl_bready->set_sv_netview_offsetfromdp(12409120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->m_axictrl_araddr.bind(*p_25_m_axictrl_araddr);
        p_25_m_axictrl_araddr->set_sv_netview_offsetfromdp(12409176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->m_axictrl_arprot.bind(*p_25_m_axictrl_arprot);
        p_25_m_axictrl_arprot->set_sv_netview_offsetfromdp(12409232);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_arvalid.bind(*p_25_m_axictrl_arvalid);
        p_25_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12409288);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_arready.bind(*p_25_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[24888].first = 1;
        (*_glb_hdl_sc_channel_map)[24888].second.push_front(p_25_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->m_axictrl_rdata.bind(*p_25_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[24897].first = 3;
        (*_glb_hdl_sc_channel_map)[24897].second.push_front(p_25_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->m_axictrl_rresp.bind(*p_25_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[24899].first = 3;
        (*_glb_hdl_sc_channel_map)[24899].second.push_front(p_25_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_rvalid.bind(*p_25_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[24900].first = 1;
        (*_glb_hdl_sc_channel_map)[24900].second.push_front(p_25_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_rready.bind(*p_25_m_axictrl_rready);
        p_25_m_axictrl_rready->set_sv_netview_offsetfromdp(12409568);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_aclk.bind(*p_25_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[24884].first = 1;
        (*_glb_hdl_sc_channel_map)[24884].second.push_front(p_25_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_25_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->m_axictrl_aresetn.bind(*p_25_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[24886].first = 1;
        (*_glb_hdl_sc_channel_map)[24886].second.push_front(p_25_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
    }
