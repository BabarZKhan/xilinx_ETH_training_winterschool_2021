-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes256CbcDecryptKernel_splitText_4u_256u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    textBlkStrm_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    textBlkStrm_empty_n : IN STD_LOGIC;
    textBlkStrm_read : OUT STD_LOGIC;
    msgNumStrm_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    msgNumStrm_empty_n : IN STD_LOGIC;
    msgNumStrm_read : OUT STD_LOGIC;
    taskNumStrm_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    taskNumStrm_empty_n : IN STD_LOGIC;
    taskNumStrm_read : OUT STD_LOGIC;
    IVInStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVInStrm_empty_n : IN STD_LOGIC;
    IVInStrm_read : OUT STD_LOGIC;
    cipherkeyInStrm_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyInStrm_empty_n : IN STD_LOGIC;
    cipherkeyInStrm_read : OUT STD_LOGIC;
    textStrm_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textStrm_V_V_full_n : IN STD_LOGIC;
    textStrm_V_V_write : OUT STD_LOGIC;
    textStrm_1_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textStrm_1_V_V_full_n : IN STD_LOGIC;
    textStrm_1_V_V_write : OUT STD_LOGIC;
    textStrm_2_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textStrm_2_V_V_full_n : IN STD_LOGIC;
    textStrm_2_V_V_write : OUT STD_LOGIC;
    textStrm_3_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textStrm_3_V_V_full_n : IN STD_LOGIC;
    textStrm_3_V_V_write : OUT STD_LOGIC;
    endTextStrm_V_din : OUT STD_LOGIC;
    endTextStrm_V_full_n : IN STD_LOGIC;
    endTextStrm_V_write : OUT STD_LOGIC;
    endTextStrm_1_V_din : OUT STD_LOGIC;
    endTextStrm_1_V_full_n : IN STD_LOGIC;
    endTextStrm_1_V_write : OUT STD_LOGIC;
    endTextStrm_2_V_din : OUT STD_LOGIC;
    endTextStrm_2_V_full_n : IN STD_LOGIC;
    endTextStrm_2_V_write : OUT STD_LOGIC;
    endTextStrm_3_V_din : OUT STD_LOGIC;
    endTextStrm_3_V_full_n : IN STD_LOGIC;
    endTextStrm_3_V_write : OUT STD_LOGIC;
    IVStrm_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_V_V_full_n : IN STD_LOGIC;
    IVStrm_V_V_write : OUT STD_LOGIC;
    IVStrm_1_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_1_V_V_full_n : IN STD_LOGIC;
    IVStrm_1_V_V_write : OUT STD_LOGIC;
    IVStrm_2_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_2_V_V_full_n : IN STD_LOGIC;
    IVStrm_2_V_V_write : OUT STD_LOGIC;
    IVStrm_3_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_3_V_V_full_n : IN STD_LOGIC;
    IVStrm_3_V_V_write : OUT STD_LOGIC;
    cipherkeyStrm_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_V_V_full_n : IN STD_LOGIC;
    cipherkeyStrm_V_V_write : OUT STD_LOGIC;
    cipherkeyStrm_1_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_1_V_V_full_n : IN STD_LOGIC;
    cipherkeyStrm_1_V_V_write : OUT STD_LOGIC;
    cipherkeyStrm_2_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_2_V_V_full_n : IN STD_LOGIC;
    cipherkeyStrm_2_V_V_write : OUT STD_LOGIC;
    cipherkeyStrm_3_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_3_V_V_full_n : IN STD_LOGIC;
    cipherkeyStrm_3_V_V_write : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of aes256CbcDecryptKernel_splitText_4u_256u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal textBlkStrm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln135_reg_379 : STD_LOGIC_VECTOR (0 downto 0);
    signal msgNumStrm_blk_n : STD_LOGIC;
    signal taskNumStrm_blk_n : STD_LOGIC;
    signal IVInStrm_blk_n : STD_LOGIC;
    signal cipherkeyInStrm_blk_n : STD_LOGIC;
    signal textStrm_V_V_blk_n : STD_LOGIC;
    signal textStrm_1_V_V_blk_n : STD_LOGIC;
    signal textStrm_2_V_V_blk_n : STD_LOGIC;
    signal textStrm_3_V_V_blk_n : STD_LOGIC;
    signal endTextStrm_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal endTextStrm_1_V_blk_n : STD_LOGIC;
    signal endTextStrm_2_V_blk_n : STD_LOGIC;
    signal endTextStrm_3_V_blk_n : STD_LOGIC;
    signal IVStrm_V_V_blk_n : STD_LOGIC;
    signal IVStrm_1_V_V_blk_n : STD_LOGIC;
    signal IVStrm_2_V_V_blk_n : STD_LOGIC;
    signal IVStrm_3_V_V_blk_n : STD_LOGIC;
    signal cipherkeyStrm_V_V_blk_n : STD_LOGIC;
    signal cipherkeyStrm_1_V_V_blk_n : STD_LOGIC;
    signal cipherkeyStrm_2_V_V_blk_n : STD_LOGIC;
    signal cipherkeyStrm_3_V_V_blk_n : STD_LOGIC;
    signal empty_47_reg_273 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_344 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_2_reg_352 : STD_LOGIC_VECTOR (255 downto 0);
    signal msgNum_V_reg_360 : STD_LOGIC_VECTOR (63 downto 0);
    signal taskNum_V_reg_365 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln882_fu_284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln695_fu_289_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln695_reg_374 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln135_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_1_fu_300_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal empty_reg_262 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_47_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_fu_295_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                empty_47_reg_273 <= add_ln695_1_fu_300_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_0))) then 
                empty_47_reg_273 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    empty_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                empty_reg_262 <= add_ln695_reg_374;
            elsif ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_262 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln695_reg_374 <= add_ln695_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln135_reg_379 <= icmp_ln135_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                msgNum_V_reg_360 <= msgNumStrm_dout;
                taskNum_V_reg_365 <= taskNumStrm_dout;
                tmp_2_reg_352 <= cipherkeyInStrm_dout;
                tmp_reg_344 <= IVInStrm_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n, endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5, icmp_ln882_fu_284_p2, ap_CS_fsm_state2, icmp_ln135_fu_295_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln135_fu_295_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln135_fu_295_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    IVInStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, IVInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            IVInStrm_blk_n <= IVInStrm_empty_n;
        else 
            IVInStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    IVInStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            IVInStrm_read <= ap_const_logic_1;
        else 
            IVInStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    IVStrm_1_V_V_blk_n_assign_proc : process(IVStrm_1_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            IVStrm_1_V_V_blk_n <= IVStrm_1_V_V_full_n;
        else 
            IVStrm_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    IVStrm_1_V_V_din <= tmp_reg_344;

    IVStrm_1_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            IVStrm_1_V_V_write <= ap_const_logic_1;
        else 
            IVStrm_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    IVStrm_2_V_V_blk_n_assign_proc : process(IVStrm_2_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            IVStrm_2_V_V_blk_n <= IVStrm_2_V_V_full_n;
        else 
            IVStrm_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    IVStrm_2_V_V_din <= tmp_reg_344;

    IVStrm_2_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            IVStrm_2_V_V_write <= ap_const_logic_1;
        else 
            IVStrm_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    IVStrm_3_V_V_blk_n_assign_proc : process(IVStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            IVStrm_3_V_V_blk_n <= IVStrm_3_V_V_full_n;
        else 
            IVStrm_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    IVStrm_3_V_V_din <= tmp_reg_344;

    IVStrm_3_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            IVStrm_3_V_V_write <= ap_const_logic_1;
        else 
            IVStrm_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    IVStrm_V_V_blk_n_assign_proc : process(IVStrm_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            IVStrm_V_V_blk_n <= IVStrm_V_V_full_n;
        else 
            IVStrm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    IVStrm_V_V_din <= tmp_reg_344;

    IVStrm_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            IVStrm_V_V_write <= ap_const_logic_1;
        else 
            IVStrm_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln695_1_fu_300_p2 <= std_logic_vector(unsigned(empty_47_reg_273) + unsigned(ap_const_lv64_1));
    add_ln695_fu_289_p2 <= std_logic_vector(unsigned(empty_reg_262) + unsigned(ap_const_lv64_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(textBlkStrm_empty_n, textStrm_V_V_full_n, textStrm_1_V_V_full_n, textStrm_2_V_V_full_n, textStrm_3_V_V_full_n, endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((endTextStrm_3_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_3_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_2_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_2_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_1_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_1_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textBlkStrm_empty_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(textBlkStrm_empty_n, textStrm_V_V_full_n, textStrm_1_V_V_full_n, textStrm_2_V_V_full_n, textStrm_3_V_V_full_n, endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((endTextStrm_3_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_3_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_2_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_2_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_1_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_1_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textBlkStrm_empty_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(textBlkStrm_empty_n, textStrm_V_V_full_n, textStrm_1_V_V_full_n, textStrm_2_V_V_full_n, textStrm_3_V_V_full_n, endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((endTextStrm_3_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_3_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_2_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_2_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_1_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_1_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textBlkStrm_empty_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(textBlkStrm_empty_n, textStrm_V_V_full_n, textStrm_1_V_V_full_n, textStrm_2_V_V_full_n, textStrm_3_V_V_full_n, endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, icmp_ln135_reg_379)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((endTextStrm_3_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_3_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_2_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_2_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_1_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_1_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((endTextStrm_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textStrm_V_V_full_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)) or ((textBlkStrm_empty_n = ap_const_logic_0) and (icmp_ln135_reg_379 = ap_const_lv1_0)));
    end process;


    ap_block_state5_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n)
    begin
                ap_block_state5 <= ((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln135_fu_295_p2)
    begin
        if ((icmp_ln135_fu_295_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln882_fu_284_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (textStrm_V_V_blk_n and textStrm_3_V_V_blk_n and textStrm_2_V_V_blk_n and textStrm_1_V_V_blk_n and textBlkStrm_blk_n and taskNumStrm_blk_n and msgNumStrm_blk_n and endTextStrm_V_blk_n and endTextStrm_3_V_blk_n and endTextStrm_2_V_blk_n and endTextStrm_1_V_blk_n and cipherkeyStrm_V_V_blk_n and cipherkeyStrm_3_V_V_blk_n and cipherkeyStrm_2_V_V_blk_n and cipherkeyStrm_1_V_V_blk_n and cipherkeyInStrm_blk_n and IVStrm_V_V_blk_n and IVStrm_3_V_V_blk_n and IVStrm_2_V_V_blk_n and IVStrm_1_V_V_blk_n and IVInStrm_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_ready_assign_proc : process(icmp_ln882_fu_284_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln882_fu_284_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    cipherkeyInStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cipherkeyInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cipherkeyInStrm_blk_n <= cipherkeyInStrm_empty_n;
        else 
            cipherkeyInStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cipherkeyInStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cipherkeyInStrm_read <= ap_const_logic_1;
        else 
            cipherkeyInStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    cipherkeyStrm_1_V_V_blk_n_assign_proc : process(cipherkeyStrm_1_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cipherkeyStrm_1_V_V_blk_n <= cipherkeyStrm_1_V_V_full_n;
        else 
            cipherkeyStrm_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cipherkeyStrm_1_V_V_din <= tmp_2_reg_352;

    cipherkeyStrm_1_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            cipherkeyStrm_1_V_V_write <= ap_const_logic_1;
        else 
            cipherkeyStrm_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    cipherkeyStrm_2_V_V_blk_n_assign_proc : process(cipherkeyStrm_2_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cipherkeyStrm_2_V_V_blk_n <= cipherkeyStrm_2_V_V_full_n;
        else 
            cipherkeyStrm_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cipherkeyStrm_2_V_V_din <= tmp_2_reg_352;

    cipherkeyStrm_2_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            cipherkeyStrm_2_V_V_write <= ap_const_logic_1;
        else 
            cipherkeyStrm_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    cipherkeyStrm_3_V_V_blk_n_assign_proc : process(cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cipherkeyStrm_3_V_V_blk_n <= cipherkeyStrm_3_V_V_full_n;
        else 
            cipherkeyStrm_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cipherkeyStrm_3_V_V_din <= tmp_2_reg_352;

    cipherkeyStrm_3_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            cipherkeyStrm_3_V_V_write <= ap_const_logic_1;
        else 
            cipherkeyStrm_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    cipherkeyStrm_V_V_blk_n_assign_proc : process(cipherkeyStrm_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cipherkeyStrm_V_V_blk_n <= cipherkeyStrm_V_V_full_n;
        else 
            cipherkeyStrm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cipherkeyStrm_V_V_din <= tmp_2_reg_352;

    cipherkeyStrm_V_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_state5)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            cipherkeyStrm_V_V_write <= ap_const_logic_1;
        else 
            cipherkeyStrm_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_1_V_blk_n_assign_proc : process(endTextStrm_1_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_1_V_blk_n <= endTextStrm_1_V_full_n;
        else 
            endTextStrm_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_1_V_din_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_01001)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            endTextStrm_1_V_din <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            endTextStrm_1_V_din <= ap_const_logic_0;
        else 
            endTextStrm_1_V_din <= 'X';
        end if; 
    end process;


    endTextStrm_1_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_11001)
    begin
        if (((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_1_V_write <= ap_const_logic_1;
        else 
            endTextStrm_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_2_V_blk_n_assign_proc : process(endTextStrm_2_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_2_V_blk_n <= endTextStrm_2_V_full_n;
        else 
            endTextStrm_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_2_V_din_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_01001)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            endTextStrm_2_V_din <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            endTextStrm_2_V_din <= ap_const_logic_0;
        else 
            endTextStrm_2_V_din <= 'X';
        end if; 
    end process;


    endTextStrm_2_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_11001)
    begin
        if (((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_2_V_write <= ap_const_logic_1;
        else 
            endTextStrm_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_3_V_blk_n_assign_proc : process(endTextStrm_3_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_3_V_blk_n <= endTextStrm_3_V_full_n;
        else 
            endTextStrm_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_3_V_din_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_01001)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            endTextStrm_3_V_din <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            endTextStrm_3_V_din <= ap_const_logic_0;
        else 
            endTextStrm_3_V_din <= 'X';
        end if; 
    end process;


    endTextStrm_3_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_11001)
    begin
        if (((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_3_V_write <= ap_const_logic_1;
        else 
            endTextStrm_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_V_blk_n_assign_proc : process(endTextStrm_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_V_blk_n <= endTextStrm_V_full_n;
        else 
            endTextStrm_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_V_din_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_01001)
    begin
        if ((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            endTextStrm_V_din <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            endTextStrm_V_din <= ap_const_logic_0;
        else 
            endTextStrm_V_din <= 'X';
        end if; 
    end process;


    endTextStrm_V_write_assign_proc : process(endTextStrm_V_full_n, endTextStrm_1_V_full_n, endTextStrm_2_V_full_n, endTextStrm_3_V_full_n, IVStrm_V_V_full_n, IVStrm_1_V_V_full_n, IVStrm_2_V_V_full_n, IVStrm_3_V_V_full_n, cipherkeyStrm_V_V_full_n, cipherkeyStrm_1_V_V_full_n, cipherkeyStrm_2_V_V_full_n, cipherkeyStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_CS_fsm_state5, ap_block_pp0_stage0_11001)
    begin
        if (((not(((cipherkeyStrm_V_V_full_n = ap_const_logic_0) or (endTextStrm_3_V_full_n = ap_const_logic_0) or (endTextStrm_2_V_full_n = ap_const_logic_0) or (endTextStrm_1_V_full_n = ap_const_logic_0) or (endTextStrm_V_full_n = ap_const_logic_0) or (ap_const_logic_0 = IVStrm_3_V_V_full_n) or (ap_const_logic_0 = IVStrm_2_V_V_full_n) or (ap_const_logic_0 = IVStrm_1_V_V_full_n) or (ap_const_logic_0 = IVStrm_V_V_full_n) or (cipherkeyStrm_3_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_2_V_V_full_n = ap_const_logic_0) or (cipherkeyStrm_1_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            endTextStrm_V_write <= ap_const_logic_1;
        else 
            endTextStrm_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln135_fu_295_p2 <= "1" when (empty_47_reg_273 = msgNum_V_reg_360) else "0";
    icmp_ln882_fu_284_p2 <= "1" when (empty_reg_262 = taskNum_V_reg_365) else "0";

    msgNumStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            msgNumStrm_blk_n <= msgNumStrm_empty_n;
        else 
            msgNumStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    msgNumStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            msgNumStrm_read <= ap_const_logic_1;
        else 
            msgNumStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    taskNumStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, taskNumStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskNumStrm_blk_n <= taskNumStrm_empty_n;
        else 
            taskNumStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    taskNumStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, IVInStrm_empty_n, cipherkeyInStrm_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cipherkeyInStrm_empty_n = ap_const_logic_0) or (taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_const_logic_0 = IVInStrm_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskNumStrm_read <= ap_const_logic_1;
        else 
            taskNumStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    textBlkStrm_blk_n_assign_proc : process(textBlkStrm_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textBlkStrm_blk_n <= textBlkStrm_empty_n;
        else 
            textBlkStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    textBlkStrm_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textBlkStrm_read <= ap_const_logic_1;
        else 
            textBlkStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_1_V_V_blk_n_assign_proc : process(textStrm_1_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_1_V_V_blk_n <= textStrm_1_V_V_full_n;
        else 
            textStrm_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    textStrm_1_V_V_din <= textBlkStrm_dout(255 downto 128);

    textStrm_1_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_1_V_V_write <= ap_const_logic_1;
        else 
            textStrm_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_2_V_V_blk_n_assign_proc : process(textStrm_2_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_2_V_V_blk_n <= textStrm_2_V_V_full_n;
        else 
            textStrm_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    textStrm_2_V_V_din <= textBlkStrm_dout(383 downto 256);

    textStrm_2_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_2_V_V_write <= ap_const_logic_1;
        else 
            textStrm_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_3_V_V_blk_n_assign_proc : process(textStrm_3_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_3_V_V_blk_n <= textStrm_3_V_V_full_n;
        else 
            textStrm_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    textStrm_3_V_V_din <= textBlkStrm_dout(511 downto 384);

    textStrm_3_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_3_V_V_write <= ap_const_logic_1;
        else 
            textStrm_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_V_V_blk_n_assign_proc : process(textStrm_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln135_reg_379)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_V_V_blk_n <= textStrm_V_V_full_n;
        else 
            textStrm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    textStrm_V_V_din <= textBlkStrm_dout(128 - 1 downto 0);

    textStrm_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln135_reg_379, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln135_reg_379 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            textStrm_V_V_write <= ap_const_logic_1;
        else 
            textStrm_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
