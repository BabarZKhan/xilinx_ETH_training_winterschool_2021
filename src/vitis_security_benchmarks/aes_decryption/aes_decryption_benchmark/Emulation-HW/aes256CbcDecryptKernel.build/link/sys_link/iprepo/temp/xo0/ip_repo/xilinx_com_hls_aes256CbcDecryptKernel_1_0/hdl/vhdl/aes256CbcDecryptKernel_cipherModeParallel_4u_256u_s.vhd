-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes256CbcDecryptKernel_cipherModeParallel_4u_256u_s is
port (
    taskNum : IN STD_LOGIC_VECTOR (63 downto 0);
    IVStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVStrm_empty_n : IN STD_LOGIC;
    IVStrm_read : OUT STD_LOGIC;
    IVStrm1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVStrm1_empty_n : IN STD_LOGIC;
    IVStrm1_read : OUT STD_LOGIC;
    IVStrm2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVStrm2_empty_n : IN STD_LOGIC;
    IVStrm2_read : OUT STD_LOGIC;
    IVStrm3_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    IVStrm3_empty_n : IN STD_LOGIC;
    IVStrm3_read : OUT STD_LOGIC;
    cipherkeyStrm_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm_empty_n : IN STD_LOGIC;
    cipherkeyStrm_read : OUT STD_LOGIC;
    cipherkeyStrm4_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm4_empty_n : IN STD_LOGIC;
    cipherkeyStrm4_read : OUT STD_LOGIC;
    cipherkeyStrm5_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm5_empty_n : IN STD_LOGIC;
    cipherkeyStrm5_read : OUT STD_LOGIC;
    cipherkeyStrm6_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cipherkeyStrm6_empty_n : IN STD_LOGIC;
    cipherkeyStrm6_read : OUT STD_LOGIC;
    textInStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textInStrm_empty_n : IN STD_LOGIC;
    textInStrm_read : OUT STD_LOGIC;
    textInStrm7_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textInStrm7_empty_n : IN STD_LOGIC;
    textInStrm7_read : OUT STD_LOGIC;
    textInStrm8_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textInStrm8_empty_n : IN STD_LOGIC;
    textInStrm8_read : OUT STD_LOGIC;
    textInStrm9_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textInStrm9_empty_n : IN STD_LOGIC;
    textInStrm9_read : OUT STD_LOGIC;
    endTextInStrm_dout : IN STD_LOGIC;
    endTextInStrm_empty_n : IN STD_LOGIC;
    endTextInStrm_read : OUT STD_LOGIC;
    endTextInStrm10_dout : IN STD_LOGIC;
    endTextInStrm10_empty_n : IN STD_LOGIC;
    endTextInStrm10_read : OUT STD_LOGIC;
    endTextInStrm11_dout : IN STD_LOGIC;
    endTextInStrm11_empty_n : IN STD_LOGIC;
    endTextInStrm11_read : OUT STD_LOGIC;
    endTextInStrm12_dout : IN STD_LOGIC;
    endTextInStrm12_empty_n : IN STD_LOGIC;
    endTextInStrm12_read : OUT STD_LOGIC;
    textOutStrm_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textOutStrm_full_n : IN STD_LOGIC;
    textOutStrm_write : OUT STD_LOGIC;
    textOutStrm13_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textOutStrm13_full_n : IN STD_LOGIC;
    textOutStrm13_write : OUT STD_LOGIC;
    textOutStrm14_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textOutStrm14_full_n : IN STD_LOGIC;
    textOutStrm14_write : OUT STD_LOGIC;
    textOutStrm15_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    textOutStrm15_full_n : IN STD_LOGIC;
    textOutStrm15_write : OUT STD_LOGIC;
    endTextOutStrm_din : OUT STD_LOGIC;
    endTextOutStrm_full_n : IN STD_LOGIC;
    endTextOutStrm_write : OUT STD_LOGIC;
    endTextOutStrm16_din : OUT STD_LOGIC;
    endTextOutStrm16_full_n : IN STD_LOGIC;
    endTextOutStrm16_write : OUT STD_LOGIC;
    endTextOutStrm17_din : OUT STD_LOGIC;
    endTextOutStrm17_full_n : IN STD_LOGIC;
    endTextOutStrm17_write : OUT STD_LOGIC;
    endTextOutStrm18_din : OUT STD_LOGIC;
    endTextOutStrm18_full_n : IN STD_LOGIC;
    endTextOutStrm18_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    taskNum_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of aes256CbcDecryptKernel_cipherModeParallel_4u_256u_s is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_start : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_done : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_continue : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_idle : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_ready : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out_write : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_write : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_din : STD_LOGIC_VECTOR (63 downto 0);
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_write : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_din : STD_LOGIC_VECTOR (63 downto 0);
    signal cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_write : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_ext_blocking_n : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_str_blocking_n : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_int_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_start : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_done : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_continue : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_idle : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_taskNum_read : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_IVStrm_read : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_cipherkeyStrm_read : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_textInStrm_read : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_endTextInStrm_read : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_textOutStrm_din : STD_LOGIC_VECTOR (127 downto 0);
    signal singleCipherMode_256u_75_U0_textOutStrm_write : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_endTextOutStrm_din : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_endTextOutStrm_write : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_ext_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_str_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_int_blocking_n : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_start : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_done : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_continue : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_idle : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_taskNum_read : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_IVStrm1_read : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_cipherkeyStrm4_read : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_textInStrm7_read : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_endTextInStrm10_read : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_textOutStrm13_din : STD_LOGIC_VECTOR (127 downto 0);
    signal singleCipherMode_256u_76_U0_textOutStrm13_write : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_endTextOutStrm16_din : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_endTextOutStrm16_write : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_ext_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_str_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_int_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_start : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_done : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_continue : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_idle : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_taskNum_read : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_IVStrm2_read : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_cipherkeyStrm5_read : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_textInStrm8_read : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_endTextInStrm11_read : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_textOutStrm14_din : STD_LOGIC_VECTOR (127 downto 0);
    signal singleCipherMode_256u_77_U0_textOutStrm14_write : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_endTextOutStrm17_din : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_endTextOutStrm17_write : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_ext_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_str_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_int_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_start : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_done : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_continue : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_idle : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_taskNum_read : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_IVStrm3_read : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_cipherkeyStrm6_read : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_textInStrm9_read : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_endTextInStrm12_read : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_textOutStrm15_din : STD_LOGIC_VECTOR (127 downto 0);
    signal singleCipherMode_256u_78_U0_textOutStrm15_write : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_endTextOutStrm18_din : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_endTextOutStrm18_write : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_ext_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_str_blocking_n : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_int_blocking_n : STD_LOGIC;
    signal taskNum_c_full_n : STD_LOGIC;
    signal taskNum_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal taskNum_c_empty_n : STD_LOGIC;
    signal taskNum_c77_full_n : STD_LOGIC;
    signal taskNum_c77_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal taskNum_c77_empty_n : STD_LOGIC;
    signal taskNum_c78_full_n : STD_LOGIC;
    signal taskNum_c78_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal taskNum_c78_empty_n : STD_LOGIC;
    signal taskNum_c79_full_n : STD_LOGIC;
    signal taskNum_c79_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal taskNum_c79_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_cipherModeParallel_4u_256u_entry98_U0_ap_ready : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_singleCipherMode_256u_75_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_singleCipherMode_256u_76_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_singleCipherMode_256u_77_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_singleCipherMode_256u_78_U0_ap_ready : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal cipherModeParallel_4u_256u_entry98_U0_start_full_n : STD_LOGIC;
    signal cipherModeParallel_4u_256u_entry98_U0_start_write : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_start_full_n : STD_LOGIC;
    signal singleCipherMode_256u_75_U0_start_write : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_start_full_n : STD_LOGIC;
    signal singleCipherMode_256u_76_U0_start_write : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_start_full_n : STD_LOGIC;
    signal singleCipherMode_256u_77_U0_start_write : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_start_full_n : STD_LOGIC;
    signal singleCipherMode_256u_78_U0_start_write : STD_LOGIC;
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_str_blocking_cur_n : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;

    component aes256CbcDecryptKernel_cipherModeParallel_4u_256u_entry98 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskNum : IN STD_LOGIC_VECTOR (63 downto 0);
        taskNum_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        taskNum_out_full_n : IN STD_LOGIC;
        taskNum_out_write : OUT STD_LOGIC;
        taskNum_out1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        taskNum_out1_full_n : IN STD_LOGIC;
        taskNum_out1_write : OUT STD_LOGIC;
        taskNum_out2_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        taskNum_out2_full_n : IN STD_LOGIC;
        taskNum_out2_write : OUT STD_LOGIC;
        taskNum_out3_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        taskNum_out3_full_n : IN STD_LOGIC;
        taskNum_out3_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component aes256CbcDecryptKernel_singleCipherMode_256u_75 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskNum_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        taskNum_empty_n : IN STD_LOGIC;
        taskNum_read : OUT STD_LOGIC;
        IVStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        IVStrm_empty_n : IN STD_LOGIC;
        IVStrm_read : OUT STD_LOGIC;
        cipherkeyStrm_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        cipherkeyStrm_empty_n : IN STD_LOGIC;
        cipherkeyStrm_read : OUT STD_LOGIC;
        textInStrm_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        textInStrm_empty_n : IN STD_LOGIC;
        textInStrm_read : OUT STD_LOGIC;
        endTextInStrm_dout : IN STD_LOGIC;
        endTextInStrm_empty_n : IN STD_LOGIC;
        endTextInStrm_read : OUT STD_LOGIC;
        textOutStrm_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        textOutStrm_full_n : IN STD_LOGIC;
        textOutStrm_write : OUT STD_LOGIC;
        endTextOutStrm_din : OUT STD_LOGIC;
        endTextOutStrm_full_n : IN STD_LOGIC;
        endTextOutStrm_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component aes256CbcDecryptKernel_singleCipherMode_256u_76 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskNum_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        taskNum_empty_n : IN STD_LOGIC;
        taskNum_read : OUT STD_LOGIC;
        IVStrm1_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        IVStrm1_empty_n : IN STD_LOGIC;
        IVStrm1_read : OUT STD_LOGIC;
        cipherkeyStrm4_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        cipherkeyStrm4_empty_n : IN STD_LOGIC;
        cipherkeyStrm4_read : OUT STD_LOGIC;
        textInStrm7_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        textInStrm7_empty_n : IN STD_LOGIC;
        textInStrm7_read : OUT STD_LOGIC;
        endTextInStrm10_dout : IN STD_LOGIC;
        endTextInStrm10_empty_n : IN STD_LOGIC;
        endTextInStrm10_read : OUT STD_LOGIC;
        textOutStrm13_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        textOutStrm13_full_n : IN STD_LOGIC;
        textOutStrm13_write : OUT STD_LOGIC;
        endTextOutStrm16_din : OUT STD_LOGIC;
        endTextOutStrm16_full_n : IN STD_LOGIC;
        endTextOutStrm16_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component aes256CbcDecryptKernel_singleCipherMode_256u_77 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskNum_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        taskNum_empty_n : IN STD_LOGIC;
        taskNum_read : OUT STD_LOGIC;
        IVStrm2_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        IVStrm2_empty_n : IN STD_LOGIC;
        IVStrm2_read : OUT STD_LOGIC;
        cipherkeyStrm5_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        cipherkeyStrm5_empty_n : IN STD_LOGIC;
        cipherkeyStrm5_read : OUT STD_LOGIC;
        textInStrm8_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        textInStrm8_empty_n : IN STD_LOGIC;
        textInStrm8_read : OUT STD_LOGIC;
        endTextInStrm11_dout : IN STD_LOGIC;
        endTextInStrm11_empty_n : IN STD_LOGIC;
        endTextInStrm11_read : OUT STD_LOGIC;
        textOutStrm14_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        textOutStrm14_full_n : IN STD_LOGIC;
        textOutStrm14_write : OUT STD_LOGIC;
        endTextOutStrm17_din : OUT STD_LOGIC;
        endTextOutStrm17_full_n : IN STD_LOGIC;
        endTextOutStrm17_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component aes256CbcDecryptKernel_singleCipherMode_256u_78 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        taskNum_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        taskNum_empty_n : IN STD_LOGIC;
        taskNum_read : OUT STD_LOGIC;
        IVStrm3_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        IVStrm3_empty_n : IN STD_LOGIC;
        IVStrm3_read : OUT STD_LOGIC;
        cipherkeyStrm6_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        cipherkeyStrm6_empty_n : IN STD_LOGIC;
        cipherkeyStrm6_read : OUT STD_LOGIC;
        textInStrm9_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        textInStrm9_empty_n : IN STD_LOGIC;
        textInStrm9_read : OUT STD_LOGIC;
        endTextInStrm12_dout : IN STD_LOGIC;
        endTextInStrm12_empty_n : IN STD_LOGIC;
        endTextInStrm12_read : OUT STD_LOGIC;
        textOutStrm15_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        textOutStrm15_full_n : IN STD_LOGIC;
        textOutStrm15_write : OUT STD_LOGIC;
        endTextOutStrm18_din : OUT STD_LOGIC;
        endTextOutStrm18_full_n : IN STD_LOGIC;
        endTextOutStrm18_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component aes256CbcDecryptKernel_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    cipherModeParallel_4u_256u_entry98_U0 : component aes256CbcDecryptKernel_cipherModeParallel_4u_256u_entry98
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => cipherModeParallel_4u_256u_entry98_U0_ap_start,
        ap_done => cipherModeParallel_4u_256u_entry98_U0_ap_done,
        ap_continue => cipherModeParallel_4u_256u_entry98_U0_ap_continue,
        ap_idle => cipherModeParallel_4u_256u_entry98_U0_ap_idle,
        ap_ready => cipherModeParallel_4u_256u_entry98_U0_ap_ready,
        taskNum => taskNum,
        taskNum_out_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out_din,
        taskNum_out_full_n => taskNum_c_full_n,
        taskNum_out_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out_write,
        taskNum_out1_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_din,
        taskNum_out1_full_n => taskNum_c77_full_n,
        taskNum_out1_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_write,
        taskNum_out2_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_din,
        taskNum_out2_full_n => taskNum_c78_full_n,
        taskNum_out2_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_write,
        taskNum_out3_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_din,
        taskNum_out3_full_n => taskNum_c79_full_n,
        taskNum_out3_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_write,
        ap_ext_blocking_n => cipherModeParallel_4u_256u_entry98_U0_ap_ext_blocking_n,
        ap_str_blocking_n => cipherModeParallel_4u_256u_entry98_U0_ap_str_blocking_n,
        ap_int_blocking_n => cipherModeParallel_4u_256u_entry98_U0_ap_int_blocking_n);

    singleCipherMode_256u_75_U0 : component aes256CbcDecryptKernel_singleCipherMode_256u_75
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => singleCipherMode_256u_75_U0_ap_start,
        ap_done => singleCipherMode_256u_75_U0_ap_done,
        ap_continue => singleCipherMode_256u_75_U0_ap_continue,
        ap_idle => singleCipherMode_256u_75_U0_ap_idle,
        ap_ready => singleCipherMode_256u_75_U0_ap_ready,
        taskNum_dout => taskNum_c_dout,
        taskNum_empty_n => taskNum_c_empty_n,
        taskNum_read => singleCipherMode_256u_75_U0_taskNum_read,
        IVStrm_dout => IVStrm_dout,
        IVStrm_empty_n => IVStrm_empty_n,
        IVStrm_read => singleCipherMode_256u_75_U0_IVStrm_read,
        cipherkeyStrm_dout => cipherkeyStrm_dout,
        cipherkeyStrm_empty_n => cipherkeyStrm_empty_n,
        cipherkeyStrm_read => singleCipherMode_256u_75_U0_cipherkeyStrm_read,
        textInStrm_dout => textInStrm_dout,
        textInStrm_empty_n => textInStrm_empty_n,
        textInStrm_read => singleCipherMode_256u_75_U0_textInStrm_read,
        endTextInStrm_dout => endTextInStrm_dout,
        endTextInStrm_empty_n => endTextInStrm_empty_n,
        endTextInStrm_read => singleCipherMode_256u_75_U0_endTextInStrm_read,
        textOutStrm_din => singleCipherMode_256u_75_U0_textOutStrm_din,
        textOutStrm_full_n => textOutStrm_full_n,
        textOutStrm_write => singleCipherMode_256u_75_U0_textOutStrm_write,
        endTextOutStrm_din => singleCipherMode_256u_75_U0_endTextOutStrm_din,
        endTextOutStrm_full_n => endTextOutStrm_full_n,
        endTextOutStrm_write => singleCipherMode_256u_75_U0_endTextOutStrm_write,
        ap_ext_blocking_n => singleCipherMode_256u_75_U0_ap_ext_blocking_n,
        ap_str_blocking_n => singleCipherMode_256u_75_U0_ap_str_blocking_n,
        ap_int_blocking_n => singleCipherMode_256u_75_U0_ap_int_blocking_n);

    singleCipherMode_256u_76_U0 : component aes256CbcDecryptKernel_singleCipherMode_256u_76
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => singleCipherMode_256u_76_U0_ap_start,
        ap_done => singleCipherMode_256u_76_U0_ap_done,
        ap_continue => singleCipherMode_256u_76_U0_ap_continue,
        ap_idle => singleCipherMode_256u_76_U0_ap_idle,
        ap_ready => singleCipherMode_256u_76_U0_ap_ready,
        taskNum_dout => taskNum_c77_dout,
        taskNum_empty_n => taskNum_c77_empty_n,
        taskNum_read => singleCipherMode_256u_76_U0_taskNum_read,
        IVStrm1_dout => IVStrm1_dout,
        IVStrm1_empty_n => IVStrm1_empty_n,
        IVStrm1_read => singleCipherMode_256u_76_U0_IVStrm1_read,
        cipherkeyStrm4_dout => cipherkeyStrm4_dout,
        cipherkeyStrm4_empty_n => cipherkeyStrm4_empty_n,
        cipherkeyStrm4_read => singleCipherMode_256u_76_U0_cipherkeyStrm4_read,
        textInStrm7_dout => textInStrm7_dout,
        textInStrm7_empty_n => textInStrm7_empty_n,
        textInStrm7_read => singleCipherMode_256u_76_U0_textInStrm7_read,
        endTextInStrm10_dout => endTextInStrm10_dout,
        endTextInStrm10_empty_n => endTextInStrm10_empty_n,
        endTextInStrm10_read => singleCipherMode_256u_76_U0_endTextInStrm10_read,
        textOutStrm13_din => singleCipherMode_256u_76_U0_textOutStrm13_din,
        textOutStrm13_full_n => textOutStrm13_full_n,
        textOutStrm13_write => singleCipherMode_256u_76_U0_textOutStrm13_write,
        endTextOutStrm16_din => singleCipherMode_256u_76_U0_endTextOutStrm16_din,
        endTextOutStrm16_full_n => endTextOutStrm16_full_n,
        endTextOutStrm16_write => singleCipherMode_256u_76_U0_endTextOutStrm16_write,
        ap_ext_blocking_n => singleCipherMode_256u_76_U0_ap_ext_blocking_n,
        ap_str_blocking_n => singleCipherMode_256u_76_U0_ap_str_blocking_n,
        ap_int_blocking_n => singleCipherMode_256u_76_U0_ap_int_blocking_n);

    singleCipherMode_256u_77_U0 : component aes256CbcDecryptKernel_singleCipherMode_256u_77
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => singleCipherMode_256u_77_U0_ap_start,
        ap_done => singleCipherMode_256u_77_U0_ap_done,
        ap_continue => singleCipherMode_256u_77_U0_ap_continue,
        ap_idle => singleCipherMode_256u_77_U0_ap_idle,
        ap_ready => singleCipherMode_256u_77_U0_ap_ready,
        taskNum_dout => taskNum_c78_dout,
        taskNum_empty_n => taskNum_c78_empty_n,
        taskNum_read => singleCipherMode_256u_77_U0_taskNum_read,
        IVStrm2_dout => IVStrm2_dout,
        IVStrm2_empty_n => IVStrm2_empty_n,
        IVStrm2_read => singleCipherMode_256u_77_U0_IVStrm2_read,
        cipherkeyStrm5_dout => cipherkeyStrm5_dout,
        cipherkeyStrm5_empty_n => cipherkeyStrm5_empty_n,
        cipherkeyStrm5_read => singleCipherMode_256u_77_U0_cipherkeyStrm5_read,
        textInStrm8_dout => textInStrm8_dout,
        textInStrm8_empty_n => textInStrm8_empty_n,
        textInStrm8_read => singleCipherMode_256u_77_U0_textInStrm8_read,
        endTextInStrm11_dout => endTextInStrm11_dout,
        endTextInStrm11_empty_n => endTextInStrm11_empty_n,
        endTextInStrm11_read => singleCipherMode_256u_77_U0_endTextInStrm11_read,
        textOutStrm14_din => singleCipherMode_256u_77_U0_textOutStrm14_din,
        textOutStrm14_full_n => textOutStrm14_full_n,
        textOutStrm14_write => singleCipherMode_256u_77_U0_textOutStrm14_write,
        endTextOutStrm17_din => singleCipherMode_256u_77_U0_endTextOutStrm17_din,
        endTextOutStrm17_full_n => endTextOutStrm17_full_n,
        endTextOutStrm17_write => singleCipherMode_256u_77_U0_endTextOutStrm17_write,
        ap_ext_blocking_n => singleCipherMode_256u_77_U0_ap_ext_blocking_n,
        ap_str_blocking_n => singleCipherMode_256u_77_U0_ap_str_blocking_n,
        ap_int_blocking_n => singleCipherMode_256u_77_U0_ap_int_blocking_n);

    singleCipherMode_256u_78_U0 : component aes256CbcDecryptKernel_singleCipherMode_256u_78
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => singleCipherMode_256u_78_U0_ap_start,
        ap_done => singleCipherMode_256u_78_U0_ap_done,
        ap_continue => singleCipherMode_256u_78_U0_ap_continue,
        ap_idle => singleCipherMode_256u_78_U0_ap_idle,
        ap_ready => singleCipherMode_256u_78_U0_ap_ready,
        taskNum_dout => taskNum_c79_dout,
        taskNum_empty_n => taskNum_c79_empty_n,
        taskNum_read => singleCipherMode_256u_78_U0_taskNum_read,
        IVStrm3_dout => IVStrm3_dout,
        IVStrm3_empty_n => IVStrm3_empty_n,
        IVStrm3_read => singleCipherMode_256u_78_U0_IVStrm3_read,
        cipherkeyStrm6_dout => cipherkeyStrm6_dout,
        cipherkeyStrm6_empty_n => cipherkeyStrm6_empty_n,
        cipherkeyStrm6_read => singleCipherMode_256u_78_U0_cipherkeyStrm6_read,
        textInStrm9_dout => textInStrm9_dout,
        textInStrm9_empty_n => textInStrm9_empty_n,
        textInStrm9_read => singleCipherMode_256u_78_U0_textInStrm9_read,
        endTextInStrm12_dout => endTextInStrm12_dout,
        endTextInStrm12_empty_n => endTextInStrm12_empty_n,
        endTextInStrm12_read => singleCipherMode_256u_78_U0_endTextInStrm12_read,
        textOutStrm15_din => singleCipherMode_256u_78_U0_textOutStrm15_din,
        textOutStrm15_full_n => textOutStrm15_full_n,
        textOutStrm15_write => singleCipherMode_256u_78_U0_textOutStrm15_write,
        endTextOutStrm18_din => singleCipherMode_256u_78_U0_endTextOutStrm18_din,
        endTextOutStrm18_full_n => endTextOutStrm18_full_n,
        endTextOutStrm18_write => singleCipherMode_256u_78_U0_endTextOutStrm18_write,
        ap_ext_blocking_n => singleCipherMode_256u_78_U0_ap_ext_blocking_n,
        ap_str_blocking_n => singleCipherMode_256u_78_U0_ap_str_blocking_n,
        ap_int_blocking_n => singleCipherMode_256u_78_U0_ap_int_blocking_n);

    taskNum_c_U : component aes256CbcDecryptKernel_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out_din,
        if_full_n => taskNum_c_full_n,
        if_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out_write,
        if_dout => taskNum_c_dout,
        if_empty_n => taskNum_c_empty_n,
        if_read => singleCipherMode_256u_75_U0_taskNum_read);

    taskNum_c77_U : component aes256CbcDecryptKernel_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_din,
        if_full_n => taskNum_c77_full_n,
        if_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out1_write,
        if_dout => taskNum_c77_dout,
        if_empty_n => taskNum_c77_empty_n,
        if_read => singleCipherMode_256u_76_U0_taskNum_read);

    taskNum_c78_U : component aes256CbcDecryptKernel_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_din,
        if_full_n => taskNum_c78_full_n,
        if_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out2_write,
        if_dout => taskNum_c78_dout,
        if_empty_n => taskNum_c78_empty_n,
        if_read => singleCipherMode_256u_77_U0_taskNum_read);

    taskNum_c79_U : component aes256CbcDecryptKernel_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_din,
        if_full_n => taskNum_c79_full_n,
        if_write => cipherModeParallel_4u_256u_entry98_U0_taskNum_out3_write,
        if_dout => taskNum_c79_dout,
        if_empty_n => taskNum_c79_empty_n,
        if_read => singleCipherMode_256u_78_U0_taskNum_read);





    ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready <= ap_sync_cipherModeParallel_4u_256u_entry98_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready <= ap_sync_singleCipherMode_256u_75_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready <= ap_sync_singleCipherMode_256u_76_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready <= ap_sync_singleCipherMode_256u_77_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready <= ap_sync_singleCipherMode_256u_78_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    cipherModeParallel_4u_256u_entry98_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cipherModeParallel_4u_256u_entry98_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                cipherModeParallel_4u_256u_entry98_U0_ap_ready_count <= std_logic_vector(unsigned(cipherModeParallel_4u_256u_entry98_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((cipherModeParallel_4u_256u_entry98_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                cipherModeParallel_4u_256u_entry98_U0_ap_ready_count <= std_logic_vector(unsigned(cipherModeParallel_4u_256u_entry98_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    singleCipherMode_256u_75_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (singleCipherMode_256u_75_U0_ap_ready = ap_const_logic_0))) then 
                singleCipherMode_256u_75_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_75_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (singleCipherMode_256u_75_U0_ap_ready = ap_const_logic_1))) then 
                singleCipherMode_256u_75_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_75_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    singleCipherMode_256u_76_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (singleCipherMode_256u_76_U0_ap_ready = ap_const_logic_0))) then 
                singleCipherMode_256u_76_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_76_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (singleCipherMode_256u_76_U0_ap_ready = ap_const_logic_1))) then 
                singleCipherMode_256u_76_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_76_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    singleCipherMode_256u_77_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (singleCipherMode_256u_77_U0_ap_ready = ap_const_logic_0))) then 
                singleCipherMode_256u_77_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_77_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (singleCipherMode_256u_77_U0_ap_ready = ap_const_logic_1))) then 
                singleCipherMode_256u_77_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_77_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    singleCipherMode_256u_78_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (singleCipherMode_256u_78_U0_ap_ready = ap_const_logic_0))) then 
                singleCipherMode_256u_78_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_78_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (singleCipherMode_256u_78_U0_ap_ready = ap_const_logic_1))) then 
                singleCipherMode_256u_78_U0_ap_ready_count <= std_logic_vector(unsigned(singleCipherMode_256u_78_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    IVStrm1_read <= singleCipherMode_256u_76_U0_IVStrm1_read;
    IVStrm2_read <= singleCipherMode_256u_77_U0_IVStrm2_read;
    IVStrm3_read <= singleCipherMode_256u_78_U0_IVStrm3_read;
    IVStrm_read <= singleCipherMode_256u_75_U0_IVStrm_read;
    ap_done <= ap_sync_done;
    ap_ext_blocking_cur_n <= ap_const_logic_1;
    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_ext_blocking_cur_n);
    ap_ext_blocking_sub_n <= (singleCipherMode_256u_78_U0_ap_ext_blocking_n and singleCipherMode_256u_77_U0_ap_ext_blocking_n and singleCipherMode_256u_76_U0_ap_ext_blocking_n and singleCipherMode_256u_75_U0_ap_ext_blocking_n and cipherModeParallel_4u_256u_entry98_U0_ap_ext_blocking_n);
    ap_idle <= (singleCipherMode_256u_78_U0_ap_idle and singleCipherMode_256u_77_U0_ap_idle and singleCipherMode_256u_76_U0_ap_idle and singleCipherMode_256u_75_U0_ap_idle and cipherModeParallel_4u_256u_entry98_U0_ap_idle);
    ap_int_blocking_cur_n <= ap_const_logic_1;
    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_int_blocking_cur_n);
    ap_int_blocking_sub_n <= (singleCipherMode_256u_78_U0_ap_int_blocking_n and singleCipherMode_256u_77_U0_ap_int_blocking_n and singleCipherMode_256u_76_U0_ap_int_blocking_n and singleCipherMode_256u_75_U0_ap_int_blocking_n and cipherModeParallel_4u_256u_entry98_U0_ap_int_blocking_n);
    ap_ready <= ap_sync_ready;
    ap_str_blocking_cur_n <= ap_const_logic_1;
    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_str_blocking_cur_n);
    ap_str_blocking_sub_n <= (singleCipherMode_256u_78_U0_ap_str_blocking_n and singleCipherMode_256u_77_U0_ap_str_blocking_n and singleCipherMode_256u_76_U0_ap_str_blocking_n and singleCipherMode_256u_75_U0_ap_str_blocking_n and cipherModeParallel_4u_256u_entry98_U0_ap_str_blocking_n);
    ap_sync_cipherModeParallel_4u_256u_entry98_U0_ap_ready <= (cipherModeParallel_4u_256u_entry98_U0_ap_ready or ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready);
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (singleCipherMode_256u_78_U0_ap_done and singleCipherMode_256u_77_U0_ap_done and singleCipherMode_256u_76_U0_ap_done and singleCipherMode_256u_75_U0_ap_done);
    ap_sync_ready <= (ap_sync_singleCipherMode_256u_78_U0_ap_ready and ap_sync_singleCipherMode_256u_77_U0_ap_ready and ap_sync_singleCipherMode_256u_76_U0_ap_ready and ap_sync_singleCipherMode_256u_75_U0_ap_ready and ap_sync_cipherModeParallel_4u_256u_entry98_U0_ap_ready);
    ap_sync_singleCipherMode_256u_75_U0_ap_ready <= (singleCipherMode_256u_75_U0_ap_ready or ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready);
    ap_sync_singleCipherMode_256u_76_U0_ap_ready <= (singleCipherMode_256u_76_U0_ap_ready or ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready);
    ap_sync_singleCipherMode_256u_77_U0_ap_ready <= (singleCipherMode_256u_77_U0_ap_ready or ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready);
    ap_sync_singleCipherMode_256u_78_U0_ap_ready <= (singleCipherMode_256u_78_U0_ap_ready or ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready);
    cipherModeParallel_4u_256u_entry98_U0_ap_continue <= ap_const_logic_1;
    cipherModeParallel_4u_256u_entry98_U0_ap_start <= ((ap_sync_reg_cipherModeParallel_4u_256u_entry98_U0_ap_ready xor ap_const_logic_1) and ap_start);
    cipherModeParallel_4u_256u_entry98_U0_start_full_n <= ap_const_logic_1;
    cipherModeParallel_4u_256u_entry98_U0_start_write <= ap_const_logic_0;
    cipherkeyStrm4_read <= singleCipherMode_256u_76_U0_cipherkeyStrm4_read;
    cipherkeyStrm5_read <= singleCipherMode_256u_77_U0_cipherkeyStrm5_read;
    cipherkeyStrm6_read <= singleCipherMode_256u_78_U0_cipherkeyStrm6_read;
    cipherkeyStrm_read <= singleCipherMode_256u_75_U0_cipherkeyStrm_read;
    endTextInStrm10_read <= singleCipherMode_256u_76_U0_endTextInStrm10_read;
    endTextInStrm11_read <= singleCipherMode_256u_77_U0_endTextInStrm11_read;
    endTextInStrm12_read <= singleCipherMode_256u_78_U0_endTextInStrm12_read;
    endTextInStrm_read <= singleCipherMode_256u_75_U0_endTextInStrm_read;
    endTextOutStrm16_din <= singleCipherMode_256u_76_U0_endTextOutStrm16_din;
    endTextOutStrm16_write <= singleCipherMode_256u_76_U0_endTextOutStrm16_write;
    endTextOutStrm17_din <= singleCipherMode_256u_77_U0_endTextOutStrm17_din;
    endTextOutStrm17_write <= singleCipherMode_256u_77_U0_endTextOutStrm17_write;
    endTextOutStrm18_din <= singleCipherMode_256u_78_U0_endTextOutStrm18_din;
    endTextOutStrm18_write <= singleCipherMode_256u_78_U0_endTextOutStrm18_write;
    endTextOutStrm_din <= singleCipherMode_256u_75_U0_endTextOutStrm_din;
    endTextOutStrm_write <= singleCipherMode_256u_75_U0_endTextOutStrm_write;
    singleCipherMode_256u_75_U0_ap_continue <= ap_sync_continue;
    singleCipherMode_256u_75_U0_ap_start <= ((ap_sync_reg_singleCipherMode_256u_75_U0_ap_ready xor ap_const_logic_1) and ap_start);
    singleCipherMode_256u_75_U0_start_full_n <= ap_const_logic_1;
    singleCipherMode_256u_75_U0_start_write <= ap_const_logic_0;
    singleCipherMode_256u_76_U0_ap_continue <= ap_sync_continue;
    singleCipherMode_256u_76_U0_ap_start <= ((ap_sync_reg_singleCipherMode_256u_76_U0_ap_ready xor ap_const_logic_1) and ap_start);
    singleCipherMode_256u_76_U0_start_full_n <= ap_const_logic_1;
    singleCipherMode_256u_76_U0_start_write <= ap_const_logic_0;
    singleCipherMode_256u_77_U0_ap_continue <= ap_sync_continue;
    singleCipherMode_256u_77_U0_ap_start <= ((ap_sync_reg_singleCipherMode_256u_77_U0_ap_ready xor ap_const_logic_1) and ap_start);
    singleCipherMode_256u_77_U0_start_full_n <= ap_const_logic_1;
    singleCipherMode_256u_77_U0_start_write <= ap_const_logic_0;
    singleCipherMode_256u_78_U0_ap_continue <= ap_sync_continue;
    singleCipherMode_256u_78_U0_ap_start <= ((ap_sync_reg_singleCipherMode_256u_78_U0_ap_ready xor ap_const_logic_1) and ap_start);
    singleCipherMode_256u_78_U0_start_full_n <= ap_const_logic_1;
    singleCipherMode_256u_78_U0_start_write <= ap_const_logic_0;
    textInStrm7_read <= singleCipherMode_256u_76_U0_textInStrm7_read;
    textInStrm8_read <= singleCipherMode_256u_77_U0_textInStrm8_read;
    textInStrm9_read <= singleCipherMode_256u_78_U0_textInStrm9_read;
    textInStrm_read <= singleCipherMode_256u_75_U0_textInStrm_read;
    textOutStrm13_din <= singleCipherMode_256u_76_U0_textOutStrm13_din;
    textOutStrm13_write <= singleCipherMode_256u_76_U0_textOutStrm13_write;
    textOutStrm14_din <= singleCipherMode_256u_77_U0_textOutStrm14_din;
    textOutStrm14_write <= singleCipherMode_256u_77_U0_textOutStrm14_write;
    textOutStrm15_din <= singleCipherMode_256u_78_U0_textOutStrm15_din;
    textOutStrm15_write <= singleCipherMode_256u_78_U0_textOutStrm15_write;
    textOutStrm_din <= singleCipherMode_256u_75_U0_textOutStrm_din;
    textOutStrm_write <= singleCipherMode_256u_75_U0_textOutStrm_write;
end behav;
