// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes256CbcDecryptKernel_updateKey (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        this_0_4_address0,
        this_0_4_ce0,
        this_0_4_q0,
        this_0_4_address1,
        this_0_4_ce1,
        this_0_4_q1,
        cipherkey,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_pp0_stage0 = 12'd2;
parameter    ap_ST_fsm_pp0_stage1 = 12'd4;
parameter    ap_ST_fsm_pp0_stage2 = 12'd8;
parameter    ap_ST_fsm_pp0_stage3 = 12'd16;
parameter    ap_ST_fsm_pp0_stage4 = 12'd32;
parameter    ap_ST_fsm_pp0_stage5 = 12'd64;
parameter    ap_ST_fsm_pp0_stage6 = 12'd128;
parameter    ap_ST_fsm_pp0_stage7 = 12'd256;
parameter    ap_ST_fsm_pp0_stage8 = 12'd512;
parameter    ap_ST_fsm_pp0_stage9 = 12'd1024;
parameter    ap_ST_fsm_state17 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] this_0_4_address0;
output   this_0_4_ce0;
input  [31:0] this_0_4_q0;
output  [7:0] this_0_4_address1;
output   this_0_4_ce1;
input  [31:0] this_0_4_q1;
input  [255:0] cipherkey;
output  [127:0] ap_return_0;
output  [127:0] ap_return_1;
output  [127:0] ap_return_2;
output  [127:0] ap_return_3;
output  [127:0] ap_return_4;
output  [127:0] ap_return_5;
output  [127:0] ap_return_6;
output  [127:0] ap_return_7;
output  [127:0] ap_return_8;
output  [127:0] ap_return_9;
output  [127:0] ap_return_10;
output  [127:0] ap_return_11;
output  [127:0] ap_return_12;
output  [127:0] ap_return_13;
output  [127:0] ap_return_14;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] this_0_4_address0;
reg this_0_4_ce0;
reg[7:0] this_0_4_address1;
reg this_0_4_ce1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] decipher_0_3_address0;
reg    decipher_0_3_ce0;
wire   [7:0] decipher_0_3_q0;
reg   [10:0] decipher_0_3_address1;
reg    decipher_0_3_ce1;
wire   [7:0] decipher_0_3_q1;
reg   [127:0] roundkey_2_4_reg_528;
reg   [3:0] i_2_reg_538;
reg   [3:0] i_2_reg_538_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [127:0] roundkey_22_1848_reg_561;
reg   [31:0] reg_622;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln882_reg_2322;
reg   [0:0] icmp_ln874_1_reg_2350;
reg   [0:0] icmp_ln874_reg_2326;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln874_1_reg_2350_pp0_iter1_reg;
reg   [0:0] icmp_ln874_reg_2326_pp0_iter1_reg;
reg   [31:0] reg_626;
wire   [127:0] roundkey_2_1_fu_630_p1;
reg   [127:0] roundkey_2_1_reg_2310;
reg   [127:0] roundkey_1_3_reg_2316;
wire   [0:0] icmp_ln882_fu_649_p2;
reg   [0:0] icmp_ln882_reg_2322_pp0_iter1_reg;
wire   [0:0] icmp_ln874_fu_659_p2;
reg   [7:0] p_Result_2_reg_2340;
reg   [7:0] p_Result_3_reg_2345;
wire   [0:0] icmp_ln874_1_fu_771_p2;
reg   [7:0] decipher_0_3_load_reg_2354;
reg   [7:0] decipher_0_3_load_1_reg_2359;
wire   [31:0] trunc_ln674_1_fu_785_p1;
reg   [31:0] trunc_ln674_1_reg_2374;
reg   [31:0] p_Result_7_reg_2379;
reg   [31:0] p_Result_8_reg_2384;
reg   [31:0] p_Result_10_reg_2389;
wire   [3:0] i_fu_871_p2;
reg   [3:0] i_reg_2394;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state14_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state15_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [7:0] p_Result_13_reg_2409;
reg   [7:0] p_Result_14_reg_2414;
reg   [7:0] p_Result_15_reg_2419;
reg   [7:0] p_Result_16_reg_2424;
reg   [7:0] p_Result_17_reg_2429;
reg   [7:0] p_Result_18_reg_2434;
reg   [7:0] p_Result_19_reg_2439;
reg   [7:0] p_Result_20_reg_2444;
reg   [7:0] p_Result_21_reg_2449;
reg   [7:0] p_Result_22_reg_2454;
wire   [7:0] grp_fu_612_p4;
reg   [7:0] p_Result_23_reg_2459;
reg   [7:0] p_Result_24_reg_2464;
reg   [7:0] p_Result_25_reg_2469;
reg   [7:0] p_Result_26_reg_2474;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state16_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [7:0] xor_ln1354_6_fu_1131_p2;
reg   [7:0] xor_ln1354_6_reg_2539;
wire   [7:0] xor_ln1354_9_fu_1183_p2;
reg   [7:0] xor_ln1354_9_reg_2544;
wire   [7:0] xor_ln1354_12_fu_1235_p2;
reg   [7:0] xor_ln1354_12_reg_2549;
wire   [7:0] xor_ln1354_15_fu_1287_p2;
reg   [7:0] xor_ln1354_15_reg_2554;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [7:0] xor_ln1354_18_fu_1375_p2;
reg   [7:0] xor_ln1354_18_reg_2599;
wire   [7:0] xor_ln1354_21_fu_1427_p2;
reg   [7:0] xor_ln1354_21_reg_2604;
wire   [7:0] xor_ln1354_24_fu_1479_p2;
reg   [7:0] xor_ln1354_24_reg_2609;
wire   [7:0] xor_ln1354_27_fu_1531_p2;
reg   [7:0] xor_ln1354_27_reg_2614;
wire   [7:0] xor_ln1354_30_fu_1611_p2;
reg   [7:0] xor_ln1354_30_reg_2649;
wire   [7:0] xor_ln1354_33_fu_1663_p2;
reg   [7:0] xor_ln1354_33_reg_2654;
wire   [7:0] xor_ln1354_36_fu_1715_p2;
reg   [7:0] xor_ln1354_36_reg_2659;
wire   [7:0] xor_ln1354_39_fu_1767_p2;
reg   [7:0] xor_ln1354_39_reg_2664;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage4_subdone;
reg   [127:0] ap_phi_mux_roundkey_2_4_phi_fu_531_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i_2_phi_fu_542_p4;
reg   [127:0] ap_phi_reg_pp0_iter0_roundkey_22_1849_reg_550;
reg   [127:0] ap_phi_reg_pp0_iter0_roundkey_22_1848_reg_561;
wire   [63:0] zext_ln538_fu_731_p1;
wire   [63:0] zext_ln708_fu_746_p1;
wire   [63:0] zext_ln708_1_fu_777_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln708_2_fu_781_p1;
wire   [63:0] zext_ln708_3_fu_881_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln708_4_fu_896_p1;
wire   [63:0] zext_ln538_1_fu_1031_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln538_2_fu_1036_p1;
wire   [63:0] zext_ln708_5_fu_1041_p1;
wire   [63:0] zext_ln708_6_fu_1045_p1;
wire   [63:0] zext_ln538_3_fu_1049_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln538_4_fu_1054_p1;
wire   [63:0] zext_ln708_7_fu_1059_p1;
wire   [63:0] zext_ln708_8_fu_1063_p1;
wire   [63:0] zext_ln538_5_fu_1067_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln538_6_fu_1072_p1;
wire   [63:0] zext_ln708_9_fu_1077_p1;
wire   [63:0] zext_ln708_10_fu_1081_p1;
wire   [63:0] zext_ln538_7_fu_1293_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln538_8_fu_1298_p1;
wire   [63:0] zext_ln708_11_fu_1303_p1;
wire   [63:0] zext_ln708_12_fu_1307_p1;
wire   [63:0] zext_ln538_9_fu_1311_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln538_10_fu_1316_p1;
wire   [63:0] zext_ln708_13_fu_1321_p1;
wire   [63:0] zext_ln708_14_fu_1325_p1;
wire   [63:0] zext_ln538_11_fu_1537_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln538_12_fu_1542_p1;
wire   [63:0] zext_ln708_15_fu_1547_p1;
wire   [63:0] zext_ln708_16_fu_1551_p1;
wire   [63:0] zext_ln538_13_fu_1555_p1;
wire   [63:0] zext_ln538_14_fu_1560_p1;
wire   [63:0] zext_ln708_17_fu_1773_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln708_18_fu_1777_p1;
wire   [63:0] zext_ln538_15_fu_1781_p1;
wire   [63:0] zext_ln538_16_fu_1786_p1;
reg   [127:0] p_Val2_s_fu_156;
wire   [127:0] p_Result_91_fu_849_p5;
wire    ap_CS_fsm_state17;
reg   [127:0] p_Result_1_fu_160;
wire   [127:0] p_Result_s_46_fu_1999_p17;
reg   [127:0] p_Result_4_fu_164;
reg   [127:0] p_Result_5_fu_168;
reg   [127:0] p_Result_9_fu_172;
reg   [127:0] p_Result_11_fu_176;
reg   [127:0] p_Result_30_fu_180;
reg   [127:0] p_Result_31_fu_184;
reg   [127:0] p_Result_36_fu_188;
reg   [127:0] p_Result_41_fu_192;
reg   [127:0] p_Result_46_fu_196;
reg   [127:0] p_Result_47_fu_200;
reg   [127:0] p_Result_52_fu_204;
reg   [127:0] p_Result_57_fu_208;
reg   [127:0] roundkey_2_fu_212;
wire   [23:0] p_Val2_5_fu_675_p4;
wire   [0:0] trunc_ln558_fu_655_p1;
wire   [2:0] p_Result_6_fu_693_p4;
wire   [31:0] p_Repl2_s_fu_665_p4;
wire   [31:0] p_Result_88_fu_685_p3;
wire   [31:0] round_tmp_fu_711_p3;
wire   [2:0] select_ln558_fu_703_p3;
wire   [7:0] trunc_ln674_fu_719_p1;
wire   [10:0] p_Result_89_fu_723_p3;
wire   [7:0] p_Result_s_fu_736_p4;
wire   [31:0] p_Result_90_fu_819_p5;
wire   [31:0] xor_ln1354_fu_829_p2;
wire   [31:0] xor_ln1354_1_fu_834_p2;
wire   [31:0] xor_ln1354_2_fu_839_p2;
wire   [31:0] xor_ln1354_3_fu_844_p2;
wire   [7:0] trunc_ln708_fu_877_p1;
wire   [7:0] p_Result_12_fu_886_p4;
wire   [7:0] p_Result_32_fu_1089_p4;
wire   [7:0] trunc_ln357_fu_1085_p1;
wire   [7:0] p_Result_33_fu_1099_p4;
wire   [7:0] p_Result_34_fu_1109_p4;
wire   [7:0] xor_ln1354_5_fu_1125_p2;
wire   [7:0] xor_ln1354_4_fu_1119_p2;
wire   [7:0] trunc_ln357_1_fu_1147_p1;
wire   [7:0] p_Result_35_fu_1137_p4;
wire   [7:0] p_Result_37_fu_1151_p4;
wire   [7:0] p_Result_38_fu_1161_p4;
wire   [7:0] xor_ln1354_8_fu_1177_p2;
wire   [7:0] xor_ln1354_7_fu_1171_p2;
wire   [7:0] p_Result_40_fu_1199_p4;
wire   [7:0] p_Result_39_fu_1189_p4;
wire   [7:0] trunc_ln674_3_fu_1209_p1;
wire   [7:0] p_Result_42_fu_1213_p4;
wire   [7:0] xor_ln1354_11_fu_1229_p2;
wire   [7:0] xor_ln1354_10_fu_1223_p2;
wire   [7:0] p_Result_44_fu_1251_p4;
wire   [7:0] p_Result_43_fu_1241_p4;
wire   [7:0] p_Result_45_fu_1261_p4;
wire   [7:0] trunc_ln674_4_fu_1271_p1;
wire   [7:0] xor_ln1354_14_fu_1281_p2;
wire   [7:0] xor_ln1354_13_fu_1275_p2;
wire   [7:0] p_Result_48_fu_1333_p4;
wire   [7:0] trunc_ln357_2_fu_1329_p1;
wire   [7:0] p_Result_49_fu_1343_p4;
wire   [7:0] p_Result_50_fu_1353_p4;
wire   [7:0] xor_ln1354_17_fu_1369_p2;
wire   [7:0] xor_ln1354_16_fu_1363_p2;
wire   [7:0] trunc_ln357_3_fu_1391_p1;
wire   [7:0] p_Result_51_fu_1381_p4;
wire   [7:0] p_Result_53_fu_1395_p4;
wire   [7:0] p_Result_54_fu_1405_p4;
wire   [7:0] xor_ln1354_20_fu_1421_p2;
wire   [7:0] xor_ln1354_19_fu_1415_p2;
wire   [7:0] p_Result_56_fu_1443_p4;
wire   [7:0] p_Result_55_fu_1433_p4;
wire   [7:0] trunc_ln674_5_fu_1453_p1;
wire   [7:0] p_Result_58_fu_1457_p4;
wire   [7:0] xor_ln1354_23_fu_1473_p2;
wire   [7:0] xor_ln1354_22_fu_1467_p2;
wire   [7:0] p_Result_60_fu_1495_p4;
wire   [7:0] p_Result_59_fu_1485_p4;
wire   [7:0] p_Result_61_fu_1505_p4;
wire   [7:0] trunc_ln674_6_fu_1515_p1;
wire   [7:0] xor_ln1354_26_fu_1525_p2;
wire   [7:0] xor_ln1354_25_fu_1519_p2;
wire   [7:0] p_Result_64_fu_1569_p4;
wire   [7:0] trunc_ln357_4_fu_1565_p1;
wire   [7:0] p_Result_65_fu_1579_p4;
wire   [7:0] p_Result_66_fu_1589_p4;
wire   [7:0] xor_ln1354_29_fu_1605_p2;
wire   [7:0] xor_ln1354_28_fu_1599_p2;
wire   [7:0] trunc_ln357_5_fu_1627_p1;
wire   [7:0] p_Result_67_fu_1617_p4;
wire   [7:0] p_Result_69_fu_1631_p4;
wire   [7:0] p_Result_70_fu_1641_p4;
wire   [7:0] xor_ln1354_32_fu_1657_p2;
wire   [7:0] xor_ln1354_31_fu_1651_p2;
wire   [7:0] p_Result_72_fu_1679_p4;
wire   [7:0] p_Result_71_fu_1669_p4;
wire   [7:0] trunc_ln674_7_fu_1689_p1;
wire   [7:0] p_Result_74_fu_1693_p4;
wire   [7:0] xor_ln1354_35_fu_1709_p2;
wire   [7:0] xor_ln1354_34_fu_1703_p2;
wire   [7:0] p_Result_76_fu_1731_p4;
wire   [7:0] p_Result_75_fu_1721_p4;
wire   [7:0] p_Result_77_fu_1741_p4;
wire   [7:0] trunc_ln674_8_fu_1751_p1;
wire   [7:0] xor_ln1354_38_fu_1761_p2;
wire   [7:0] xor_ln1354_37_fu_1755_p2;
wire   [7:0] p_Result_79_fu_1829_p4;
wire   [7:0] trunc_ln357_6_fu_1825_p1;
wire   [7:0] p_Result_80_fu_1839_p4;
wire   [7:0] p_Result_27_fu_1791_p4;
wire   [7:0] xor_ln1354_41_fu_1855_p2;
wire   [7:0] xor_ln1354_40_fu_1849_p2;
wire   [7:0] trunc_ln357_7_fu_1877_p1;
wire   [7:0] p_Result_81_fu_1867_p4;
wire   [7:0] p_Result_82_fu_1881_p4;
wire   [7:0] p_Result_29_fu_1811_p4;
wire   [7:0] xor_ln1354_44_fu_1897_p2;
wire   [7:0] xor_ln1354_43_fu_1891_p2;
wire   [7:0] p_Result_84_fu_1919_p4;
wire   [7:0] p_Result_83_fu_1909_p4;
wire   [7:0] trunc_ln674_9_fu_1929_p1;
wire   [7:0] p_Result_28_fu_1801_p4;
wire   [7:0] xor_ln1354_47_fu_1939_p2;
wire   [7:0] xor_ln1354_46_fu_1933_p2;
wire   [7:0] p_Result_86_fu_1961_p4;
wire   [7:0] p_Result_85_fu_1951_p4;
wire   [7:0] p_Result_87_fu_1971_p4;
wire   [7:0] trunc_ln674_2_fu_1821_p1;
wire   [7:0] xor_ln1354_50_fu_1987_p2;
wire   [7:0] xor_ln1354_49_fu_1981_p2;
wire   [7:0] xor_ln1354_51_fu_1993_p2;
wire   [7:0] xor_ln1354_48_fu_1945_p2;
wire   [7:0] xor_ln1354_45_fu_1903_p2;
wire   [7:0] xor_ln1354_42_fu_1861_p2;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1884;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

aes256CbcDecryptKernel_updateKey_decipher_0_3 #(
    .DataWidth( 8 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
decipher_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(decipher_0_3_address0),
    .ce0(decipher_0_3_ce0),
    .q0(decipher_0_3_q0),
    .address1(decipher_0_3_address1),
    .ce1(decipher_0_3_ce1),
    .q1(decipher_0_3_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln874_reg_2326 == 1'd0) & (icmp_ln874_1_reg_2350 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        ap_phi_reg_pp0_iter0_roundkey_22_1848_reg_561 <= roundkey_1_3_reg_2316;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd1) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd1) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd2) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd2) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd3) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd3) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd4) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd4) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd5) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd5) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd6) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd6) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd7) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd7) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd8) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd8) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd9) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd9) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd10) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd10) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd11) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd11) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((i_2_reg_538 == 4'd12) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd12) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((((((((i_2_reg_538 == 4'd14) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)) | ((i_2_reg_538 == 4'd15) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd13) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd0) & (icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd15) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd14) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd13) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0))) | ((i_2_reg_538 == 4'd0) & (icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)))))) begin
        ap_phi_reg_pp0_iter0_roundkey_22_1848_reg_561 <= ap_phi_reg_pp0_iter0_roundkey_22_1849_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1884)) begin
        if (((icmp_ln874_1_fu_771_p2 == 1'd0) & (icmp_ln874_fu_659_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_roundkey_22_1849_reg_550 <= roundkey_2_fu_212;
        end else if ((icmp_ln874_fu_659_p2 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_roundkey_22_1849_reg_550 <= ap_phi_mux_roundkey_2_4_phi_fu_531_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        i_2_reg_538 <= i_reg_2394;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_2_reg_538 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        roundkey_2_4_reg_528 <= roundkey_22_1848_reg_561;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        roundkey_2_4_reg_528 <= roundkey_2_1_fu_630_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln874_reg_2326 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) begin
        roundkey_2_fu_212 <= p_Result_91_fu_849_p5;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        roundkey_2_fu_212 <= {{cipherkey[255:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln874_reg_2326 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) begin
        decipher_0_3_load_1_reg_2359 <= decipher_0_3_q0;
        decipher_0_3_load_reg_2354 <= decipher_0_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_538_pp0_iter1_reg <= i_2_reg_538;
        icmp_ln874_1_reg_2350_pp0_iter1_reg <= icmp_ln874_1_reg_2350;
        icmp_ln874_reg_2326_pp0_iter1_reg <= icmp_ln874_reg_2326;
        icmp_ln882_reg_2322 <= icmp_ln882_fu_649_p2;
        icmp_ln882_reg_2322_pp0_iter1_reg <= icmp_ln882_reg_2322;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln882_reg_2322 == 1'd0))) begin
        i_reg_2394 <= i_fu_871_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln874_fu_659_p2 == 1'd0) & (icmp_ln882_fu_649_p2 == 1'd0))) begin
        icmp_ln874_1_reg_2350 <= icmp_ln874_1_fu_771_p2;
        p_Result_2_reg_2340 <= {{round_tmp_fu_711_p3[23:16]}};
        p_Result_3_reg_2345 <= {{round_tmp_fu_711_p3[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln882_fu_649_p2 == 1'd0))) begin
        icmp_ln874_reg_2326 <= icmp_ln874_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln874_reg_2326 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))) begin
        p_Result_10_reg_2389 <= {{roundkey_2_4_reg_528[127:96]}};
        p_Result_7_reg_2379 <= {{roundkey_2_4_reg_528[63:32]}};
        p_Result_8_reg_2384 <= {{roundkey_2_4_reg_528[95:64]}};
        trunc_ln674_1_reg_2374 <= trunc_ln674_1_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd10) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd10) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_11_fu_176 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))))) begin
        p_Result_13_reg_2409 <= {{roundkey_2_fu_212[23:16]}};
        p_Result_14_reg_2414 <= {{roundkey_2_fu_212[31:24]}};
        p_Result_15_reg_2419 <= {{roundkey_2_fu_212[39:32]}};
        p_Result_16_reg_2424 <= {{roundkey_2_fu_212[47:40]}};
        p_Result_17_reg_2429 <= {{roundkey_2_fu_212[55:48]}};
        p_Result_18_reg_2434 <= {{roundkey_2_fu_212[63:56]}};
        p_Result_19_reg_2439 <= {{roundkey_2_fu_212[71:64]}};
        p_Result_20_reg_2444 <= {{roundkey_2_fu_212[79:72]}};
        p_Result_21_reg_2449 <= {{roundkey_2_fu_212[87:80]}};
        p_Result_22_reg_2454 <= {{roundkey_2_fu_212[95:88]}};
        p_Result_24_reg_2464 <= {{roundkey_2_fu_212[111:104]}};
        p_Result_25_reg_2469 <= {{roundkey_2_fu_212[119:112]}};
        p_Result_26_reg_2474 <= {{roundkey_2_fu_212[127:120]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((((((((i_2_reg_538_pp0_iter1_reg == 4'd14) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0)) | ((i_2_reg_538_pp0_iter1_reg == 4'd15) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))) | ((i_2_reg_538_pp0_iter1_reg == 4'd13) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))) | ((i_2_reg_538_pp0_iter1_reg == 4'd0) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))) | ((i_2_reg_538_pp0_iter1_reg == 4'd15) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1))) | ((i_2_reg_538_pp0_iter1_reg == 4'd14) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1))) | ((i_2_reg_538_pp0_iter1_reg == 4'd13) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1))) | ((i_2_reg_538_pp0_iter1_reg == 4'd0) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1))))) begin
        p_Result_1_fu_160 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))))) begin
        p_Result_23_reg_2459 <= {{roundkey_2_fu_212[103:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd2) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd2) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_30_fu_180 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd9) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd9) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_31_fu_184 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd8) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd8) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_36_fu_188 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd3) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd3) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_41_fu_192 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd7) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd7) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_46_fu_196 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd6) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd6) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_47_fu_200 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd12) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd12) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_4_fu_164 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd4) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd4) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_52_fu_204 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd5) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd5) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_57_fu_208 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd1) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd1) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_5_fu_168 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((i_2_reg_538_pp0_iter1_reg == 4'd11) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1)) | ((i_2_reg_538_pp0_iter1_reg == 4'd11) & (icmp_ln882_reg_2322_pp0_iter1_reg == 1'd0) & (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        p_Result_9_fu_172 <= p_Result_s_46_fu_1999_p17;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln874_reg_2326 == 1'd0) & (icmp_ln874_1_reg_2350 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        p_Val2_s_fu_156 <= p_Result_91_fu_849_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & ((icmp_ln874_reg_2326_pp0_iter1_reg == 1'd1) | (icmp_ln874_1_reg_2350_pp0_iter1_reg == 1'd0))))) begin
        reg_622 <= this_0_4_q1;
        reg_626 <= this_0_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        roundkey_1_3_reg_2316 <= roundkey_2_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        roundkey_22_1848_reg_561 <= ap_phi_reg_pp0_iter0_roundkey_22_1848_reg_561;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        roundkey_2_1_reg_2310 <= roundkey_2_1_fu_630_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))))) begin
        xor_ln1354_12_reg_2549 <= xor_ln1354_12_fu_1235_p2;
        xor_ln1354_15_reg_2554 <= xor_ln1354_15_fu_1287_p2;
        xor_ln1354_6_reg_2539 <= xor_ln1354_6_fu_1131_p2;
        xor_ln1354_9_reg_2544 <= xor_ln1354_9_fu_1183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (((icmp_ln874_reg_2326 == 1'd1) & (icmp_ln882_reg_2322 == 1'd0)) | ((icmp_ln874_1_reg_2350 == 1'd0) & (icmp_ln882_reg_2322 == 1'd0))))) begin
        xor_ln1354_18_reg_2599 <= xor_ln1354_18_fu_1375_p2;
        xor_ln1354_21_reg_2604 <= xor_ln1354_21_fu_1427_p2;
        xor_ln1354_24_reg_2609 <= xor_ln1354_24_fu_1479_p2;
        xor_ln1354_27_reg_2614 <= xor_ln1354_27_fu_1531_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((icmp_ln874_reg_2326 == 1'd1) | (icmp_ln874_1_reg_2350 == 1'd0)))) begin
        xor_ln1354_30_reg_2649 <= xor_ln1354_30_fu_1611_p2;
        xor_ln1354_33_reg_2654 <= xor_ln1354_33_fu_1663_p2;
        xor_ln1354_36_reg_2659 <= xor_ln1354_36_fu_1715_p2;
        xor_ln1354_39_reg_2664 <= xor_ln1354_39_fu_1767_p2;
    end
end

always @ (*) begin
    if ((icmp_ln882_fu_649_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        ap_phi_mux_i_2_phi_fu_542_p4 = i_reg_2394;
    end else begin
        ap_phi_mux_i_2_phi_fu_542_p4 = i_2_reg_538;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln882_reg_2322 == 1'd0))) begin
        ap_phi_mux_roundkey_2_4_phi_fu_531_p4 = roundkey_22_1848_reg_561;
    end else begin
        ap_phi_mux_roundkey_2_4_phi_fu_531_p4 = roundkey_2_4_reg_528;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        decipher_0_3_address0 = zext_ln708_18_fu_1777_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        decipher_0_3_address0 = zext_ln708_16_fu_1551_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        decipher_0_3_address0 = zext_ln708_14_fu_1325_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        decipher_0_3_address0 = zext_ln708_12_fu_1307_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        decipher_0_3_address0 = zext_ln708_10_fu_1081_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        decipher_0_3_address0 = zext_ln708_8_fu_1063_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        decipher_0_3_address0 = zext_ln708_6_fu_1045_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        decipher_0_3_address0 = zext_ln708_4_fu_896_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        decipher_0_3_address0 = zext_ln708_2_fu_781_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        decipher_0_3_address0 = zext_ln708_fu_746_p1;
    end else begin
        decipher_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        decipher_0_3_address1 = zext_ln708_17_fu_1773_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        decipher_0_3_address1 = zext_ln708_15_fu_1547_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        decipher_0_3_address1 = zext_ln708_13_fu_1321_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        decipher_0_3_address1 = zext_ln708_11_fu_1303_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        decipher_0_3_address1 = zext_ln708_9_fu_1077_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        decipher_0_3_address1 = zext_ln708_7_fu_1059_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        decipher_0_3_address1 = zext_ln708_5_fu_1041_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        decipher_0_3_address1 = zext_ln708_3_fu_881_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        decipher_0_3_address1 = zext_ln708_1_fu_777_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        decipher_0_3_address1 = zext_ln538_fu_731_p1;
    end else begin
        decipher_0_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        decipher_0_3_ce0 = 1'b1;
    end else begin
        decipher_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        decipher_0_3_ce1 = 1'b1;
    end else begin
        decipher_0_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        this_0_4_address0 = zext_ln538_16_fu_1786_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        this_0_4_address0 = zext_ln538_14_fu_1560_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        this_0_4_address0 = zext_ln538_12_fu_1542_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        this_0_4_address0 = zext_ln538_10_fu_1316_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        this_0_4_address0 = zext_ln538_8_fu_1298_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        this_0_4_address0 = zext_ln538_6_fu_1072_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        this_0_4_address0 = zext_ln538_4_fu_1054_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        this_0_4_address0 = zext_ln538_2_fu_1036_p1;
    end else begin
        this_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        this_0_4_address1 = zext_ln538_15_fu_1781_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        this_0_4_address1 = zext_ln538_13_fu_1555_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        this_0_4_address1 = zext_ln538_11_fu_1537_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        this_0_4_address1 = zext_ln538_9_fu_1311_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        this_0_4_address1 = zext_ln538_7_fu_1293_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        this_0_4_address1 = zext_ln538_5_fu_1067_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        this_0_4_address1 = zext_ln538_3_fu_1049_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        this_0_4_address1 = zext_ln538_1_fu_1031_p1;
    end else begin
        this_0_4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        this_0_4_ce0 = 1'b1;
    end else begin
        this_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        this_0_4_ce1 = 1'b1;
    end else begin
        this_0_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln882_fu_649_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln882_fu_649_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1884 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln882_fu_649_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_return_0 = roundkey_2_1_reg_2310;

assign ap_return_1 = p_Result_5_fu_168;

assign ap_return_10 = p_Result_11_fu_176;

assign ap_return_11 = p_Result_9_fu_172;

assign ap_return_12 = p_Result_4_fu_164;

assign ap_return_13 = p_Result_1_fu_160;

assign ap_return_14 = p_Val2_s_fu_156;

assign ap_return_2 = p_Result_30_fu_180;

assign ap_return_3 = p_Result_41_fu_192;

assign ap_return_4 = p_Result_52_fu_204;

assign ap_return_5 = p_Result_57_fu_208;

assign ap_return_6 = p_Result_47_fu_200;

assign ap_return_7 = p_Result_46_fu_196;

assign ap_return_8 = p_Result_36_fu_188;

assign ap_return_9 = p_Result_31_fu_184;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign grp_fu_612_p4 = {{roundkey_2_fu_212[103:96]}};

assign i_fu_871_p2 = (i_2_reg_538 + 4'd1);

assign icmp_ln874_1_fu_771_p2 = ((ap_phi_mux_i_2_phi_fu_542_p4 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_659_p2 = ((ap_phi_mux_i_2_phi_fu_542_p4 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_649_p2 = ((ap_phi_mux_i_2_phi_fu_542_p4 == 4'd15) ? 1'b1 : 1'b0);

assign p_Repl2_s_fu_665_p4 = {{roundkey_2_fu_212[127:96]}};

assign p_Result_12_fu_886_p4 = {{roundkey_2_fu_212[15:8]}};

assign p_Result_27_fu_1791_p4 = {{this_0_4_q0[15:8]}};

assign p_Result_28_fu_1801_p4 = {{this_0_4_q0[31:24]}};

assign p_Result_29_fu_1811_p4 = {{this_0_4_q0[23:16]}};

assign p_Result_32_fu_1089_p4 = {{reg_626[31:24]}};

assign p_Result_33_fu_1099_p4 = {{this_0_4_q1[23:16]}};

assign p_Result_34_fu_1109_p4 = {{this_0_4_q0[15:8]}};

assign p_Result_35_fu_1137_p4 = {{reg_622[15:8]}};

assign p_Result_37_fu_1151_p4 = {{this_0_4_q1[31:24]}};

assign p_Result_38_fu_1161_p4 = {{this_0_4_q0[23:16]}};

assign p_Result_39_fu_1189_p4 = {{reg_622[23:16]}};

assign p_Result_40_fu_1199_p4 = {{reg_626[15:8]}};

assign p_Result_42_fu_1213_p4 = {{this_0_4_q0[31:24]}};

assign p_Result_43_fu_1241_p4 = {{reg_622[31:24]}};

assign p_Result_44_fu_1251_p4 = {{reg_626[23:16]}};

assign p_Result_45_fu_1261_p4 = {{this_0_4_q1[15:8]}};

assign p_Result_48_fu_1333_p4 = {{reg_626[31:24]}};

assign p_Result_49_fu_1343_p4 = {{this_0_4_q1[23:16]}};

assign p_Result_50_fu_1353_p4 = {{this_0_4_q0[15:8]}};

assign p_Result_51_fu_1381_p4 = {{reg_622[15:8]}};

assign p_Result_53_fu_1395_p4 = {{this_0_4_q1[31:24]}};

assign p_Result_54_fu_1405_p4 = {{this_0_4_q0[23:16]}};

assign p_Result_55_fu_1433_p4 = {{reg_622[23:16]}};

assign p_Result_56_fu_1443_p4 = {{reg_626[15:8]}};

assign p_Result_58_fu_1457_p4 = {{this_0_4_q0[31:24]}};

assign p_Result_59_fu_1485_p4 = {{reg_622[31:24]}};

assign p_Result_60_fu_1495_p4 = {{reg_626[23:16]}};

assign p_Result_61_fu_1505_p4 = {{this_0_4_q1[15:8]}};

assign p_Result_64_fu_1569_p4 = {{reg_626[31:24]}};

assign p_Result_65_fu_1579_p4 = {{this_0_4_q1[23:16]}};

assign p_Result_66_fu_1589_p4 = {{this_0_4_q0[15:8]}};

assign p_Result_67_fu_1617_p4 = {{reg_622[15:8]}};

assign p_Result_69_fu_1631_p4 = {{this_0_4_q1[31:24]}};

assign p_Result_6_fu_693_p4 = {{ap_phi_mux_i_2_phi_fu_542_p4[3:1]}};

assign p_Result_70_fu_1641_p4 = {{this_0_4_q0[23:16]}};

assign p_Result_71_fu_1669_p4 = {{reg_622[23:16]}};

assign p_Result_72_fu_1679_p4 = {{reg_626[15:8]}};

assign p_Result_74_fu_1693_p4 = {{this_0_4_q0[31:24]}};

assign p_Result_75_fu_1721_p4 = {{reg_622[31:24]}};

assign p_Result_76_fu_1731_p4 = {{reg_626[23:16]}};

assign p_Result_77_fu_1741_p4 = {{this_0_4_q1[15:8]}};

assign p_Result_79_fu_1829_p4 = {{reg_626[31:24]}};

assign p_Result_80_fu_1839_p4 = {{this_0_4_q1[23:16]}};

assign p_Result_81_fu_1867_p4 = {{reg_622[15:8]}};

assign p_Result_82_fu_1881_p4 = {{this_0_4_q1[31:24]}};

assign p_Result_83_fu_1909_p4 = {{reg_622[23:16]}};

assign p_Result_84_fu_1919_p4 = {{reg_626[15:8]}};

assign p_Result_85_fu_1951_p4 = {{reg_622[31:24]}};

assign p_Result_86_fu_1961_p4 = {{reg_626[23:16]}};

assign p_Result_87_fu_1971_p4 = {{this_0_4_q1[15:8]}};

assign p_Result_88_fu_685_p3 = {{grp_fu_612_p4}, {p_Val2_5_fu_675_p4}};

assign p_Result_89_fu_723_p3 = {{select_ln558_fu_703_p3}, {trunc_ln674_fu_719_p1}};

assign p_Result_90_fu_819_p5 = {{{{decipher_0_3_q0}, {decipher_0_3_q1}}, {decipher_0_3_load_1_reg_2359}}, {decipher_0_3_load_reg_2354}};

assign p_Result_91_fu_849_p5 = {{{{xor_ln1354_3_fu_844_p2}, {xor_ln1354_2_fu_839_p2}}, {xor_ln1354_1_fu_834_p2}}, {xor_ln1354_fu_829_p2}};

assign p_Result_s_46_fu_1999_p17 = {{{{{{{{{{{{{{{{xor_ln1354_51_fu_1993_p2}, {xor_ln1354_48_fu_1945_p2}}, {xor_ln1354_45_fu_1903_p2}}, {xor_ln1354_42_fu_1861_p2}}, {xor_ln1354_39_reg_2664}}, {xor_ln1354_36_reg_2659}}, {xor_ln1354_33_reg_2654}}, {xor_ln1354_30_reg_2649}}, {xor_ln1354_27_reg_2614}}, {xor_ln1354_24_reg_2609}}, {xor_ln1354_21_reg_2604}}, {xor_ln1354_18_reg_2599}}, {xor_ln1354_15_reg_2554}}, {xor_ln1354_12_reg_2549}}, {xor_ln1354_9_reg_2544}}, {xor_ln1354_6_reg_2539}};

assign p_Result_s_fu_736_p4 = {{round_tmp_fu_711_p3[15:8]}};

assign p_Val2_5_fu_675_p4 = {{roundkey_2_fu_212[127:104]}};

assign round_tmp_fu_711_p3 = ((trunc_ln558_fu_655_p1[0:0] === 1'b1) ? p_Repl2_s_fu_665_p4 : p_Result_88_fu_685_p3);

assign roundkey_2_1_fu_630_p1 = cipherkey[127:0];

assign select_ln558_fu_703_p3 = ((trunc_ln558_fu_655_p1[0:0] === 1'b1) ? 3'd0 : p_Result_6_fu_693_p4);

assign trunc_ln357_1_fu_1147_p1 = reg_626[7:0];

assign trunc_ln357_2_fu_1329_p1 = reg_622[7:0];

assign trunc_ln357_3_fu_1391_p1 = reg_626[7:0];

assign trunc_ln357_4_fu_1565_p1 = reg_622[7:0];

assign trunc_ln357_5_fu_1627_p1 = reg_626[7:0];

assign trunc_ln357_6_fu_1825_p1 = reg_622[7:0];

assign trunc_ln357_7_fu_1877_p1 = reg_626[7:0];

assign trunc_ln357_fu_1085_p1 = reg_622[7:0];

assign trunc_ln558_fu_655_p1 = ap_phi_mux_i_2_phi_fu_542_p4[0:0];

assign trunc_ln674_1_fu_785_p1 = roundkey_2_4_reg_528[31:0];

assign trunc_ln674_2_fu_1821_p1 = this_0_4_q0[7:0];

assign trunc_ln674_3_fu_1209_p1 = this_0_4_q1[7:0];

assign trunc_ln674_4_fu_1271_p1 = this_0_4_q0[7:0];

assign trunc_ln674_5_fu_1453_p1 = this_0_4_q1[7:0];

assign trunc_ln674_6_fu_1515_p1 = this_0_4_q0[7:0];

assign trunc_ln674_7_fu_1689_p1 = this_0_4_q1[7:0];

assign trunc_ln674_8_fu_1751_p1 = this_0_4_q0[7:0];

assign trunc_ln674_9_fu_1929_p1 = this_0_4_q1[7:0];

assign trunc_ln674_fu_719_p1 = round_tmp_fu_711_p3[7:0];

assign trunc_ln708_fu_877_p1 = roundkey_2_fu_212[7:0];

assign xor_ln1354_10_fu_1223_p2 = (p_Result_40_fu_1199_p4 ^ p_Result_39_fu_1189_p4);

assign xor_ln1354_11_fu_1229_p2 = (trunc_ln674_3_fu_1209_p1 ^ p_Result_42_fu_1213_p4);

assign xor_ln1354_12_fu_1235_p2 = (xor_ln1354_11_fu_1229_p2 ^ xor_ln1354_10_fu_1223_p2);

assign xor_ln1354_13_fu_1275_p2 = (p_Result_44_fu_1251_p4 ^ p_Result_43_fu_1241_p4);

assign xor_ln1354_14_fu_1281_p2 = (trunc_ln674_4_fu_1271_p1 ^ p_Result_45_fu_1261_p4);

assign xor_ln1354_15_fu_1287_p2 = (xor_ln1354_14_fu_1281_p2 ^ xor_ln1354_13_fu_1275_p2);

assign xor_ln1354_16_fu_1363_p2 = (trunc_ln357_2_fu_1329_p1 ^ p_Result_48_fu_1333_p4);

assign xor_ln1354_17_fu_1369_p2 = (p_Result_50_fu_1353_p4 ^ p_Result_49_fu_1343_p4);

assign xor_ln1354_18_fu_1375_p2 = (xor_ln1354_17_fu_1369_p2 ^ xor_ln1354_16_fu_1363_p2);

assign xor_ln1354_19_fu_1415_p2 = (trunc_ln357_3_fu_1391_p1 ^ p_Result_51_fu_1381_p4);

assign xor_ln1354_1_fu_834_p2 = (xor_ln1354_fu_829_p2 ^ p_Result_7_reg_2379);

assign xor_ln1354_20_fu_1421_p2 = (p_Result_54_fu_1405_p4 ^ p_Result_53_fu_1395_p4);

assign xor_ln1354_21_fu_1427_p2 = (xor_ln1354_20_fu_1421_p2 ^ xor_ln1354_19_fu_1415_p2);

assign xor_ln1354_22_fu_1467_p2 = (p_Result_56_fu_1443_p4 ^ p_Result_55_fu_1433_p4);

assign xor_ln1354_23_fu_1473_p2 = (trunc_ln674_5_fu_1453_p1 ^ p_Result_58_fu_1457_p4);

assign xor_ln1354_24_fu_1479_p2 = (xor_ln1354_23_fu_1473_p2 ^ xor_ln1354_22_fu_1467_p2);

assign xor_ln1354_25_fu_1519_p2 = (p_Result_60_fu_1495_p4 ^ p_Result_59_fu_1485_p4);

assign xor_ln1354_26_fu_1525_p2 = (trunc_ln674_6_fu_1515_p1 ^ p_Result_61_fu_1505_p4);

assign xor_ln1354_27_fu_1531_p2 = (xor_ln1354_26_fu_1525_p2 ^ xor_ln1354_25_fu_1519_p2);

assign xor_ln1354_28_fu_1599_p2 = (trunc_ln357_4_fu_1565_p1 ^ p_Result_64_fu_1569_p4);

assign xor_ln1354_29_fu_1605_p2 = (p_Result_66_fu_1589_p4 ^ p_Result_65_fu_1579_p4);

assign xor_ln1354_2_fu_839_p2 = (xor_ln1354_1_fu_834_p2 ^ p_Result_8_reg_2384);

assign xor_ln1354_30_fu_1611_p2 = (xor_ln1354_29_fu_1605_p2 ^ xor_ln1354_28_fu_1599_p2);

assign xor_ln1354_31_fu_1651_p2 = (trunc_ln357_5_fu_1627_p1 ^ p_Result_67_fu_1617_p4);

assign xor_ln1354_32_fu_1657_p2 = (p_Result_70_fu_1641_p4 ^ p_Result_69_fu_1631_p4);

assign xor_ln1354_33_fu_1663_p2 = (xor_ln1354_32_fu_1657_p2 ^ xor_ln1354_31_fu_1651_p2);

assign xor_ln1354_34_fu_1703_p2 = (p_Result_72_fu_1679_p4 ^ p_Result_71_fu_1669_p4);

assign xor_ln1354_35_fu_1709_p2 = (trunc_ln674_7_fu_1689_p1 ^ p_Result_74_fu_1693_p4);

assign xor_ln1354_36_fu_1715_p2 = (xor_ln1354_35_fu_1709_p2 ^ xor_ln1354_34_fu_1703_p2);

assign xor_ln1354_37_fu_1755_p2 = (p_Result_76_fu_1731_p4 ^ p_Result_75_fu_1721_p4);

assign xor_ln1354_38_fu_1761_p2 = (trunc_ln674_8_fu_1751_p1 ^ p_Result_77_fu_1741_p4);

assign xor_ln1354_39_fu_1767_p2 = (xor_ln1354_38_fu_1761_p2 ^ xor_ln1354_37_fu_1755_p2);

assign xor_ln1354_3_fu_844_p2 = (xor_ln1354_2_fu_839_p2 ^ p_Result_10_reg_2389);

assign xor_ln1354_40_fu_1849_p2 = (trunc_ln357_6_fu_1825_p1 ^ p_Result_79_fu_1829_p4);

assign xor_ln1354_41_fu_1855_p2 = (p_Result_80_fu_1839_p4 ^ p_Result_27_fu_1791_p4);

assign xor_ln1354_42_fu_1861_p2 = (xor_ln1354_41_fu_1855_p2 ^ xor_ln1354_40_fu_1849_p2);

assign xor_ln1354_43_fu_1891_p2 = (trunc_ln357_7_fu_1877_p1 ^ p_Result_81_fu_1867_p4);

assign xor_ln1354_44_fu_1897_p2 = (p_Result_82_fu_1881_p4 ^ p_Result_29_fu_1811_p4);

assign xor_ln1354_45_fu_1903_p2 = (xor_ln1354_44_fu_1897_p2 ^ xor_ln1354_43_fu_1891_p2);

assign xor_ln1354_46_fu_1933_p2 = (p_Result_84_fu_1919_p4 ^ p_Result_83_fu_1909_p4);

assign xor_ln1354_47_fu_1939_p2 = (trunc_ln674_9_fu_1929_p1 ^ p_Result_28_fu_1801_p4);

assign xor_ln1354_48_fu_1945_p2 = (xor_ln1354_47_fu_1939_p2 ^ xor_ln1354_46_fu_1933_p2);

assign xor_ln1354_49_fu_1981_p2 = (p_Result_86_fu_1961_p4 ^ p_Result_85_fu_1951_p4);

assign xor_ln1354_4_fu_1119_p2 = (trunc_ln357_fu_1085_p1 ^ p_Result_32_fu_1089_p4);

assign xor_ln1354_50_fu_1987_p2 = (trunc_ln674_2_fu_1821_p1 ^ p_Result_87_fu_1971_p4);

assign xor_ln1354_51_fu_1993_p2 = (xor_ln1354_50_fu_1987_p2 ^ xor_ln1354_49_fu_1981_p2);

assign xor_ln1354_5_fu_1125_p2 = (p_Result_34_fu_1109_p4 ^ p_Result_33_fu_1099_p4);

assign xor_ln1354_6_fu_1131_p2 = (xor_ln1354_5_fu_1125_p2 ^ xor_ln1354_4_fu_1119_p2);

assign xor_ln1354_7_fu_1171_p2 = (trunc_ln357_1_fu_1147_p1 ^ p_Result_35_fu_1137_p4);

assign xor_ln1354_8_fu_1177_p2 = (p_Result_38_fu_1161_p4 ^ p_Result_37_fu_1151_p4);

assign xor_ln1354_9_fu_1183_p2 = (xor_ln1354_8_fu_1177_p2 ^ xor_ln1354_7_fu_1171_p2);

assign xor_ln1354_fu_829_p2 = (trunc_ln674_1_reg_2374 ^ p_Result_90_fu_819_p5);

assign zext_ln538_10_fu_1316_p1 = decipher_0_3_q0;

assign zext_ln538_11_fu_1537_p1 = decipher_0_3_q1;

assign zext_ln538_12_fu_1542_p1 = decipher_0_3_q0;

assign zext_ln538_13_fu_1555_p1 = decipher_0_3_q1;

assign zext_ln538_14_fu_1560_p1 = decipher_0_3_q0;

assign zext_ln538_15_fu_1781_p1 = decipher_0_3_q1;

assign zext_ln538_16_fu_1786_p1 = decipher_0_3_q0;

assign zext_ln538_1_fu_1031_p1 = decipher_0_3_q1;

assign zext_ln538_2_fu_1036_p1 = decipher_0_3_q0;

assign zext_ln538_3_fu_1049_p1 = decipher_0_3_q1;

assign zext_ln538_4_fu_1054_p1 = decipher_0_3_q0;

assign zext_ln538_5_fu_1067_p1 = decipher_0_3_q1;

assign zext_ln538_6_fu_1072_p1 = decipher_0_3_q0;

assign zext_ln538_7_fu_1293_p1 = decipher_0_3_q1;

assign zext_ln538_8_fu_1298_p1 = decipher_0_3_q0;

assign zext_ln538_9_fu_1311_p1 = decipher_0_3_q1;

assign zext_ln538_fu_731_p1 = p_Result_89_fu_723_p3;

assign zext_ln708_10_fu_1081_p1 = p_Result_18_reg_2434;

assign zext_ln708_11_fu_1303_p1 = p_Result_19_reg_2439;

assign zext_ln708_12_fu_1307_p1 = p_Result_20_reg_2444;

assign zext_ln708_13_fu_1321_p1 = p_Result_21_reg_2449;

assign zext_ln708_14_fu_1325_p1 = p_Result_22_reg_2454;

assign zext_ln708_15_fu_1547_p1 = p_Result_23_reg_2459;

assign zext_ln708_16_fu_1551_p1 = p_Result_24_reg_2464;

assign zext_ln708_17_fu_1773_p1 = p_Result_25_reg_2469;

assign zext_ln708_18_fu_1777_p1 = p_Result_26_reg_2474;

assign zext_ln708_1_fu_777_p1 = p_Result_2_reg_2340;

assign zext_ln708_2_fu_781_p1 = p_Result_3_reg_2345;

assign zext_ln708_3_fu_881_p1 = trunc_ln708_fu_877_p1;

assign zext_ln708_4_fu_896_p1 = p_Result_12_fu_886_p4;

assign zext_ln708_5_fu_1041_p1 = p_Result_13_reg_2409;

assign zext_ln708_6_fu_1045_p1 = p_Result_14_reg_2414;

assign zext_ln708_7_fu_1059_p1 = p_Result_15_reg_2419;

assign zext_ln708_8_fu_1063_p1 = p_Result_16_reg_2424;

assign zext_ln708_9_fu_1077_p1 = p_Result_17_reg_2429;

assign zext_ln708_fu_746_p1 = p_Result_s_fu_736_p4;

endmodule //aes256CbcDecryptKernel_updateKey
