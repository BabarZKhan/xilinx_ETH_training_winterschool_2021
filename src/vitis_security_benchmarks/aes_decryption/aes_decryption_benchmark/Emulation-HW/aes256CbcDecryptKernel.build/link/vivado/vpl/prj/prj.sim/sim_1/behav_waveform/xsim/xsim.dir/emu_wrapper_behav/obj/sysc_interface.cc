#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[4912].first = 1;
        (*_glb_hdl_sc_channel_map)[4912].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[4895].first = 1;
        (*_glb_hdl_sc_channel_map)[4895].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[4925].first = 1;
        (*_glb_hdl_sc_channel_map)[4925].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[4924].first = 1;
        (*_glb_hdl_sc_channel_map)[4924].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[4858].first = 1;
        (*_glb_hdl_sc_channel_map)[4858].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[4857].first = 1;
        (*_glb_hdl_sc_channel_map)[4857].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(10737176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[4926].first = 3;
        (*_glb_hdl_sc_channel_map)[4926].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[4941].first = 1;
        (*_glb_hdl_sc_channel_map)[4941].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[4936].first = 3;
        (*_glb_hdl_sc_channel_map)[4936].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[4931].first = 3;
        (*_glb_hdl_sc_channel_map)[4931].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[4951].first = 1;
        (*_glb_hdl_sc_channel_map)[4951].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(10737512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(10737568);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[4942].first = 1;
        (*_glb_hdl_sc_channel_map)[4942].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[4937].first = 3;
        (*_glb_hdl_sc_channel_map)[4937].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[4932].first = 3;
        (*_glb_hdl_sc_channel_map)[4932].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[4952].first = 1;
        (*_glb_hdl_sc_channel_map)[4952].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[4928].first = 3;
        (*_glb_hdl_sc_channel_map)[4928].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(10737904);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[4943].first = 1;
        (*_glb_hdl_sc_channel_map)[4943].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[4938].first = 3;
        (*_glb_hdl_sc_channel_map)[4938].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[4933].first = 3;
        (*_glb_hdl_sc_channel_map)[4933].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[4953].first = 1;
        (*_glb_hdl_sc_channel_map)[4953].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[4929].first = 3;
        (*_glb_hdl_sc_channel_map)[4929].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(10738240);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[4944].first = 1;
        (*_glb_hdl_sc_channel_map)[4944].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[4939].first = 3;
        (*_glb_hdl_sc_channel_map)[4939].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[4934].first = 3;
        (*_glb_hdl_sc_channel_map)[4934].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[4954].first = 1;
        (*_glb_hdl_sc_channel_map)[4954].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[4930].first = 3;
        (*_glb_hdl_sc_channel_map)[4930].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(10738576);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[4945].first = 1;
        (*_glb_hdl_sc_channel_map)[4945].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[4940].first = 3;
        (*_glb_hdl_sc_channel_map)[4940].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[4935].first = 3;
        (*_glb_hdl_sc_channel_map)[4935].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[4955].first = 1;
        (*_glb_hdl_sc_channel_map)[4955].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[4862].first = 3;
        (*_glb_hdl_sc_channel_map)[4862].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[4864].first = 1;
        (*_glb_hdl_sc_channel_map)[4864].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(10738968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[4872].first = 3;
        (*_glb_hdl_sc_channel_map)[4872].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[4874].first = 3;
        (*_glb_hdl_sc_channel_map)[4874].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[4875].first = 1;
        (*_glb_hdl_sc_channel_map)[4875].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(10739192);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(10739248);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[4865].first = 1;
        (*_glb_hdl_sc_channel_map)[4865].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(10739360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[4859].first = 3;
        (*_glb_hdl_sc_channel_map)[4859].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[4861].first = 1;
        (*_glb_hdl_sc_channel_map)[4861].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(10739528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(10739584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(10739640);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(10739696);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[4869].first = 1;
        (*_glb_hdl_sc_channel_map)[4869].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[4879].first = 3;
        (*_glb_hdl_sc_channel_map)[4879].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[4881].first = 1;
        (*_glb_hdl_sc_channel_map)[4881].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(10739920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[4889].first = 3;
        (*_glb_hdl_sc_channel_map)[4889].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[4891].first = 3;
        (*_glb_hdl_sc_channel_map)[4891].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[4892].first = 1;
        (*_glb_hdl_sc_channel_map)[4892].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(10740144);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(10740200);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[4882].first = 1;
        (*_glb_hdl_sc_channel_map)[4882].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(10740312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[4876].first = 3;
        (*_glb_hdl_sc_channel_map)[4876].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[4878].first = 1;
        (*_glb_hdl_sc_channel_map)[4878].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(10740480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(10740536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(10740592);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(10740648);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[4886].first = 1;
        (*_glb_hdl_sc_channel_map)[4886].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[4901].first = 3;
        (*_glb_hdl_sc_channel_map)[4901].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[4907].first = 1;
        (*_glb_hdl_sc_channel_map)[4907].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(10740872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[4904].first = 3;
        (*_glb_hdl_sc_channel_map)[4904].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[4906].first = 3;
        (*_glb_hdl_sc_channel_map)[4906].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[4902].first = 3;
        (*_glb_hdl_sc_channel_map)[4902].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[4903].first = 3;
        (*_glb_hdl_sc_channel_map)[4903].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[4919].first = 3;
        (*_glb_hdl_sc_channel_map)[4919].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[4922].first = 3;
        (*_glb_hdl_sc_channel_map)[4922].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[4923].first = 1;
        (*_glb_hdl_sc_channel_map)[4923].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(10741320);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(10741376);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[4909].first = 1;
        (*_glb_hdl_sc_channel_map)[4909].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[4920].first = 1;
        (*_glb_hdl_sc_channel_map)[4920].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(10741544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(10741600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(10741656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[4893].first = 3;
        (*_glb_hdl_sc_channel_map)[4893].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[4900].first = 1;
        (*_glb_hdl_sc_channel_map)[4900].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(10741824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[4897].first = 3;
        (*_glb_hdl_sc_channel_map)[4897].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[4899].first = 3;
        (*_glb_hdl_sc_channel_map)[4899].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[4894].first = 3;
        (*_glb_hdl_sc_channel_map)[4894].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[4896].first = 3;
        (*_glb_hdl_sc_channel_map)[4896].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(10742104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(10742160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(10742216);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(10742272);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[4916].first = 1;
        (*_glb_hdl_sc_channel_map)[4916].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[4977].first = 1;
        (*_glb_hdl_sc_channel_map)[4977].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[4978].first = 1;
        (*_glb_hdl_sc_channel_map)[4978].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[4998].first = 1;
        (*_glb_hdl_sc_channel_map)[4998].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[4999].first = 1;
        (*_glb_hdl_sc_channel_map)[4999].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[4983].first = 3;
        (*_glb_hdl_sc_channel_map)[4983].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[4984].first = 3;
        (*_glb_hdl_sc_channel_map)[4984].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[4986].first = 1;
        (*_glb_hdl_sc_channel_map)[4986].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(10742824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[4994].first = 3;
        (*_glb_hdl_sc_channel_map)[4994].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[4996].first = 3;
        (*_glb_hdl_sc_channel_map)[4996].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[4997].first = 1;
        (*_glb_hdl_sc_channel_map)[4997].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(10743048);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(10743104);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[4987].first = 1;
        (*_glb_hdl_sc_channel_map)[4987].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(10743216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[4979].first = 3;
        (*_glb_hdl_sc_channel_map)[4979].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[4980].first = 3;
        (*_glb_hdl_sc_channel_map)[4980].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[4982].first = 1;
        (*_glb_hdl_sc_channel_map)[4982].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(10743440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(10743496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(10743552);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(10743608);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[4991].first = 1;
        (*_glb_hdl_sc_channel_map)[4991].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[4965].first = 1;
        (*_glb_hdl_sc_channel_map)[4965].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[4964].first = 1;
        (*_glb_hdl_sc_channel_map)[4964].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1509].first = 3;
        (*_glb_hdl_sc_channel_map)[1509].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[4976].first = 1;
        (*_glb_hdl_sc_channel_map)[4976].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[4974].first = 1;
        (*_glb_hdl_sc_channel_map)[4974].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[4973].first = 3;
        (*_glb_hdl_sc_channel_map)[4973].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[4975].first = 3;
        (*_glb_hdl_sc_channel_map)[4975].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[4963].first = 1;
        (*_glb_hdl_sc_channel_map)[4963].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[4962].first = 1;
        (*_glb_hdl_sc_channel_map)[4962].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1510].first = 3;
        (*_glb_hdl_sc_channel_map)[1510].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[4972].first = 1;
        (*_glb_hdl_sc_channel_map)[4972].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[4970].first = 1;
        (*_glb_hdl_sc_channel_map)[4970].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[4969].first = 3;
        (*_glb_hdl_sc_channel_map)[4969].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[4971].first = 3;
        (*_glb_hdl_sc_channel_map)[4971].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[4968].first = 1;
        (*_glb_hdl_sc_channel_map)[4968].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[4966].first = 1;
        (*_glb_hdl_sc_channel_map)[4966].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[4967].first = 3;
        (*_glb_hdl_sc_channel_map)[4967].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[4960].first = 3;
        (*_glb_hdl_sc_channel_map)[4960].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(10744728);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(10744784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(10744840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(10744896);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(10744952);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5037].first = 1;
        (*_glb_hdl_sc_channel_map)[5037].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5038].first = 1;
        (*_glb_hdl_sc_channel_map)[5038].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5073].first = 1;
        (*_glb_hdl_sc_channel_map)[5073].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5074].first = 1;
        (*_glb_hdl_sc_channel_map)[5074].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5045].first = 3;
        (*_glb_hdl_sc_channel_map)[5045].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5049].first = 1;
        (*_glb_hdl_sc_channel_map)[5049].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(10745392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5065].first = 3;
        (*_glb_hdl_sc_channel_map)[5065].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5069].first = 3;
        (*_glb_hdl_sc_channel_map)[5069].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5071].first = 1;
        (*_glb_hdl_sc_channel_map)[5071].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(10745616);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(10745672);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5051].first = 1;
        (*_glb_hdl_sc_channel_map)[5051].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(10745784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5039].first = 3;
        (*_glb_hdl_sc_channel_map)[5039].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5043].first = 1;
        (*_glb_hdl_sc_channel_map)[5043].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(10745952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(10746008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(10746064);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(10746120);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5059].first = 1;
        (*_glb_hdl_sc_channel_map)[5059].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5021].first = 1;
        (*_glb_hdl_sc_channel_map)[5021].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5019].first = 1;
        (*_glb_hdl_sc_channel_map)[5019].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5017].first = 3;
        (*_glb_hdl_sc_channel_map)[5017].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1505].first = 3;
        (*_glb_hdl_sc_channel_map)[1505].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5018].first = 3;
        (*_glb_hdl_sc_channel_map)[5018].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5020].first = 3;
        (*_glb_hdl_sc_channel_map)[5020].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1506].first = 3;
        (*_glb_hdl_sc_channel_map)[1506].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5036].first = 1;
        (*_glb_hdl_sc_channel_map)[5036].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5034].first = 1;
        (*_glb_hdl_sc_channel_map)[5034].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5032].first = 3;
        (*_glb_hdl_sc_channel_map)[5032].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5035].first = 3;
        (*_glb_hdl_sc_channel_map)[5035].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5033].first = 1;
        (*_glb_hdl_sc_channel_map)[5033].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5016].first = 1;
        (*_glb_hdl_sc_channel_map)[5016].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5014].first = 1;
        (*_glb_hdl_sc_channel_map)[5014].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5012].first = 3;
        (*_glb_hdl_sc_channel_map)[5012].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1507].first = 3;
        (*_glb_hdl_sc_channel_map)[1507].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5013].first = 3;
        (*_glb_hdl_sc_channel_map)[5013].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5015].first = 3;
        (*_glb_hdl_sc_channel_map)[5015].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1508].first = 3;
        (*_glb_hdl_sc_channel_map)[1508].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5031].first = 1;
        (*_glb_hdl_sc_channel_map)[5031].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5029].first = 1;
        (*_glb_hdl_sc_channel_map)[5029].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5026].first = 3;
        (*_glb_hdl_sc_channel_map)[5026].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5028].first = 1;
        (*_glb_hdl_sc_channel_map)[5028].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5027].first = 3;
        (*_glb_hdl_sc_channel_map)[5027].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5030].first = 3;
        (*_glb_hdl_sc_channel_map)[5030].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5025].first = 1;
        (*_glb_hdl_sc_channel_map)[5025].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5023].first = 1;
        (*_glb_hdl_sc_channel_map)[5023].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5024].first = 3;
        (*_glb_hdl_sc_channel_map)[5024].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5022].first = 3;
        (*_glb_hdl_sc_channel_map)[5022].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5004].first = 1;
        (*_glb_hdl_sc_channel_map)[5004].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(10747912);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(10747968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(10748024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(10748080);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5010].first = 1;
        (*_glb_hdl_sc_channel_map)[5010].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(10748192);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(10748248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(10748304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(10748360);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(10748416);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(10748472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1503].first = 3;
        (*_glb_hdl_sc_channel_map)[1503].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5046].first = 3;
        (*_glb_hdl_sc_channel_map)[5046].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5050].first = 1;
        (*_glb_hdl_sc_channel_map)[5050].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5048].first = 1;
        (*_glb_hdl_sc_channel_map)[5048].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5066].first = 3;
        (*_glb_hdl_sc_channel_map)[5066].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5070].first = 3;
        (*_glb_hdl_sc_channel_map)[5070].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5072].first = 1;
        (*_glb_hdl_sc_channel_map)[5072].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5068].first = 1;
        (*_glb_hdl_sc_channel_map)[5068].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5054].first = 3;
        (*_glb_hdl_sc_channel_map)[5054].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5056].first = 1;
        (*_glb_hdl_sc_channel_map)[5056].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5052].first = 1;
        (*_glb_hdl_sc_channel_map)[5052].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1504].first = 3;
        (*_glb_hdl_sc_channel_map)[1504].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5040].first = 3;
        (*_glb_hdl_sc_channel_map)[5040].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5044].first = 1;
        (*_glb_hdl_sc_channel_map)[5044].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5042].first = 1;
        (*_glb_hdl_sc_channel_map)[5042].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5058].first = 3;
        (*_glb_hdl_sc_channel_map)[5058].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5062].first = 3;
        (*_glb_hdl_sc_channel_map)[5062].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5064].first = 1;
        (*_glb_hdl_sc_channel_map)[5064].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5060].first = 1;
        (*_glb_hdl_sc_channel_map)[5060].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5112].first = 1;
        (*_glb_hdl_sc_channel_map)[5112].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5113].first = 1;
        (*_glb_hdl_sc_channel_map)[5113].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5148].first = 1;
        (*_glb_hdl_sc_channel_map)[5148].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5149].first = 1;
        (*_glb_hdl_sc_channel_map)[5149].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5120].first = 3;
        (*_glb_hdl_sc_channel_map)[5120].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5124].first = 1;
        (*_glb_hdl_sc_channel_map)[5124].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(10749976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5140].first = 3;
        (*_glb_hdl_sc_channel_map)[5140].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5144].first = 3;
        (*_glb_hdl_sc_channel_map)[5144].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5146].first = 1;
        (*_glb_hdl_sc_channel_map)[5146].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(10750200);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(10750256);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5126].first = 1;
        (*_glb_hdl_sc_channel_map)[5126].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(10750368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5114].first = 3;
        (*_glb_hdl_sc_channel_map)[5114].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5118].first = 1;
        (*_glb_hdl_sc_channel_map)[5118].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(10750536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(10750592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(10750648);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(10750704);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5134].first = 1;
        (*_glb_hdl_sc_channel_map)[5134].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5096].first = 1;
        (*_glb_hdl_sc_channel_map)[5096].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5094].first = 1;
        (*_glb_hdl_sc_channel_map)[5094].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5092].first = 3;
        (*_glb_hdl_sc_channel_map)[5092].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1499].first = 3;
        (*_glb_hdl_sc_channel_map)[1499].second.push_front(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5093].first = 3;
        (*_glb_hdl_sc_channel_map)[5093].second.push_front(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5095].first = 3;
        (*_glb_hdl_sc_channel_map)[5095].second.push_front(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1500].first = 3;
        (*_glb_hdl_sc_channel_map)[1500].second.push_front(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5111].first = 1;
        (*_glb_hdl_sc_channel_map)[5111].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5109].first = 1;
        (*_glb_hdl_sc_channel_map)[5109].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5107].first = 3;
        (*_glb_hdl_sc_channel_map)[5107].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5110].first = 3;
        (*_glb_hdl_sc_channel_map)[5110].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5108].first = 1;
        (*_glb_hdl_sc_channel_map)[5108].second.push_front(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5091].first = 1;
        (*_glb_hdl_sc_channel_map)[5091].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5089].first = 1;
        (*_glb_hdl_sc_channel_map)[5089].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5087].first = 3;
        (*_glb_hdl_sc_channel_map)[5087].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1501].first = 3;
        (*_glb_hdl_sc_channel_map)[1501].second.push_front(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5088].first = 3;
        (*_glb_hdl_sc_channel_map)[5088].second.push_front(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5090].first = 3;
        (*_glb_hdl_sc_channel_map)[5090].second.push_front(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1502].first = 3;
        (*_glb_hdl_sc_channel_map)[1502].second.push_front(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5106].first = 1;
        (*_glb_hdl_sc_channel_map)[5106].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5104].first = 1;
        (*_glb_hdl_sc_channel_map)[5104].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5101].first = 3;
        (*_glb_hdl_sc_channel_map)[5101].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5103].first = 1;
        (*_glb_hdl_sc_channel_map)[5103].second.push_front(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map)[5102].first = 3;
        (*_glb_hdl_sc_channel_map)[5102].second.push_front(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5105].first = 3;
        (*_glb_hdl_sc_channel_map)[5105].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5100].first = 1;
        (*_glb_hdl_sc_channel_map)[5100].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5098].first = 1;
        (*_glb_hdl_sc_channel_map)[5098].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5099].first = 3;
        (*_glb_hdl_sc_channel_map)[5099].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map)[5097].first = 3;
        (*_glb_hdl_sc_channel_map)[5097].second.push_front(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5079].first = 1;
        (*_glb_hdl_sc_channel_map)[5079].second.push_front(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(10752496);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(10752552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(10752608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(10752664);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5085].first = 1;
        (*_glb_hdl_sc_channel_map)[5085].second.push_front(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(10752776);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(10752832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(10752888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(10752944);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(10753000);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(10753056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1497].first = 3;
        (*_glb_hdl_sc_channel_map)[1497].second.push_front(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5121].first = 3;
        (*_glb_hdl_sc_channel_map)[5121].second.push_front(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5125].first = 1;
        (*_glb_hdl_sc_channel_map)[5125].second.push_front(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5123].first = 1;
        (*_glb_hdl_sc_channel_map)[5123].second.push_front(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5141].first = 3;
        (*_glb_hdl_sc_channel_map)[5141].second.push_front(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5145].first = 3;
        (*_glb_hdl_sc_channel_map)[5145].second.push_front(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5147].first = 1;
        (*_glb_hdl_sc_channel_map)[5147].second.push_front(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5143].first = 1;
        (*_glb_hdl_sc_channel_map)[5143].second.push_front(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5129].first = 3;
        (*_glb_hdl_sc_channel_map)[5129].second.push_front(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5131].first = 1;
        (*_glb_hdl_sc_channel_map)[5131].second.push_front(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5127].first = 1;
        (*_glb_hdl_sc_channel_map)[5127].second.push_front(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1498].first = 3;
        (*_glb_hdl_sc_channel_map)[1498].second.push_front(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5115].first = 3;
        (*_glb_hdl_sc_channel_map)[5115].second.push_front(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5119].first = 1;
        (*_glb_hdl_sc_channel_map)[5119].second.push_front(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5117].first = 1;
        (*_glb_hdl_sc_channel_map)[5117].second.push_front(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5133].first = 3;
        (*_glb_hdl_sc_channel_map)[5133].second.push_front(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5137].first = 3;
        (*_glb_hdl_sc_channel_map)[5137].second.push_front(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5139].first = 1;
        (*_glb_hdl_sc_channel_map)[5139].second.push_front(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5135].first = 1;
        (*_glb_hdl_sc_channel_map)[5135].second.push_front(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_5->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_5_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk.bind(*p_5_aclk);
        (*_glb_hdl_sc_channel_map)[23527].first = 1;
        (*_glb_hdl_sc_channel_map)[23527].second.push_front(p_5_aclk);
        xsim_sc_channel<0, bool > *p_5_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk1.bind(*p_5_aclk1);
        (*_glb_hdl_sc_channel_map)[23528].first = 1;
        (*_glb_hdl_sc_channel_map)[23528].second.push_front(p_5_aclk1);
        xsim_sc_channel<0, bool > *p_5_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->aresetn.bind(*p_5_aresetn);
        (*_glb_hdl_sc_channel_map)[23529].first = 1;
        (*_glb_hdl_sc_channel_map)[23529].second.push_front(p_5_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awid.bind(*p_5_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[23312].first = 3;
        (*_glb_hdl_sc_channel_map)[23312].second.push_front(p_5_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_awaddr.bind(*p_5_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23309].first = 3;
        (*_glb_hdl_sc_channel_map)[23309].second.push_front(p_5_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_awlen.bind(*p_5_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23313].first = 3;
        (*_glb_hdl_sc_channel_map)[23313].second.push_front(p_5_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awsize.bind(*p_5_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23318].first = 3;
        (*_glb_hdl_sc_channel_map)[23318].second.push_front(p_5_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_awburst.bind(*p_5_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[23310].first = 3;
        (*_glb_hdl_sc_channel_map)[23310].second.push_front(p_5_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_awlock.bind(*p_5_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[23314].first = 1;
        (*_glb_hdl_sc_channel_map)[23314].second.push_front(p_5_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awcache.bind(*p_5_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23311].first = 3;
        (*_glb_hdl_sc_channel_map)[23311].second.push_front(p_5_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awprot.bind(*p_5_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23315].first = 3;
        (*_glb_hdl_sc_channel_map)[23315].second.push_front(p_5_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awqos.bind(*p_5_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23316].first = 3;
        (*_glb_hdl_sc_channel_map)[23316].second.push_front(p_5_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awuser.bind(*p_5_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[23319].first = 3;
        (*_glb_hdl_sc_channel_map)[23319].second.push_front(p_5_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awvalid.bind(*p_5_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23320].first = 3;
        (*_glb_hdl_sc_channel_map)[23320].second.push_front(p_5_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awready.bind(*p_5_S00_AXI_awready);
        p_5_S00_AXI_awready->set_sv_netview_offsetfromdp(15549976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_wdata.bind(*p_5_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23333].first = 3;
        (*_glb_hdl_sc_channel_map)[23333].second.push_front(p_5_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_wstrb.bind(*p_5_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23336].first = 3;
        (*_glb_hdl_sc_channel_map)[23336].second.push_front(p_5_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wlast.bind(*p_5_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23334].first = 3;
        (*_glb_hdl_sc_channel_map)[23334].second.push_front(p_5_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wuser.bind(*p_5_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[23337].first = 3;
        (*_glb_hdl_sc_channel_map)[23337].second.push_front(p_5_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wvalid.bind(*p_5_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23338].first = 3;
        (*_glb_hdl_sc_channel_map)[23338].second.push_front(p_5_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wready.bind(*p_5_S00_AXI_wready);
        p_5_S00_AXI_wready->set_sv_netview_offsetfromdp(15550312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bid.bind(*p_5_S00_AXI_bid);
        p_5_S00_AXI_bid->set_sv_netview_offsetfromdp(15550368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_bresp.bind(*p_5_S00_AXI_bresp);
        p_5_S00_AXI_bresp->set_sv_netview_offsetfromdp(15550424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_buser.bind(*p_5_S00_AXI_buser);
        p_5_S00_AXI_buser->set_sv_netview_offsetfromdp(15550480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bvalid.bind(*p_5_S00_AXI_bvalid);
        p_5_S00_AXI_bvalid->set_sv_netview_offsetfromdp(15550536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bready.bind(*p_5_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23322].first = 3;
        (*_glb_hdl_sc_channel_map)[23322].second.push_front(p_5_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arid.bind(*p_5_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[23300].first = 3;
        (*_glb_hdl_sc_channel_map)[23300].second.push_front(p_5_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_araddr.bind(*p_5_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23297].first = 3;
        (*_glb_hdl_sc_channel_map)[23297].second.push_front(p_5_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_arlen.bind(*p_5_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23301].first = 3;
        (*_glb_hdl_sc_channel_map)[23301].second.push_front(p_5_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arsize.bind(*p_5_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23306].first = 3;
        (*_glb_hdl_sc_channel_map)[23306].second.push_front(p_5_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_arburst.bind(*p_5_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[23298].first = 3;
        (*_glb_hdl_sc_channel_map)[23298].second.push_front(p_5_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_arlock.bind(*p_5_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[23302].first = 1;
        (*_glb_hdl_sc_channel_map)[23302].second.push_front(p_5_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arcache.bind(*p_5_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23299].first = 3;
        (*_glb_hdl_sc_channel_map)[23299].second.push_front(p_5_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arprot.bind(*p_5_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23303].first = 3;
        (*_glb_hdl_sc_channel_map)[23303].second.push_front(p_5_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arqos.bind(*p_5_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23304].first = 3;
        (*_glb_hdl_sc_channel_map)[23304].second.push_front(p_5_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_aruser.bind(*p_5_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[23307].first = 3;
        (*_glb_hdl_sc_channel_map)[23307].second.push_front(p_5_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arvalid.bind(*p_5_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23308].first = 3;
        (*_glb_hdl_sc_channel_map)[23308].second.push_front(p_5_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arready.bind(*p_5_S00_AXI_arready);
        p_5_S00_AXI_arready->set_sv_netview_offsetfromdp(15551264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rid.bind(*p_5_S00_AXI_rid);
        p_5_S00_AXI_rid->set_sv_netview_offsetfromdp(15551320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_rdata.bind(*p_5_S00_AXI_rdata);
        p_5_S00_AXI_rdata->set_sv_netview_offsetfromdp(15551376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_rresp.bind(*p_5_S00_AXI_rresp);
        p_5_S00_AXI_rresp->set_sv_netview_offsetfromdp(15551432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rlast.bind(*p_5_S00_AXI_rlast);
        p_5_S00_AXI_rlast->set_sv_netview_offsetfromdp(15551488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_ruser.bind(*p_5_S00_AXI_ruser);
        p_5_S00_AXI_ruser->set_sv_netview_offsetfromdp(15551544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rvalid.bind(*p_5_S00_AXI_rvalid);
        p_5_S00_AXI_rvalid->set_sv_netview_offsetfromdp(15551600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rready.bind(*p_5_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23329].first = 3;
        (*_glb_hdl_sc_channel_map)[23329].second.push_front(p_5_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awid.bind(*p_5_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[23354].first = 3;
        (*_glb_hdl_sc_channel_map)[23354].second.push_front(p_5_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_awaddr.bind(*p_5_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23351].first = 3;
        (*_glb_hdl_sc_channel_map)[23351].second.push_front(p_5_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_awlen.bind(*p_5_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23355].first = 3;
        (*_glb_hdl_sc_channel_map)[23355].second.push_front(p_5_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awsize.bind(*p_5_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23360].first = 3;
        (*_glb_hdl_sc_channel_map)[23360].second.push_front(p_5_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_awburst.bind(*p_5_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[23352].first = 3;
        (*_glb_hdl_sc_channel_map)[23352].second.push_front(p_5_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_awlock.bind(*p_5_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[23356].first = 1;
        (*_glb_hdl_sc_channel_map)[23356].second.push_front(p_5_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awcache.bind(*p_5_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23353].first = 3;
        (*_glb_hdl_sc_channel_map)[23353].second.push_front(p_5_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awprot.bind(*p_5_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23357].first = 3;
        (*_glb_hdl_sc_channel_map)[23357].second.push_front(p_5_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awqos.bind(*p_5_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23358].first = 3;
        (*_glb_hdl_sc_channel_map)[23358].second.push_front(p_5_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awuser.bind(*p_5_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[23361].first = 3;
        (*_glb_hdl_sc_channel_map)[23361].second.push_front(p_5_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awvalid.bind(*p_5_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23362].first = 3;
        (*_glb_hdl_sc_channel_map)[23362].second.push_front(p_5_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awready.bind(*p_5_S01_AXI_awready);
        p_5_S01_AXI_awready->set_sv_netview_offsetfromdp(15552328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_wdata.bind(*p_5_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23375].first = 3;
        (*_glb_hdl_sc_channel_map)[23375].second.push_front(p_5_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_wstrb.bind(*p_5_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23378].first = 3;
        (*_glb_hdl_sc_channel_map)[23378].second.push_front(p_5_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wlast.bind(*p_5_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23376].first = 3;
        (*_glb_hdl_sc_channel_map)[23376].second.push_front(p_5_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wuser.bind(*p_5_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[23379].first = 3;
        (*_glb_hdl_sc_channel_map)[23379].second.push_front(p_5_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wvalid.bind(*p_5_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23380].first = 3;
        (*_glb_hdl_sc_channel_map)[23380].second.push_front(p_5_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wready.bind(*p_5_S01_AXI_wready);
        p_5_S01_AXI_wready->set_sv_netview_offsetfromdp(15552664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bid.bind(*p_5_S01_AXI_bid);
        p_5_S01_AXI_bid->set_sv_netview_offsetfromdp(15552720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_bresp.bind(*p_5_S01_AXI_bresp);
        p_5_S01_AXI_bresp->set_sv_netview_offsetfromdp(15552776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_buser.bind(*p_5_S01_AXI_buser);
        p_5_S01_AXI_buser->set_sv_netview_offsetfromdp(15552832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bvalid.bind(*p_5_S01_AXI_bvalid);
        p_5_S01_AXI_bvalid->set_sv_netview_offsetfromdp(15552888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bready.bind(*p_5_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23364].first = 3;
        (*_glb_hdl_sc_channel_map)[23364].second.push_front(p_5_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arid.bind(*p_5_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[23342].first = 3;
        (*_glb_hdl_sc_channel_map)[23342].second.push_front(p_5_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_araddr.bind(*p_5_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23339].first = 3;
        (*_glb_hdl_sc_channel_map)[23339].second.push_front(p_5_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_arlen.bind(*p_5_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23343].first = 3;
        (*_glb_hdl_sc_channel_map)[23343].second.push_front(p_5_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arsize.bind(*p_5_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23348].first = 3;
        (*_glb_hdl_sc_channel_map)[23348].second.push_front(p_5_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_arburst.bind(*p_5_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[23340].first = 3;
        (*_glb_hdl_sc_channel_map)[23340].second.push_front(p_5_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_arlock.bind(*p_5_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[23344].first = 1;
        (*_glb_hdl_sc_channel_map)[23344].second.push_front(p_5_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arcache.bind(*p_5_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23341].first = 3;
        (*_glb_hdl_sc_channel_map)[23341].second.push_front(p_5_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arprot.bind(*p_5_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23345].first = 3;
        (*_glb_hdl_sc_channel_map)[23345].second.push_front(p_5_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arqos.bind(*p_5_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23346].first = 3;
        (*_glb_hdl_sc_channel_map)[23346].second.push_front(p_5_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_aruser.bind(*p_5_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[23349].first = 3;
        (*_glb_hdl_sc_channel_map)[23349].second.push_front(p_5_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arvalid.bind(*p_5_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23350].first = 3;
        (*_glb_hdl_sc_channel_map)[23350].second.push_front(p_5_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arready.bind(*p_5_S01_AXI_arready);
        p_5_S01_AXI_arready->set_sv_netview_offsetfromdp(15553616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rid.bind(*p_5_S01_AXI_rid);
        p_5_S01_AXI_rid->set_sv_netview_offsetfromdp(15553672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_rdata.bind(*p_5_S01_AXI_rdata);
        p_5_S01_AXI_rdata->set_sv_netview_offsetfromdp(15553728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_rresp.bind(*p_5_S01_AXI_rresp);
        p_5_S01_AXI_rresp->set_sv_netview_offsetfromdp(15553784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rlast.bind(*p_5_S01_AXI_rlast);
        p_5_S01_AXI_rlast->set_sv_netview_offsetfromdp(15553840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_ruser.bind(*p_5_S01_AXI_ruser);
        p_5_S01_AXI_ruser->set_sv_netview_offsetfromdp(15553896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rvalid.bind(*p_5_S01_AXI_rvalid);
        p_5_S01_AXI_rvalid->set_sv_netview_offsetfromdp(15553952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rready.bind(*p_5_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23371].first = 3;
        (*_glb_hdl_sc_channel_map)[23371].second.push_front(p_5_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awid.bind(*p_5_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[23396].first = 3;
        (*_glb_hdl_sc_channel_map)[23396].second.push_front(p_5_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_awaddr.bind(*p_5_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23393].first = 3;
        (*_glb_hdl_sc_channel_map)[23393].second.push_front(p_5_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_awlen.bind(*p_5_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23397].first = 3;
        (*_glb_hdl_sc_channel_map)[23397].second.push_front(p_5_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awsize.bind(*p_5_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23402].first = 3;
        (*_glb_hdl_sc_channel_map)[23402].second.push_front(p_5_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_awburst.bind(*p_5_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[23394].first = 3;
        (*_glb_hdl_sc_channel_map)[23394].second.push_front(p_5_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_awlock.bind(*p_5_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[23398].first = 1;
        (*_glb_hdl_sc_channel_map)[23398].second.push_front(p_5_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awcache.bind(*p_5_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23395].first = 3;
        (*_glb_hdl_sc_channel_map)[23395].second.push_front(p_5_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awprot.bind(*p_5_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23399].first = 3;
        (*_glb_hdl_sc_channel_map)[23399].second.push_front(p_5_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awqos.bind(*p_5_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23400].first = 3;
        (*_glb_hdl_sc_channel_map)[23400].second.push_front(p_5_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awuser.bind(*p_5_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[23403].first = 3;
        (*_glb_hdl_sc_channel_map)[23403].second.push_front(p_5_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awvalid.bind(*p_5_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23404].first = 3;
        (*_glb_hdl_sc_channel_map)[23404].second.push_front(p_5_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awready.bind(*p_5_S02_AXI_awready);
        p_5_S02_AXI_awready->set_sv_netview_offsetfromdp(15554680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_wdata.bind(*p_5_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23417].first = 3;
        (*_glb_hdl_sc_channel_map)[23417].second.push_front(p_5_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_wstrb.bind(*p_5_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23420].first = 3;
        (*_glb_hdl_sc_channel_map)[23420].second.push_front(p_5_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wlast.bind(*p_5_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23418].first = 3;
        (*_glb_hdl_sc_channel_map)[23418].second.push_front(p_5_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wuser.bind(*p_5_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[23421].first = 3;
        (*_glb_hdl_sc_channel_map)[23421].second.push_front(p_5_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wvalid.bind(*p_5_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23422].first = 3;
        (*_glb_hdl_sc_channel_map)[23422].second.push_front(p_5_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wready.bind(*p_5_S02_AXI_wready);
        p_5_S02_AXI_wready->set_sv_netview_offsetfromdp(15555016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bid.bind(*p_5_S02_AXI_bid);
        p_5_S02_AXI_bid->set_sv_netview_offsetfromdp(15555072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_bresp.bind(*p_5_S02_AXI_bresp);
        p_5_S02_AXI_bresp->set_sv_netview_offsetfromdp(15555128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_buser.bind(*p_5_S02_AXI_buser);
        p_5_S02_AXI_buser->set_sv_netview_offsetfromdp(15555184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bvalid.bind(*p_5_S02_AXI_bvalid);
        p_5_S02_AXI_bvalid->set_sv_netview_offsetfromdp(15555240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bready.bind(*p_5_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23406].first = 3;
        (*_glb_hdl_sc_channel_map)[23406].second.push_front(p_5_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arid.bind(*p_5_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[23384].first = 3;
        (*_glb_hdl_sc_channel_map)[23384].second.push_front(p_5_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_araddr.bind(*p_5_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23381].first = 3;
        (*_glb_hdl_sc_channel_map)[23381].second.push_front(p_5_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_arlen.bind(*p_5_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23385].first = 3;
        (*_glb_hdl_sc_channel_map)[23385].second.push_front(p_5_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arsize.bind(*p_5_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23390].first = 3;
        (*_glb_hdl_sc_channel_map)[23390].second.push_front(p_5_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_arburst.bind(*p_5_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[23382].first = 3;
        (*_glb_hdl_sc_channel_map)[23382].second.push_front(p_5_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_arlock.bind(*p_5_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[23386].first = 1;
        (*_glb_hdl_sc_channel_map)[23386].second.push_front(p_5_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arcache.bind(*p_5_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23383].first = 3;
        (*_glb_hdl_sc_channel_map)[23383].second.push_front(p_5_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arprot.bind(*p_5_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23387].first = 3;
        (*_glb_hdl_sc_channel_map)[23387].second.push_front(p_5_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arqos.bind(*p_5_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23388].first = 3;
        (*_glb_hdl_sc_channel_map)[23388].second.push_front(p_5_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_aruser.bind(*p_5_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[23391].first = 3;
        (*_glb_hdl_sc_channel_map)[23391].second.push_front(p_5_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arvalid.bind(*p_5_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23392].first = 3;
        (*_glb_hdl_sc_channel_map)[23392].second.push_front(p_5_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arready.bind(*p_5_S02_AXI_arready);
        p_5_S02_AXI_arready->set_sv_netview_offsetfromdp(15555968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rid.bind(*p_5_S02_AXI_rid);
        p_5_S02_AXI_rid->set_sv_netview_offsetfromdp(15556024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_rdata.bind(*p_5_S02_AXI_rdata);
        p_5_S02_AXI_rdata->set_sv_netview_offsetfromdp(15556080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_rresp.bind(*p_5_S02_AXI_rresp);
        p_5_S02_AXI_rresp->set_sv_netview_offsetfromdp(15556136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rlast.bind(*p_5_S02_AXI_rlast);
        p_5_S02_AXI_rlast->set_sv_netview_offsetfromdp(15556192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_ruser.bind(*p_5_S02_AXI_ruser);
        p_5_S02_AXI_ruser->set_sv_netview_offsetfromdp(15556248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rvalid.bind(*p_5_S02_AXI_rvalid);
        p_5_S02_AXI_rvalid->set_sv_netview_offsetfromdp(15556304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rready.bind(*p_5_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23413].first = 3;
        (*_glb_hdl_sc_channel_map)[23413].second.push_front(p_5_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awid.bind(*p_5_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[23438].first = 3;
        (*_glb_hdl_sc_channel_map)[23438].second.push_front(p_5_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_awaddr.bind(*p_5_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23435].first = 3;
        (*_glb_hdl_sc_channel_map)[23435].second.push_front(p_5_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_awlen.bind(*p_5_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23439].first = 3;
        (*_glb_hdl_sc_channel_map)[23439].second.push_front(p_5_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awsize.bind(*p_5_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23444].first = 3;
        (*_glb_hdl_sc_channel_map)[23444].second.push_front(p_5_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_awburst.bind(*p_5_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[23436].first = 3;
        (*_glb_hdl_sc_channel_map)[23436].second.push_front(p_5_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_awlock.bind(*p_5_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[23440].first = 1;
        (*_glb_hdl_sc_channel_map)[23440].second.push_front(p_5_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awcache.bind(*p_5_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23437].first = 3;
        (*_glb_hdl_sc_channel_map)[23437].second.push_front(p_5_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awprot.bind(*p_5_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23441].first = 3;
        (*_glb_hdl_sc_channel_map)[23441].second.push_front(p_5_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awqos.bind(*p_5_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23442].first = 3;
        (*_glb_hdl_sc_channel_map)[23442].second.push_front(p_5_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awuser.bind(*p_5_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[23445].first = 3;
        (*_glb_hdl_sc_channel_map)[23445].second.push_front(p_5_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awvalid.bind(*p_5_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23446].first = 3;
        (*_glb_hdl_sc_channel_map)[23446].second.push_front(p_5_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awready.bind(*p_5_S03_AXI_awready);
        p_5_S03_AXI_awready->set_sv_netview_offsetfromdp(15557032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_wdata.bind(*p_5_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23459].first = 3;
        (*_glb_hdl_sc_channel_map)[23459].second.push_front(p_5_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_wstrb.bind(*p_5_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23462].first = 3;
        (*_glb_hdl_sc_channel_map)[23462].second.push_front(p_5_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wlast.bind(*p_5_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23460].first = 3;
        (*_glb_hdl_sc_channel_map)[23460].second.push_front(p_5_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wuser.bind(*p_5_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[23463].first = 3;
        (*_glb_hdl_sc_channel_map)[23463].second.push_front(p_5_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wvalid.bind(*p_5_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23464].first = 3;
        (*_glb_hdl_sc_channel_map)[23464].second.push_front(p_5_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wready.bind(*p_5_S03_AXI_wready);
        p_5_S03_AXI_wready->set_sv_netview_offsetfromdp(15557368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bid.bind(*p_5_S03_AXI_bid);
        p_5_S03_AXI_bid->set_sv_netview_offsetfromdp(15557424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_bresp.bind(*p_5_S03_AXI_bresp);
        p_5_S03_AXI_bresp->set_sv_netview_offsetfromdp(15557480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_buser.bind(*p_5_S03_AXI_buser);
        p_5_S03_AXI_buser->set_sv_netview_offsetfromdp(15557536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bvalid.bind(*p_5_S03_AXI_bvalid);
        p_5_S03_AXI_bvalid->set_sv_netview_offsetfromdp(15557592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bready.bind(*p_5_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23448].first = 3;
        (*_glb_hdl_sc_channel_map)[23448].second.push_front(p_5_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arid.bind(*p_5_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[23426].first = 3;
        (*_glb_hdl_sc_channel_map)[23426].second.push_front(p_5_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_araddr.bind(*p_5_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23423].first = 3;
        (*_glb_hdl_sc_channel_map)[23423].second.push_front(p_5_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_arlen.bind(*p_5_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23427].first = 3;
        (*_glb_hdl_sc_channel_map)[23427].second.push_front(p_5_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arsize.bind(*p_5_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23432].first = 3;
        (*_glb_hdl_sc_channel_map)[23432].second.push_front(p_5_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_arburst.bind(*p_5_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[23424].first = 3;
        (*_glb_hdl_sc_channel_map)[23424].second.push_front(p_5_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_arlock.bind(*p_5_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[23428].first = 1;
        (*_glb_hdl_sc_channel_map)[23428].second.push_front(p_5_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arcache.bind(*p_5_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23425].first = 3;
        (*_glb_hdl_sc_channel_map)[23425].second.push_front(p_5_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arprot.bind(*p_5_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23429].first = 3;
        (*_glb_hdl_sc_channel_map)[23429].second.push_front(p_5_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arqos.bind(*p_5_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23430].first = 3;
        (*_glb_hdl_sc_channel_map)[23430].second.push_front(p_5_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_aruser.bind(*p_5_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[23433].first = 3;
        (*_glb_hdl_sc_channel_map)[23433].second.push_front(p_5_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arvalid.bind(*p_5_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23434].first = 3;
        (*_glb_hdl_sc_channel_map)[23434].second.push_front(p_5_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arready.bind(*p_5_S03_AXI_arready);
        p_5_S03_AXI_arready->set_sv_netview_offsetfromdp(15558320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rid.bind(*p_5_S03_AXI_rid);
        p_5_S03_AXI_rid->set_sv_netview_offsetfromdp(15558376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_rdata.bind(*p_5_S03_AXI_rdata);
        p_5_S03_AXI_rdata->set_sv_netview_offsetfromdp(15558432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_rresp.bind(*p_5_S03_AXI_rresp);
        p_5_S03_AXI_rresp->set_sv_netview_offsetfromdp(15558488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rlast.bind(*p_5_S03_AXI_rlast);
        p_5_S03_AXI_rlast->set_sv_netview_offsetfromdp(15558544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_ruser.bind(*p_5_S03_AXI_ruser);
        p_5_S03_AXI_ruser->set_sv_netview_offsetfromdp(15558600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rvalid.bind(*p_5_S03_AXI_rvalid);
        p_5_S03_AXI_rvalid->set_sv_netview_offsetfromdp(15558656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rready.bind(*p_5_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23455].first = 3;
        (*_glb_hdl_sc_channel_map)[23455].second.push_front(p_5_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_awaddr.bind(*p_5_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23474].first = 3;
        (*_glb_hdl_sc_channel_map)[23474].second.push_front(p_5_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_awlen.bind(*p_5_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23476].first = 3;
        (*_glb_hdl_sc_channel_map)[23476].second.push_front(p_5_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awsize.bind(*p_5_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23481].first = 3;
        (*_glb_hdl_sc_channel_map)[23481].second.push_front(p_5_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_awlock.bind(*p_5_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1253].first = 1;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_5_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awcache.bind(*p_5_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23475].first = 3;
        (*_glb_hdl_sc_channel_map)[23475].second.push_front(p_5_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awprot.bind(*p_5_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23477].first = 3;
        (*_glb_hdl_sc_channel_map)[23477].second.push_front(p_5_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awregion.bind(*p_5_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[23480].first = 3;
        (*_glb_hdl_sc_channel_map)[23480].second.push_front(p_5_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awqos.bind(*p_5_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23478].first = 3;
        (*_glb_hdl_sc_channel_map)[23478].second.push_front(p_5_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awvalid.bind(*p_5_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23482].first = 3;
        (*_glb_hdl_sc_channel_map)[23482].second.push_front(p_5_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awready.bind(*p_5_S04_AXI_awready);
        p_5_S04_AXI_awready->set_sv_netview_offsetfromdp(15559272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S04_AXI_wdata.bind(*p_5_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23491].first = 3;
        (*_glb_hdl_sc_channel_map)[23491].second.push_front(p_5_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_wstrb.bind(*p_5_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23494].first = 3;
        (*_glb_hdl_sc_channel_map)[23494].second.push_front(p_5_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wlast.bind(*p_5_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23492].first = 3;
        (*_glb_hdl_sc_channel_map)[23492].second.push_front(p_5_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wvalid.bind(*p_5_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23495].first = 3;
        (*_glb_hdl_sc_channel_map)[23495].second.push_front(p_5_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wready.bind(*p_5_S04_AXI_wready);
        p_5_S04_AXI_wready->set_sv_netview_offsetfromdp(15559552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_bresp.bind(*p_5_S04_AXI_bresp);
        p_5_S04_AXI_bresp->set_sv_netview_offsetfromdp(15559608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bvalid.bind(*p_5_S04_AXI_bvalid);
        p_5_S04_AXI_bvalid->set_sv_netview_offsetfromdp(15559664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bready.bind(*p_5_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23483].first = 3;
        (*_glb_hdl_sc_channel_map)[23483].second.push_front(p_5_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_araddr.bind(*p_5_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23465].first = 3;
        (*_glb_hdl_sc_channel_map)[23465].second.push_front(p_5_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_arlen.bind(*p_5_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23467].first = 3;
        (*_glb_hdl_sc_channel_map)[23467].second.push_front(p_5_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arsize.bind(*p_5_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23472].first = 3;
        (*_glb_hdl_sc_channel_map)[23472].second.push_front(p_5_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_arlock.bind(*p_5_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1254].first = 1;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_5_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arcache.bind(*p_5_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23466].first = 3;
        (*_glb_hdl_sc_channel_map)[23466].second.push_front(p_5_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arprot.bind(*p_5_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23468].first = 3;
        (*_glb_hdl_sc_channel_map)[23468].second.push_front(p_5_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arregion.bind(*p_5_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[23471].first = 3;
        (*_glb_hdl_sc_channel_map)[23471].second.push_front(p_5_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arqos.bind(*p_5_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23469].first = 3;
        (*_glb_hdl_sc_channel_map)[23469].second.push_front(p_5_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arvalid.bind(*p_5_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23473].first = 3;
        (*_glb_hdl_sc_channel_map)[23473].second.push_front(p_5_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arready.bind(*p_5_S04_AXI_arready);
        p_5_S04_AXI_arready->set_sv_netview_offsetfromdp(15560280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S04_AXI_rdata.bind(*p_5_S04_AXI_rdata);
        p_5_S04_AXI_rdata->set_sv_netview_offsetfromdp(15560336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_rresp.bind(*p_5_S04_AXI_rresp);
        p_5_S04_AXI_rresp->set_sv_netview_offsetfromdp(15560392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rlast.bind(*p_5_S04_AXI_rlast);
        p_5_S04_AXI_rlast->set_sv_netview_offsetfromdp(15560448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rvalid.bind(*p_5_S04_AXI_rvalid);
        p_5_S04_AXI_rvalid->set_sv_netview_offsetfromdp(15560504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rready.bind(*p_5_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23488].first = 3;
        (*_glb_hdl_sc_channel_map)[23488].second.push_front(p_5_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_awaddr.bind(*p_5_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[23505].first = 3;
        (*_glb_hdl_sc_channel_map)[23505].second.push_front(p_5_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_awlen.bind(*p_5_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[23507].first = 3;
        (*_glb_hdl_sc_channel_map)[23507].second.push_front(p_5_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awsize.bind(*p_5_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[23512].first = 3;
        (*_glb_hdl_sc_channel_map)[23512].second.push_front(p_5_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_awlock.bind(*p_5_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_5_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awcache.bind(*p_5_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[23506].first = 3;
        (*_glb_hdl_sc_channel_map)[23506].second.push_front(p_5_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awprot.bind(*p_5_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[23508].first = 3;
        (*_glb_hdl_sc_channel_map)[23508].second.push_front(p_5_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awregion.bind(*p_5_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[23511].first = 3;
        (*_glb_hdl_sc_channel_map)[23511].second.push_front(p_5_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awqos.bind(*p_5_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[23509].first = 3;
        (*_glb_hdl_sc_channel_map)[23509].second.push_front(p_5_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awvalid.bind(*p_5_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[23513].first = 3;
        (*_glb_hdl_sc_channel_map)[23513].second.push_front(p_5_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awready.bind(*p_5_S05_AXI_awready);
        p_5_S05_AXI_awready->set_sv_netview_offsetfromdp(15561120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S05_AXI_wdata.bind(*p_5_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[23522].first = 3;
        (*_glb_hdl_sc_channel_map)[23522].second.push_front(p_5_S05_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_wstrb.bind(*p_5_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[23525].first = 3;
        (*_glb_hdl_sc_channel_map)[23525].second.push_front(p_5_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wlast.bind(*p_5_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[23523].first = 3;
        (*_glb_hdl_sc_channel_map)[23523].second.push_front(p_5_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wvalid.bind(*p_5_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[23526].first = 3;
        (*_glb_hdl_sc_channel_map)[23526].second.push_front(p_5_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wready.bind(*p_5_S05_AXI_wready);
        p_5_S05_AXI_wready->set_sv_netview_offsetfromdp(15561400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_bresp.bind(*p_5_S05_AXI_bresp);
        p_5_S05_AXI_bresp->set_sv_netview_offsetfromdp(15561456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bvalid.bind(*p_5_S05_AXI_bvalid);
        p_5_S05_AXI_bvalid->set_sv_netview_offsetfromdp(15561512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bready.bind(*p_5_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[23514].first = 3;
        (*_glb_hdl_sc_channel_map)[23514].second.push_front(p_5_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_araddr.bind(*p_5_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[23496].first = 3;
        (*_glb_hdl_sc_channel_map)[23496].second.push_front(p_5_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_arlen.bind(*p_5_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[23498].first = 3;
        (*_glb_hdl_sc_channel_map)[23498].second.push_front(p_5_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arsize.bind(*p_5_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[23503].first = 3;
        (*_glb_hdl_sc_channel_map)[23503].second.push_front(p_5_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_arlock.bind(*p_5_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1252].first = 1;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_5_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arcache.bind(*p_5_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[23497].first = 3;
        (*_glb_hdl_sc_channel_map)[23497].second.push_front(p_5_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arprot.bind(*p_5_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[23499].first = 3;
        (*_glb_hdl_sc_channel_map)[23499].second.push_front(p_5_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arregion.bind(*p_5_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[23502].first = 3;
        (*_glb_hdl_sc_channel_map)[23502].second.push_front(p_5_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arqos.bind(*p_5_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[23500].first = 3;
        (*_glb_hdl_sc_channel_map)[23500].second.push_front(p_5_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arvalid.bind(*p_5_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[23504].first = 3;
        (*_glb_hdl_sc_channel_map)[23504].second.push_front(p_5_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arready.bind(*p_5_S05_AXI_arready);
        p_5_S05_AXI_arready->set_sv_netview_offsetfromdp(15562128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_S05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->S05_AXI_rdata.bind(*p_5_S05_AXI_rdata);
        p_5_S05_AXI_rdata->set_sv_netview_offsetfromdp(15562184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_rresp.bind(*p_5_S05_AXI_rresp);
        p_5_S05_AXI_rresp->set_sv_netview_offsetfromdp(15562240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rlast.bind(*p_5_S05_AXI_rlast);
        p_5_S05_AXI_rlast->set_sv_netview_offsetfromdp(15562296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rvalid.bind(*p_5_S05_AXI_rvalid);
        p_5_S05_AXI_rvalid->set_sv_netview_offsetfromdp(15562352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rready.bind(*p_5_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[23519].first = 3;
        (*_glb_hdl_sc_channel_map)[23519].second.push_front(p_5_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_5_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_5->ddr4_mem_calib_complete.bind(*p_5_ddr4_mem_calib_complete);
        p_5_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(15562464);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_awid.bind(*p_5_M00_AXI_awid);
        p_5_M00_AXI_awid->set_sv_netview_offsetfromdp(15562520);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_awaddr.bind(*p_5_M00_AXI_awaddr);
        p_5_M00_AXI_awaddr->set_sv_netview_offsetfromdp(15562576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_awlen.bind(*p_5_M00_AXI_awlen);
        p_5_M00_AXI_awlen->set_sv_netview_offsetfromdp(15562632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awsize.bind(*p_5_M00_AXI_awsize);
        p_5_M00_AXI_awsize->set_sv_netview_offsetfromdp(15562688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_awburst.bind(*p_5_M00_AXI_awburst);
        p_5_M00_AXI_awburst->set_sv_netview_offsetfromdp(15562744);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_awlock.bind(*p_5_M00_AXI_awlock);
        p_5_M00_AXI_awlock->set_sv_netview_offsetfromdp(15562800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awcache.bind(*p_5_M00_AXI_awcache);
        p_5_M00_AXI_awcache->set_sv_netview_offsetfromdp(15562856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awprot.bind(*p_5_M00_AXI_awprot);
        p_5_M00_AXI_awprot->set_sv_netview_offsetfromdp(15562912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awqos.bind(*p_5_M00_AXI_awqos);
        p_5_M00_AXI_awqos->set_sv_netview_offsetfromdp(15562968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_awuser.bind(*p_5_M00_AXI_awuser);
        p_5_M00_AXI_awuser->set_sv_netview_offsetfromdp(15563024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awvalid.bind(*p_5_M00_AXI_awvalid);
        p_5_M00_AXI_awvalid->set_sv_netview_offsetfromdp(15563080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awready.bind(*p_5_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[23164].first = 3;
        (*_glb_hdl_sc_channel_map)[23164].second.push_front(p_5_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_wdata.bind(*p_5_M00_AXI_wdata);
        p_5_M00_AXI_wdata->set_sv_netview_offsetfromdp(15563192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M00_AXI_wstrb.bind(*p_5_M00_AXI_wstrb);
        p_5_M00_AXI_wstrb->set_sv_netview_offsetfromdp(15563248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wlast.bind(*p_5_M00_AXI_wlast);
        p_5_M00_AXI_wlast->set_sv_netview_offsetfromdp(15563304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wuser.bind(*p_5_M00_AXI_wuser);
        p_5_M00_AXI_wuser->set_sv_netview_offsetfromdp(15563360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wvalid.bind(*p_5_M00_AXI_wvalid);
        p_5_M00_AXI_wvalid->set_sv_netview_offsetfromdp(15563416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wready.bind(*p_5_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[23182].first = 3;
        (*_glb_hdl_sc_channel_map)[23182].second.push_front(p_5_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_bid.bind(*p_5_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[23168].first = 3;
        (*_glb_hdl_sc_channel_map)[23168].second.push_front(p_5_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_bresp.bind(*p_5_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[23170].first = 3;
        (*_glb_hdl_sc_channel_map)[23170].second.push_front(p_5_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_buser.bind(*p_5_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[23171].first = 3;
        (*_glb_hdl_sc_channel_map)[23171].second.push_front(p_5_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bvalid.bind(*p_5_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[23172].first = 3;
        (*_glb_hdl_sc_channel_map)[23172].second.push_front(p_5_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bready.bind(*p_5_M00_AXI_bready);
        p_5_M00_AXI_bready->set_sv_netview_offsetfromdp(15563752);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_arid.bind(*p_5_M00_AXI_arid);
        p_5_M00_AXI_arid->set_sv_netview_offsetfromdp(15563808);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_araddr.bind(*p_5_M00_AXI_araddr);
        p_5_M00_AXI_araddr->set_sv_netview_offsetfromdp(15563864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_arlen.bind(*p_5_M00_AXI_arlen);
        p_5_M00_AXI_arlen->set_sv_netview_offsetfromdp(15563920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arsize.bind(*p_5_M00_AXI_arsize);
        p_5_M00_AXI_arsize->set_sv_netview_offsetfromdp(15563976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_arburst.bind(*p_5_M00_AXI_arburst);
        p_5_M00_AXI_arburst->set_sv_netview_offsetfromdp(15564032);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_arlock.bind(*p_5_M00_AXI_arlock);
        p_5_M00_AXI_arlock->set_sv_netview_offsetfromdp(15564088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arcache.bind(*p_5_M00_AXI_arcache);
        p_5_M00_AXI_arcache->set_sv_netview_offsetfromdp(15564144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arprot.bind(*p_5_M00_AXI_arprot);
        p_5_M00_AXI_arprot->set_sv_netview_offsetfromdp(15564200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arqos.bind(*p_5_M00_AXI_arqos);
        p_5_M00_AXI_arqos->set_sv_netview_offsetfromdp(15564256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_aruser.bind(*p_5_M00_AXI_aruser);
        p_5_M00_AXI_aruser->set_sv_netview_offsetfromdp(15564312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arvalid.bind(*p_5_M00_AXI_arvalid);
        p_5_M00_AXI_arvalid->set_sv_netview_offsetfromdp(15564368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arready.bind(*p_5_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[23152].first = 3;
        (*_glb_hdl_sc_channel_map)[23152].second.push_front(p_5_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_rid.bind(*p_5_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[23174].first = 3;
        (*_glb_hdl_sc_channel_map)[23174].second.push_front(p_5_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_rdata.bind(*p_5_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[23173].first = 3;
        (*_glb_hdl_sc_channel_map)[23173].second.push_front(p_5_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_rresp.bind(*p_5_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[23177].first = 3;
        (*_glb_hdl_sc_channel_map)[23177].second.push_front(p_5_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rlast.bind(*p_5_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[23175].first = 3;
        (*_glb_hdl_sc_channel_map)[23175].second.push_front(p_5_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_ruser.bind(*p_5_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[23178].first = 3;
        (*_glb_hdl_sc_channel_map)[23178].second.push_front(p_5_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rvalid.bind(*p_5_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[23179].first = 3;
        (*_glb_hdl_sc_channel_map)[23179].second.push_front(p_5_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rready.bind(*p_5_M00_AXI_rready);
        p_5_M00_AXI_rready->set_sv_netview_offsetfromdp(15564816);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_awaddr.bind(*p_5_M01_AXI_awaddr);
        p_5_M01_AXI_awaddr->set_sv_netview_offsetfromdp(15564872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_awlen.bind(*p_5_M01_AXI_awlen);
        p_5_M01_AXI_awlen->set_sv_netview_offsetfromdp(15564928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awsize.bind(*p_5_M01_AXI_awsize);
        p_5_M01_AXI_awsize->set_sv_netview_offsetfromdp(15564984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_awburst.bind(*p_5_M01_AXI_awburst);
        p_5_M01_AXI_awburst->set_sv_netview_offsetfromdp(15565040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awprot.bind(*p_5_M01_AXI_awprot);
        p_5_M01_AXI_awprot->set_sv_netview_offsetfromdp(15565096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awvalid.bind(*p_5_M01_AXI_awvalid);
        p_5_M01_AXI_awvalid->set_sv_netview_offsetfromdp(15565152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awready.bind(*p_5_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[23197].first = 3;
        (*_glb_hdl_sc_channel_map)[23197].second.push_front(p_5_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_wdata.bind(*p_5_M01_AXI_wdata);
        p_5_M01_AXI_wdata->set_sv_netview_offsetfromdp(15565264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M01_AXI_wstrb.bind(*p_5_M01_AXI_wstrb);
        p_5_M01_AXI_wstrb->set_sv_netview_offsetfromdp(15565320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wlast.bind(*p_5_M01_AXI_wlast);
        p_5_M01_AXI_wlast->set_sv_netview_offsetfromdp(15565376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wvalid.bind(*p_5_M01_AXI_wvalid);
        p_5_M01_AXI_wvalid->set_sv_netview_offsetfromdp(15565432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wready.bind(*p_5_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[23210].first = 3;
        (*_glb_hdl_sc_channel_map)[23210].second.push_front(p_5_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_bresp.bind(*p_5_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[23201].first = 3;
        (*_glb_hdl_sc_channel_map)[23201].second.push_front(p_5_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bvalid.bind(*p_5_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[23202].first = 3;
        (*_glb_hdl_sc_channel_map)[23202].second.push_front(p_5_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bready.bind(*p_5_M01_AXI_bready);
        p_5_M01_AXI_bready->set_sv_netview_offsetfromdp(15565656);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_araddr.bind(*p_5_M01_AXI_araddr);
        p_5_M01_AXI_araddr->set_sv_netview_offsetfromdp(15565712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_arlen.bind(*p_5_M01_AXI_arlen);
        p_5_M01_AXI_arlen->set_sv_netview_offsetfromdp(15565768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arsize.bind(*p_5_M01_AXI_arsize);
        p_5_M01_AXI_arsize->set_sv_netview_offsetfromdp(15565824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_arburst.bind(*p_5_M01_AXI_arburst);
        p_5_M01_AXI_arburst->set_sv_netview_offsetfromdp(15565880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arprot.bind(*p_5_M01_AXI_arprot);
        p_5_M01_AXI_arprot->set_sv_netview_offsetfromdp(15565936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arvalid.bind(*p_5_M01_AXI_arvalid);
        p_5_M01_AXI_arvalid->set_sv_netview_offsetfromdp(15565992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arready.bind(*p_5_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[23190].first = 3;
        (*_glb_hdl_sc_channel_map)[23190].second.push_front(p_5_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_rdata.bind(*p_5_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[23203].first = 3;
        (*_glb_hdl_sc_channel_map)[23203].second.push_front(p_5_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_rresp.bind(*p_5_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[23206].first = 3;
        (*_glb_hdl_sc_channel_map)[23206].second.push_front(p_5_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rlast.bind(*p_5_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[23204].first = 3;
        (*_glb_hdl_sc_channel_map)[23204].second.push_front(p_5_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rvalid.bind(*p_5_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[23207].first = 3;
        (*_glb_hdl_sc_channel_map)[23207].second.push_front(p_5_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rready.bind(*p_5_M01_AXI_rready);
        p_5_M01_AXI_rready->set_sv_netview_offsetfromdp(15566328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_awid.bind(*p_5_M02_AXI_awid);
        p_5_M02_AXI_awid->set_sv_netview_offsetfromdp(15566384);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_awaddr.bind(*p_5_M02_AXI_awaddr);
        p_5_M02_AXI_awaddr->set_sv_netview_offsetfromdp(15566440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_awlen.bind(*p_5_M02_AXI_awlen);
        p_5_M02_AXI_awlen->set_sv_netview_offsetfromdp(15566496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awsize.bind(*p_5_M02_AXI_awsize);
        p_5_M02_AXI_awsize->set_sv_netview_offsetfromdp(15566552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_awburst.bind(*p_5_M02_AXI_awburst);
        p_5_M02_AXI_awburst->set_sv_netview_offsetfromdp(15566608);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_awlock.bind(*p_5_M02_AXI_awlock);
        p_5_M02_AXI_awlock->set_sv_netview_offsetfromdp(15566664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awcache.bind(*p_5_M02_AXI_awcache);
        p_5_M02_AXI_awcache->set_sv_netview_offsetfromdp(15566720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awprot.bind(*p_5_M02_AXI_awprot);
        p_5_M02_AXI_awprot->set_sv_netview_offsetfromdp(15566776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awqos.bind(*p_5_M02_AXI_awqos);
        p_5_M02_AXI_awqos->set_sv_netview_offsetfromdp(15566832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_awuser.bind(*p_5_M02_AXI_awuser);
        p_5_M02_AXI_awuser->set_sv_netview_offsetfromdp(15566888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awvalid.bind(*p_5_M02_AXI_awvalid);
        p_5_M02_AXI_awvalid->set_sv_netview_offsetfromdp(15566944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awready.bind(*p_5_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[23233].first = 3;
        (*_glb_hdl_sc_channel_map)[23233].second.push_front(p_5_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_wdata.bind(*p_5_M02_AXI_wdata);
        p_5_M02_AXI_wdata->set_sv_netview_offsetfromdp(15567056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M02_AXI_wstrb.bind(*p_5_M02_AXI_wstrb);
        p_5_M02_AXI_wstrb->set_sv_netview_offsetfromdp(15567112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wlast.bind(*p_5_M02_AXI_wlast);
        p_5_M02_AXI_wlast->set_sv_netview_offsetfromdp(15567168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wuser.bind(*p_5_M02_AXI_wuser);
        p_5_M02_AXI_wuser->set_sv_netview_offsetfromdp(15567224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wvalid.bind(*p_5_M02_AXI_wvalid);
        p_5_M02_AXI_wvalid->set_sv_netview_offsetfromdp(15567280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wready.bind(*p_5_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[23251].first = 3;
        (*_glb_hdl_sc_channel_map)[23251].second.push_front(p_5_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_bid.bind(*p_5_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[23237].first = 3;
        (*_glb_hdl_sc_channel_map)[23237].second.push_front(p_5_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_bresp.bind(*p_5_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[23239].first = 3;
        (*_glb_hdl_sc_channel_map)[23239].second.push_front(p_5_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_buser.bind(*p_5_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[23240].first = 3;
        (*_glb_hdl_sc_channel_map)[23240].second.push_front(p_5_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bvalid.bind(*p_5_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[23241].first = 3;
        (*_glb_hdl_sc_channel_map)[23241].second.push_front(p_5_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bready.bind(*p_5_M02_AXI_bready);
        p_5_M02_AXI_bready->set_sv_netview_offsetfromdp(15567616);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_arid.bind(*p_5_M02_AXI_arid);
        p_5_M02_AXI_arid->set_sv_netview_offsetfromdp(15567672);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_araddr.bind(*p_5_M02_AXI_araddr);
        p_5_M02_AXI_araddr->set_sv_netview_offsetfromdp(15567728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_arlen.bind(*p_5_M02_AXI_arlen);
        p_5_M02_AXI_arlen->set_sv_netview_offsetfromdp(15567784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arsize.bind(*p_5_M02_AXI_arsize);
        p_5_M02_AXI_arsize->set_sv_netview_offsetfromdp(15567840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_arburst.bind(*p_5_M02_AXI_arburst);
        p_5_M02_AXI_arburst->set_sv_netview_offsetfromdp(15567896);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_arlock.bind(*p_5_M02_AXI_arlock);
        p_5_M02_AXI_arlock->set_sv_netview_offsetfromdp(15567952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arcache.bind(*p_5_M02_AXI_arcache);
        p_5_M02_AXI_arcache->set_sv_netview_offsetfromdp(15568008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arprot.bind(*p_5_M02_AXI_arprot);
        p_5_M02_AXI_arprot->set_sv_netview_offsetfromdp(15568064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arqos.bind(*p_5_M02_AXI_arqos);
        p_5_M02_AXI_arqos->set_sv_netview_offsetfromdp(15568120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_aruser.bind(*p_5_M02_AXI_aruser);
        p_5_M02_AXI_aruser->set_sv_netview_offsetfromdp(15568176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arvalid.bind(*p_5_M02_AXI_arvalid);
        p_5_M02_AXI_arvalid->set_sv_netview_offsetfromdp(15568232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arready.bind(*p_5_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[23221].first = 3;
        (*_glb_hdl_sc_channel_map)[23221].second.push_front(p_5_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_rid.bind(*p_5_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[23243].first = 3;
        (*_glb_hdl_sc_channel_map)[23243].second.push_front(p_5_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_rdata.bind(*p_5_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[23242].first = 3;
        (*_glb_hdl_sc_channel_map)[23242].second.push_front(p_5_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_rresp.bind(*p_5_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[23246].first = 3;
        (*_glb_hdl_sc_channel_map)[23246].second.push_front(p_5_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rlast.bind(*p_5_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[23244].first = 3;
        (*_glb_hdl_sc_channel_map)[23244].second.push_front(p_5_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_ruser.bind(*p_5_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[23247].first = 3;
        (*_glb_hdl_sc_channel_map)[23247].second.push_front(p_5_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rvalid.bind(*p_5_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[23248].first = 3;
        (*_glb_hdl_sc_channel_map)[23248].second.push_front(p_5_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rready.bind(*p_5_M02_AXI_rready);
        p_5_M02_AXI_rready->set_sv_netview_offsetfromdp(15568680);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_awid.bind(*p_5_M03_AXI_awid);
        p_5_M03_AXI_awid->set_sv_netview_offsetfromdp(15568736);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_awaddr.bind(*p_5_M03_AXI_awaddr);
        p_5_M03_AXI_awaddr->set_sv_netview_offsetfromdp(15568792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_awlen.bind(*p_5_M03_AXI_awlen);
        p_5_M03_AXI_awlen->set_sv_netview_offsetfromdp(15568848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awsize.bind(*p_5_M03_AXI_awsize);
        p_5_M03_AXI_awsize->set_sv_netview_offsetfromdp(15568904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_awburst.bind(*p_5_M03_AXI_awburst);
        p_5_M03_AXI_awburst->set_sv_netview_offsetfromdp(15568960);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_awlock.bind(*p_5_M03_AXI_awlock);
        p_5_M03_AXI_awlock->set_sv_netview_offsetfromdp(15569016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awcache.bind(*p_5_M03_AXI_awcache);
        p_5_M03_AXI_awcache->set_sv_netview_offsetfromdp(15569072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awprot.bind(*p_5_M03_AXI_awprot);
        p_5_M03_AXI_awprot->set_sv_netview_offsetfromdp(15569128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awqos.bind(*p_5_M03_AXI_awqos);
        p_5_M03_AXI_awqos->set_sv_netview_offsetfromdp(15569184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_awuser.bind(*p_5_M03_AXI_awuser);
        p_5_M03_AXI_awuser->set_sv_netview_offsetfromdp(15569240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awvalid.bind(*p_5_M03_AXI_awvalid);
        p_5_M03_AXI_awvalid->set_sv_netview_offsetfromdp(15569296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awready.bind(*p_5_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[23275].first = 3;
        (*_glb_hdl_sc_channel_map)[23275].second.push_front(p_5_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_wdata.bind(*p_5_M03_AXI_wdata);
        p_5_M03_AXI_wdata->set_sv_netview_offsetfromdp(15569408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M03_AXI_wstrb.bind(*p_5_M03_AXI_wstrb);
        p_5_M03_AXI_wstrb->set_sv_netview_offsetfromdp(15569464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wlast.bind(*p_5_M03_AXI_wlast);
        p_5_M03_AXI_wlast->set_sv_netview_offsetfromdp(15569520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wuser.bind(*p_5_M03_AXI_wuser);
        p_5_M03_AXI_wuser->set_sv_netview_offsetfromdp(15569576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wvalid.bind(*p_5_M03_AXI_wvalid);
        p_5_M03_AXI_wvalid->set_sv_netview_offsetfromdp(15569632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wready.bind(*p_5_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[23293].first = 3;
        (*_glb_hdl_sc_channel_map)[23293].second.push_front(p_5_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_bid.bind(*p_5_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[23279].first = 3;
        (*_glb_hdl_sc_channel_map)[23279].second.push_front(p_5_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_bresp.bind(*p_5_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[23281].first = 3;
        (*_glb_hdl_sc_channel_map)[23281].second.push_front(p_5_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_buser.bind(*p_5_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[23282].first = 3;
        (*_glb_hdl_sc_channel_map)[23282].second.push_front(p_5_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bvalid.bind(*p_5_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[23283].first = 3;
        (*_glb_hdl_sc_channel_map)[23283].second.push_front(p_5_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bready.bind(*p_5_M03_AXI_bready);
        p_5_M03_AXI_bready->set_sv_netview_offsetfromdp(15569968);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_arid.bind(*p_5_M03_AXI_arid);
        p_5_M03_AXI_arid->set_sv_netview_offsetfromdp(15570024);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_araddr.bind(*p_5_M03_AXI_araddr);
        p_5_M03_AXI_araddr->set_sv_netview_offsetfromdp(15570080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_arlen.bind(*p_5_M03_AXI_arlen);
        p_5_M03_AXI_arlen->set_sv_netview_offsetfromdp(15570136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arsize.bind(*p_5_M03_AXI_arsize);
        p_5_M03_AXI_arsize->set_sv_netview_offsetfromdp(15570192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_arburst.bind(*p_5_M03_AXI_arburst);
        p_5_M03_AXI_arburst->set_sv_netview_offsetfromdp(15570248);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_arlock.bind(*p_5_M03_AXI_arlock);
        p_5_M03_AXI_arlock->set_sv_netview_offsetfromdp(15570304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arcache.bind(*p_5_M03_AXI_arcache);
        p_5_M03_AXI_arcache->set_sv_netview_offsetfromdp(15570360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arprot.bind(*p_5_M03_AXI_arprot);
        p_5_M03_AXI_arprot->set_sv_netview_offsetfromdp(15570416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arqos.bind(*p_5_M03_AXI_arqos);
        p_5_M03_AXI_arqos->set_sv_netview_offsetfromdp(15570472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_aruser.bind(*p_5_M03_AXI_aruser);
        p_5_M03_AXI_aruser->set_sv_netview_offsetfromdp(15570528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arvalid.bind(*p_5_M03_AXI_arvalid);
        p_5_M03_AXI_arvalid->set_sv_netview_offsetfromdp(15570584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arready.bind(*p_5_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[23263].first = 3;
        (*_glb_hdl_sc_channel_map)[23263].second.push_front(p_5_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_rid.bind(*p_5_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[23285].first = 3;
        (*_glb_hdl_sc_channel_map)[23285].second.push_front(p_5_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_rdata.bind(*p_5_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[23284].first = 3;
        (*_glb_hdl_sc_channel_map)[23284].second.push_front(p_5_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_rresp.bind(*p_5_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[23288].first = 3;
        (*_glb_hdl_sc_channel_map)[23288].second.push_front(p_5_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rlast.bind(*p_5_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[23286].first = 3;
        (*_glb_hdl_sc_channel_map)[23286].second.push_front(p_5_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_ruser.bind(*p_5_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[23289].first = 3;
        (*_glb_hdl_sc_channel_map)[23289].second.push_front(p_5_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rvalid.bind(*p_5_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[23290].first = 3;
        (*_glb_hdl_sc_channel_map)[23290].second.push_front(p_5_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rready.bind(*p_5_M03_AXI_rready);
        p_5_M03_AXI_rready->set_sv_netview_offsetfromdp(15571032);
        sc_inst_6 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_6->xsim_set_dbg_index(31);
        sc_inst_7 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_7->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23575].first = 1;
        (*_glb_hdl_sc_channel_map)[23575].second.push_front(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23548].first = 3;
        (*_glb_hdl_sc_channel_map)[23548].second.push_front(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23545].first = 3;
        (*_glb_hdl_sc_channel_map)[23545].second.push_front(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23549].first = 3;
        (*_glb_hdl_sc_channel_map)[23549].second.push_front(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23554].first = 3;
        (*_glb_hdl_sc_channel_map)[23554].second.push_front(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23546].first = 3;
        (*_glb_hdl_sc_channel_map)[23546].second.push_front(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23550].first = 1;
        (*_glb_hdl_sc_channel_map)[23550].second.push_front(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23547].first = 3;
        (*_glb_hdl_sc_channel_map)[23547].second.push_front(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23551].first = 3;
        (*_glb_hdl_sc_channel_map)[23551].second.push_front(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23552].first = 3;
        (*_glb_hdl_sc_channel_map)[23552].second.push_front(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23555].first = 3;
        (*_glb_hdl_sc_channel_map)[23555].second.push_front(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23556].first = 1;
        (*_glb_hdl_sc_channel_map)[23556].second.push_front(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(15571912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23569].first = 3;
        (*_glb_hdl_sc_channel_map)[23569].second.push_front(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23572].first = 3;
        (*_glb_hdl_sc_channel_map)[23572].second.push_front(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23570].first = 1;
        (*_glb_hdl_sc_channel_map)[23570].second.push_front(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23573].first = 3;
        (*_glb_hdl_sc_channel_map)[23573].second.push_front(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23574].first = 1;
        (*_glb_hdl_sc_channel_map)[23574].second.push_front(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(15572248);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(15572304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(15572360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(15572416);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(15572472);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23558].first = 1;
        (*_glb_hdl_sc_channel_map)[23558].second.push_front(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23536].first = 3;
        (*_glb_hdl_sc_channel_map)[23536].second.push_front(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23532].first = 3;
        (*_glb_hdl_sc_channel_map)[23532].second.push_front(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23537].first = 3;
        (*_glb_hdl_sc_channel_map)[23537].second.push_front(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23542].first = 3;
        (*_glb_hdl_sc_channel_map)[23542].second.push_front(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23533].first = 3;
        (*_glb_hdl_sc_channel_map)[23533].second.push_front(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23538].first = 1;
        (*_glb_hdl_sc_channel_map)[23538].second.push_front(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23534].first = 3;
        (*_glb_hdl_sc_channel_map)[23534].second.push_front(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23539].first = 3;
        (*_glb_hdl_sc_channel_map)[23539].second.push_front(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23540].first = 3;
        (*_glb_hdl_sc_channel_map)[23540].second.push_front(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23543].first = 3;
        (*_glb_hdl_sc_channel_map)[23543].second.push_front(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23544].first = 1;
        (*_glb_hdl_sc_channel_map)[23544].second.push_front(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(15573256);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(15573312);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(15573368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(15573424);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(15573480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(15573536);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(15573592);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23565].first = 1;
        (*_glb_hdl_sc_channel_map)[23565].second.push_front(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23531].first = 1;
        (*_glb_hdl_sc_channel_map)[23531].second.push_front(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23535].first = 1;
        (*_glb_hdl_sc_channel_map)[23535].second.push_front(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1231].first = 1;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1230].first = 3;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1225].first = 1;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(15574488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1221].first = 1;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(15574824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(15574880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(15574936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(15574992);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(15575048);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1245].first = 3;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1244].first = 3;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1241].first = 3;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1238].first = 3;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1237].first = 1;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(15575832);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(15575888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(15575944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(15576000);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(15576056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(15576112);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(15576168);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1223].first = 1;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23576].first = 1;
        (*_glb_hdl_sc_channel_map)[23576].second.push_front(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23577].first = 1;
        (*_glb_hdl_sc_channel_map)[23577].second.push_front(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_8->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23635].first = 1;
        (*_glb_hdl_sc_channel_map)[23635].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23608].first = 3;
        (*_glb_hdl_sc_channel_map)[23608].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23605].first = 3;
        (*_glb_hdl_sc_channel_map)[23605].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23609].first = 3;
        (*_glb_hdl_sc_channel_map)[23609].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23614].first = 3;
        (*_glb_hdl_sc_channel_map)[23614].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23606].first = 3;
        (*_glb_hdl_sc_channel_map)[23606].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23610].first = 1;
        (*_glb_hdl_sc_channel_map)[23610].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23607].first = 3;
        (*_glb_hdl_sc_channel_map)[23607].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23611].first = 3;
        (*_glb_hdl_sc_channel_map)[23611].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23612].first = 3;
        (*_glb_hdl_sc_channel_map)[23612].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23615].first = 3;
        (*_glb_hdl_sc_channel_map)[23615].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23616].first = 1;
        (*_glb_hdl_sc_channel_map)[23616].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(15577168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23629].first = 3;
        (*_glb_hdl_sc_channel_map)[23629].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23632].first = 3;
        (*_glb_hdl_sc_channel_map)[23632].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23630].first = 1;
        (*_glb_hdl_sc_channel_map)[23630].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23633].first = 3;
        (*_glb_hdl_sc_channel_map)[23633].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23634].first = 1;
        (*_glb_hdl_sc_channel_map)[23634].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(15577504);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(15577560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(15577616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(15577672);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(15577728);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23618].first = 1;
        (*_glb_hdl_sc_channel_map)[23618].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23596].first = 3;
        (*_glb_hdl_sc_channel_map)[23596].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23592].first = 3;
        (*_glb_hdl_sc_channel_map)[23592].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23597].first = 3;
        (*_glb_hdl_sc_channel_map)[23597].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23602].first = 3;
        (*_glb_hdl_sc_channel_map)[23602].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23593].first = 3;
        (*_glb_hdl_sc_channel_map)[23593].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23598].first = 1;
        (*_glb_hdl_sc_channel_map)[23598].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23594].first = 3;
        (*_glb_hdl_sc_channel_map)[23594].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23599].first = 3;
        (*_glb_hdl_sc_channel_map)[23599].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23600].first = 3;
        (*_glb_hdl_sc_channel_map)[23600].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23603].first = 3;
        (*_glb_hdl_sc_channel_map)[23603].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23604].first = 1;
        (*_glb_hdl_sc_channel_map)[23604].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(15578512);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(15578568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(15578624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(15578680);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(15578736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(15578792);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(15578848);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23625].first = 1;
        (*_glb_hdl_sc_channel_map)[23625].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23591].first = 1;
        (*_glb_hdl_sc_channel_map)[23591].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23595].first = 1;
        (*_glb_hdl_sc_channel_map)[23595].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1198].first = 1;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1197].first = 3;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1192].first = 1;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(15579744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1188].first = 1;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(15580080);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(15580136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(15580192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(15580248);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(15580304);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1212].first = 3;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1211].first = 3;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1208].first = 3;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1205].first = 3;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1204].first = 1;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(15581088);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(15581144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(15581200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(15581256);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(15581312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(15581368);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(15581424);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1190].first = 1;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23636].first = 1;
        (*_glb_hdl_sc_channel_map)[23636].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23637].first = 1;
        (*_glb_hdl_sc_channel_map)[23637].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_9->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23695].first = 1;
        (*_glb_hdl_sc_channel_map)[23695].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23668].first = 3;
        (*_glb_hdl_sc_channel_map)[23668].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23665].first = 3;
        (*_glb_hdl_sc_channel_map)[23665].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23669].first = 3;
        (*_glb_hdl_sc_channel_map)[23669].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23674].first = 3;
        (*_glb_hdl_sc_channel_map)[23674].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23666].first = 3;
        (*_glb_hdl_sc_channel_map)[23666].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23670].first = 1;
        (*_glb_hdl_sc_channel_map)[23670].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23667].first = 3;
        (*_glb_hdl_sc_channel_map)[23667].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23671].first = 3;
        (*_glb_hdl_sc_channel_map)[23671].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23672].first = 3;
        (*_glb_hdl_sc_channel_map)[23672].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23675].first = 3;
        (*_glb_hdl_sc_channel_map)[23675].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23676].first = 1;
        (*_glb_hdl_sc_channel_map)[23676].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(15582424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23689].first = 3;
        (*_glb_hdl_sc_channel_map)[23689].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23692].first = 3;
        (*_glb_hdl_sc_channel_map)[23692].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23690].first = 1;
        (*_glb_hdl_sc_channel_map)[23690].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23693].first = 3;
        (*_glb_hdl_sc_channel_map)[23693].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23694].first = 1;
        (*_glb_hdl_sc_channel_map)[23694].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(15582760);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(15582816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(15582872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(15582928);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(15582984);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23678].first = 1;
        (*_glb_hdl_sc_channel_map)[23678].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23656].first = 3;
        (*_glb_hdl_sc_channel_map)[23656].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23652].first = 3;
        (*_glb_hdl_sc_channel_map)[23652].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23657].first = 3;
        (*_glb_hdl_sc_channel_map)[23657].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23662].first = 3;
        (*_glb_hdl_sc_channel_map)[23662].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23653].first = 3;
        (*_glb_hdl_sc_channel_map)[23653].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23658].first = 1;
        (*_glb_hdl_sc_channel_map)[23658].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23654].first = 3;
        (*_glb_hdl_sc_channel_map)[23654].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23659].first = 3;
        (*_glb_hdl_sc_channel_map)[23659].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23660].first = 3;
        (*_glb_hdl_sc_channel_map)[23660].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23663].first = 3;
        (*_glb_hdl_sc_channel_map)[23663].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23664].first = 1;
        (*_glb_hdl_sc_channel_map)[23664].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(15583768);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(15583824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(15583880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(15583936);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(15583992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(15584048);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(15584104);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23685].first = 1;
        (*_glb_hdl_sc_channel_map)[23685].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23651].first = 1;
        (*_glb_hdl_sc_channel_map)[23651].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23655].first = 1;
        (*_glb_hdl_sc_channel_map)[23655].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1167].first = 3;
        (*_glb_hdl_sc_channel_map)[1167].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1170].first = 3;
        (*_glb_hdl_sc_channel_map)[1170].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1166].first = 3;
        (*_glb_hdl_sc_channel_map)[1166].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1161].first = 3;
        (*_glb_hdl_sc_channel_map)[1161].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1169].first = 3;
        (*_glb_hdl_sc_channel_map)[1169].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1165].first = 1;
        (*_glb_hdl_sc_channel_map)[1165].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1168].first = 3;
        (*_glb_hdl_sc_channel_map)[1168].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1164].first = 3;
        (*_glb_hdl_sc_channel_map)[1164].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1162].first = 3;
        (*_glb_hdl_sc_channel_map)[1162].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1163].first = 3;
        (*_glb_hdl_sc_channel_map)[1163].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1160].first = 3;
        (*_glb_hdl_sc_channel_map)[1160].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1159].first = 1;
        (*_glb_hdl_sc_channel_map)[1159].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(15585000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1156].first = 3;
        (*_glb_hdl_sc_channel_map)[1156].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1154].first = 3;
        (*_glb_hdl_sc_channel_map)[1154].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1155].first = 1;
        (*_glb_hdl_sc_channel_map)[1155].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1153].first = 3;
        (*_glb_hdl_sc_channel_map)[1153].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1152].first = 1;
        (*_glb_hdl_sc_channel_map)[1152].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(15585336);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(15585392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(15585448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(15585504);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(15585560);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1158].first = 1;
        (*_glb_hdl_sc_channel_map)[1158].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1179].first = 3;
        (*_glb_hdl_sc_channel_map)[1179].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1182].first = 3;
        (*_glb_hdl_sc_channel_map)[1182].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1178].first = 3;
        (*_glb_hdl_sc_channel_map)[1178].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1173].first = 3;
        (*_glb_hdl_sc_channel_map)[1173].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1181].first = 3;
        (*_glb_hdl_sc_channel_map)[1181].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1177].first = 1;
        (*_glb_hdl_sc_channel_map)[1177].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1180].first = 3;
        (*_glb_hdl_sc_channel_map)[1180].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1176].first = 3;
        (*_glb_hdl_sc_channel_map)[1176].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1174].first = 3;
        (*_glb_hdl_sc_channel_map)[1174].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1175].first = 3;
        (*_glb_hdl_sc_channel_map)[1175].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1172].first = 3;
        (*_glb_hdl_sc_channel_map)[1172].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1171].first = 1;
        (*_glb_hdl_sc_channel_map)[1171].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(15586344);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(15586400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(15586456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(15586512);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(15586568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(15586624);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(15586680);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1157].first = 1;
        (*_glb_hdl_sc_channel_map)[1157].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23696].first = 1;
        (*_glb_hdl_sc_channel_map)[23696].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23697].first = 1;
        (*_glb_hdl_sc_channel_map)[23697].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_10->xsim_set_dbg_index(667);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[23931].first = 3;
        (*_glb_hdl_sc_channel_map)[23931].second.push_front(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[23869].first = 3;
        (*_glb_hdl_sc_channel_map)[23869].second.push_front(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[23932].first = 3;
        (*_glb_hdl_sc_channel_map)[23932].second.push_front(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[23937].first = 3;
        (*_glb_hdl_sc_channel_map)[23937].second.push_front(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[23929].first = 3;
        (*_glb_hdl_sc_channel_map)[23929].second.push_front(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[23933].first = 1;
        (*_glb_hdl_sc_channel_map)[23933].second.push_front(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[23930].first = 3;
        (*_glb_hdl_sc_channel_map)[23930].second.push_front(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[23934].first = 3;
        (*_glb_hdl_sc_channel_map)[23934].second.push_front(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[23868].first = 3;
        (*_glb_hdl_sc_channel_map)[23868].second.push_front(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[23935].first = 3;
        (*_glb_hdl_sc_channel_map)[23935].second.push_front(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[23938].first = 3;
        (*_glb_hdl_sc_channel_map)[23938].second.push_front(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[23939].first = 1;
        (*_glb_hdl_sc_channel_map)[23939].second.push_front(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(15658056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[23952].first = 3;
        (*_glb_hdl_sc_channel_map)[23952].second.push_front(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[23955].first = 3;
        (*_glb_hdl_sc_channel_map)[23955].second.push_front(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[23953].first = 1;
        (*_glb_hdl_sc_channel_map)[23953].second.push_front(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[23956].first = 3;
        (*_glb_hdl_sc_channel_map)[23956].second.push_front(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[23957].first = 1;
        (*_glb_hdl_sc_channel_map)[23957].second.push_front(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(15658392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(15658448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(15658504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(15658560);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(15658616);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[23941].first = 1;
        (*_glb_hdl_sc_channel_map)[23941].second.push_front(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[23920].first = 3;
        (*_glb_hdl_sc_channel_map)[23920].second.push_front(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[23871].first = 3;
        (*_glb_hdl_sc_channel_map)[23871].second.push_front(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[23921].first = 3;
        (*_glb_hdl_sc_channel_map)[23921].second.push_front(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[23926].first = 3;
        (*_glb_hdl_sc_channel_map)[23926].second.push_front(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[23917].first = 3;
        (*_glb_hdl_sc_channel_map)[23917].second.push_front(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[23922].first = 1;
        (*_glb_hdl_sc_channel_map)[23922].second.push_front(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[23918].first = 3;
        (*_glb_hdl_sc_channel_map)[23918].second.push_front(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[23923].first = 3;
        (*_glb_hdl_sc_channel_map)[23923].second.push_front(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[23870].first = 3;
        (*_glb_hdl_sc_channel_map)[23870].second.push_front(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[23924].first = 3;
        (*_glb_hdl_sc_channel_map)[23924].second.push_front(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[23927].first = 3;
        (*_glb_hdl_sc_channel_map)[23927].second.push_front(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[23928].first = 1;
        (*_glb_hdl_sc_channel_map)[23928].second.push_front(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(15659400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(15659456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(15659512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(15659568);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(15659624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(15659680);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(15659736);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[23948].first = 1;
        (*_glb_hdl_sc_channel_map)[23948].second.push_front(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23916].first = 1;
        (*_glb_hdl_sc_channel_map)[23916].second.push_front(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23919].first = 1;
        (*_glb_hdl_sc_channel_map)[23919].second.push_front(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(15659960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(15660016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(15660072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(15660128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(15660184);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(15660240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(15660296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(15660352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(15660408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(15660464);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(15660520);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[23894].first = 1;
        (*_glb_hdl_sc_channel_map)[23894].second.push_front(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(15660632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(15660688);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(15660744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(15660800);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(15660856);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[23912].first = 1;
        (*_glb_hdl_sc_channel_map)[23912].second.push_front(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[23898].first = 3;
        (*_glb_hdl_sc_channel_map)[23898].second.push_front(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[23900].first = 3;
        (*_glb_hdl_sc_channel_map)[23900].second.push_front(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[23901].first = 3;
        (*_glb_hdl_sc_channel_map)[23901].second.push_front(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[23902].first = 1;
        (*_glb_hdl_sc_channel_map)[23902].second.push_front(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(15661192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(15661248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(15661304);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(15661360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(15661416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(15661472);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(15661528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(15661584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(15661640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(15661696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(15661752);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(15661808);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[23882].first = 1;
        (*_glb_hdl_sc_channel_map)[23882].second.push_front(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[23904].first = 3;
        (*_glb_hdl_sc_channel_map)[23904].second.push_front(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[23903].first = 3;
        (*_glb_hdl_sc_channel_map)[23903].second.push_front(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[23907].first = 3;
        (*_glb_hdl_sc_channel_map)[23907].second.push_front(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[23905].first = 1;
        (*_glb_hdl_sc_channel_map)[23905].second.push_front(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[23908].first = 3;
        (*_glb_hdl_sc_channel_map)[23908].second.push_front(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[23909].first = 1;
        (*_glb_hdl_sc_channel_map)[23909].second.push_front(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(15662256);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23872].first = 1;
        (*_glb_hdl_sc_channel_map)[23872].second.push_front(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23876].first = 1;
        (*_glb_hdl_sc_channel_map)[23876].second.push_front(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_11->xsim_set_dbg_index(821);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[25849].first = 3;
        (*_glb_hdl_sc_channel_map)[25849].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[25787].first = 3;
        (*_glb_hdl_sc_channel_map)[25787].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[25850].first = 3;
        (*_glb_hdl_sc_channel_map)[25850].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[25855].first = 3;
        (*_glb_hdl_sc_channel_map)[25855].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[25847].first = 3;
        (*_glb_hdl_sc_channel_map)[25847].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[25851].first = 1;
        (*_glb_hdl_sc_channel_map)[25851].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[25848].first = 3;
        (*_glb_hdl_sc_channel_map)[25848].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[25852].first = 3;
        (*_glb_hdl_sc_channel_map)[25852].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[25786].first = 3;
        (*_glb_hdl_sc_channel_map)[25786].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[25853].first = 3;
        (*_glb_hdl_sc_channel_map)[25853].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[25856].first = 3;
        (*_glb_hdl_sc_channel_map)[25856].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[25857].first = 1;
        (*_glb_hdl_sc_channel_map)[25857].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(16222120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[25870].first = 3;
        (*_glb_hdl_sc_channel_map)[25870].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[25873].first = 3;
        (*_glb_hdl_sc_channel_map)[25873].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[25871].first = 1;
        (*_glb_hdl_sc_channel_map)[25871].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[25874].first = 3;
        (*_glb_hdl_sc_channel_map)[25874].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[25875].first = 1;
        (*_glb_hdl_sc_channel_map)[25875].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(16222456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(16222512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(16222568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(16222624);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(16222680);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[25859].first = 1;
        (*_glb_hdl_sc_channel_map)[25859].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[25838].first = 3;
        (*_glb_hdl_sc_channel_map)[25838].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[25789].first = 3;
        (*_glb_hdl_sc_channel_map)[25789].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[25839].first = 3;
        (*_glb_hdl_sc_channel_map)[25839].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[25844].first = 3;
        (*_glb_hdl_sc_channel_map)[25844].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[25835].first = 3;
        (*_glb_hdl_sc_channel_map)[25835].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[25840].first = 1;
        (*_glb_hdl_sc_channel_map)[25840].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[25836].first = 3;
        (*_glb_hdl_sc_channel_map)[25836].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[25841].first = 3;
        (*_glb_hdl_sc_channel_map)[25841].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[25788].first = 3;
        (*_glb_hdl_sc_channel_map)[25788].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[25842].first = 3;
        (*_glb_hdl_sc_channel_map)[25842].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[25845].first = 3;
        (*_glb_hdl_sc_channel_map)[25845].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[25846].first = 1;
        (*_glb_hdl_sc_channel_map)[25846].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(16223464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(16223520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(16223576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(16223632);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(16223688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(16223744);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(16223800);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[25866].first = 1;
        (*_glb_hdl_sc_channel_map)[25866].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[25834].first = 1;
        (*_glb_hdl_sc_channel_map)[25834].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[25837].first = 1;
        (*_glb_hdl_sc_channel_map)[25837].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(16224024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(16224080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(16224136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(16224192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(16224248);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(16224304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(16224360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(16224416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(16224472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(16224528);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(16224584);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[25812].first = 1;
        (*_glb_hdl_sc_channel_map)[25812].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(16224696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(16224752);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(16224808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(16224864);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(16224920);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[25830].first = 1;
        (*_glb_hdl_sc_channel_map)[25830].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[25816].first = 3;
        (*_glb_hdl_sc_channel_map)[25816].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[25818].first = 3;
        (*_glb_hdl_sc_channel_map)[25818].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[25819].first = 3;
        (*_glb_hdl_sc_channel_map)[25819].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[25820].first = 1;
        (*_glb_hdl_sc_channel_map)[25820].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(16225256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(16225312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(16225368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(16225424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(16225480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(16225536);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(16225592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(16225648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(16225704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(16225760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(16225816);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(16225872);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[25800].first = 1;
        (*_glb_hdl_sc_channel_map)[25800].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[25822].first = 3;
        (*_glb_hdl_sc_channel_map)[25822].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[25821].first = 3;
        (*_glb_hdl_sc_channel_map)[25821].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[25825].first = 3;
        (*_glb_hdl_sc_channel_map)[25825].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[25823].first = 1;
        (*_glb_hdl_sc_channel_map)[25823].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[25826].first = 3;
        (*_glb_hdl_sc_channel_map)[25826].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[25827].first = 1;
        (*_glb_hdl_sc_channel_map)[25827].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(16226320);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[25790].first = 1;
        (*_glb_hdl_sc_channel_map)[25790].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[25794].first = 1;
        (*_glb_hdl_sc_channel_map)[25794].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_12->xsim_set_dbg_index(822);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[25935].first = 3;
        (*_glb_hdl_sc_channel_map)[25935].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[25783].first = 3;
        (*_glb_hdl_sc_channel_map)[25783].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[25936].first = 3;
        (*_glb_hdl_sc_channel_map)[25936].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[25941].first = 3;
        (*_glb_hdl_sc_channel_map)[25941].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[25933].first = 3;
        (*_glb_hdl_sc_channel_map)[25933].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[25937].first = 1;
        (*_glb_hdl_sc_channel_map)[25937].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[25934].first = 3;
        (*_glb_hdl_sc_channel_map)[25934].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[25938].first = 3;
        (*_glb_hdl_sc_channel_map)[25938].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[25782].first = 3;
        (*_glb_hdl_sc_channel_map)[25782].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[25939].first = 3;
        (*_glb_hdl_sc_channel_map)[25939].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[25942].first = 3;
        (*_glb_hdl_sc_channel_map)[25942].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[25943].first = 1;
        (*_glb_hdl_sc_channel_map)[25943].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(16227208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[25956].first = 3;
        (*_glb_hdl_sc_channel_map)[25956].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[25959].first = 3;
        (*_glb_hdl_sc_channel_map)[25959].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[25957].first = 1;
        (*_glb_hdl_sc_channel_map)[25957].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[25960].first = 3;
        (*_glb_hdl_sc_channel_map)[25960].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[25961].first = 1;
        (*_glb_hdl_sc_channel_map)[25961].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(16227544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(16227600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(16227656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(16227712);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(16227768);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[25945].first = 1;
        (*_glb_hdl_sc_channel_map)[25945].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[25924].first = 3;
        (*_glb_hdl_sc_channel_map)[25924].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[25785].first = 3;
        (*_glb_hdl_sc_channel_map)[25785].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[25925].first = 3;
        (*_glb_hdl_sc_channel_map)[25925].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[25930].first = 3;
        (*_glb_hdl_sc_channel_map)[25930].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[25921].first = 3;
        (*_glb_hdl_sc_channel_map)[25921].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[25926].first = 1;
        (*_glb_hdl_sc_channel_map)[25926].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[25922].first = 3;
        (*_glb_hdl_sc_channel_map)[25922].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[25927].first = 3;
        (*_glb_hdl_sc_channel_map)[25927].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[25784].first = 3;
        (*_glb_hdl_sc_channel_map)[25784].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[25928].first = 3;
        (*_glb_hdl_sc_channel_map)[25928].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[25931].first = 3;
        (*_glb_hdl_sc_channel_map)[25931].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[25932].first = 1;
        (*_glb_hdl_sc_channel_map)[25932].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(16228552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(16228608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(16228664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(16228720);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(16228776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(16228832);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(16228888);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[25952].first = 1;
        (*_glb_hdl_sc_channel_map)[25952].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[25920].first = 1;
        (*_glb_hdl_sc_channel_map)[25920].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[25923].first = 1;
        (*_glb_hdl_sc_channel_map)[25923].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(16229112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(16229168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(16229224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(16229280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(16229336);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(16229392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(16229448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(16229504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(16229560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(16229616);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(16229672);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[25898].first = 1;
        (*_glb_hdl_sc_channel_map)[25898].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(16229784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(16229840);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(16229896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(16229952);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(16230008);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[25916].first = 1;
        (*_glb_hdl_sc_channel_map)[25916].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[25902].first = 3;
        (*_glb_hdl_sc_channel_map)[25902].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[25904].first = 3;
        (*_glb_hdl_sc_channel_map)[25904].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[25905].first = 3;
        (*_glb_hdl_sc_channel_map)[25905].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[25906].first = 1;
        (*_glb_hdl_sc_channel_map)[25906].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(16230344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(16230400);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(16230456);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(16230512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(16230568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(16230624);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(16230680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(16230736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(16230792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(16230848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(16230904);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(16230960);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[25886].first = 1;
        (*_glb_hdl_sc_channel_map)[25886].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[25908].first = 3;
        (*_glb_hdl_sc_channel_map)[25908].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[25907].first = 3;
        (*_glb_hdl_sc_channel_map)[25907].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[25911].first = 3;
        (*_glb_hdl_sc_channel_map)[25911].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[25909].first = 1;
        (*_glb_hdl_sc_channel_map)[25909].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[25912].first = 3;
        (*_glb_hdl_sc_channel_map)[25912].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[25913].first = 1;
        (*_glb_hdl_sc_channel_map)[25913].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(16231408);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[25876].first = 1;
        (*_glb_hdl_sc_channel_map)[25876].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[25880].first = 1;
        (*_glb_hdl_sc_channel_map)[25880].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_13->xsim_set_dbg_index(1020);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[28394].first = 3;
        (*_glb_hdl_sc_channel_map)[28394].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[28332].first = 3;
        (*_glb_hdl_sc_channel_map)[28332].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[28395].first = 3;
        (*_glb_hdl_sc_channel_map)[28395].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[28400].first = 3;
        (*_glb_hdl_sc_channel_map)[28400].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[28392].first = 3;
        (*_glb_hdl_sc_channel_map)[28392].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[28396].first = 1;
        (*_glb_hdl_sc_channel_map)[28396].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[28393].first = 3;
        (*_glb_hdl_sc_channel_map)[28393].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[28397].first = 3;
        (*_glb_hdl_sc_channel_map)[28397].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[28331].first = 3;
        (*_glb_hdl_sc_channel_map)[28331].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[28398].first = 3;
        (*_glb_hdl_sc_channel_map)[28398].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[28401].first = 3;
        (*_glb_hdl_sc_channel_map)[28401].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[28402].first = 1;
        (*_glb_hdl_sc_channel_map)[28402].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(16805288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[28415].first = 3;
        (*_glb_hdl_sc_channel_map)[28415].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[28418].first = 3;
        (*_glb_hdl_sc_channel_map)[28418].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[28416].first = 1;
        (*_glb_hdl_sc_channel_map)[28416].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[28419].first = 3;
        (*_glb_hdl_sc_channel_map)[28419].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[28420].first = 1;
        (*_glb_hdl_sc_channel_map)[28420].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(16805624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(16805680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(16805736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(16805792);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(16805848);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[28404].first = 1;
        (*_glb_hdl_sc_channel_map)[28404].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[28383].first = 3;
        (*_glb_hdl_sc_channel_map)[28383].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[28334].first = 3;
        (*_glb_hdl_sc_channel_map)[28334].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[28384].first = 3;
        (*_glb_hdl_sc_channel_map)[28384].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[28389].first = 3;
        (*_glb_hdl_sc_channel_map)[28389].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[28380].first = 3;
        (*_glb_hdl_sc_channel_map)[28380].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[28385].first = 1;
        (*_glb_hdl_sc_channel_map)[28385].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[28381].first = 3;
        (*_glb_hdl_sc_channel_map)[28381].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[28386].first = 3;
        (*_glb_hdl_sc_channel_map)[28386].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[28333].first = 3;
        (*_glb_hdl_sc_channel_map)[28333].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[28387].first = 3;
        (*_glb_hdl_sc_channel_map)[28387].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[28390].first = 3;
        (*_glb_hdl_sc_channel_map)[28390].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[28391].first = 1;
        (*_glb_hdl_sc_channel_map)[28391].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(16806632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(16806688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(16806744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(16806800);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(16806856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(16806912);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(16806968);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[28411].first = 1;
        (*_glb_hdl_sc_channel_map)[28411].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[28379].first = 1;
        (*_glb_hdl_sc_channel_map)[28379].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[28382].first = 1;
        (*_glb_hdl_sc_channel_map)[28382].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(16807192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(16807248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(16807304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(16807360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(16807416);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(16807472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(16807528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(16807584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(16807640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(16807696);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(16807752);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[28357].first = 1;
        (*_glb_hdl_sc_channel_map)[28357].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(16807864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(16807920);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(16807976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(16808032);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(16808088);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[28375].first = 1;
        (*_glb_hdl_sc_channel_map)[28375].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[28361].first = 3;
        (*_glb_hdl_sc_channel_map)[28361].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[28363].first = 3;
        (*_glb_hdl_sc_channel_map)[28363].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[28364].first = 3;
        (*_glb_hdl_sc_channel_map)[28364].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[28365].first = 1;
        (*_glb_hdl_sc_channel_map)[28365].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(16808424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(16808480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(16808536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(16808592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(16808648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(16808704);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(16808760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(16808816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(16808872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(16808928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(16808984);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(16809040);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[28345].first = 1;
        (*_glb_hdl_sc_channel_map)[28345].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[28367].first = 3;
        (*_glb_hdl_sc_channel_map)[28367].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[28366].first = 3;
        (*_glb_hdl_sc_channel_map)[28366].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[28370].first = 3;
        (*_glb_hdl_sc_channel_map)[28370].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[28368].first = 1;
        (*_glb_hdl_sc_channel_map)[28368].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[28371].first = 3;
        (*_glb_hdl_sc_channel_map)[28371].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[28372].first = 1;
        (*_glb_hdl_sc_channel_map)[28372].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(16809488);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[28335].first = 1;
        (*_glb_hdl_sc_channel_map)[28335].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[28339].first = 1;
        (*_glb_hdl_sc_channel_map)[28339].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_14->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[31522].first = 3;
        (*_glb_hdl_sc_channel_map)[31522].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31519].first = 3;
        (*_glb_hdl_sc_channel_map)[31519].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31523].first = 3;
        (*_glb_hdl_sc_channel_map)[31523].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[31529].first = 3;
        (*_glb_hdl_sc_channel_map)[31529].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31520].first = 3;
        (*_glb_hdl_sc_channel_map)[31520].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31524].first = 1;
        (*_glb_hdl_sc_channel_map)[31524].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31521].first = 3;
        (*_glb_hdl_sc_channel_map)[31521].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[31525].first = 3;
        (*_glb_hdl_sc_channel_map)[31525].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[31528].first = 3;
        (*_glb_hdl_sc_channel_map)[31528].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[31526].first = 3;
        (*_glb_hdl_sc_channel_map)[31526].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[31530].first = 1;
        (*_glb_hdl_sc_channel_map)[31530].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(17548384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[31541].first = 3;
        (*_glb_hdl_sc_channel_map)[31541].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[31544].first = 3;
        (*_glb_hdl_sc_channel_map)[31544].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[31542].first = 1;
        (*_glb_hdl_sc_channel_map)[31542].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[31545].first = 1;
        (*_glb_hdl_sc_channel_map)[31545].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(17548664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(17548720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(17548776);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(17548832);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[31532].first = 1;
        (*_glb_hdl_sc_channel_map)[31532].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[31510].first = 3;
        (*_glb_hdl_sc_channel_map)[31510].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31506].first = 3;
        (*_glb_hdl_sc_channel_map)[31506].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31511].first = 3;
        (*_glb_hdl_sc_channel_map)[31511].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31517].first = 3;
        (*_glb_hdl_sc_channel_map)[31517].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31507].first = 3;
        (*_glb_hdl_sc_channel_map)[31507].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31512].first = 1;
        (*_glb_hdl_sc_channel_map)[31512].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31508].first = 3;
        (*_glb_hdl_sc_channel_map)[31508].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31513].first = 3;
        (*_glb_hdl_sc_channel_map)[31513].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31516].first = 3;
        (*_glb_hdl_sc_channel_map)[31516].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31514].first = 3;
        (*_glb_hdl_sc_channel_map)[31514].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31518].first = 1;
        (*_glb_hdl_sc_channel_map)[31518].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(17549560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(17549616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(17549672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(17549728);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(17549784);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(17549840);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[31538].first = 1;
        (*_glb_hdl_sc_channel_map)[31538].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31505].first = 1;
        (*_glb_hdl_sc_channel_map)[31505].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31509].first = 1;
        (*_glb_hdl_sc_channel_map)[31509].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(17550064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(17550120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(17550176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(17550232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(17550288);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(17550344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(17550400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(17550456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(17550512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(17550568);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(17550624);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[31320].first = 1;
        (*_glb_hdl_sc_channel_map)[31320].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(17550736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(17550792);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(17550848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(17550904);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(17550960);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[31338].first = 1;
        (*_glb_hdl_sc_channel_map)[31338].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[31324].first = 3;
        (*_glb_hdl_sc_channel_map)[31324].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31326].first = 3;
        (*_glb_hdl_sc_channel_map)[31326].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[31327].first = 3;
        (*_glb_hdl_sc_channel_map)[31327].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31328].first = 1;
        (*_glb_hdl_sc_channel_map)[31328].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(17551296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(17551352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(17551408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(17551464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(17551520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(17551576);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(17551632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(17551688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(17551744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(17551800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(17551856);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(17551912);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[31308].first = 1;
        (*_glb_hdl_sc_channel_map)[31308].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[31330].first = 3;
        (*_glb_hdl_sc_channel_map)[31330].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31329].first = 3;
        (*_glb_hdl_sc_channel_map)[31329].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31333].first = 3;
        (*_glb_hdl_sc_channel_map)[31333].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31331].first = 1;
        (*_glb_hdl_sc_channel_map)[31331].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31334].first = 3;
        (*_glb_hdl_sc_channel_map)[31334].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31335].first = 1;
        (*_glb_hdl_sc_channel_map)[31335].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(17552360);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31298].first = 1;
        (*_glb_hdl_sc_channel_map)[31298].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31302].first = 1;
        (*_glb_hdl_sc_channel_map)[31302].second.push_front(p_14_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awid.bind(*p_14_m02_axi_awid);
        p_14_m02_axi_awid->set_sv_netview_offsetfromdp(17552528);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_awaddr.bind(*p_14_m02_axi_awaddr);
        p_14_m02_axi_awaddr->set_sv_netview_offsetfromdp(17552584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_awlen.bind(*p_14_m02_axi_awlen);
        p_14_m02_axi_awlen->set_sv_netview_offsetfromdp(17552640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awsize.bind(*p_14_m02_axi_awsize);
        p_14_m02_axi_awsize->set_sv_netview_offsetfromdp(17552696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_awburst.bind(*p_14_m02_axi_awburst);
        p_14_m02_axi_awburst->set_sv_netview_offsetfromdp(17552752);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awlock.bind(*p_14_m02_axi_awlock);
        p_14_m02_axi_awlock->set_sv_netview_offsetfromdp(17552808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awcache.bind(*p_14_m02_axi_awcache);
        p_14_m02_axi_awcache->set_sv_netview_offsetfromdp(17552864);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awprot.bind(*p_14_m02_axi_awprot);
        p_14_m02_axi_awprot->set_sv_netview_offsetfromdp(17552920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awqos.bind(*p_14_m02_axi_awqos);
        p_14_m02_axi_awqos->set_sv_netview_offsetfromdp(17552976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awuser.bind(*p_14_m02_axi_awuser);
        p_14_m02_axi_awuser->set_sv_netview_offsetfromdp(17553032);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awvalid.bind(*p_14_m02_axi_awvalid);
        p_14_m02_axi_awvalid->set_sv_netview_offsetfromdp(17553088);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awready.bind(*p_14_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[31408].first = 1;
        (*_glb_hdl_sc_channel_map)[31408].second.push_front(p_14_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_wdata.bind(*p_14_m02_axi_wdata);
        p_14_m02_axi_wdata->set_sv_netview_offsetfromdp(17553200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_wstrb.bind(*p_14_m02_axi_wstrb);
        p_14_m02_axi_wstrb->set_sv_netview_offsetfromdp(17553256);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wlast.bind(*p_14_m02_axi_wlast);
        p_14_m02_axi_wlast->set_sv_netview_offsetfromdp(17553312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_wuser.bind(*p_14_m02_axi_wuser);
        p_14_m02_axi_wuser->set_sv_netview_offsetfromdp(17553368);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wvalid.bind(*p_14_m02_axi_wvalid);
        p_14_m02_axi_wvalid->set_sv_netview_offsetfromdp(17553424);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wready.bind(*p_14_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[31426].first = 1;
        (*_glb_hdl_sc_channel_map)[31426].second.push_front(p_14_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_bid.bind(*p_14_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[31412].first = 3;
        (*_glb_hdl_sc_channel_map)[31412].second.push_front(p_14_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_bresp.bind(*p_14_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31414].first = 3;
        (*_glb_hdl_sc_channel_map)[31414].second.push_front(p_14_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_buser.bind(*p_14_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[31415].first = 3;
        (*_glb_hdl_sc_channel_map)[31415].second.push_front(p_14_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bvalid.bind(*p_14_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31416].first = 1;
        (*_glb_hdl_sc_channel_map)[31416].second.push_front(p_14_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bready.bind(*p_14_m02_axi_bready);
        p_14_m02_axi_bready->set_sv_netview_offsetfromdp(17553760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_arid.bind(*p_14_m02_axi_arid);
        p_14_m02_axi_arid->set_sv_netview_offsetfromdp(17553816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_araddr.bind(*p_14_m02_axi_araddr);
        p_14_m02_axi_araddr->set_sv_netview_offsetfromdp(17553872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_arlen.bind(*p_14_m02_axi_arlen);
        p_14_m02_axi_arlen->set_sv_netview_offsetfromdp(17553928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arsize.bind(*p_14_m02_axi_arsize);
        p_14_m02_axi_arsize->set_sv_netview_offsetfromdp(17553984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_arburst.bind(*p_14_m02_axi_arburst);
        p_14_m02_axi_arburst->set_sv_netview_offsetfromdp(17554040);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arlock.bind(*p_14_m02_axi_arlock);
        p_14_m02_axi_arlock->set_sv_netview_offsetfromdp(17554096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arcache.bind(*p_14_m02_axi_arcache);
        p_14_m02_axi_arcache->set_sv_netview_offsetfromdp(17554152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arprot.bind(*p_14_m02_axi_arprot);
        p_14_m02_axi_arprot->set_sv_netview_offsetfromdp(17554208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arqos.bind(*p_14_m02_axi_arqos);
        p_14_m02_axi_arqos->set_sv_netview_offsetfromdp(17554264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_aruser.bind(*p_14_m02_axi_aruser);
        p_14_m02_axi_aruser->set_sv_netview_offsetfromdp(17554320);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arvalid.bind(*p_14_m02_axi_arvalid);
        p_14_m02_axi_arvalid->set_sv_netview_offsetfromdp(17554376);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arready.bind(*p_14_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[31396].first = 1;
        (*_glb_hdl_sc_channel_map)[31396].second.push_front(p_14_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_rid.bind(*p_14_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[31418].first = 3;
        (*_glb_hdl_sc_channel_map)[31418].second.push_front(p_14_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_rdata.bind(*p_14_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31417].first = 3;
        (*_glb_hdl_sc_channel_map)[31417].second.push_front(p_14_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_rresp.bind(*p_14_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31421].first = 3;
        (*_glb_hdl_sc_channel_map)[31421].second.push_front(p_14_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rlast.bind(*p_14_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31419].first = 1;
        (*_glb_hdl_sc_channel_map)[31419].second.push_front(p_14_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_ruser.bind(*p_14_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31422].first = 3;
        (*_glb_hdl_sc_channel_map)[31422].second.push_front(p_14_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rvalid.bind(*p_14_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31423].first = 1;
        (*_glb_hdl_sc_channel_map)[31423].second.push_front(p_14_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rready.bind(*p_14_m02_axi_rready);
        p_14_m02_axi_rready->set_sv_netview_offsetfromdp(17554824);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aclk.bind(*p_14_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31386].first = 1;
        (*_glb_hdl_sc_channel_map)[31386].second.push_front(p_14_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aresetn.bind(*p_14_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31390].first = 1;
        (*_glb_hdl_sc_channel_map)[31390].second.push_front(p_14_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awid.bind(*p_14_m03_axi_awid);
        p_14_m03_axi_awid->set_sv_netview_offsetfromdp(17554992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_awaddr.bind(*p_14_m03_axi_awaddr);
        p_14_m03_axi_awaddr->set_sv_netview_offsetfromdp(17555048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_awlen.bind(*p_14_m03_axi_awlen);
        p_14_m03_axi_awlen->set_sv_netview_offsetfromdp(17555104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awsize.bind(*p_14_m03_axi_awsize);
        p_14_m03_axi_awsize->set_sv_netview_offsetfromdp(17555160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_awburst.bind(*p_14_m03_axi_awburst);
        p_14_m03_axi_awburst->set_sv_netview_offsetfromdp(17555216);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awlock.bind(*p_14_m03_axi_awlock);
        p_14_m03_axi_awlock->set_sv_netview_offsetfromdp(17555272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awcache.bind(*p_14_m03_axi_awcache);
        p_14_m03_axi_awcache->set_sv_netview_offsetfromdp(17555328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awprot.bind(*p_14_m03_axi_awprot);
        p_14_m03_axi_awprot->set_sv_netview_offsetfromdp(17555384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awqos.bind(*p_14_m03_axi_awqos);
        p_14_m03_axi_awqos->set_sv_netview_offsetfromdp(17555440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awuser.bind(*p_14_m03_axi_awuser);
        p_14_m03_axi_awuser->set_sv_netview_offsetfromdp(17555496);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awvalid.bind(*p_14_m03_axi_awvalid);
        p_14_m03_axi_awvalid->set_sv_netview_offsetfromdp(17555552);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awready.bind(*p_14_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[31452].first = 1;
        (*_glb_hdl_sc_channel_map)[31452].second.push_front(p_14_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_wdata.bind(*p_14_m03_axi_wdata);
        p_14_m03_axi_wdata->set_sv_netview_offsetfromdp(17555664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_wstrb.bind(*p_14_m03_axi_wstrb);
        p_14_m03_axi_wstrb->set_sv_netview_offsetfromdp(17555720);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wlast.bind(*p_14_m03_axi_wlast);
        p_14_m03_axi_wlast->set_sv_netview_offsetfromdp(17555776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_wuser.bind(*p_14_m03_axi_wuser);
        p_14_m03_axi_wuser->set_sv_netview_offsetfromdp(17555832);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wvalid.bind(*p_14_m03_axi_wvalid);
        p_14_m03_axi_wvalid->set_sv_netview_offsetfromdp(17555888);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wready.bind(*p_14_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[31470].first = 1;
        (*_glb_hdl_sc_channel_map)[31470].second.push_front(p_14_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_bid.bind(*p_14_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[31456].first = 3;
        (*_glb_hdl_sc_channel_map)[31456].second.push_front(p_14_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_bresp.bind(*p_14_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31458].first = 3;
        (*_glb_hdl_sc_channel_map)[31458].second.push_front(p_14_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_buser.bind(*p_14_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[31459].first = 3;
        (*_glb_hdl_sc_channel_map)[31459].second.push_front(p_14_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bvalid.bind(*p_14_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31460].first = 1;
        (*_glb_hdl_sc_channel_map)[31460].second.push_front(p_14_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bready.bind(*p_14_m03_axi_bready);
        p_14_m03_axi_bready->set_sv_netview_offsetfromdp(17556224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_arid.bind(*p_14_m03_axi_arid);
        p_14_m03_axi_arid->set_sv_netview_offsetfromdp(17556280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_araddr.bind(*p_14_m03_axi_araddr);
        p_14_m03_axi_araddr->set_sv_netview_offsetfromdp(17556336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_arlen.bind(*p_14_m03_axi_arlen);
        p_14_m03_axi_arlen->set_sv_netview_offsetfromdp(17556392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arsize.bind(*p_14_m03_axi_arsize);
        p_14_m03_axi_arsize->set_sv_netview_offsetfromdp(17556448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_arburst.bind(*p_14_m03_axi_arburst);
        p_14_m03_axi_arburst->set_sv_netview_offsetfromdp(17556504);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arlock.bind(*p_14_m03_axi_arlock);
        p_14_m03_axi_arlock->set_sv_netview_offsetfromdp(17556560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arcache.bind(*p_14_m03_axi_arcache);
        p_14_m03_axi_arcache->set_sv_netview_offsetfromdp(17556616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arprot.bind(*p_14_m03_axi_arprot);
        p_14_m03_axi_arprot->set_sv_netview_offsetfromdp(17556672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arqos.bind(*p_14_m03_axi_arqos);
        p_14_m03_axi_arqos->set_sv_netview_offsetfromdp(17556728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_aruser.bind(*p_14_m03_axi_aruser);
        p_14_m03_axi_aruser->set_sv_netview_offsetfromdp(17556784);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arvalid.bind(*p_14_m03_axi_arvalid);
        p_14_m03_axi_arvalid->set_sv_netview_offsetfromdp(17556840);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arready.bind(*p_14_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[31440].first = 1;
        (*_glb_hdl_sc_channel_map)[31440].second.push_front(p_14_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_rid.bind(*p_14_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[31462].first = 3;
        (*_glb_hdl_sc_channel_map)[31462].second.push_front(p_14_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_rdata.bind(*p_14_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31461].first = 3;
        (*_glb_hdl_sc_channel_map)[31461].second.push_front(p_14_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_rresp.bind(*p_14_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31465].first = 3;
        (*_glb_hdl_sc_channel_map)[31465].second.push_front(p_14_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rlast.bind(*p_14_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31463].first = 1;
        (*_glb_hdl_sc_channel_map)[31463].second.push_front(p_14_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_ruser.bind(*p_14_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31466].first = 3;
        (*_glb_hdl_sc_channel_map)[31466].second.push_front(p_14_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rvalid.bind(*p_14_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31467].first = 1;
        (*_glb_hdl_sc_channel_map)[31467].second.push_front(p_14_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rready.bind(*p_14_m03_axi_rready);
        p_14_m03_axi_rready->set_sv_netview_offsetfromdp(17557288);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aclk.bind(*p_14_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31430].first = 1;
        (*_glb_hdl_sc_channel_map)[31430].second.push_front(p_14_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aresetn.bind(*p_14_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31434].first = 1;
        (*_glb_hdl_sc_channel_map)[31434].second.push_front(p_14_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awid.bind(*p_14_m04_axi_awid);
        p_14_m04_axi_awid->set_sv_netview_offsetfromdp(17557456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_awaddr.bind(*p_14_m04_axi_awaddr);
        p_14_m04_axi_awaddr->set_sv_netview_offsetfromdp(17557512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_awlen.bind(*p_14_m04_axi_awlen);
        p_14_m04_axi_awlen->set_sv_netview_offsetfromdp(17557568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awsize.bind(*p_14_m04_axi_awsize);
        p_14_m04_axi_awsize->set_sv_netview_offsetfromdp(17557624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_awburst.bind(*p_14_m04_axi_awburst);
        p_14_m04_axi_awburst->set_sv_netview_offsetfromdp(17557680);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awlock.bind(*p_14_m04_axi_awlock);
        p_14_m04_axi_awlock->set_sv_netview_offsetfromdp(17557736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awcache.bind(*p_14_m04_axi_awcache);
        p_14_m04_axi_awcache->set_sv_netview_offsetfromdp(17557792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awprot.bind(*p_14_m04_axi_awprot);
        p_14_m04_axi_awprot->set_sv_netview_offsetfromdp(17557848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awqos.bind(*p_14_m04_axi_awqos);
        p_14_m04_axi_awqos->set_sv_netview_offsetfromdp(17557904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awuser.bind(*p_14_m04_axi_awuser);
        p_14_m04_axi_awuser->set_sv_netview_offsetfromdp(17557960);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awvalid.bind(*p_14_m04_axi_awvalid);
        p_14_m04_axi_awvalid->set_sv_netview_offsetfromdp(17558016);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awready.bind(*p_14_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[31487].first = 1;
        (*_glb_hdl_sc_channel_map)[31487].second.push_front(p_14_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_wdata.bind(*p_14_m04_axi_wdata);
        p_14_m04_axi_wdata->set_sv_netview_offsetfromdp(17558128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_wstrb.bind(*p_14_m04_axi_wstrb);
        p_14_m04_axi_wstrb->set_sv_netview_offsetfromdp(17558184);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wlast.bind(*p_14_m04_axi_wlast);
        p_14_m04_axi_wlast->set_sv_netview_offsetfromdp(17558240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_wuser.bind(*p_14_m04_axi_wuser);
        p_14_m04_axi_wuser->set_sv_netview_offsetfromdp(17558296);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wvalid.bind(*p_14_m04_axi_wvalid);
        p_14_m04_axi_wvalid->set_sv_netview_offsetfromdp(17558352);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wready.bind(*p_14_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[31502].first = 1;
        (*_glb_hdl_sc_channel_map)[31502].second.push_front(p_14_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_bid.bind(*p_14_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[31490].first = 3;
        (*_glb_hdl_sc_channel_map)[31490].second.push_front(p_14_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_bresp.bind(*p_14_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31492].first = 3;
        (*_glb_hdl_sc_channel_map)[31492].second.push_front(p_14_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_buser.bind(*p_14_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1151].first = 3;
        (*_glb_hdl_sc_channel_map)[1151].second.push_front(p_14_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bvalid.bind(*p_14_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31493].first = 1;
        (*_glb_hdl_sc_channel_map)[31493].second.push_front(p_14_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bready.bind(*p_14_m04_axi_bready);
        p_14_m04_axi_bready->set_sv_netview_offsetfromdp(17558688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_arid.bind(*p_14_m04_axi_arid);
        p_14_m04_axi_arid->set_sv_netview_offsetfromdp(17558744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_araddr.bind(*p_14_m04_axi_araddr);
        p_14_m04_axi_araddr->set_sv_netview_offsetfromdp(17558800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_arlen.bind(*p_14_m04_axi_arlen);
        p_14_m04_axi_arlen->set_sv_netview_offsetfromdp(17558856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arsize.bind(*p_14_m04_axi_arsize);
        p_14_m04_axi_arsize->set_sv_netview_offsetfromdp(17558912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_arburst.bind(*p_14_m04_axi_arburst);
        p_14_m04_axi_arburst->set_sv_netview_offsetfromdp(17558968);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arlock.bind(*p_14_m04_axi_arlock);
        p_14_m04_axi_arlock->set_sv_netview_offsetfromdp(17559024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arcache.bind(*p_14_m04_axi_arcache);
        p_14_m04_axi_arcache->set_sv_netview_offsetfromdp(17559080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arprot.bind(*p_14_m04_axi_arprot);
        p_14_m04_axi_arprot->set_sv_netview_offsetfromdp(17559136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arqos.bind(*p_14_m04_axi_arqos);
        p_14_m04_axi_arqos->set_sv_netview_offsetfromdp(17559192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_aruser.bind(*p_14_m04_axi_aruser);
        p_14_m04_axi_aruser->set_sv_netview_offsetfromdp(17559248);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arvalid.bind(*p_14_m04_axi_arvalid);
        p_14_m04_axi_arvalid->set_sv_netview_offsetfromdp(17559304);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arready.bind(*p_14_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[31480].first = 1;
        (*_glb_hdl_sc_channel_map)[31480].second.push_front(p_14_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_rid.bind(*p_14_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[31495].first = 3;
        (*_glb_hdl_sc_channel_map)[31495].second.push_front(p_14_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_rdata.bind(*p_14_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31494].first = 3;
        (*_glb_hdl_sc_channel_map)[31494].second.push_front(p_14_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_rresp.bind(*p_14_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31498].first = 3;
        (*_glb_hdl_sc_channel_map)[31498].second.push_front(p_14_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rlast.bind(*p_14_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31496].first = 1;
        (*_glb_hdl_sc_channel_map)[31496].second.push_front(p_14_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_ruser.bind(*p_14_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1150].first = 3;
        (*_glb_hdl_sc_channel_map)[1150].second.push_front(p_14_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rvalid.bind(*p_14_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31499].first = 1;
        (*_glb_hdl_sc_channel_map)[31499].second.push_front(p_14_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rready.bind(*p_14_m04_axi_rready);
        p_14_m04_axi_rready->set_sv_netview_offsetfromdp(17559752);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aclk.bind(*p_14_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31474].first = 1;
        (*_glb_hdl_sc_channel_map)[31474].second.push_front(p_14_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aresetn.bind(*p_14_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31477].first = 1;
        (*_glb_hdl_sc_channel_map)[31477].second.push_front(p_14_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awid.bind(*p_14_m01_axi_awid);
        p_14_m01_axi_awid->set_sv_netview_offsetfromdp(17559920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_awaddr.bind(*p_14_m01_axi_awaddr);
        p_14_m01_axi_awaddr->set_sv_netview_offsetfromdp(17559976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_awlen.bind(*p_14_m01_axi_awlen);
        p_14_m01_axi_awlen->set_sv_netview_offsetfromdp(17560032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awsize.bind(*p_14_m01_axi_awsize);
        p_14_m01_axi_awsize->set_sv_netview_offsetfromdp(17560088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_awburst.bind(*p_14_m01_axi_awburst);
        p_14_m01_axi_awburst->set_sv_netview_offsetfromdp(17560144);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awlock.bind(*p_14_m01_axi_awlock);
        p_14_m01_axi_awlock->set_sv_netview_offsetfromdp(17560200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awcache.bind(*p_14_m01_axi_awcache);
        p_14_m01_axi_awcache->set_sv_netview_offsetfromdp(17560256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awprot.bind(*p_14_m01_axi_awprot);
        p_14_m01_axi_awprot->set_sv_netview_offsetfromdp(17560312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awqos.bind(*p_14_m01_axi_awqos);
        p_14_m01_axi_awqos->set_sv_netview_offsetfromdp(17560368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awuser.bind(*p_14_m01_axi_awuser);
        p_14_m01_axi_awuser->set_sv_netview_offsetfromdp(17560424);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awvalid.bind(*p_14_m01_axi_awvalid);
        p_14_m01_axi_awvalid->set_sv_netview_offsetfromdp(17560480);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awready.bind(*p_14_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[31364].first = 1;
        (*_glb_hdl_sc_channel_map)[31364].second.push_front(p_14_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_wdata.bind(*p_14_m01_axi_wdata);
        p_14_m01_axi_wdata->set_sv_netview_offsetfromdp(17560592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_wstrb.bind(*p_14_m01_axi_wstrb);
        p_14_m01_axi_wstrb->set_sv_netview_offsetfromdp(17560648);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wlast.bind(*p_14_m01_axi_wlast);
        p_14_m01_axi_wlast->set_sv_netview_offsetfromdp(17560704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_wuser.bind(*p_14_m01_axi_wuser);
        p_14_m01_axi_wuser->set_sv_netview_offsetfromdp(17560760);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wvalid.bind(*p_14_m01_axi_wvalid);
        p_14_m01_axi_wvalid->set_sv_netview_offsetfromdp(17560816);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wready.bind(*p_14_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[31382].first = 1;
        (*_glb_hdl_sc_channel_map)[31382].second.push_front(p_14_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_bid.bind(*p_14_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[31368].first = 3;
        (*_glb_hdl_sc_channel_map)[31368].second.push_front(p_14_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_bresp.bind(*p_14_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[31370].first = 3;
        (*_glb_hdl_sc_channel_map)[31370].second.push_front(p_14_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_buser.bind(*p_14_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[31371].first = 3;
        (*_glb_hdl_sc_channel_map)[31371].second.push_front(p_14_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bvalid.bind(*p_14_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[31372].first = 1;
        (*_glb_hdl_sc_channel_map)[31372].second.push_front(p_14_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bready.bind(*p_14_m01_axi_bready);
        p_14_m01_axi_bready->set_sv_netview_offsetfromdp(17561152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_arid.bind(*p_14_m01_axi_arid);
        p_14_m01_axi_arid->set_sv_netview_offsetfromdp(17561208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_araddr.bind(*p_14_m01_axi_araddr);
        p_14_m01_axi_araddr->set_sv_netview_offsetfromdp(17561264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_arlen.bind(*p_14_m01_axi_arlen);
        p_14_m01_axi_arlen->set_sv_netview_offsetfromdp(17561320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arsize.bind(*p_14_m01_axi_arsize);
        p_14_m01_axi_arsize->set_sv_netview_offsetfromdp(17561376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_arburst.bind(*p_14_m01_axi_arburst);
        p_14_m01_axi_arburst->set_sv_netview_offsetfromdp(17561432);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arlock.bind(*p_14_m01_axi_arlock);
        p_14_m01_axi_arlock->set_sv_netview_offsetfromdp(17561488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arcache.bind(*p_14_m01_axi_arcache);
        p_14_m01_axi_arcache->set_sv_netview_offsetfromdp(17561544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arprot.bind(*p_14_m01_axi_arprot);
        p_14_m01_axi_arprot->set_sv_netview_offsetfromdp(17561600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arqos.bind(*p_14_m01_axi_arqos);
        p_14_m01_axi_arqos->set_sv_netview_offsetfromdp(17561656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_aruser.bind(*p_14_m01_axi_aruser);
        p_14_m01_axi_aruser->set_sv_netview_offsetfromdp(17561712);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arvalid.bind(*p_14_m01_axi_arvalid);
        p_14_m01_axi_arvalid->set_sv_netview_offsetfromdp(17561768);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arready.bind(*p_14_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[31352].first = 1;
        (*_glb_hdl_sc_channel_map)[31352].second.push_front(p_14_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_rid.bind(*p_14_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[31374].first = 3;
        (*_glb_hdl_sc_channel_map)[31374].second.push_front(p_14_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_rdata.bind(*p_14_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[31373].first = 3;
        (*_glb_hdl_sc_channel_map)[31373].second.push_front(p_14_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_rresp.bind(*p_14_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[31377].first = 3;
        (*_glb_hdl_sc_channel_map)[31377].second.push_front(p_14_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rlast.bind(*p_14_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[31375].first = 1;
        (*_glb_hdl_sc_channel_map)[31375].second.push_front(p_14_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_ruser.bind(*p_14_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[31378].first = 3;
        (*_glb_hdl_sc_channel_map)[31378].second.push_front(p_14_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rvalid.bind(*p_14_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[31379].first = 1;
        (*_glb_hdl_sc_channel_map)[31379].second.push_front(p_14_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rready.bind(*p_14_m01_axi_rready);
        p_14_m01_axi_rready->set_sv_netview_offsetfromdp(17562216);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aclk.bind(*p_14_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31342].first = 1;
        (*_glb_hdl_sc_channel_map)[31342].second.push_front(p_14_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aresetn.bind(*p_14_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31346].first = 1;
        (*_glb_hdl_sc_channel_map)[31346].second.push_front(p_14_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_awid.bind(*p_14_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[31645].first = 3;
        (*_glb_hdl_sc_channel_map)[31645].second.push_front(p_14_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_awaddr.bind(*p_14_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31642].first = 3;
        (*_glb_hdl_sc_channel_map)[31642].second.push_front(p_14_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_awlen.bind(*p_14_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31646].first = 3;
        (*_glb_hdl_sc_channel_map)[31646].second.push_front(p_14_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awsize.bind(*p_14_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[31652].first = 3;
        (*_glb_hdl_sc_channel_map)[31652].second.push_front(p_14_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_awburst.bind(*p_14_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31643].first = 3;
        (*_glb_hdl_sc_channel_map)[31643].second.push_front(p_14_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awlock.bind(*p_14_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31647].first = 1;
        (*_glb_hdl_sc_channel_map)[31647].second.push_front(p_14_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awcache.bind(*p_14_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31644].first = 3;
        (*_glb_hdl_sc_channel_map)[31644].second.push_front(p_14_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awprot.bind(*p_14_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[31648].first = 3;
        (*_glb_hdl_sc_channel_map)[31648].second.push_front(p_14_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awregion.bind(*p_14_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[31651].first = 3;
        (*_glb_hdl_sc_channel_map)[31651].second.push_front(p_14_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awqos.bind(*p_14_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[31649].first = 3;
        (*_glb_hdl_sc_channel_map)[31649].second.push_front(p_14_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awvalid.bind(*p_14_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[31653].first = 1;
        (*_glb_hdl_sc_channel_map)[31653].second.push_front(p_14_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awready.bind(*p_14_s03_axi_awready);
        p_14_s03_axi_awready->set_sv_netview_offsetfromdp(17563000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_wdata.bind(*p_14_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[31664].first = 3;
        (*_glb_hdl_sc_channel_map)[31664].second.push_front(p_14_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_wstrb.bind(*p_14_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[31667].first = 3;
        (*_glb_hdl_sc_channel_map)[31667].second.push_front(p_14_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wlast.bind(*p_14_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[31665].first = 1;
        (*_glb_hdl_sc_channel_map)[31665].second.push_front(p_14_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wvalid.bind(*p_14_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[31668].first = 1;
        (*_glb_hdl_sc_channel_map)[31668].second.push_front(p_14_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wready.bind(*p_14_s03_axi_wready);
        p_14_s03_axi_wready->set_sv_netview_offsetfromdp(17563280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_bid.bind(*p_14_s03_axi_bid);
        p_14_s03_axi_bid->set_sv_netview_offsetfromdp(17563336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_bresp.bind(*p_14_s03_axi_bresp);
        p_14_s03_axi_bresp->set_sv_netview_offsetfromdp(17563392);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bvalid.bind(*p_14_s03_axi_bvalid);
        p_14_s03_axi_bvalid->set_sv_netview_offsetfromdp(17563448);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bready.bind(*p_14_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[31655].first = 1;
        (*_glb_hdl_sc_channel_map)[31655].second.push_front(p_14_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_arid.bind(*p_14_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[31633].first = 3;
        (*_glb_hdl_sc_channel_map)[31633].second.push_front(p_14_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_araddr.bind(*p_14_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31629].first = 3;
        (*_glb_hdl_sc_channel_map)[31629].second.push_front(p_14_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_arlen.bind(*p_14_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31634].first = 3;
        (*_glb_hdl_sc_channel_map)[31634].second.push_front(p_14_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arsize.bind(*p_14_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31640].first = 3;
        (*_glb_hdl_sc_channel_map)[31640].second.push_front(p_14_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_arburst.bind(*p_14_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31630].first = 3;
        (*_glb_hdl_sc_channel_map)[31630].second.push_front(p_14_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arlock.bind(*p_14_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31635].first = 1;
        (*_glb_hdl_sc_channel_map)[31635].second.push_front(p_14_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arcache.bind(*p_14_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31631].first = 3;
        (*_glb_hdl_sc_channel_map)[31631].second.push_front(p_14_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arprot.bind(*p_14_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31636].first = 3;
        (*_glb_hdl_sc_channel_map)[31636].second.push_front(p_14_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arregion.bind(*p_14_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31639].first = 3;
        (*_glb_hdl_sc_channel_map)[31639].second.push_front(p_14_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arqos.bind(*p_14_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31637].first = 3;
        (*_glb_hdl_sc_channel_map)[31637].second.push_front(p_14_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arvalid.bind(*p_14_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31641].first = 1;
        (*_glb_hdl_sc_channel_map)[31641].second.push_front(p_14_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arready.bind(*p_14_s03_axi_arready);
        p_14_s03_axi_arready->set_sv_netview_offsetfromdp(17564176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_rid.bind(*p_14_s03_axi_rid);
        p_14_s03_axi_rid->set_sv_netview_offsetfromdp(17564232);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_rdata.bind(*p_14_s03_axi_rdata);
        p_14_s03_axi_rdata->set_sv_netview_offsetfromdp(17564288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_rresp.bind(*p_14_s03_axi_rresp);
        p_14_s03_axi_rresp->set_sv_netview_offsetfromdp(17564344);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rlast.bind(*p_14_s03_axi_rlast);
        p_14_s03_axi_rlast->set_sv_netview_offsetfromdp(17564400);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rvalid.bind(*p_14_s03_axi_rvalid);
        p_14_s03_axi_rvalid->set_sv_netview_offsetfromdp(17564456);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rready.bind(*p_14_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[31661].first = 1;
        (*_glb_hdl_sc_channel_map)[31661].second.push_front(p_14_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aclk.bind(*p_14_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31628].first = 1;
        (*_glb_hdl_sc_channel_map)[31628].second.push_front(p_14_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aresetn.bind(*p_14_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31632].first = 1;
        (*_glb_hdl_sc_channel_map)[31632].second.push_front(p_14_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_awid.bind(*p_14_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[31563].first = 3;
        (*_glb_hdl_sc_channel_map)[31563].second.push_front(p_14_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_awaddr.bind(*p_14_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31560].first = 3;
        (*_glb_hdl_sc_channel_map)[31560].second.push_front(p_14_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_awlen.bind(*p_14_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31564].first = 3;
        (*_glb_hdl_sc_channel_map)[31564].second.push_front(p_14_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awsize.bind(*p_14_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[31570].first = 3;
        (*_glb_hdl_sc_channel_map)[31570].second.push_front(p_14_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_awburst.bind(*p_14_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31561].first = 3;
        (*_glb_hdl_sc_channel_map)[31561].second.push_front(p_14_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awlock.bind(*p_14_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31565].first = 1;
        (*_glb_hdl_sc_channel_map)[31565].second.push_front(p_14_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awcache.bind(*p_14_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31562].first = 3;
        (*_glb_hdl_sc_channel_map)[31562].second.push_front(p_14_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awprot.bind(*p_14_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[31566].first = 3;
        (*_glb_hdl_sc_channel_map)[31566].second.push_front(p_14_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awregion.bind(*p_14_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[31569].first = 3;
        (*_glb_hdl_sc_channel_map)[31569].second.push_front(p_14_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awqos.bind(*p_14_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[31567].first = 3;
        (*_glb_hdl_sc_channel_map)[31567].second.push_front(p_14_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awvalid.bind(*p_14_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[31571].first = 1;
        (*_glb_hdl_sc_channel_map)[31571].second.push_front(p_14_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awready.bind(*p_14_s01_axi_awready);
        p_14_s01_axi_awready->set_sv_netview_offsetfromdp(17565296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_wdata.bind(*p_14_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[31582].first = 3;
        (*_glb_hdl_sc_channel_map)[31582].second.push_front(p_14_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_wstrb.bind(*p_14_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[31585].first = 3;
        (*_glb_hdl_sc_channel_map)[31585].second.push_front(p_14_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wlast.bind(*p_14_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[31583].first = 1;
        (*_glb_hdl_sc_channel_map)[31583].second.push_front(p_14_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wvalid.bind(*p_14_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[31586].first = 1;
        (*_glb_hdl_sc_channel_map)[31586].second.push_front(p_14_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wready.bind(*p_14_s01_axi_wready);
        p_14_s01_axi_wready->set_sv_netview_offsetfromdp(17565576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_bid.bind(*p_14_s01_axi_bid);
        p_14_s01_axi_bid->set_sv_netview_offsetfromdp(17565632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_bresp.bind(*p_14_s01_axi_bresp);
        p_14_s01_axi_bresp->set_sv_netview_offsetfromdp(17565688);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bvalid.bind(*p_14_s01_axi_bvalid);
        p_14_s01_axi_bvalid->set_sv_netview_offsetfromdp(17565744);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bready.bind(*p_14_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[31573].first = 1;
        (*_glb_hdl_sc_channel_map)[31573].second.push_front(p_14_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_arid.bind(*p_14_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[31551].first = 3;
        (*_glb_hdl_sc_channel_map)[31551].second.push_front(p_14_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_araddr.bind(*p_14_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31547].first = 3;
        (*_glb_hdl_sc_channel_map)[31547].second.push_front(p_14_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_arlen.bind(*p_14_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31552].first = 3;
        (*_glb_hdl_sc_channel_map)[31552].second.push_front(p_14_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arsize.bind(*p_14_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31558].first = 3;
        (*_glb_hdl_sc_channel_map)[31558].second.push_front(p_14_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_arburst.bind(*p_14_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31548].first = 3;
        (*_glb_hdl_sc_channel_map)[31548].second.push_front(p_14_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arlock.bind(*p_14_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31553].first = 1;
        (*_glb_hdl_sc_channel_map)[31553].second.push_front(p_14_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arcache.bind(*p_14_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31549].first = 3;
        (*_glb_hdl_sc_channel_map)[31549].second.push_front(p_14_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arprot.bind(*p_14_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31554].first = 3;
        (*_glb_hdl_sc_channel_map)[31554].second.push_front(p_14_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arregion.bind(*p_14_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31557].first = 3;
        (*_glb_hdl_sc_channel_map)[31557].second.push_front(p_14_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arqos.bind(*p_14_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31555].first = 3;
        (*_glb_hdl_sc_channel_map)[31555].second.push_front(p_14_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arvalid.bind(*p_14_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31559].first = 1;
        (*_glb_hdl_sc_channel_map)[31559].second.push_front(p_14_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arready.bind(*p_14_s01_axi_arready);
        p_14_s01_axi_arready->set_sv_netview_offsetfromdp(17566472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_rid.bind(*p_14_s01_axi_rid);
        p_14_s01_axi_rid->set_sv_netview_offsetfromdp(17566528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_rdata.bind(*p_14_s01_axi_rdata);
        p_14_s01_axi_rdata->set_sv_netview_offsetfromdp(17566584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_rresp.bind(*p_14_s01_axi_rresp);
        p_14_s01_axi_rresp->set_sv_netview_offsetfromdp(17566640);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rlast.bind(*p_14_s01_axi_rlast);
        p_14_s01_axi_rlast->set_sv_netview_offsetfromdp(17566696);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rvalid.bind(*p_14_s01_axi_rvalid);
        p_14_s01_axi_rvalid->set_sv_netview_offsetfromdp(17566752);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rready.bind(*p_14_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[31579].first = 1;
        (*_glb_hdl_sc_channel_map)[31579].second.push_front(p_14_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aclk.bind(*p_14_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31546].first = 1;
        (*_glb_hdl_sc_channel_map)[31546].second.push_front(p_14_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aresetn.bind(*p_14_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31550].first = 1;
        (*_glb_hdl_sc_channel_map)[31550].second.push_front(p_14_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_awid.bind(*p_14_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[31604].first = 3;
        (*_glb_hdl_sc_channel_map)[31604].second.push_front(p_14_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_awaddr.bind(*p_14_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31601].first = 3;
        (*_glb_hdl_sc_channel_map)[31601].second.push_front(p_14_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_awlen.bind(*p_14_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31605].first = 3;
        (*_glb_hdl_sc_channel_map)[31605].second.push_front(p_14_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awsize.bind(*p_14_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[31611].first = 3;
        (*_glb_hdl_sc_channel_map)[31611].second.push_front(p_14_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_awburst.bind(*p_14_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31602].first = 3;
        (*_glb_hdl_sc_channel_map)[31602].second.push_front(p_14_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awlock.bind(*p_14_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31606].first = 1;
        (*_glb_hdl_sc_channel_map)[31606].second.push_front(p_14_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awcache.bind(*p_14_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31603].first = 3;
        (*_glb_hdl_sc_channel_map)[31603].second.push_front(p_14_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awprot.bind(*p_14_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[31607].first = 3;
        (*_glb_hdl_sc_channel_map)[31607].second.push_front(p_14_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awregion.bind(*p_14_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[31610].first = 3;
        (*_glb_hdl_sc_channel_map)[31610].second.push_front(p_14_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awqos.bind(*p_14_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[31608].first = 3;
        (*_glb_hdl_sc_channel_map)[31608].second.push_front(p_14_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awvalid.bind(*p_14_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[31612].first = 1;
        (*_glb_hdl_sc_channel_map)[31612].second.push_front(p_14_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awready.bind(*p_14_s02_axi_awready);
        p_14_s02_axi_awready->set_sv_netview_offsetfromdp(17567592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_wdata.bind(*p_14_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[31623].first = 3;
        (*_glb_hdl_sc_channel_map)[31623].second.push_front(p_14_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_wstrb.bind(*p_14_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[31626].first = 3;
        (*_glb_hdl_sc_channel_map)[31626].second.push_front(p_14_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wlast.bind(*p_14_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[31624].first = 1;
        (*_glb_hdl_sc_channel_map)[31624].second.push_front(p_14_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wvalid.bind(*p_14_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[31627].first = 1;
        (*_glb_hdl_sc_channel_map)[31627].second.push_front(p_14_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wready.bind(*p_14_s02_axi_wready);
        p_14_s02_axi_wready->set_sv_netview_offsetfromdp(17567872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_bid.bind(*p_14_s02_axi_bid);
        p_14_s02_axi_bid->set_sv_netview_offsetfromdp(17567928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_bresp.bind(*p_14_s02_axi_bresp);
        p_14_s02_axi_bresp->set_sv_netview_offsetfromdp(17567984);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bvalid.bind(*p_14_s02_axi_bvalid);
        p_14_s02_axi_bvalid->set_sv_netview_offsetfromdp(17568040);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bready.bind(*p_14_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[31614].first = 1;
        (*_glb_hdl_sc_channel_map)[31614].second.push_front(p_14_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_arid.bind(*p_14_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[31592].first = 3;
        (*_glb_hdl_sc_channel_map)[31592].second.push_front(p_14_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_araddr.bind(*p_14_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31588].first = 3;
        (*_glb_hdl_sc_channel_map)[31588].second.push_front(p_14_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_arlen.bind(*p_14_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31593].first = 3;
        (*_glb_hdl_sc_channel_map)[31593].second.push_front(p_14_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arsize.bind(*p_14_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31599].first = 3;
        (*_glb_hdl_sc_channel_map)[31599].second.push_front(p_14_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_arburst.bind(*p_14_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31589].first = 3;
        (*_glb_hdl_sc_channel_map)[31589].second.push_front(p_14_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arlock.bind(*p_14_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31594].first = 1;
        (*_glb_hdl_sc_channel_map)[31594].second.push_front(p_14_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arcache.bind(*p_14_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31590].first = 3;
        (*_glb_hdl_sc_channel_map)[31590].second.push_front(p_14_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arprot.bind(*p_14_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31595].first = 3;
        (*_glb_hdl_sc_channel_map)[31595].second.push_front(p_14_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arregion.bind(*p_14_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31598].first = 3;
        (*_glb_hdl_sc_channel_map)[31598].second.push_front(p_14_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arqos.bind(*p_14_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31596].first = 3;
        (*_glb_hdl_sc_channel_map)[31596].second.push_front(p_14_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arvalid.bind(*p_14_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31600].first = 1;
        (*_glb_hdl_sc_channel_map)[31600].second.push_front(p_14_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arready.bind(*p_14_s02_axi_arready);
        p_14_s02_axi_arready->set_sv_netview_offsetfromdp(17568768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_rid.bind(*p_14_s02_axi_rid);
        p_14_s02_axi_rid->set_sv_netview_offsetfromdp(17568824);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_rdata.bind(*p_14_s02_axi_rdata);
        p_14_s02_axi_rdata->set_sv_netview_offsetfromdp(17568880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_rresp.bind(*p_14_s02_axi_rresp);
        p_14_s02_axi_rresp->set_sv_netview_offsetfromdp(17568936);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rlast.bind(*p_14_s02_axi_rlast);
        p_14_s02_axi_rlast->set_sv_netview_offsetfromdp(17568992);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rvalid.bind(*p_14_s02_axi_rvalid);
        p_14_s02_axi_rvalid->set_sv_netview_offsetfromdp(17569048);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rready.bind(*p_14_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[31620].first = 1;
        (*_glb_hdl_sc_channel_map)[31620].second.push_front(p_14_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aclk.bind(*p_14_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31587].first = 1;
        (*_glb_hdl_sc_channel_map)[31587].second.push_front(p_14_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aresetn.bind(*p_14_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31591].first = 1;
        (*_glb_hdl_sc_channel_map)[31591].second.push_front(p_14_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_awid.bind(*p_14_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[31686].first = 3;
        (*_glb_hdl_sc_channel_map)[31686].second.push_front(p_14_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_awaddr.bind(*p_14_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[31683].first = 3;
        (*_glb_hdl_sc_channel_map)[31683].second.push_front(p_14_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_awlen.bind(*p_14_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[31687].first = 3;
        (*_glb_hdl_sc_channel_map)[31687].second.push_front(p_14_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awsize.bind(*p_14_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[31693].first = 3;
        (*_glb_hdl_sc_channel_map)[31693].second.push_front(p_14_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_awburst.bind(*p_14_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[31684].first = 3;
        (*_glb_hdl_sc_channel_map)[31684].second.push_front(p_14_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awlock.bind(*p_14_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[31688].first = 1;
        (*_glb_hdl_sc_channel_map)[31688].second.push_front(p_14_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awcache.bind(*p_14_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[31685].first = 3;
        (*_glb_hdl_sc_channel_map)[31685].second.push_front(p_14_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awprot.bind(*p_14_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[31689].first = 3;
        (*_glb_hdl_sc_channel_map)[31689].second.push_front(p_14_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awregion.bind(*p_14_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[31692].first = 3;
        (*_glb_hdl_sc_channel_map)[31692].second.push_front(p_14_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awqos.bind(*p_14_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[31690].first = 3;
        (*_glb_hdl_sc_channel_map)[31690].second.push_front(p_14_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awvalid.bind(*p_14_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[31694].first = 1;
        (*_glb_hdl_sc_channel_map)[31694].second.push_front(p_14_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awready.bind(*p_14_s04_axi_awready);
        p_14_s04_axi_awready->set_sv_netview_offsetfromdp(17569888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_wdata.bind(*p_14_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[31705].first = 3;
        (*_glb_hdl_sc_channel_map)[31705].second.push_front(p_14_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_wstrb.bind(*p_14_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[31708].first = 3;
        (*_glb_hdl_sc_channel_map)[31708].second.push_front(p_14_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wlast.bind(*p_14_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[31706].first = 1;
        (*_glb_hdl_sc_channel_map)[31706].second.push_front(p_14_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wvalid.bind(*p_14_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[31709].first = 1;
        (*_glb_hdl_sc_channel_map)[31709].second.push_front(p_14_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wready.bind(*p_14_s04_axi_wready);
        p_14_s04_axi_wready->set_sv_netview_offsetfromdp(17570168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_bid.bind(*p_14_s04_axi_bid);
        p_14_s04_axi_bid->set_sv_netview_offsetfromdp(17570224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_bresp.bind(*p_14_s04_axi_bresp);
        p_14_s04_axi_bresp->set_sv_netview_offsetfromdp(17570280);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bvalid.bind(*p_14_s04_axi_bvalid);
        p_14_s04_axi_bvalid->set_sv_netview_offsetfromdp(17570336);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bready.bind(*p_14_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[31696].first = 1;
        (*_glb_hdl_sc_channel_map)[31696].second.push_front(p_14_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_arid.bind(*p_14_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[31674].first = 3;
        (*_glb_hdl_sc_channel_map)[31674].second.push_front(p_14_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_araddr.bind(*p_14_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[31670].first = 3;
        (*_glb_hdl_sc_channel_map)[31670].second.push_front(p_14_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_arlen.bind(*p_14_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[31675].first = 3;
        (*_glb_hdl_sc_channel_map)[31675].second.push_front(p_14_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arsize.bind(*p_14_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[31681].first = 3;
        (*_glb_hdl_sc_channel_map)[31681].second.push_front(p_14_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_arburst.bind(*p_14_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[31671].first = 3;
        (*_glb_hdl_sc_channel_map)[31671].second.push_front(p_14_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arlock.bind(*p_14_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[31676].first = 1;
        (*_glb_hdl_sc_channel_map)[31676].second.push_front(p_14_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arcache.bind(*p_14_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[31672].first = 3;
        (*_glb_hdl_sc_channel_map)[31672].second.push_front(p_14_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arprot.bind(*p_14_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[31677].first = 3;
        (*_glb_hdl_sc_channel_map)[31677].second.push_front(p_14_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arregion.bind(*p_14_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[31680].first = 3;
        (*_glb_hdl_sc_channel_map)[31680].second.push_front(p_14_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arqos.bind(*p_14_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[31678].first = 3;
        (*_glb_hdl_sc_channel_map)[31678].second.push_front(p_14_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arvalid.bind(*p_14_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[31682].first = 1;
        (*_glb_hdl_sc_channel_map)[31682].second.push_front(p_14_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arready.bind(*p_14_s04_axi_arready);
        p_14_s04_axi_arready->set_sv_netview_offsetfromdp(17571064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_rid.bind(*p_14_s04_axi_rid);
        p_14_s04_axi_rid->set_sv_netview_offsetfromdp(17571120);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_rdata.bind(*p_14_s04_axi_rdata);
        p_14_s04_axi_rdata->set_sv_netview_offsetfromdp(17571176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_rresp.bind(*p_14_s04_axi_rresp);
        p_14_s04_axi_rresp->set_sv_netview_offsetfromdp(17571232);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rlast.bind(*p_14_s04_axi_rlast);
        p_14_s04_axi_rlast->set_sv_netview_offsetfromdp(17571288);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rvalid.bind(*p_14_s04_axi_rvalid);
        p_14_s04_axi_rvalid->set_sv_netview_offsetfromdp(17571344);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rready.bind(*p_14_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[31702].first = 1;
        (*_glb_hdl_sc_channel_map)[31702].second.push_front(p_14_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aclk.bind(*p_14_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[31669].first = 1;
        (*_glb_hdl_sc_channel_map)[31669].second.push_front(p_14_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aresetn.bind(*p_14_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[31673].first = 1;
        (*_glb_hdl_sc_channel_map)[31673].second.push_front(p_14_s04_axi_aresetn);
        sc_inst_15 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_15->xsim_set_dbg_index(23);
        sc_inst_16 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_16->xsim_set_dbg_index(1571);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_awaddr.bind(*p_16_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[37854].first = 3;
        (*_glb_hdl_sc_channel_map)[37854].second.push_front(p_16_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_awprot.bind(*p_16_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[37855].first = 3;
        (*_glb_hdl_sc_channel_map)[37855].second.push_front(p_16_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awvalid.bind(*p_16_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[37857].first = 1;
        (*_glb_hdl_sc_channel_map)[37857].second.push_front(p_16_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awready.bind(*p_16_saxi_lite_cq_awready);
        p_16_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(19736760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_wdata.bind(*p_16_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[37865].first = 3;
        (*_glb_hdl_sc_channel_map)[37865].second.push_front(p_16_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->saxi_lite_cq_wstrb.bind(*p_16_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[37867].first = 3;
        (*_glb_hdl_sc_channel_map)[37867].second.push_front(p_16_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wvalid.bind(*p_16_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[37868].first = 1;
        (*_glb_hdl_sc_channel_map)[37868].second.push_front(p_16_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wready.bind(*p_16_saxi_lite_cq_wready);
        p_16_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(19736984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_bresp.bind(*p_16_saxi_lite_cq_bresp);
        p_16_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(19737040);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bvalid.bind(*p_16_saxi_lite_cq_bvalid);
        p_16_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(19737096);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bready.bind(*p_16_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[37858].first = 1;
        (*_glb_hdl_sc_channel_map)[37858].second.push_front(p_16_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_araddr.bind(*p_16_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[37849].first = 3;
        (*_glb_hdl_sc_channel_map)[37849].second.push_front(p_16_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_arprot.bind(*p_16_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[37851].first = 3;
        (*_glb_hdl_sc_channel_map)[37851].second.push_front(p_16_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arvalid.bind(*p_16_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[37853].first = 1;
        (*_glb_hdl_sc_channel_map)[37853].second.push_front(p_16_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arready.bind(*p_16_saxi_lite_cq_arready);
        p_16_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(19737376);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_rdata.bind(*p_16_saxi_lite_cq_rdata);
        p_16_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(19737432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_rresp.bind(*p_16_saxi_lite_cq_rresp);
        p_16_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(19737488);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rvalid.bind(*p_16_saxi_lite_cq_rvalid);
        p_16_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(19737544);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rready.bind(*p_16_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[37862].first = 1;
        (*_glb_hdl_sc_channel_map)[37862].second.push_front(p_16_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aclk.bind(*p_16_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[37848].first = 1;
        (*_glb_hdl_sc_channel_map)[37848].second.push_front(p_16_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aresetn.bind(*p_16_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[37850].first = 1;
        (*_glb_hdl_sc_channel_map)[37850].second.push_front(p_16_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_awaddr.bind(*p_16_maxi_lite_mb_awaddr);
        p_16_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(19737768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_awprot.bind(*p_16_maxi_lite_mb_awprot);
        p_16_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(19737824);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awvalid.bind(*p_16_maxi_lite_mb_awvalid);
        p_16_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(19737880);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awready.bind(*p_16_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[37835].first = 1;
        (*_glb_hdl_sc_channel_map)[37835].second.push_front(p_16_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_wdata.bind(*p_16_maxi_lite_mb_wdata);
        p_16_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(19737992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->maxi_lite_mb_wstrb.bind(*p_16_maxi_lite_mb_wstrb);
        p_16_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(19738048);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wvalid.bind(*p_16_maxi_lite_mb_wvalid);
        p_16_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(19738104);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wready.bind(*p_16_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[37845].first = 1;
        (*_glb_hdl_sc_channel_map)[37845].second.push_front(p_16_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_bresp.bind(*p_16_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[37838].first = 3;
        (*_glb_hdl_sc_channel_map)[37838].second.push_front(p_16_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bvalid.bind(*p_16_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[37839].first = 1;
        (*_glb_hdl_sc_channel_map)[37839].second.push_front(p_16_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bready.bind(*p_16_maxi_lite_mb_bready);
        p_16_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(19738328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_araddr.bind(*p_16_maxi_lite_mb_araddr);
        p_16_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(19738384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_arprot.bind(*p_16_maxi_lite_mb_arprot);
        p_16_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(19738440);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arvalid.bind(*p_16_maxi_lite_mb_arvalid);
        p_16_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(19738496);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arready.bind(*p_16_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[37831].first = 1;
        (*_glb_hdl_sc_channel_map)[37831].second.push_front(p_16_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_rdata.bind(*p_16_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[37840].first = 3;
        (*_glb_hdl_sc_channel_map)[37840].second.push_front(p_16_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_rresp.bind(*p_16_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[37842].first = 3;
        (*_glb_hdl_sc_channel_map)[37842].second.push_front(p_16_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rvalid.bind(*p_16_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[37843].first = 1;
        (*_glb_hdl_sc_channel_map)[37843].second.push_front(p_16_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rready.bind(*p_16_maxi_lite_mb_rready);
        p_16_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(19738776);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aclk.bind(*p_16_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[37827].first = 1;
        (*_glb_hdl_sc_channel_map)[37827].second.push_front(p_16_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aresetn.bind(*p_16_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[37829].first = 1;
        (*_glb_hdl_sc_channel_map)[37829].second.push_front(p_16_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_16_irq = new xsim_sc_channel<0, bool >();
        sc_inst_16->irq.bind(*p_16_irq);
        (*_glb_hdl_sc_channel_map)[37826].first = 1;
        (*_glb_hdl_sc_channel_map)[37826].second.push_front(p_16_irq);
        sc_inst_17 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_17->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_awaddr.bind(*p_17_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32328].first = 3;
        (*_glb_hdl_sc_channel_map)[32328].second.push_front(p_17_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_awlen.bind(*p_17_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[37951].first = 3;
        (*_glb_hdl_sc_channel_map)[37951].second.push_front(p_17_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awsize.bind(*p_17_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[37954].first = 3;
        (*_glb_hdl_sc_channel_map)[37954].second.push_front(p_17_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_awburst.bind(*p_17_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[37950].first = 3;
        (*_glb_hdl_sc_channel_map)[37950].second.push_front(p_17_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awlock.bind(*p_17_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32326].first = 1;
        (*_glb_hdl_sc_channel_map)[32326].second.push_front(p_17_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awcache.bind(*p_17_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32327].first = 3;
        (*_glb_hdl_sc_channel_map)[32327].second.push_front(p_17_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awprot.bind(*p_17_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[37952].first = 3;
        (*_glb_hdl_sc_channel_map)[37952].second.push_front(p_17_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awregion.bind(*p_17_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32324].first = 3;
        (*_glb_hdl_sc_channel_map)[32324].second.push_front(p_17_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awqos.bind(*p_17_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32325].first = 3;
        (*_glb_hdl_sc_channel_map)[32325].second.push_front(p_17_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awvalid.bind(*p_17_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[37955].first = 1;
        (*_glb_hdl_sc_channel_map)[37955].second.push_front(p_17_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awready.bind(*p_17_s00_axi_awready);
        p_17_s00_axi_awready->set_sv_netview_offsetfromdp(19749328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_wdata.bind(*p_17_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[37964].first = 3;
        (*_glb_hdl_sc_channel_map)[37964].second.push_front(p_17_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_wstrb.bind(*p_17_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[37967].first = 3;
        (*_glb_hdl_sc_channel_map)[37967].second.push_front(p_17_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wlast.bind(*p_17_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[37965].first = 1;
        (*_glb_hdl_sc_channel_map)[37965].second.push_front(p_17_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wvalid.bind(*p_17_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[37968].first = 1;
        (*_glb_hdl_sc_channel_map)[37968].second.push_front(p_17_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wready.bind(*p_17_s00_axi_wready);
        p_17_s00_axi_wready->set_sv_netview_offsetfromdp(19749608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_bresp.bind(*p_17_s00_axi_bresp);
        p_17_s00_axi_bresp->set_sv_netview_offsetfromdp(19749664);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bvalid.bind(*p_17_s00_axi_bvalid);
        p_17_s00_axi_bvalid->set_sv_netview_offsetfromdp(19749720);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bready.bind(*p_17_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[37956].first = 1;
        (*_glb_hdl_sc_channel_map)[37956].second.push_front(p_17_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_araddr.bind(*p_17_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32333].first = 3;
        (*_glb_hdl_sc_channel_map)[32333].second.push_front(p_17_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_arlen.bind(*p_17_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[37945].first = 3;
        (*_glb_hdl_sc_channel_map)[37945].second.push_front(p_17_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arsize.bind(*p_17_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[37948].first = 3;
        (*_glb_hdl_sc_channel_map)[37948].second.push_front(p_17_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_arburst.bind(*p_17_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[37943].first = 3;
        (*_glb_hdl_sc_channel_map)[37943].second.push_front(p_17_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arlock.bind(*p_17_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32331].first = 1;
        (*_glb_hdl_sc_channel_map)[32331].second.push_front(p_17_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arcache.bind(*p_17_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32332].first = 3;
        (*_glb_hdl_sc_channel_map)[32332].second.push_front(p_17_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arprot.bind(*p_17_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[37946].first = 3;
        (*_glb_hdl_sc_channel_map)[37946].second.push_front(p_17_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arregion.bind(*p_17_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32329].first = 3;
        (*_glb_hdl_sc_channel_map)[32329].second.push_front(p_17_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arqos.bind(*p_17_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32330].first = 3;
        (*_glb_hdl_sc_channel_map)[32330].second.push_front(p_17_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arvalid.bind(*p_17_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[37949].first = 1;
        (*_glb_hdl_sc_channel_map)[37949].second.push_front(p_17_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arready.bind(*p_17_s00_axi_arready);
        p_17_s00_axi_arready->set_sv_netview_offsetfromdp(19750392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_rdata.bind(*p_17_s00_axi_rdata);
        p_17_s00_axi_rdata->set_sv_netview_offsetfromdp(19750448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_rresp.bind(*p_17_s00_axi_rresp);
        p_17_s00_axi_rresp->set_sv_netview_offsetfromdp(19750504);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rlast.bind(*p_17_s00_axi_rlast);
        p_17_s00_axi_rlast->set_sv_netview_offsetfromdp(19750560);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rvalid.bind(*p_17_s00_axi_rvalid);
        p_17_s00_axi_rvalid->set_sv_netview_offsetfromdp(19750616);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rready.bind(*p_17_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[37961].first = 1;
        (*_glb_hdl_sc_channel_map)[37961].second.push_front(p_17_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aclk.bind(*p_17_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[37942].first = 1;
        (*_glb_hdl_sc_channel_map)[37942].second.push_front(p_17_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aresetn.bind(*p_17_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[37944].first = 1;
        (*_glb_hdl_sc_channel_map)[37944].second.push_front(p_17_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awid.bind(*p_17_m00_axi_awid);
        p_17_m00_axi_awid->set_sv_netview_offsetfromdp(19750840);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_awaddr.bind(*p_17_m00_axi_awaddr);
        p_17_m00_axi_awaddr->set_sv_netview_offsetfromdp(19750896);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_awlen.bind(*p_17_m00_axi_awlen);
        p_17_m00_axi_awlen->set_sv_netview_offsetfromdp(19750952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awsize.bind(*p_17_m00_axi_awsize);
        p_17_m00_axi_awsize->set_sv_netview_offsetfromdp(19751008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_awburst.bind(*p_17_m00_axi_awburst);
        p_17_m00_axi_awburst->set_sv_netview_offsetfromdp(19751064);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awlock.bind(*p_17_m00_axi_awlock);
        p_17_m00_axi_awlock->set_sv_netview_offsetfromdp(19751120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awcache.bind(*p_17_m00_axi_awcache);
        p_17_m00_axi_awcache->set_sv_netview_offsetfromdp(19751176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awprot.bind(*p_17_m00_axi_awprot);
        p_17_m00_axi_awprot->set_sv_netview_offsetfromdp(19751232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awqos.bind(*p_17_m00_axi_awqos);
        p_17_m00_axi_awqos->set_sv_netview_offsetfromdp(19751288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awuser.bind(*p_17_m00_axi_awuser);
        p_17_m00_axi_awuser->set_sv_netview_offsetfromdp(19751344);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awvalid.bind(*p_17_m00_axi_awvalid);
        p_17_m00_axi_awvalid->set_sv_netview_offsetfromdp(19751400);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awready.bind(*p_17_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[37920].first = 1;
        (*_glb_hdl_sc_channel_map)[37920].second.push_front(p_17_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_wdata.bind(*p_17_m00_axi_wdata);
        p_17_m00_axi_wdata->set_sv_netview_offsetfromdp(19751512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m00_axi_wstrb.bind(*p_17_m00_axi_wstrb);
        p_17_m00_axi_wstrb->set_sv_netview_offsetfromdp(19751568);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wlast.bind(*p_17_m00_axi_wlast);
        p_17_m00_axi_wlast->set_sv_netview_offsetfromdp(19751624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_wuser.bind(*p_17_m00_axi_wuser);
        p_17_m00_axi_wuser->set_sv_netview_offsetfromdp(19751680);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wvalid.bind(*p_17_m00_axi_wvalid);
        p_17_m00_axi_wvalid->set_sv_netview_offsetfromdp(19751736);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wready.bind(*p_17_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[37938].first = 1;
        (*_glb_hdl_sc_channel_map)[37938].second.push_front(p_17_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_bid.bind(*p_17_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[37924].first = 3;
        (*_glb_hdl_sc_channel_map)[37924].second.push_front(p_17_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_bresp.bind(*p_17_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[37926].first = 3;
        (*_glb_hdl_sc_channel_map)[37926].second.push_front(p_17_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_buser.bind(*p_17_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[37927].first = 3;
        (*_glb_hdl_sc_channel_map)[37927].second.push_front(p_17_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bvalid.bind(*p_17_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[37928].first = 1;
        (*_glb_hdl_sc_channel_map)[37928].second.push_front(p_17_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bready.bind(*p_17_m00_axi_bready);
        p_17_m00_axi_bready->set_sv_netview_offsetfromdp(19752072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_arid.bind(*p_17_m00_axi_arid);
        p_17_m00_axi_arid->set_sv_netview_offsetfromdp(19752128);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_araddr.bind(*p_17_m00_axi_araddr);
        p_17_m00_axi_araddr->set_sv_netview_offsetfromdp(19752184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_arlen.bind(*p_17_m00_axi_arlen);
        p_17_m00_axi_arlen->set_sv_netview_offsetfromdp(19752240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arsize.bind(*p_17_m00_axi_arsize);
        p_17_m00_axi_arsize->set_sv_netview_offsetfromdp(19752296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_arburst.bind(*p_17_m00_axi_arburst);
        p_17_m00_axi_arburst->set_sv_netview_offsetfromdp(19752352);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arlock.bind(*p_17_m00_axi_arlock);
        p_17_m00_axi_arlock->set_sv_netview_offsetfromdp(19752408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arcache.bind(*p_17_m00_axi_arcache);
        p_17_m00_axi_arcache->set_sv_netview_offsetfromdp(19752464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arprot.bind(*p_17_m00_axi_arprot);
        p_17_m00_axi_arprot->set_sv_netview_offsetfromdp(19752520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arqos.bind(*p_17_m00_axi_arqos);
        p_17_m00_axi_arqos->set_sv_netview_offsetfromdp(19752576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_aruser.bind(*p_17_m00_axi_aruser);
        p_17_m00_axi_aruser->set_sv_netview_offsetfromdp(19752632);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arvalid.bind(*p_17_m00_axi_arvalid);
        p_17_m00_axi_arvalid->set_sv_netview_offsetfromdp(19752688);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arready.bind(*p_17_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[37908].first = 1;
        (*_glb_hdl_sc_channel_map)[37908].second.push_front(p_17_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_rid.bind(*p_17_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[37930].first = 3;
        (*_glb_hdl_sc_channel_map)[37930].second.push_front(p_17_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_rdata.bind(*p_17_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[37929].first = 3;
        (*_glb_hdl_sc_channel_map)[37929].second.push_front(p_17_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_rresp.bind(*p_17_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[37933].first = 3;
        (*_glb_hdl_sc_channel_map)[37933].second.push_front(p_17_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rlast.bind(*p_17_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[37931].first = 1;
        (*_glb_hdl_sc_channel_map)[37931].second.push_front(p_17_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_ruser.bind(*p_17_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[37934].first = 3;
        (*_glb_hdl_sc_channel_map)[37934].second.push_front(p_17_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rvalid.bind(*p_17_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[37935].first = 1;
        (*_glb_hdl_sc_channel_map)[37935].second.push_front(p_17_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rready.bind(*p_17_m00_axi_rready);
        p_17_m00_axi_rready->set_sv_netview_offsetfromdp(19753136);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aclk.bind(*p_17_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[37898].first = 1;
        (*_glb_hdl_sc_channel_map)[37898].second.push_front(p_17_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aresetn.bind(*p_17_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[37902].first = 1;
        (*_glb_hdl_sc_channel_map)[37902].second.push_front(p_17_m00_axi_aresetn);
        sc_inst_18 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_18->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32319].first = 3;
        (*_glb_hdl_sc_channel_map)[32319].second.push_front(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38256].first = 1;
        (*_glb_hdl_sc_channel_map)[38256].second.push_front(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(19799640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38264].first = 3;
        (*_glb_hdl_sc_channel_map)[38264].second.push_front(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38266].first = 3;
        (*_glb_hdl_sc_channel_map)[38266].second.push_front(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38267].first = 1;
        (*_glb_hdl_sc_channel_map)[38267].second.push_front(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(19799864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(19799920);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(19799976);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38257].first = 1;
        (*_glb_hdl_sc_channel_map)[38257].second.push_front(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32320].first = 3;
        (*_glb_hdl_sc_channel_map)[32320].second.push_front(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38254].first = 1;
        (*_glb_hdl_sc_channel_map)[38254].second.push_front(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(19800200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(19800256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(19800312);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(19800368);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38261].first = 1;
        (*_glb_hdl_sc_channel_map)[38261].second.push_front(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map)[38215].first = 1;
        (*_glb_hdl_sc_channel_map)[38215].second.push_front(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38216].first = 1;
        (*_glb_hdl_sc_channel_map)[38216].second.push_front(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(19800592);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(19800648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(19800704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(19800760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(19800816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(19800872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(19800928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(19800984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(19801040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(19801096);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(19801152);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38236].first = 1;
        (*_glb_hdl_sc_channel_map)[38236].second.push_front(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(19801264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(19801320);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(19801376);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(19801432);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38250].first = 1;
        (*_glb_hdl_sc_channel_map)[38250].second.push_front(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38241].first = 3;
        (*_glb_hdl_sc_channel_map)[38241].second.push_front(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38242].first = 1;
        (*_glb_hdl_sc_channel_map)[38242].second.push_front(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(19801656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(19801712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(19801768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(19801824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(19801880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(19801936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(19801992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(19802048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(19802104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(19802160);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(19802216);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38225].first = 1;
        (*_glb_hdl_sc_channel_map)[38225].second.push_front(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38243].first = 3;
        (*_glb_hdl_sc_channel_map)[38243].second.push_front(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38246].first = 3;
        (*_glb_hdl_sc_channel_map)[38246].second.push_front(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38244].first = 1;
        (*_glb_hdl_sc_channel_map)[38244].second.push_front(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38247].first = 1;
        (*_glb_hdl_sc_channel_map)[38247].second.push_front(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(19802552);
        sc_inst_19 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_19->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32317].first = 3;
        (*_glb_hdl_sc_channel_map)[32317].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38308].first = 1;
        (*_glb_hdl_sc_channel_map)[38308].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(19802768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38316].first = 3;
        (*_glb_hdl_sc_channel_map)[38316].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38318].first = 3;
        (*_glb_hdl_sc_channel_map)[38318].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38319].first = 1;
        (*_glb_hdl_sc_channel_map)[38319].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(19802992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(19803048);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(19803104);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38309].first = 1;
        (*_glb_hdl_sc_channel_map)[38309].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32318].first = 3;
        (*_glb_hdl_sc_channel_map)[32318].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38306].first = 1;
        (*_glb_hdl_sc_channel_map)[38306].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(19803328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(19803384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(19803440);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(19803496);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38313].first = 1;
        (*_glb_hdl_sc_channel_map)[38313].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[38268].first = 1;
        (*_glb_hdl_sc_channel_map)[38268].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38269].first = 1;
        (*_glb_hdl_sc_channel_map)[38269].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(19803720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(19803776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(19803832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(19803888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(19803944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(19804000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(19804056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(19804112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(19804168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(19804224);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(19804280);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38288].first = 1;
        (*_glb_hdl_sc_channel_map)[38288].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(19804392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(19804448);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(19804504);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(19804560);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38302].first = 1;
        (*_glb_hdl_sc_channel_map)[38302].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38293].first = 3;
        (*_glb_hdl_sc_channel_map)[38293].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38294].first = 1;
        (*_glb_hdl_sc_channel_map)[38294].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(19804784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(19804840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(19804896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(19804952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(19805008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(19805064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(19805120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(19805176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(19805232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(19805288);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(19805344);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38277].first = 1;
        (*_glb_hdl_sc_channel_map)[38277].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38295].first = 3;
        (*_glb_hdl_sc_channel_map)[38295].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38298].first = 3;
        (*_glb_hdl_sc_channel_map)[38298].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38296].first = 1;
        (*_glb_hdl_sc_channel_map)[38296].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38299].first = 1;
        (*_glb_hdl_sc_channel_map)[38299].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(19805680);
        sc_inst_20 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_20->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32315].first = 3;
        (*_glb_hdl_sc_channel_map)[32315].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38361].first = 1;
        (*_glb_hdl_sc_channel_map)[38361].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(19805896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38369].first = 3;
        (*_glb_hdl_sc_channel_map)[38369].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38371].first = 3;
        (*_glb_hdl_sc_channel_map)[38371].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38372].first = 1;
        (*_glb_hdl_sc_channel_map)[38372].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(19806120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(19806176);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(19806232);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38362].first = 1;
        (*_glb_hdl_sc_channel_map)[38362].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32316].first = 3;
        (*_glb_hdl_sc_channel_map)[32316].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38359].first = 1;
        (*_glb_hdl_sc_channel_map)[38359].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(19806456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(19806512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(19806568);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(19806624);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38366].first = 1;
        (*_glb_hdl_sc_channel_map)[38366].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[38321].first = 1;
        (*_glb_hdl_sc_channel_map)[38321].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38322].first = 1;
        (*_glb_hdl_sc_channel_map)[38322].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(19806848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(19806904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(19806960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(19807016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(19807072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(19807128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(19807184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(19807240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(19807296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(19807352);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(19807408);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38341].first = 1;
        (*_glb_hdl_sc_channel_map)[38341].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(19807520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(19807576);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(19807632);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(19807688);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38355].first = 1;
        (*_glb_hdl_sc_channel_map)[38355].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38346].first = 3;
        (*_glb_hdl_sc_channel_map)[38346].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38347].first = 1;
        (*_glb_hdl_sc_channel_map)[38347].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(19807912);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(19807968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(19808024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(19808080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(19808136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(19808192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(19808248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(19808304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(19808360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(19808416);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(19808472);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38330].first = 1;
        (*_glb_hdl_sc_channel_map)[38330].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38348].first = 3;
        (*_glb_hdl_sc_channel_map)[38348].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38351].first = 3;
        (*_glb_hdl_sc_channel_map)[38351].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38349].first = 1;
        (*_glb_hdl_sc_channel_map)[38349].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38352].first = 1;
        (*_glb_hdl_sc_channel_map)[38352].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(19808808);
        sc_inst_21 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_21->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[32313].first = 3;
        (*_glb_hdl_sc_channel_map)[32313].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[38414].first = 1;
        (*_glb_hdl_sc_channel_map)[38414].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(19809024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[38422].first = 3;
        (*_glb_hdl_sc_channel_map)[38422].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[38424].first = 3;
        (*_glb_hdl_sc_channel_map)[38424].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[38425].first = 1;
        (*_glb_hdl_sc_channel_map)[38425].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(19809248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(19809304);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(19809360);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[38415].first = 1;
        (*_glb_hdl_sc_channel_map)[38415].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[32314].first = 3;
        (*_glb_hdl_sc_channel_map)[32314].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[38412].first = 1;
        (*_glb_hdl_sc_channel_map)[38412].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(19809584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(19809640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(19809696);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(19809752);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[38419].first = 1;
        (*_glb_hdl_sc_channel_map)[38419].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[38374].first = 1;
        (*_glb_hdl_sc_channel_map)[38374].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[38375].first = 1;
        (*_glb_hdl_sc_channel_map)[38375].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(19809976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(19810032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(19810088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(19810144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(19810200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(19810256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(19810312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(19810368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(19810424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(19810480);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(19810536);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[38394].first = 1;
        (*_glb_hdl_sc_channel_map)[38394].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(19810648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(19810704);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(19810760);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(19810816);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[38408].first = 1;
        (*_glb_hdl_sc_channel_map)[38408].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[38399].first = 3;
        (*_glb_hdl_sc_channel_map)[38399].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[38400].first = 1;
        (*_glb_hdl_sc_channel_map)[38400].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(19811040);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(19811096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(19811152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(19811208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(19811264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(19811320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(19811376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(19811432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(19811488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(19811544);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(19811600);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[38383].first = 1;
        (*_glb_hdl_sc_channel_map)[38383].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[38401].first = 3;
        (*_glb_hdl_sc_channel_map)[38401].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[38404].first = 3;
        (*_glb_hdl_sc_channel_map)[38404].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[38402].first = 1;
        (*_glb_hdl_sc_channel_map)[38402].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[38405].first = 1;
        (*_glb_hdl_sc_channel_map)[38405].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(19811936);
        sc_inst_22 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_22->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_22_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ui_clk.bind(*p_22_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[38471].first = 1;
        (*_glb_hdl_sc_channel_map)[38471].second.push_front(p_22_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awid.bind(*p_22_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[38444].first = 3;
        (*_glb_hdl_sc_channel_map)[38444].second.push_front(p_22_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_awaddr.bind(*p_22_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[38441].first = 3;
        (*_glb_hdl_sc_channel_map)[38441].second.push_front(p_22_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_awlen.bind(*p_22_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[38445].first = 3;
        (*_glb_hdl_sc_channel_map)[38445].second.push_front(p_22_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awsize.bind(*p_22_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[38450].first = 3;
        (*_glb_hdl_sc_channel_map)[38450].second.push_front(p_22_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_awburst.bind(*p_22_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[38442].first = 3;
        (*_glb_hdl_sc_channel_map)[38442].second.push_front(p_22_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awlock.bind(*p_22_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[38446].first = 1;
        (*_glb_hdl_sc_channel_map)[38446].second.push_front(p_22_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awcache.bind(*p_22_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[38443].first = 3;
        (*_glb_hdl_sc_channel_map)[38443].second.push_front(p_22_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awprot.bind(*p_22_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[38447].first = 3;
        (*_glb_hdl_sc_channel_map)[38447].second.push_front(p_22_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awregion.bind(*p_22_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[32311].first = 3;
        (*_glb_hdl_sc_channel_map)[32311].second.push_front(p_22_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awqos.bind(*p_22_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[38448].first = 3;
        (*_glb_hdl_sc_channel_map)[38448].second.push_front(p_22_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awuser.bind(*p_22_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[38451].first = 3;
        (*_glb_hdl_sc_channel_map)[38451].second.push_front(p_22_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awvalid.bind(*p_22_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[38452].first = 1;
        (*_glb_hdl_sc_channel_map)[38452].second.push_front(p_22_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awready.bind(*p_22_c0_ddr_saxi_awready);
        p_22_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(19812768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_wdata.bind(*p_22_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[38465].first = 3;
        (*_glb_hdl_sc_channel_map)[38465].second.push_front(p_22_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->c0_ddr_saxi_wstrb.bind(*p_22_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[38468].first = 3;
        (*_glb_hdl_sc_channel_map)[38468].second.push_front(p_22_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wlast.bind(*p_22_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[38466].first = 1;
        (*_glb_hdl_sc_channel_map)[38466].second.push_front(p_22_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_wuser.bind(*p_22_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[38469].first = 3;
        (*_glb_hdl_sc_channel_map)[38469].second.push_front(p_22_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wvalid.bind(*p_22_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[38470].first = 1;
        (*_glb_hdl_sc_channel_map)[38470].second.push_front(p_22_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wready.bind(*p_22_c0_ddr_saxi_wready);
        p_22_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(19813104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_bid.bind(*p_22_c0_ddr_saxi_bid);
        p_22_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(19813160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_bresp.bind(*p_22_c0_ddr_saxi_bresp);
        p_22_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(19813216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_buser.bind(*p_22_c0_ddr_saxi_buser);
        p_22_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(19813272);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bvalid.bind(*p_22_c0_ddr_saxi_bvalid);
        p_22_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(19813328);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bready.bind(*p_22_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[38454].first = 1;
        (*_glb_hdl_sc_channel_map)[38454].second.push_front(p_22_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_arid.bind(*p_22_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[38432].first = 3;
        (*_glb_hdl_sc_channel_map)[38432].second.push_front(p_22_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_araddr.bind(*p_22_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[38428].first = 3;
        (*_glb_hdl_sc_channel_map)[38428].second.push_front(p_22_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_arlen.bind(*p_22_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[38433].first = 3;
        (*_glb_hdl_sc_channel_map)[38433].second.push_front(p_22_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arsize.bind(*p_22_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[38438].first = 3;
        (*_glb_hdl_sc_channel_map)[38438].second.push_front(p_22_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_arburst.bind(*p_22_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[38429].first = 3;
        (*_glb_hdl_sc_channel_map)[38429].second.push_front(p_22_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arlock.bind(*p_22_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[38434].first = 1;
        (*_glb_hdl_sc_channel_map)[38434].second.push_front(p_22_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arcache.bind(*p_22_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[38430].first = 3;
        (*_glb_hdl_sc_channel_map)[38430].second.push_front(p_22_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arprot.bind(*p_22_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[38435].first = 3;
        (*_glb_hdl_sc_channel_map)[38435].second.push_front(p_22_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arregion.bind(*p_22_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[32312].first = 3;
        (*_glb_hdl_sc_channel_map)[32312].second.push_front(p_22_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arqos.bind(*p_22_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[38436].first = 3;
        (*_glb_hdl_sc_channel_map)[38436].second.push_front(p_22_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_aruser.bind(*p_22_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[38439].first = 3;
        (*_glb_hdl_sc_channel_map)[38439].second.push_front(p_22_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arvalid.bind(*p_22_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[38440].first = 1;
        (*_glb_hdl_sc_channel_map)[38440].second.push_front(p_22_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arready.bind(*p_22_c0_ddr_saxi_arready);
        p_22_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(19814112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_rid.bind(*p_22_c0_ddr_saxi_rid);
        p_22_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(19814168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_rdata.bind(*p_22_c0_ddr_saxi_rdata);
        p_22_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(19814224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_rresp.bind(*p_22_c0_ddr_saxi_rresp);
        p_22_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(19814280);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rlast.bind(*p_22_c0_ddr_saxi_rlast);
        p_22_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(19814336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_ruser.bind(*p_22_c0_ddr_saxi_ruser);
        p_22_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(19814392);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rvalid.bind(*p_22_c0_ddr_saxi_rvalid);
        p_22_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(19814448);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rready.bind(*p_22_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[38461].first = 1;
        (*_glb_hdl_sc_channel_map)[38461].second.push_front(p_22_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aclk.bind(*p_22_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[38427].first = 1;
        (*_glb_hdl_sc_channel_map)[38427].second.push_front(p_22_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aresetn.bind(*p_22_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[38431].first = 1;
        (*_glb_hdl_sc_channel_map)[38431].second.push_front(p_22_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_awid.bind(*p_22_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[32295].first = 3;
        (*_glb_hdl_sc_channel_map)[32295].second.push_front(p_22_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awaddr.bind(*p_22_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[32298].first = 3;
        (*_glb_hdl_sc_channel_map)[32298].second.push_front(p_22_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_awlen.bind(*p_22_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[32294].first = 3;
        (*_glb_hdl_sc_channel_map)[32294].second.push_front(p_22_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awsize.bind(*p_22_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[32289].first = 3;
        (*_glb_hdl_sc_channel_map)[32289].second.push_front(p_22_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_awburst.bind(*p_22_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[32297].first = 3;
        (*_glb_hdl_sc_channel_map)[32297].second.push_front(p_22_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awlock.bind(*p_22_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[32293].first = 1;
        (*_glb_hdl_sc_channel_map)[32293].second.push_front(p_22_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awcache.bind(*p_22_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[32296].first = 3;
        (*_glb_hdl_sc_channel_map)[32296].second.push_front(p_22_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awprot.bind(*p_22_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[32292].first = 3;
        (*_glb_hdl_sc_channel_map)[32292].second.push_front(p_22_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awregion.bind(*p_22_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[32290].first = 3;
        (*_glb_hdl_sc_channel_map)[32290].second.push_front(p_22_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awqos.bind(*p_22_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[32291].first = 3;
        (*_glb_hdl_sc_channel_map)[32291].second.push_front(p_22_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awuser.bind(*p_22_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[32288].first = 3;
        (*_glb_hdl_sc_channel_map)[32288].second.push_front(p_22_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awvalid.bind(*p_22_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[32287].first = 1;
        (*_glb_hdl_sc_channel_map)[32287].second.push_front(p_22_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awready.bind(*p_22_s_xdma_axi_awready);
        p_22_s_xdma_axi_awready->set_sv_netview_offsetfromdp(19815344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_wdata.bind(*p_22_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[32284].first = 3;
        (*_glb_hdl_sc_channel_map)[32284].second.push_front(p_22_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_wstrb.bind(*p_22_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[32282].first = 3;
        (*_glb_hdl_sc_channel_map)[32282].second.push_front(p_22_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wlast.bind(*p_22_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[32283].first = 1;
        (*_glb_hdl_sc_channel_map)[32283].second.push_front(p_22_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_wuser.bind(*p_22_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[32281].first = 3;
        (*_glb_hdl_sc_channel_map)[32281].second.push_front(p_22_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wvalid.bind(*p_22_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[32280].first = 1;
        (*_glb_hdl_sc_channel_map)[32280].second.push_front(p_22_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wready.bind(*p_22_s_xdma_axi_wready);
        p_22_s_xdma_axi_wready->set_sv_netview_offsetfromdp(19815680);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_bid.bind(*p_22_s_xdma_axi_bid);
        p_22_s_xdma_axi_bid->set_sv_netview_offsetfromdp(19815736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_bresp.bind(*p_22_s_xdma_axi_bresp);
        p_22_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(19815792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_buser.bind(*p_22_s_xdma_axi_buser);
        p_22_s_xdma_axi_buser->set_sv_netview_offsetfromdp(19815848);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bvalid.bind(*p_22_s_xdma_axi_bvalid);
        p_22_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(19815904);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bready.bind(*p_22_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[32286].first = 1;
        (*_glb_hdl_sc_channel_map)[32286].second.push_front(p_22_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_arid.bind(*p_22_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[32307].first = 3;
        (*_glb_hdl_sc_channel_map)[32307].second.push_front(p_22_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_araddr.bind(*p_22_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[32310].first = 3;
        (*_glb_hdl_sc_channel_map)[32310].second.push_front(p_22_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_arlen.bind(*p_22_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[32306].first = 3;
        (*_glb_hdl_sc_channel_map)[32306].second.push_front(p_22_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arsize.bind(*p_22_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[32301].first = 3;
        (*_glb_hdl_sc_channel_map)[32301].second.push_front(p_22_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_arburst.bind(*p_22_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[32309].first = 3;
        (*_glb_hdl_sc_channel_map)[32309].second.push_front(p_22_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arlock.bind(*p_22_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[32305].first = 1;
        (*_glb_hdl_sc_channel_map)[32305].second.push_front(p_22_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arcache.bind(*p_22_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[32308].first = 3;
        (*_glb_hdl_sc_channel_map)[32308].second.push_front(p_22_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arprot.bind(*p_22_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[32304].first = 3;
        (*_glb_hdl_sc_channel_map)[32304].second.push_front(p_22_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arregion.bind(*p_22_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[32302].first = 3;
        (*_glb_hdl_sc_channel_map)[32302].second.push_front(p_22_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arqos.bind(*p_22_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[32303].first = 3;
        (*_glb_hdl_sc_channel_map)[32303].second.push_front(p_22_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_aruser.bind(*p_22_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[32300].first = 3;
        (*_glb_hdl_sc_channel_map)[32300].second.push_front(p_22_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arvalid.bind(*p_22_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[32299].first = 1;
        (*_glb_hdl_sc_channel_map)[32299].second.push_front(p_22_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arready.bind(*p_22_s_xdma_axi_arready);
        p_22_s_xdma_axi_arready->set_sv_netview_offsetfromdp(19816688);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_rid.bind(*p_22_s_xdma_axi_rid);
        p_22_s_xdma_axi_rid->set_sv_netview_offsetfromdp(19816744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_rdata.bind(*p_22_s_xdma_axi_rdata);
        p_22_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(19816800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_rresp.bind(*p_22_s_xdma_axi_rresp);
        p_22_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(19816856);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rlast.bind(*p_22_s_xdma_axi_rlast);
        p_22_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(19816912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_ruser.bind(*p_22_s_xdma_axi_ruser);
        p_22_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(19816968);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rvalid.bind(*p_22_s_xdma_axi_rvalid);
        p_22_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(19817024);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rready.bind(*p_22_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[32285].first = 1;
        (*_glb_hdl_sc_channel_map)[32285].second.push_front(p_22_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aclk.bind(*p_22_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[38472].first = 1;
        (*_glb_hdl_sc_channel_map)[38472].second.push_front(p_22_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aresetn.bind(*p_22_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[38473].first = 1;
        (*_glb_hdl_sc_channel_map)[38473].second.push_front(p_22_s_xdma_axi_aresetn);
        sc_inst_23 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_23->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_awid.bind(*p_23_m_aximm_awid);
        p_23_m_aximm_awid->set_sv_netview_offsetfromdp(19817296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_awaddr.bind(*p_23_m_aximm_awaddr);
        p_23_m_aximm_awaddr->set_sv_netview_offsetfromdp(19817352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_awlen.bind(*p_23_m_aximm_awlen);
        p_23_m_aximm_awlen->set_sv_netview_offsetfromdp(19817408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awsize.bind(*p_23_m_aximm_awsize);
        p_23_m_aximm_awsize->set_sv_netview_offsetfromdp(19817464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_awburst.bind(*p_23_m_aximm_awburst);
        p_23_m_aximm_awburst->set_sv_netview_offsetfromdp(19817520);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awlock.bind(*p_23_m_aximm_awlock);
        p_23_m_aximm_awlock->set_sv_netview_offsetfromdp(19817576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awcache.bind(*p_23_m_aximm_awcache);
        p_23_m_aximm_awcache->set_sv_netview_offsetfromdp(19817632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awprot.bind(*p_23_m_aximm_awprot);
        p_23_m_aximm_awprot->set_sv_netview_offsetfromdp(19817688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awqos.bind(*p_23_m_aximm_awqos);
        p_23_m_aximm_awqos->set_sv_netview_offsetfromdp(19817744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_awuser.bind(*p_23_m_aximm_awuser);
        p_23_m_aximm_awuser->set_sv_netview_offsetfromdp(19817800);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awvalid.bind(*p_23_m_aximm_awvalid);
        p_23_m_aximm_awvalid->set_sv_netview_offsetfromdp(19817856);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awready.bind(*p_23_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[38529].first = 1;
        (*_glb_hdl_sc_channel_map)[38529].second.push_front(p_23_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_wdata.bind(*p_23_m_aximm_wdata);
        p_23_m_aximm_wdata->set_sv_netview_offsetfromdp(19817968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_wstrb.bind(*p_23_m_aximm_wstrb);
        p_23_m_aximm_wstrb->set_sv_netview_offsetfromdp(19818024);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wlast.bind(*p_23_m_aximm_wlast);
        p_23_m_aximm_wlast->set_sv_netview_offsetfromdp(19818080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_wuser.bind(*p_23_m_aximm_wuser);
        p_23_m_aximm_wuser->set_sv_netview_offsetfromdp(19818136);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wvalid.bind(*p_23_m_aximm_wvalid);
        p_23_m_aximm_wvalid->set_sv_netview_offsetfromdp(19818192);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wready.bind(*p_23_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[38544].first = 1;
        (*_glb_hdl_sc_channel_map)[38544].second.push_front(p_23_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_bid.bind(*p_23_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[38532].first = 3;
        (*_glb_hdl_sc_channel_map)[38532].second.push_front(p_23_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_bresp.bind(*p_23_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[38534].first = 3;
        (*_glb_hdl_sc_channel_map)[38534].second.push_front(p_23_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_buser.bind(*p_23_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[32279].first = 3;
        (*_glb_hdl_sc_channel_map)[32279].second.push_front(p_23_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bvalid.bind(*p_23_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[38535].first = 1;
        (*_glb_hdl_sc_channel_map)[38535].second.push_front(p_23_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bready.bind(*p_23_m_aximm_bready);
        p_23_m_aximm_bready->set_sv_netview_offsetfromdp(19818528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_arid.bind(*p_23_m_aximm_arid);
        p_23_m_aximm_arid->set_sv_netview_offsetfromdp(19818584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_araddr.bind(*p_23_m_aximm_araddr);
        p_23_m_aximm_araddr->set_sv_netview_offsetfromdp(19818640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_arlen.bind(*p_23_m_aximm_arlen);
        p_23_m_aximm_arlen->set_sv_netview_offsetfromdp(19818696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arsize.bind(*p_23_m_aximm_arsize);
        p_23_m_aximm_arsize->set_sv_netview_offsetfromdp(19818752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_arburst.bind(*p_23_m_aximm_arburst);
        p_23_m_aximm_arburst->set_sv_netview_offsetfromdp(19818808);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arlock.bind(*p_23_m_aximm_arlock);
        p_23_m_aximm_arlock->set_sv_netview_offsetfromdp(19818864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arcache.bind(*p_23_m_aximm_arcache);
        p_23_m_aximm_arcache->set_sv_netview_offsetfromdp(19818920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arprot.bind(*p_23_m_aximm_arprot);
        p_23_m_aximm_arprot->set_sv_netview_offsetfromdp(19818976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arqos.bind(*p_23_m_aximm_arqos);
        p_23_m_aximm_arqos->set_sv_netview_offsetfromdp(19819032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_aruser.bind(*p_23_m_aximm_aruser);
        p_23_m_aximm_aruser->set_sv_netview_offsetfromdp(19819088);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arvalid.bind(*p_23_m_aximm_arvalid);
        p_23_m_aximm_arvalid->set_sv_netview_offsetfromdp(19819144);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arready.bind(*p_23_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[38518].first = 1;
        (*_glb_hdl_sc_channel_map)[38518].second.push_front(p_23_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_rid.bind(*p_23_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[38537].first = 3;
        (*_glb_hdl_sc_channel_map)[38537].second.push_front(p_23_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_rdata.bind(*p_23_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[38536].first = 3;
        (*_glb_hdl_sc_channel_map)[38536].second.push_front(p_23_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_rresp.bind(*p_23_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[38540].first = 3;
        (*_glb_hdl_sc_channel_map)[38540].second.push_front(p_23_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rlast.bind(*p_23_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[38538].first = 1;
        (*_glb_hdl_sc_channel_map)[38538].second.push_front(p_23_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_ruser.bind(*p_23_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[32278].first = 3;
        (*_glb_hdl_sc_channel_map)[32278].second.push_front(p_23_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rvalid.bind(*p_23_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[38541].first = 1;
        (*_glb_hdl_sc_channel_map)[38541].second.push_front(p_23_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rready.bind(*p_23_m_aximm_rready);
        p_23_m_aximm_rready->set_sv_netview_offsetfromdp(19819592);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aclk.bind(*p_23_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[38508].first = 1;
        (*_glb_hdl_sc_channel_map)[38508].second.push_front(p_23_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aresetn.bind(*p_23_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[38512].first = 1;
        (*_glb_hdl_sc_channel_map)[38512].second.push_front(p_23_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_awaddr.bind(*p_23_m_axictrl_awaddr);
        p_23_m_axictrl_awaddr->set_sv_netview_offsetfromdp(19819760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_awprot.bind(*p_23_m_axictrl_awprot);
        p_23_m_axictrl_awprot->set_sv_netview_offsetfromdp(19819816);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awvalid.bind(*p_23_m_axictrl_awvalid);
        p_23_m_axictrl_awvalid->set_sv_netview_offsetfromdp(19819872);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awready.bind(*p_23_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[38495].first = 1;
        (*_glb_hdl_sc_channel_map)[38495].second.push_front(p_23_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_wdata.bind(*p_23_m_axictrl_wdata);
        p_23_m_axictrl_wdata->set_sv_netview_offsetfromdp(19819984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axictrl_wstrb.bind(*p_23_m_axictrl_wstrb);
        p_23_m_axictrl_wstrb->set_sv_netview_offsetfromdp(19820040);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wvalid.bind(*p_23_m_axictrl_wvalid);
        p_23_m_axictrl_wvalid->set_sv_netview_offsetfromdp(19820096);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wready.bind(*p_23_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[38505].first = 1;
        (*_glb_hdl_sc_channel_map)[38505].second.push_front(p_23_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_bresp.bind(*p_23_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[38498].first = 3;
        (*_glb_hdl_sc_channel_map)[38498].second.push_front(p_23_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bvalid.bind(*p_23_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[38499].first = 1;
        (*_glb_hdl_sc_channel_map)[38499].second.push_front(p_23_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bready.bind(*p_23_m_axictrl_bready);
        p_23_m_axictrl_bready->set_sv_netview_offsetfromdp(19820320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_araddr.bind(*p_23_m_axictrl_araddr);
        p_23_m_axictrl_araddr->set_sv_netview_offsetfromdp(19820376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_arprot.bind(*p_23_m_axictrl_arprot);
        p_23_m_axictrl_arprot->set_sv_netview_offsetfromdp(19820432);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arvalid.bind(*p_23_m_axictrl_arvalid);
        p_23_m_axictrl_arvalid->set_sv_netview_offsetfromdp(19820488);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arready.bind(*p_23_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[38491].first = 1;
        (*_glb_hdl_sc_channel_map)[38491].second.push_front(p_23_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_rdata.bind(*p_23_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[38500].first = 3;
        (*_glb_hdl_sc_channel_map)[38500].second.push_front(p_23_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_rresp.bind(*p_23_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[38502].first = 3;
        (*_glb_hdl_sc_channel_map)[38502].second.push_front(p_23_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rvalid.bind(*p_23_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[38503].first = 1;
        (*_glb_hdl_sc_channel_map)[38503].second.push_front(p_23_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rready.bind(*p_23_m_axictrl_rready);
        p_23_m_axictrl_rready->set_sv_netview_offsetfromdp(19820768);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aclk.bind(*p_23_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[38487].first = 1;
        (*_glb_hdl_sc_channel_map)[38487].second.push_front(p_23_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aresetn.bind(*p_23_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[38489].first = 1;
        (*_glb_hdl_sc_channel_map)[38489].second.push_front(p_23_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
    }
