dbg_puts "----------------------------------------------------------------------"
dbg_puts "BEGIN: GENERATE_CLOCK_ASSOCIATIONS"

# ----------------------------------------------------------------------
# Automate clock associations
#
# Determine which aclk input is used by each of the *_AXI* interfaces

foreach clock_port [get_bd_ports aclk*] {
  set clock_key [get_clock_key $clock_port]
  dict set clock_definitions [get_property NAME $clock_port] $clock_key
  dict set clock_key_map $clock_key $clock_port  
}

dbg_puts "clock_definitions: $clock_definitions"
dbg_puts "clock_key_map: $clock_key_map"

foreach si [get_bd_intf_ports -filter {VLNV=~*aximm_rtl*}] {
  set si_name [get_property NAME $si]

  if {[dict exists $CONFIG si_clk_keys_info $si_name]} {
    set clock_key [dict get $CONFIG si_clk_keys_info [get_property NAME $si]]

    set clock_source [dict get $clock_key_map $clock_key]
    regexp {(\d\d)} $si {} idx

    set clock_port_name [get_property NAME $clock_source]
    set si_name [get_property NAME $si]

    if {![dict exists $clock_associations $si_name]} {
      dict set clock_associations $si_name $clock_port_name
      dict lappend clock_associations $clock_port_name $si_name
    } else {
      dbg_puts "$si_name is synchronous to $clock_port_name but was already associated to [dict get $clock_associations $si_name].  Probable repeat connection of same clock source to different aclk inputs"
    }

  } else {
    dbg_puts "No clock association was found for $si_name - is the port connected?"
  }

}

foreach clock_port [get_bd_ports aclk*] {
  set clock_port_name [get_property NAME $clock_port]
  set associated_busifs {}
  if {[dict exists $clock_associations $clock_port_name]} {
    set clock_port_associations [dict get $clock_associations $clock_port_name]
    set si_ports [lsearch -all -inline -glob $clock_port_associations {*_AXI*}]
    set associated_busifs [join $si_ports :]
  }
  dbg_puts "Updating associated clocks on $clock_port to: $associated_busifs"
  set_property CONFIG.ASSOCIATED_BUSIF $associated_busifs $clock_port
  dbg_puts "Readback: [get_property CONFIG.ASSOCIATED_BUSIF $clock_port]"
}

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# TODO: fix glob above to avoid MON
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
if {[dict get $CONFIG enable_monitor_ports]} {
  # Monitor interfaces are syncronous to the DDR UI clock outputs:
  foreach mon [get_bd_intf_ports MON*_AXI] {
    regexp {(\d\d)} $mon {} idx
    set_property CONFIG.ASSOCIATED_BUSIF [get_property NAME $mon] [get_bd_ports ddr4_mem${idx}_ui_clk]
  }
}

dbg_brk
dbg_puts "Clock Definitions:"
set formatstr "%10s %10s %10s %s"
dbg_puts [format $formatstr Port FREQ_HZ PHASE CLK_DOMAIN]
foreach clock_port_name [lsort [dict keys $clock_definitions]] {
  dbg_puts [format $formatstr $clock_port_name {*}[split [ dict get $clock_definitions $clock_port_name] :]]
}
dbg_brk
set formatstr "%10s %10s %10s %10s %s"
dbg_puts [format $formatstr Intf Clock_port FREQ_HZ PHASE CLK_DOMAIN]
foreach intf_name [lsort [dict keys $clock_associations *AXI*]] {
  set clock_port_name [dict get $clock_associations $intf_name]
  dbg_puts [format $formatstr $intf_name $clock_port_name {*}[split [ dict get $clock_definitions $clock_port_name] :]]
}
dbg_brk
dbg_puts "clock_associations: $clock_associations"
dbg_puts "clock_definitions: $clock_definitions"

dbg_puts "END: GENERATE_CLOCK_ASSOCIATIONS"
dbg_puts "----------------------------------------------------------------------"
