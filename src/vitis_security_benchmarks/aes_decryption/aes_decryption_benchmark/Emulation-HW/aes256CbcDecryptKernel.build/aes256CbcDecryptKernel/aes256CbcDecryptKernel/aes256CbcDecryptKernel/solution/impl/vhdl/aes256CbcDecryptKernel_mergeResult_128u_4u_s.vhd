-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes256CbcDecryptKernel_mergeResult_128u_4u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    msgNumStrm_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    msgNumStrm_empty_n : IN STD_LOGIC;
    msgNumStrm_read : OUT STD_LOGIC;
    taskNumStrm_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    taskNumStrm_empty_n : IN STD_LOGIC;
    taskNumStrm_read : OUT STD_LOGIC;
    outStrm_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    outStrm_full_n : IN STD_LOGIC;
    outStrm_write : OUT STD_LOGIC;
    burstLenStrm_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    burstLenStrm_full_n : IN STD_LOGIC;
    burstLenStrm_write : OUT STD_LOGIC;
    textStrm_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textStrm_V_V_empty_n : IN STD_LOGIC;
    textStrm_V_V_read : OUT STD_LOGIC;
    textStrm_1_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textStrm_1_V_V_empty_n : IN STD_LOGIC;
    textStrm_1_V_V_read : OUT STD_LOGIC;
    textStrm_2_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textStrm_2_V_V_empty_n : IN STD_LOGIC;
    textStrm_2_V_V_read : OUT STD_LOGIC;
    textStrm_3_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    textStrm_3_V_V_empty_n : IN STD_LOGIC;
    textStrm_3_V_V_read : OUT STD_LOGIC;
    endTextStrm_V_dout : IN STD_LOGIC;
    endTextStrm_V_empty_n : IN STD_LOGIC;
    endTextStrm_V_read : OUT STD_LOGIC;
    endTextStrm_1_V_dout : IN STD_LOGIC;
    endTextStrm_1_V_empty_n : IN STD_LOGIC;
    endTextStrm_1_V_read : OUT STD_LOGIC;
    endTextStrm_2_V_dout : IN STD_LOGIC;
    endTextStrm_2_V_empty_n : IN STD_LOGIC;
    endTextStrm_2_V_read : OUT STD_LOGIC;
    endTextStrm_3_V_dout : IN STD_LOGIC;
    endTextStrm_3_V_empty_n : IN STD_LOGIC;
    endTextStrm_3_V_read : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of aes256CbcDecryptKernel_mergeResult_128u_4u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal msgNumStrm_blk_n : STD_LOGIC;
    signal taskNumStrm_blk_n : STD_LOGIC;
    signal outStrm_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal burstLenStrm_blk_n : STD_LOGIC;
    signal icmp_ln311_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln882_1_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal textStrm_V_V_blk_n : STD_LOGIC;
    signal textStrm_1_V_V_blk_n : STD_LOGIC;
    signal textStrm_2_V_V_blk_n : STD_LOGIC;
    signal textStrm_3_V_V_blk_n : STD_LOGIC;
    signal endTextStrm_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal endTextStrm_1_V_blk_n : STD_LOGIC;
    signal endTextStrm_2_V_blk_n : STD_LOGIC;
    signal endTextStrm_3_V_blk_n : STD_LOGIC;
    signal empty_57_reg_171 : STD_LOGIC_VECTOR (63 downto 0);
    signal msgNum_V_reg_255 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal taskNum_V_reg_260 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_op41_write_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal add_ln695_fu_202_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln695_reg_279 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln284_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln695_2_fu_219_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln311_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal empty_reg_160 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal burstLen_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal burstLen_1_fu_231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln882_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    burstLen_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln311_fu_225_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln284_fu_214_p2 = ap_const_lv1_0))) then 
                burstLen_fu_80 <= burstLen_1_fu_231_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln311_fu_225_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln284_fu_214_p2 = ap_const_lv1_0)))) then 
                burstLen_fu_80 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    empty_57_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln284_fu_214_p2 = ap_const_lv1_0))) then 
                empty_57_reg_171 <= add_ln695_2_fu_219_p2;
            elsif ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_0))) then 
                empty_57_reg_171 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    empty_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                empty_reg_160 <= ap_const_lv64_0;
            elsif ((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                empty_reg_160 <= add_ln695_reg_279;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln695_reg_279 <= add_ln695_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln284_fu_214_p2 = ap_const_lv1_0))) then
                icmp_ln311_reg_296 <= icmp_ln311_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                msgNum_V_reg_255 <= msgNumStrm_dout;
                taskNum_V_reg_260 <= taskNumStrm_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n, burstLenStrm_full_n, endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_CS_fsm_state3, icmp_ln882_1_fu_197_p2, ap_CS_fsm_state7, ap_CS_fsm_state6, ap_predicate_op41_write_state3, icmp_ln284_fu_214_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln882_fu_191_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln882_fu_191_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln882_fu_191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln284_fu_214_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln284_fu_214_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln695_2_fu_219_p2 <= std_logic_vector(unsigned(empty_57_reg_171) + unsigned(ap_const_lv64_1));
    add_ln695_fu_202_p2 <= std_logic_vector(unsigned(empty_reg_160) + unsigned(ap_const_lv64_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(outStrm_full_n, burstLenStrm_full_n, textStrm_V_V_empty_n, textStrm_1_V_V_empty_n, textStrm_2_V_V_empty_n, textStrm_3_V_V_empty_n, endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln311_reg_296)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0) or (textStrm_3_V_V_empty_n = ap_const_logic_0) or (textStrm_2_V_V_empty_n = ap_const_logic_0) or (textStrm_1_V_V_empty_n = ap_const_logic_0) or (textStrm_V_V_empty_n = ap_const_logic_0) or (outStrm_full_n = ap_const_logic_0) or ((icmp_ln311_reg_296 = ap_const_lv1_1) and (burstLenStrm_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(outStrm_full_n, burstLenStrm_full_n, textStrm_V_V_empty_n, textStrm_1_V_V_empty_n, textStrm_2_V_V_empty_n, textStrm_3_V_V_empty_n, endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln311_reg_296)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0) or (textStrm_3_V_V_empty_n = ap_const_logic_0) or (textStrm_2_V_V_empty_n = ap_const_logic_0) or (textStrm_1_V_V_empty_n = ap_const_logic_0) or (textStrm_V_V_empty_n = ap_const_logic_0) or (outStrm_full_n = ap_const_logic_0) or ((icmp_ln311_reg_296 = ap_const_lv1_1) and (burstLenStrm_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(outStrm_full_n, burstLenStrm_full_n, textStrm_V_V_empty_n, textStrm_1_V_V_empty_n, textStrm_2_V_V_empty_n, textStrm_3_V_V_empty_n, endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln311_reg_296)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0) or (textStrm_3_V_V_empty_n = ap_const_logic_0) or (textStrm_2_V_V_empty_n = ap_const_logic_0) or (textStrm_1_V_V_empty_n = ap_const_logic_0) or (textStrm_V_V_empty_n = ap_const_logic_0) or (outStrm_full_n = ap_const_logic_0) or ((icmp_ln311_reg_296 = ap_const_lv1_1) and (burstLenStrm_full_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, msgNumStrm_empty_n, taskNumStrm_empty_n)
    begin
                ap_block_state1 <= ((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(burstLenStrm_full_n, ap_predicate_op41_write_state3)
    begin
                ap_block_state3 <= ((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(outStrm_full_n, burstLenStrm_full_n, textStrm_V_V_empty_n, textStrm_1_V_V_empty_n, textStrm_2_V_V_empty_n, textStrm_3_V_V_empty_n, endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, icmp_ln311_reg_296)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0) or (textStrm_3_V_V_empty_n = ap_const_logic_0) or (textStrm_2_V_V_empty_n = ap_const_logic_0) or (textStrm_1_V_V_empty_n = ap_const_logic_0) or (textStrm_V_V_empty_n = ap_const_logic_0) or (outStrm_full_n = ap_const_logic_0) or ((icmp_ln311_reg_296 = ap_const_lv1_1) and (burstLenStrm_full_n = ap_const_logic_0)));
    end process;


    ap_block_state6_assign_proc : process(endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n)
    begin
                ap_block_state6 <= ((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln284_fu_214_p2)
    begin
        if ((icmp_ln284_fu_214_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, burstLenStrm_full_n, ap_CS_fsm_state7)
    begin
        if (((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (textStrm_V_V_blk_n and textStrm_3_V_V_blk_n and textStrm_2_V_V_blk_n and textStrm_1_V_V_blk_n and taskNumStrm_blk_n and outStrm_blk_n and msgNumStrm_blk_n and endTextStrm_V_blk_n and endTextStrm_3_V_blk_n and endTextStrm_2_V_blk_n and endTextStrm_1_V_blk_n and burstLenStrm_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_predicate_op41_write_state3_assign_proc : process(icmp_ln882_1_fu_197_p2, icmp_ln327_fu_208_p2)
    begin
                ap_predicate_op41_write_state3 <= ((icmp_ln327_fu_208_p2 = ap_const_lv1_0) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(burstLenStrm_full_n, ap_CS_fsm_state7)
    begin
        if (((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    burstLenStrm_blk_n_assign_proc : process(burstLenStrm_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln311_reg_296, ap_CS_fsm_state3, icmp_ln882_1_fu_197_p2, icmp_ln327_fu_208_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln311_reg_296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln327_fu_208_p2 = ap_const_lv1_0) and (icmp_ln882_1_fu_197_p2 = ap_const_lv1_1)))) then 
            burstLenStrm_blk_n <= burstLenStrm_full_n;
        else 
            burstLenStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    burstLenStrm_din_assign_proc : process(burstLenStrm_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln311_reg_296, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_predicate_op41_write_state3, burstLen_fu_80, ap_block_pp0_stage0_01001)
    begin
        if (((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            burstLenStrm_din <= ap_const_lv32_0;
        elsif (((icmp_ln311_reg_296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            burstLenStrm_din <= ap_const_lv32_80;
        elsif ((not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) then 
            burstLenStrm_din <= burstLen_fu_80;
        else 
            burstLenStrm_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    burstLenStrm_write_assign_proc : process(burstLenStrm_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln311_reg_296, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_predicate_op41_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln311_reg_296 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((burstLenStrm_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((burstLenStrm_full_n = ap_const_logic_0) and (ap_predicate_op41_write_state3 = ap_const_boolean_1))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_predicate_op41_write_state3 = ap_const_boolean_1)))) then 
            burstLenStrm_write <= ap_const_logic_1;
        else 
            burstLenStrm_write <= ap_const_logic_0;
        end if; 
    end process;

    burstLen_1_fu_231_p2 <= std_logic_vector(unsigned(burstLen_fu_80) + unsigned(ap_const_lv32_1));

    endTextStrm_1_V_blk_n_assign_proc : process(endTextStrm_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_1_V_blk_n <= endTextStrm_1_V_empty_n;
        else 
            endTextStrm_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_1_V_read_assign_proc : process(endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, ap_block_pp0_stage0_11001)
    begin
        if (((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_1_V_read <= ap_const_logic_1;
        else 
            endTextStrm_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_2_V_blk_n_assign_proc : process(endTextStrm_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_2_V_blk_n <= endTextStrm_2_V_empty_n;
        else 
            endTextStrm_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_2_V_read_assign_proc : process(endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, ap_block_pp0_stage0_11001)
    begin
        if (((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_2_V_read <= ap_const_logic_1;
        else 
            endTextStrm_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_3_V_blk_n_assign_proc : process(endTextStrm_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_3_V_blk_n <= endTextStrm_3_V_empty_n;
        else 
            endTextStrm_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_3_V_read_assign_proc : process(endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, ap_block_pp0_stage0_11001)
    begin
        if (((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_3_V_read <= ap_const_logic_1;
        else 
            endTextStrm_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    endTextStrm_V_blk_n_assign_proc : process(endTextStrm_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_V_blk_n <= endTextStrm_V_empty_n;
        else 
            endTextStrm_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    endTextStrm_V_read_assign_proc : process(endTextStrm_V_empty_n, endTextStrm_1_V_empty_n, endTextStrm_2_V_empty_n, endTextStrm_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6, ap_block_pp0_stage0_11001)
    begin
        if (((not(((endTextStrm_3_V_empty_n = ap_const_logic_0) or (endTextStrm_2_V_empty_n = ap_const_logic_0) or (endTextStrm_1_V_empty_n = ap_const_logic_0) or (endTextStrm_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            endTextStrm_V_read <= ap_const_logic_1;
        else 
            endTextStrm_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln284_fu_214_p2 <= "1" when (empty_57_reg_171 = msgNum_V_reg_255) else "0";
    icmp_ln311_fu_225_p2 <= "1" when (burstLen_fu_80 = ap_const_lv32_7F) else "0";
    icmp_ln327_fu_208_p2 <= "1" when (burstLen_fu_80 = ap_const_lv32_0) else "0";
    icmp_ln882_1_fu_197_p2 <= "1" when (empty_reg_160 = taskNum_V_reg_260) else "0";
    icmp_ln882_fu_191_p2 <= "1" when (taskNumStrm_dout = ap_const_lv64_0) else "0";

    msgNumStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            msgNumStrm_blk_n <= msgNumStrm_empty_n;
        else 
            msgNumStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    msgNumStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n)
    begin
        if ((not(((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            msgNumStrm_read <= ap_const_logic_1;
        else 
            msgNumStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    outStrm_blk_n_assign_proc : process(outStrm_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outStrm_blk_n <= outStrm_full_n;
        else 
            outStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStrm_din <= (((textStrm_3_V_V_dout & textStrm_2_V_V_dout) & textStrm_1_V_V_dout) & textStrm_V_V_dout);

    outStrm_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outStrm_write <= ap_const_logic_1;
        else 
            outStrm_write <= ap_const_logic_0;
        end if; 
    end process;


    taskNumStrm_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, taskNumStrm_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskNumStrm_blk_n <= taskNumStrm_empty_n;
        else 
            taskNumStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    taskNumStrm_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, msgNumStrm_empty_n, taskNumStrm_empty_n)
    begin
        if ((not(((taskNumStrm_empty_n = ap_const_logic_0) or (msgNumStrm_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            taskNumStrm_read <= ap_const_logic_1;
        else 
            taskNumStrm_read <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_1_V_V_blk_n_assign_proc : process(textStrm_1_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_1_V_V_blk_n <= textStrm_1_V_V_empty_n;
        else 
            textStrm_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    textStrm_1_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_1_V_V_read <= ap_const_logic_1;
        else 
            textStrm_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_2_V_V_blk_n_assign_proc : process(textStrm_2_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_2_V_V_blk_n <= textStrm_2_V_V_empty_n;
        else 
            textStrm_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    textStrm_2_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_2_V_V_read <= ap_const_logic_1;
        else 
            textStrm_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_3_V_V_blk_n_assign_proc : process(textStrm_3_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_3_V_V_blk_n <= textStrm_3_V_V_empty_n;
        else 
            textStrm_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    textStrm_3_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_3_V_V_read <= ap_const_logic_1;
        else 
            textStrm_3_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    textStrm_V_V_blk_n_assign_proc : process(textStrm_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_V_V_blk_n <= textStrm_V_V_empty_n;
        else 
            textStrm_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    textStrm_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            textStrm_V_V_read <= ap_const_logic_1;
        else 
            textStrm_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
