#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[5570].first = 1;
        (*_glb_hdl_sc_channel_map)[5570].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[5553].first = 1;
        (*_glb_hdl_sc_channel_map)[5553].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[5583].first = 1;
        (*_glb_hdl_sc_channel_map)[5583].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[5582].first = 1;
        (*_glb_hdl_sc_channel_map)[5582].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[5516].first = 1;
        (*_glb_hdl_sc_channel_map)[5516].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[5515].first = 1;
        (*_glb_hdl_sc_channel_map)[5515].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(7686328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[5584].first = 3;
        (*_glb_hdl_sc_channel_map)[5584].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[5605].first = 1;
        (*_glb_hdl_sc_channel_map)[5605].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[5598].first = 3;
        (*_glb_hdl_sc_channel_map)[5598].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[5591].first = 3;
        (*_glb_hdl_sc_channel_map)[5591].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[5619].first = 1;
        (*_glb_hdl_sc_channel_map)[5619].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(7686664);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(7686720);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[5606].first = 1;
        (*_glb_hdl_sc_channel_map)[5606].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[5599].first = 3;
        (*_glb_hdl_sc_channel_map)[5599].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[5592].first = 3;
        (*_glb_hdl_sc_channel_map)[5592].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[5620].first = 1;
        (*_glb_hdl_sc_channel_map)[5620].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[5586].first = 3;
        (*_glb_hdl_sc_channel_map)[5586].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(7687056);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[5607].first = 1;
        (*_glb_hdl_sc_channel_map)[5607].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[5600].first = 3;
        (*_glb_hdl_sc_channel_map)[5600].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[5593].first = 3;
        (*_glb_hdl_sc_channel_map)[5593].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[5621].first = 1;
        (*_glb_hdl_sc_channel_map)[5621].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[5587].first = 3;
        (*_glb_hdl_sc_channel_map)[5587].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(7687392);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[5608].first = 1;
        (*_glb_hdl_sc_channel_map)[5608].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[5601].first = 3;
        (*_glb_hdl_sc_channel_map)[5601].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[5594].first = 3;
        (*_glb_hdl_sc_channel_map)[5594].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[5622].first = 1;
        (*_glb_hdl_sc_channel_map)[5622].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[5588].first = 3;
        (*_glb_hdl_sc_channel_map)[5588].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(7687728);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[5609].first = 1;
        (*_glb_hdl_sc_channel_map)[5609].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[5602].first = 3;
        (*_glb_hdl_sc_channel_map)[5602].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[5595].first = 3;
        (*_glb_hdl_sc_channel_map)[5595].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[5623].first = 1;
        (*_glb_hdl_sc_channel_map)[5623].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[5589].first = 3;
        (*_glb_hdl_sc_channel_map)[5589].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(7688064);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[5610].first = 1;
        (*_glb_hdl_sc_channel_map)[5610].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[5603].first = 3;
        (*_glb_hdl_sc_channel_map)[5603].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[5596].first = 3;
        (*_glb_hdl_sc_channel_map)[5596].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[5624].first = 1;
        (*_glb_hdl_sc_channel_map)[5624].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map)[5590].first = 3;
        (*_glb_hdl_sc_channel_map)[5590].second.push_front(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(7688400);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map)[5611].first = 1;
        (*_glb_hdl_sc_channel_map)[5611].second.push_front(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map)[5604].first = 3;
        (*_glb_hdl_sc_channel_map)[5604].second.push_front(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map)[5597].first = 3;
        (*_glb_hdl_sc_channel_map)[5597].second.push_front(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map)[5625].first = 1;
        (*_glb_hdl_sc_channel_map)[5625].second.push_front(p_1_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5520].first = 3;
        (*_glb_hdl_sc_channel_map)[5520].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5522].first = 1;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(7688792);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5532].first = 3;
        (*_glb_hdl_sc_channel_map)[5532].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5533].first = 1;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(7689016);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(7689072);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5523].first = 1;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(7689184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5517].first = 3;
        (*_glb_hdl_sc_channel_map)[5517].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5519].first = 1;
        (*_glb_hdl_sc_channel_map)[5519].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(7689352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(7689408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(7689464);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(7689520);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5527].first = 1;
        (*_glb_hdl_sc_channel_map)[5527].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[5537].first = 3;
        (*_glb_hdl_sc_channel_map)[5537].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[5539].first = 1;
        (*_glb_hdl_sc_channel_map)[5539].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(7689744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[5547].first = 3;
        (*_glb_hdl_sc_channel_map)[5547].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[5549].first = 3;
        (*_glb_hdl_sc_channel_map)[5549].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[5550].first = 1;
        (*_glb_hdl_sc_channel_map)[5550].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(7689968);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(7690024);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[5540].first = 1;
        (*_glb_hdl_sc_channel_map)[5540].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(7690136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[5534].first = 3;
        (*_glb_hdl_sc_channel_map)[5534].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[5536].first = 1;
        (*_glb_hdl_sc_channel_map)[5536].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(7690304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(7690360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(7690416);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(7690472);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[5544].first = 1;
        (*_glb_hdl_sc_channel_map)[5544].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[5559].first = 3;
        (*_glb_hdl_sc_channel_map)[5559].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[5565].first = 1;
        (*_glb_hdl_sc_channel_map)[5565].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(7690696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[5562].first = 3;
        (*_glb_hdl_sc_channel_map)[5562].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[5564].first = 3;
        (*_glb_hdl_sc_channel_map)[5564].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[5560].first = 3;
        (*_glb_hdl_sc_channel_map)[5560].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[5561].first = 3;
        (*_glb_hdl_sc_channel_map)[5561].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[5577].first = 3;
        (*_glb_hdl_sc_channel_map)[5577].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[5580].first = 3;
        (*_glb_hdl_sc_channel_map)[5580].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[5581].first = 1;
        (*_glb_hdl_sc_channel_map)[5581].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(7691144);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(7691200);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[5567].first = 1;
        (*_glb_hdl_sc_channel_map)[5567].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[5578].first = 1;
        (*_glb_hdl_sc_channel_map)[5578].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(7691368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(7691424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(7691480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[5551].first = 3;
        (*_glb_hdl_sc_channel_map)[5551].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[5558].first = 1;
        (*_glb_hdl_sc_channel_map)[5558].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(7691648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[5555].first = 3;
        (*_glb_hdl_sc_channel_map)[5555].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[5557].first = 3;
        (*_glb_hdl_sc_channel_map)[5557].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[5552].first = 3;
        (*_glb_hdl_sc_channel_map)[5552].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[5554].first = 3;
        (*_glb_hdl_sc_channel_map)[5554].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(7691928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(7691984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(7692040);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(7692096);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[5574].first = 1;
        (*_glb_hdl_sc_channel_map)[5574].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[5647].first = 1;
        (*_glb_hdl_sc_channel_map)[5647].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5648].first = 1;
        (*_glb_hdl_sc_channel_map)[5648].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[5668].first = 1;
        (*_glb_hdl_sc_channel_map)[5668].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[5669].first = 1;
        (*_glb_hdl_sc_channel_map)[5669].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5653].first = 3;
        (*_glb_hdl_sc_channel_map)[5653].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5654].first = 3;
        (*_glb_hdl_sc_channel_map)[5654].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5656].first = 1;
        (*_glb_hdl_sc_channel_map)[5656].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(7692648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5664].first = 3;
        (*_glb_hdl_sc_channel_map)[5664].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5666].first = 3;
        (*_glb_hdl_sc_channel_map)[5666].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5667].first = 1;
        (*_glb_hdl_sc_channel_map)[5667].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(7692872);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(7692928);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5657].first = 1;
        (*_glb_hdl_sc_channel_map)[5657].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(7693040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5649].first = 3;
        (*_glb_hdl_sc_channel_map)[5649].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5650].first = 3;
        (*_glb_hdl_sc_channel_map)[5650].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5652].first = 1;
        (*_glb_hdl_sc_channel_map)[5652].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(7693264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(7693320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(7693376);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(7693432);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5661].first = 1;
        (*_glb_hdl_sc_channel_map)[5661].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5635].first = 1;
        (*_glb_hdl_sc_channel_map)[5635].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5634].first = 1;
        (*_glb_hdl_sc_channel_map)[5634].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1606].first = 3;
        (*_glb_hdl_sc_channel_map)[1606].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5646].first = 1;
        (*_glb_hdl_sc_channel_map)[5646].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5644].first = 1;
        (*_glb_hdl_sc_channel_map)[5644].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5643].first = 3;
        (*_glb_hdl_sc_channel_map)[5643].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5645].first = 3;
        (*_glb_hdl_sc_channel_map)[5645].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5633].first = 1;
        (*_glb_hdl_sc_channel_map)[5633].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5632].first = 1;
        (*_glb_hdl_sc_channel_map)[5632].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1607].first = 3;
        (*_glb_hdl_sc_channel_map)[1607].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5642].first = 1;
        (*_glb_hdl_sc_channel_map)[5642].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5640].first = 1;
        (*_glb_hdl_sc_channel_map)[5640].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5639].first = 3;
        (*_glb_hdl_sc_channel_map)[5639].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5641].first = 3;
        (*_glb_hdl_sc_channel_map)[5641].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5638].first = 1;
        (*_glb_hdl_sc_channel_map)[5638].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5636].first = 1;
        (*_glb_hdl_sc_channel_map)[5636].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5637].first = 3;
        (*_glb_hdl_sc_channel_map)[5637].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5630].first = 3;
        (*_glb_hdl_sc_channel_map)[5630].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(7694552);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(7694608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(7694664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(7694720);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(7694776);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5707].first = 1;
        (*_glb_hdl_sc_channel_map)[5707].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5708].first = 1;
        (*_glb_hdl_sc_channel_map)[5708].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5743].first = 1;
        (*_glb_hdl_sc_channel_map)[5743].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5744].first = 1;
        (*_glb_hdl_sc_channel_map)[5744].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5715].first = 3;
        (*_glb_hdl_sc_channel_map)[5715].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5719].first = 1;
        (*_glb_hdl_sc_channel_map)[5719].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(7695216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5735].first = 3;
        (*_glb_hdl_sc_channel_map)[5735].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5739].first = 3;
        (*_glb_hdl_sc_channel_map)[5739].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5741].first = 1;
        (*_glb_hdl_sc_channel_map)[5741].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(7695440);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(7695496);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5721].first = 1;
        (*_glb_hdl_sc_channel_map)[5721].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(7695608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5709].first = 3;
        (*_glb_hdl_sc_channel_map)[5709].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5713].first = 1;
        (*_glb_hdl_sc_channel_map)[5713].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(7695776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(7695832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(7695888);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(7695944);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5729].first = 1;
        (*_glb_hdl_sc_channel_map)[5729].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5691].first = 1;
        (*_glb_hdl_sc_channel_map)[5691].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5689].first = 1;
        (*_glb_hdl_sc_channel_map)[5689].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5687].first = 3;
        (*_glb_hdl_sc_channel_map)[5687].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1602].first = 3;
        (*_glb_hdl_sc_channel_map)[1602].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5688].first = 3;
        (*_glb_hdl_sc_channel_map)[5688].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5690].first = 3;
        (*_glb_hdl_sc_channel_map)[5690].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1603].first = 3;
        (*_glb_hdl_sc_channel_map)[1603].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5706].first = 1;
        (*_glb_hdl_sc_channel_map)[5706].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5704].first = 1;
        (*_glb_hdl_sc_channel_map)[5704].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5702].first = 3;
        (*_glb_hdl_sc_channel_map)[5702].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5705].first = 3;
        (*_glb_hdl_sc_channel_map)[5705].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5703].first = 1;
        (*_glb_hdl_sc_channel_map)[5703].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5686].first = 1;
        (*_glb_hdl_sc_channel_map)[5686].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5684].first = 1;
        (*_glb_hdl_sc_channel_map)[5684].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5682].first = 3;
        (*_glb_hdl_sc_channel_map)[5682].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1604].first = 3;
        (*_glb_hdl_sc_channel_map)[1604].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5683].first = 3;
        (*_glb_hdl_sc_channel_map)[5683].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5685].first = 3;
        (*_glb_hdl_sc_channel_map)[5685].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1605].first = 3;
        (*_glb_hdl_sc_channel_map)[1605].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5701].first = 1;
        (*_glb_hdl_sc_channel_map)[5701].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5699].first = 1;
        (*_glb_hdl_sc_channel_map)[5699].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5696].first = 3;
        (*_glb_hdl_sc_channel_map)[5696].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5698].first = 1;
        (*_glb_hdl_sc_channel_map)[5698].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5697].first = 3;
        (*_glb_hdl_sc_channel_map)[5697].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5700].first = 3;
        (*_glb_hdl_sc_channel_map)[5700].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5695].first = 1;
        (*_glb_hdl_sc_channel_map)[5695].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5693].first = 1;
        (*_glb_hdl_sc_channel_map)[5693].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5694].first = 3;
        (*_glb_hdl_sc_channel_map)[5694].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5692].first = 3;
        (*_glb_hdl_sc_channel_map)[5692].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5674].first = 1;
        (*_glb_hdl_sc_channel_map)[5674].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(7697736);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(7697792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(7697848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(7697904);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5680].first = 1;
        (*_glb_hdl_sc_channel_map)[5680].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(7698016);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(7698072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(7698128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(7698184);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(7698240);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(7698296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1600].first = 3;
        (*_glb_hdl_sc_channel_map)[1600].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5716].first = 3;
        (*_glb_hdl_sc_channel_map)[5716].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5720].first = 1;
        (*_glb_hdl_sc_channel_map)[5720].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5718].first = 1;
        (*_glb_hdl_sc_channel_map)[5718].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5736].first = 3;
        (*_glb_hdl_sc_channel_map)[5736].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5740].first = 3;
        (*_glb_hdl_sc_channel_map)[5740].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5742].first = 1;
        (*_glb_hdl_sc_channel_map)[5742].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5738].first = 1;
        (*_glb_hdl_sc_channel_map)[5738].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5724].first = 3;
        (*_glb_hdl_sc_channel_map)[5724].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5726].first = 1;
        (*_glb_hdl_sc_channel_map)[5726].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5722].first = 1;
        (*_glb_hdl_sc_channel_map)[5722].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1601].first = 3;
        (*_glb_hdl_sc_channel_map)[1601].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5710].first = 3;
        (*_glb_hdl_sc_channel_map)[5710].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5714].first = 1;
        (*_glb_hdl_sc_channel_map)[5714].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5712].first = 1;
        (*_glb_hdl_sc_channel_map)[5712].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5728].first = 3;
        (*_glb_hdl_sc_channel_map)[5728].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5732].first = 3;
        (*_glb_hdl_sc_channel_map)[5732].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5734].first = 1;
        (*_glb_hdl_sc_channel_map)[5734].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5730].first = 1;
        (*_glb_hdl_sc_channel_map)[5730].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5782].first = 1;
        (*_glb_hdl_sc_channel_map)[5782].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5783].first = 1;
        (*_glb_hdl_sc_channel_map)[5783].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5818].first = 1;
        (*_glb_hdl_sc_channel_map)[5818].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5819].first = 1;
        (*_glb_hdl_sc_channel_map)[5819].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5790].first = 3;
        (*_glb_hdl_sc_channel_map)[5790].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5794].first = 1;
        (*_glb_hdl_sc_channel_map)[5794].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(7699800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5810].first = 3;
        (*_glb_hdl_sc_channel_map)[5810].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5814].first = 3;
        (*_glb_hdl_sc_channel_map)[5814].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5816].first = 1;
        (*_glb_hdl_sc_channel_map)[5816].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(7700024);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(7700080);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5796].first = 1;
        (*_glb_hdl_sc_channel_map)[5796].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(7700192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5784].first = 3;
        (*_glb_hdl_sc_channel_map)[5784].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5788].first = 1;
        (*_glb_hdl_sc_channel_map)[5788].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(7700360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(7700416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(7700472);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(7700528);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5804].first = 1;
        (*_glb_hdl_sc_channel_map)[5804].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5766].first = 1;
        (*_glb_hdl_sc_channel_map)[5766].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5764].first = 1;
        (*_glb_hdl_sc_channel_map)[5764].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5762].first = 3;
        (*_glb_hdl_sc_channel_map)[5762].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1596].first = 3;
        (*_glb_hdl_sc_channel_map)[1596].second.push_front(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5763].first = 3;
        (*_glb_hdl_sc_channel_map)[5763].second.push_front(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5765].first = 3;
        (*_glb_hdl_sc_channel_map)[5765].second.push_front(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1597].first = 3;
        (*_glb_hdl_sc_channel_map)[1597].second.push_front(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5781].first = 1;
        (*_glb_hdl_sc_channel_map)[5781].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5779].first = 1;
        (*_glb_hdl_sc_channel_map)[5779].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5777].first = 3;
        (*_glb_hdl_sc_channel_map)[5777].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5780].first = 3;
        (*_glb_hdl_sc_channel_map)[5780].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5778].first = 1;
        (*_glb_hdl_sc_channel_map)[5778].second.push_front(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5761].first = 1;
        (*_glb_hdl_sc_channel_map)[5761].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5759].first = 1;
        (*_glb_hdl_sc_channel_map)[5759].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5757].first = 3;
        (*_glb_hdl_sc_channel_map)[5757].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1598].first = 3;
        (*_glb_hdl_sc_channel_map)[1598].second.push_front(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5758].first = 3;
        (*_glb_hdl_sc_channel_map)[5758].second.push_front(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5760].first = 3;
        (*_glb_hdl_sc_channel_map)[5760].second.push_front(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1599].first = 3;
        (*_glb_hdl_sc_channel_map)[1599].second.push_front(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5776].first = 1;
        (*_glb_hdl_sc_channel_map)[5776].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5774].first = 1;
        (*_glb_hdl_sc_channel_map)[5774].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5771].first = 3;
        (*_glb_hdl_sc_channel_map)[5771].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5773].first = 1;
        (*_glb_hdl_sc_channel_map)[5773].second.push_front(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map)[5772].first = 3;
        (*_glb_hdl_sc_channel_map)[5772].second.push_front(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5775].first = 3;
        (*_glb_hdl_sc_channel_map)[5775].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5770].first = 1;
        (*_glb_hdl_sc_channel_map)[5770].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5768].first = 1;
        (*_glb_hdl_sc_channel_map)[5768].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5769].first = 3;
        (*_glb_hdl_sc_channel_map)[5769].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map)[5767].first = 3;
        (*_glb_hdl_sc_channel_map)[5767].second.push_front(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5749].first = 1;
        (*_glb_hdl_sc_channel_map)[5749].second.push_front(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(7702320);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(7702376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(7702432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(7702488);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5755].first = 1;
        (*_glb_hdl_sc_channel_map)[5755].second.push_front(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(7702600);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(7702656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(7702712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(7702768);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(7702824);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(7702880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1594].first = 3;
        (*_glb_hdl_sc_channel_map)[1594].second.push_front(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5791].first = 3;
        (*_glb_hdl_sc_channel_map)[5791].second.push_front(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5795].first = 1;
        (*_glb_hdl_sc_channel_map)[5795].second.push_front(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5793].first = 1;
        (*_glb_hdl_sc_channel_map)[5793].second.push_front(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5811].first = 3;
        (*_glb_hdl_sc_channel_map)[5811].second.push_front(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5815].first = 3;
        (*_glb_hdl_sc_channel_map)[5815].second.push_front(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5817].first = 1;
        (*_glb_hdl_sc_channel_map)[5817].second.push_front(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5813].first = 1;
        (*_glb_hdl_sc_channel_map)[5813].second.push_front(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5799].first = 3;
        (*_glb_hdl_sc_channel_map)[5799].second.push_front(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5801].first = 1;
        (*_glb_hdl_sc_channel_map)[5801].second.push_front(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5797].first = 1;
        (*_glb_hdl_sc_channel_map)[5797].second.push_front(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1595].first = 3;
        (*_glb_hdl_sc_channel_map)[1595].second.push_front(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5785].first = 3;
        (*_glb_hdl_sc_channel_map)[5785].second.push_front(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5789].first = 1;
        (*_glb_hdl_sc_channel_map)[5789].second.push_front(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5787].first = 1;
        (*_glb_hdl_sc_channel_map)[5787].second.push_front(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5803].first = 3;
        (*_glb_hdl_sc_channel_map)[5803].second.push_front(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5807].first = 3;
        (*_glb_hdl_sc_channel_map)[5807].second.push_front(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5809].first = 1;
        (*_glb_hdl_sc_channel_map)[5809].second.push_front(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5805].first = 1;
        (*_glb_hdl_sc_channel_map)[5805].second.push_front(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(536);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[5857].first = 1;
        (*_glb_hdl_sc_channel_map)[5857].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5858].first = 1;
        (*_glb_hdl_sc_channel_map)[5858].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[5893].first = 1;
        (*_glb_hdl_sc_channel_map)[5893].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[5894].first = 1;
        (*_glb_hdl_sc_channel_map)[5894].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5865].first = 3;
        (*_glb_hdl_sc_channel_map)[5865].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5869].first = 1;
        (*_glb_hdl_sc_channel_map)[5869].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(7704384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5885].first = 3;
        (*_glb_hdl_sc_channel_map)[5885].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5889].first = 3;
        (*_glb_hdl_sc_channel_map)[5889].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5891].first = 1;
        (*_glb_hdl_sc_channel_map)[5891].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(7704608);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(7704664);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5871].first = 1;
        (*_glb_hdl_sc_channel_map)[5871].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(7704776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5859].first = 3;
        (*_glb_hdl_sc_channel_map)[5859].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5863].first = 1;
        (*_glb_hdl_sc_channel_map)[5863].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(7704944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(7705000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(7705056);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(7705112);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5879].first = 1;
        (*_glb_hdl_sc_channel_map)[5879].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5841].first = 1;
        (*_glb_hdl_sc_channel_map)[5841].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5839].first = 1;
        (*_glb_hdl_sc_channel_map)[5839].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5837].first = 3;
        (*_glb_hdl_sc_channel_map)[5837].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1590].first = 3;
        (*_glb_hdl_sc_channel_map)[1590].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5838].first = 3;
        (*_glb_hdl_sc_channel_map)[5838].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5840].first = 3;
        (*_glb_hdl_sc_channel_map)[5840].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1591].first = 3;
        (*_glb_hdl_sc_channel_map)[1591].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5856].first = 1;
        (*_glb_hdl_sc_channel_map)[5856].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5854].first = 1;
        (*_glb_hdl_sc_channel_map)[5854].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5852].first = 3;
        (*_glb_hdl_sc_channel_map)[5852].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5855].first = 3;
        (*_glb_hdl_sc_channel_map)[5855].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5853].first = 1;
        (*_glb_hdl_sc_channel_map)[5853].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5836].first = 1;
        (*_glb_hdl_sc_channel_map)[5836].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5834].first = 1;
        (*_glb_hdl_sc_channel_map)[5834].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5832].first = 3;
        (*_glb_hdl_sc_channel_map)[5832].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1592].first = 3;
        (*_glb_hdl_sc_channel_map)[1592].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5833].first = 3;
        (*_glb_hdl_sc_channel_map)[5833].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5835].first = 3;
        (*_glb_hdl_sc_channel_map)[5835].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1593].first = 3;
        (*_glb_hdl_sc_channel_map)[1593].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5851].first = 1;
        (*_glb_hdl_sc_channel_map)[5851].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5849].first = 1;
        (*_glb_hdl_sc_channel_map)[5849].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5846].first = 3;
        (*_glb_hdl_sc_channel_map)[5846].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5848].first = 1;
        (*_glb_hdl_sc_channel_map)[5848].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[5847].first = 3;
        (*_glb_hdl_sc_channel_map)[5847].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5850].first = 3;
        (*_glb_hdl_sc_channel_map)[5850].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5845].first = 1;
        (*_glb_hdl_sc_channel_map)[5845].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5843].first = 1;
        (*_glb_hdl_sc_channel_map)[5843].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5844].first = 3;
        (*_glb_hdl_sc_channel_map)[5844].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[5842].first = 3;
        (*_glb_hdl_sc_channel_map)[5842].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5824].first = 1;
        (*_glb_hdl_sc_channel_map)[5824].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(7706904);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(7706960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(7707016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(7707072);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5830].first = 1;
        (*_glb_hdl_sc_channel_map)[5830].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(7707184);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(7707240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(7707296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(7707352);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(7707408);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(7707464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1588].first = 3;
        (*_glb_hdl_sc_channel_map)[1588].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5866].first = 3;
        (*_glb_hdl_sc_channel_map)[5866].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5870].first = 1;
        (*_glb_hdl_sc_channel_map)[5870].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5868].first = 1;
        (*_glb_hdl_sc_channel_map)[5868].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5886].first = 3;
        (*_glb_hdl_sc_channel_map)[5886].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5890].first = 3;
        (*_glb_hdl_sc_channel_map)[5890].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5892].first = 1;
        (*_glb_hdl_sc_channel_map)[5892].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5888].first = 1;
        (*_glb_hdl_sc_channel_map)[5888].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5874].first = 3;
        (*_glb_hdl_sc_channel_map)[5874].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5876].first = 1;
        (*_glb_hdl_sc_channel_map)[5876].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5872].first = 1;
        (*_glb_hdl_sc_channel_map)[5872].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1589].first = 3;
        (*_glb_hdl_sc_channel_map)[1589].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5860].first = 3;
        (*_glb_hdl_sc_channel_map)[5860].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5864].first = 1;
        (*_glb_hdl_sc_channel_map)[5864].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5862].first = 1;
        (*_glb_hdl_sc_channel_map)[5862].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5878].first = 3;
        (*_glb_hdl_sc_channel_map)[5878].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5882].first = 3;
        (*_glb_hdl_sc_channel_map)[5882].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5884].first = 1;
        (*_glb_hdl_sc_channel_map)[5884].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5880].first = 1;
        (*_glb_hdl_sc_channel_map)[5880].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_6->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map)[12441].first = 1;
        (*_glb_hdl_sc_channel_map)[12441].second.push_front(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk1.bind(*p_6_aclk1);
        (*_glb_hdl_sc_channel_map)[12442].first = 1;
        (*_glb_hdl_sc_channel_map)[12442].second.push_front(p_6_aclk1);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map)[12443].first = 1;
        (*_glb_hdl_sc_channel_map)[12443].second.push_front(p_6_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awid.bind(*p_6_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[12195].first = 3;
        (*_glb_hdl_sc_channel_map)[12195].second.push_front(p_6_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_awaddr.bind(*p_6_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12192].first = 3;
        (*_glb_hdl_sc_channel_map)[12192].second.push_front(p_6_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_awlen.bind(*p_6_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12196].first = 3;
        (*_glb_hdl_sc_channel_map)[12196].second.push_front(p_6_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awsize.bind(*p_6_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12201].first = 3;
        (*_glb_hdl_sc_channel_map)[12201].second.push_front(p_6_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_awburst.bind(*p_6_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[12193].first = 3;
        (*_glb_hdl_sc_channel_map)[12193].second.push_front(p_6_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_awlock.bind(*p_6_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[12197].first = 1;
        (*_glb_hdl_sc_channel_map)[12197].second.push_front(p_6_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awcache.bind(*p_6_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12194].first = 3;
        (*_glb_hdl_sc_channel_map)[12194].second.push_front(p_6_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awprot.bind(*p_6_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12198].first = 3;
        (*_glb_hdl_sc_channel_map)[12198].second.push_front(p_6_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awqos.bind(*p_6_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12199].first = 3;
        (*_glb_hdl_sc_channel_map)[12199].second.push_front(p_6_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awuser.bind(*p_6_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[12202].first = 3;
        (*_glb_hdl_sc_channel_map)[12202].second.push_front(p_6_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awvalid.bind(*p_6_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12203].first = 3;
        (*_glb_hdl_sc_channel_map)[12203].second.push_front(p_6_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awready.bind(*p_6_S00_AXI_awready);
        p_6_S00_AXI_awready->set_sv_netview_offsetfromdp(9444256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_wdata.bind(*p_6_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12216].first = 3;
        (*_glb_hdl_sc_channel_map)[12216].second.push_front(p_6_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_wstrb.bind(*p_6_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12219].first = 3;
        (*_glb_hdl_sc_channel_map)[12219].second.push_front(p_6_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wlast.bind(*p_6_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12217].first = 3;
        (*_glb_hdl_sc_channel_map)[12217].second.push_front(p_6_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wuser.bind(*p_6_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[12220].first = 3;
        (*_glb_hdl_sc_channel_map)[12220].second.push_front(p_6_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wvalid.bind(*p_6_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12221].first = 3;
        (*_glb_hdl_sc_channel_map)[12221].second.push_front(p_6_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wready.bind(*p_6_S00_AXI_wready);
        p_6_S00_AXI_wready->set_sv_netview_offsetfromdp(9444592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bid.bind(*p_6_S00_AXI_bid);
        p_6_S00_AXI_bid->set_sv_netview_offsetfromdp(9444648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_bresp.bind(*p_6_S00_AXI_bresp);
        p_6_S00_AXI_bresp->set_sv_netview_offsetfromdp(9444704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_buser.bind(*p_6_S00_AXI_buser);
        p_6_S00_AXI_buser->set_sv_netview_offsetfromdp(9444760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bvalid.bind(*p_6_S00_AXI_bvalid);
        p_6_S00_AXI_bvalid->set_sv_netview_offsetfromdp(9444816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bready.bind(*p_6_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12205].first = 3;
        (*_glb_hdl_sc_channel_map)[12205].second.push_front(p_6_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arid.bind(*p_6_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[12183].first = 3;
        (*_glb_hdl_sc_channel_map)[12183].second.push_front(p_6_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_araddr.bind(*p_6_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12180].first = 3;
        (*_glb_hdl_sc_channel_map)[12180].second.push_front(p_6_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_arlen.bind(*p_6_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12184].first = 3;
        (*_glb_hdl_sc_channel_map)[12184].second.push_front(p_6_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arsize.bind(*p_6_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12189].first = 3;
        (*_glb_hdl_sc_channel_map)[12189].second.push_front(p_6_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_arburst.bind(*p_6_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[12181].first = 3;
        (*_glb_hdl_sc_channel_map)[12181].second.push_front(p_6_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_arlock.bind(*p_6_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[12185].first = 1;
        (*_glb_hdl_sc_channel_map)[12185].second.push_front(p_6_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arcache.bind(*p_6_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12182].first = 3;
        (*_glb_hdl_sc_channel_map)[12182].second.push_front(p_6_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arprot.bind(*p_6_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12186].first = 3;
        (*_glb_hdl_sc_channel_map)[12186].second.push_front(p_6_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arqos.bind(*p_6_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12187].first = 3;
        (*_glb_hdl_sc_channel_map)[12187].second.push_front(p_6_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_aruser.bind(*p_6_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[12190].first = 3;
        (*_glb_hdl_sc_channel_map)[12190].second.push_front(p_6_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arvalid.bind(*p_6_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12191].first = 3;
        (*_glb_hdl_sc_channel_map)[12191].second.push_front(p_6_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arready.bind(*p_6_S00_AXI_arready);
        p_6_S00_AXI_arready->set_sv_netview_offsetfromdp(9445544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rid.bind(*p_6_S00_AXI_rid);
        p_6_S00_AXI_rid->set_sv_netview_offsetfromdp(9445600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_rdata.bind(*p_6_S00_AXI_rdata);
        p_6_S00_AXI_rdata->set_sv_netview_offsetfromdp(9445656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_rresp.bind(*p_6_S00_AXI_rresp);
        p_6_S00_AXI_rresp->set_sv_netview_offsetfromdp(9445712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rlast.bind(*p_6_S00_AXI_rlast);
        p_6_S00_AXI_rlast->set_sv_netview_offsetfromdp(9445768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_ruser.bind(*p_6_S00_AXI_ruser);
        p_6_S00_AXI_ruser->set_sv_netview_offsetfromdp(9445824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rvalid.bind(*p_6_S00_AXI_rvalid);
        p_6_S00_AXI_rvalid->set_sv_netview_offsetfromdp(9445880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rready.bind(*p_6_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12212].first = 3;
        (*_glb_hdl_sc_channel_map)[12212].second.push_front(p_6_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awid.bind(*p_6_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[12237].first = 3;
        (*_glb_hdl_sc_channel_map)[12237].second.push_front(p_6_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_awaddr.bind(*p_6_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12234].first = 3;
        (*_glb_hdl_sc_channel_map)[12234].second.push_front(p_6_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_awlen.bind(*p_6_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12238].first = 3;
        (*_glb_hdl_sc_channel_map)[12238].second.push_front(p_6_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awsize.bind(*p_6_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12243].first = 3;
        (*_glb_hdl_sc_channel_map)[12243].second.push_front(p_6_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_awburst.bind(*p_6_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[12235].first = 3;
        (*_glb_hdl_sc_channel_map)[12235].second.push_front(p_6_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_awlock.bind(*p_6_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[12239].first = 1;
        (*_glb_hdl_sc_channel_map)[12239].second.push_front(p_6_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awcache.bind(*p_6_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12236].first = 3;
        (*_glb_hdl_sc_channel_map)[12236].second.push_front(p_6_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awprot.bind(*p_6_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12240].first = 3;
        (*_glb_hdl_sc_channel_map)[12240].second.push_front(p_6_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awqos.bind(*p_6_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12241].first = 3;
        (*_glb_hdl_sc_channel_map)[12241].second.push_front(p_6_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awuser.bind(*p_6_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[12244].first = 3;
        (*_glb_hdl_sc_channel_map)[12244].second.push_front(p_6_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awvalid.bind(*p_6_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12245].first = 3;
        (*_glb_hdl_sc_channel_map)[12245].second.push_front(p_6_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awready.bind(*p_6_S01_AXI_awready);
        p_6_S01_AXI_awready->set_sv_netview_offsetfromdp(9446608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_wdata.bind(*p_6_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12258].first = 3;
        (*_glb_hdl_sc_channel_map)[12258].second.push_front(p_6_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_wstrb.bind(*p_6_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12261].first = 3;
        (*_glb_hdl_sc_channel_map)[12261].second.push_front(p_6_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wlast.bind(*p_6_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12259].first = 3;
        (*_glb_hdl_sc_channel_map)[12259].second.push_front(p_6_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wuser.bind(*p_6_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[12262].first = 3;
        (*_glb_hdl_sc_channel_map)[12262].second.push_front(p_6_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wvalid.bind(*p_6_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12263].first = 3;
        (*_glb_hdl_sc_channel_map)[12263].second.push_front(p_6_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wready.bind(*p_6_S01_AXI_wready);
        p_6_S01_AXI_wready->set_sv_netview_offsetfromdp(9446944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bid.bind(*p_6_S01_AXI_bid);
        p_6_S01_AXI_bid->set_sv_netview_offsetfromdp(9447000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_bresp.bind(*p_6_S01_AXI_bresp);
        p_6_S01_AXI_bresp->set_sv_netview_offsetfromdp(9447056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_buser.bind(*p_6_S01_AXI_buser);
        p_6_S01_AXI_buser->set_sv_netview_offsetfromdp(9447112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bvalid.bind(*p_6_S01_AXI_bvalid);
        p_6_S01_AXI_bvalid->set_sv_netview_offsetfromdp(9447168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bready.bind(*p_6_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12247].first = 3;
        (*_glb_hdl_sc_channel_map)[12247].second.push_front(p_6_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arid.bind(*p_6_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[12225].first = 3;
        (*_glb_hdl_sc_channel_map)[12225].second.push_front(p_6_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_araddr.bind(*p_6_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12222].first = 3;
        (*_glb_hdl_sc_channel_map)[12222].second.push_front(p_6_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_arlen.bind(*p_6_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12226].first = 3;
        (*_glb_hdl_sc_channel_map)[12226].second.push_front(p_6_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arsize.bind(*p_6_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12231].first = 3;
        (*_glb_hdl_sc_channel_map)[12231].second.push_front(p_6_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_arburst.bind(*p_6_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[12223].first = 3;
        (*_glb_hdl_sc_channel_map)[12223].second.push_front(p_6_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_arlock.bind(*p_6_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[12227].first = 1;
        (*_glb_hdl_sc_channel_map)[12227].second.push_front(p_6_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arcache.bind(*p_6_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12224].first = 3;
        (*_glb_hdl_sc_channel_map)[12224].second.push_front(p_6_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arprot.bind(*p_6_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12228].first = 3;
        (*_glb_hdl_sc_channel_map)[12228].second.push_front(p_6_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arqos.bind(*p_6_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12229].first = 3;
        (*_glb_hdl_sc_channel_map)[12229].second.push_front(p_6_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_aruser.bind(*p_6_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[12232].first = 3;
        (*_glb_hdl_sc_channel_map)[12232].second.push_front(p_6_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arvalid.bind(*p_6_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12233].first = 3;
        (*_glb_hdl_sc_channel_map)[12233].second.push_front(p_6_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arready.bind(*p_6_S01_AXI_arready);
        p_6_S01_AXI_arready->set_sv_netview_offsetfromdp(9447896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rid.bind(*p_6_S01_AXI_rid);
        p_6_S01_AXI_rid->set_sv_netview_offsetfromdp(9447952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_rdata.bind(*p_6_S01_AXI_rdata);
        p_6_S01_AXI_rdata->set_sv_netview_offsetfromdp(9448008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_rresp.bind(*p_6_S01_AXI_rresp);
        p_6_S01_AXI_rresp->set_sv_netview_offsetfromdp(9448064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rlast.bind(*p_6_S01_AXI_rlast);
        p_6_S01_AXI_rlast->set_sv_netview_offsetfromdp(9448120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_ruser.bind(*p_6_S01_AXI_ruser);
        p_6_S01_AXI_ruser->set_sv_netview_offsetfromdp(9448176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rvalid.bind(*p_6_S01_AXI_rvalid);
        p_6_S01_AXI_rvalid->set_sv_netview_offsetfromdp(9448232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rready.bind(*p_6_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12254].first = 3;
        (*_glb_hdl_sc_channel_map)[12254].second.push_front(p_6_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awid.bind(*p_6_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[12279].first = 3;
        (*_glb_hdl_sc_channel_map)[12279].second.push_front(p_6_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_awaddr.bind(*p_6_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12276].first = 3;
        (*_glb_hdl_sc_channel_map)[12276].second.push_front(p_6_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_awlen.bind(*p_6_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12280].first = 3;
        (*_glb_hdl_sc_channel_map)[12280].second.push_front(p_6_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awsize.bind(*p_6_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12285].first = 3;
        (*_glb_hdl_sc_channel_map)[12285].second.push_front(p_6_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_awburst.bind(*p_6_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[12277].first = 3;
        (*_glb_hdl_sc_channel_map)[12277].second.push_front(p_6_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_awlock.bind(*p_6_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[12281].first = 1;
        (*_glb_hdl_sc_channel_map)[12281].second.push_front(p_6_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awcache.bind(*p_6_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12278].first = 3;
        (*_glb_hdl_sc_channel_map)[12278].second.push_front(p_6_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awprot.bind(*p_6_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12282].first = 3;
        (*_glb_hdl_sc_channel_map)[12282].second.push_front(p_6_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awqos.bind(*p_6_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12283].first = 3;
        (*_glb_hdl_sc_channel_map)[12283].second.push_front(p_6_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awuser.bind(*p_6_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[12286].first = 3;
        (*_glb_hdl_sc_channel_map)[12286].second.push_front(p_6_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awvalid.bind(*p_6_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12287].first = 3;
        (*_glb_hdl_sc_channel_map)[12287].second.push_front(p_6_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awready.bind(*p_6_S02_AXI_awready);
        p_6_S02_AXI_awready->set_sv_netview_offsetfromdp(9448960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_wdata.bind(*p_6_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12300].first = 3;
        (*_glb_hdl_sc_channel_map)[12300].second.push_front(p_6_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_wstrb.bind(*p_6_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12303].first = 3;
        (*_glb_hdl_sc_channel_map)[12303].second.push_front(p_6_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wlast.bind(*p_6_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12301].first = 3;
        (*_glb_hdl_sc_channel_map)[12301].second.push_front(p_6_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wuser.bind(*p_6_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[12304].first = 3;
        (*_glb_hdl_sc_channel_map)[12304].second.push_front(p_6_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wvalid.bind(*p_6_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12305].first = 3;
        (*_glb_hdl_sc_channel_map)[12305].second.push_front(p_6_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wready.bind(*p_6_S02_AXI_wready);
        p_6_S02_AXI_wready->set_sv_netview_offsetfromdp(9449296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bid.bind(*p_6_S02_AXI_bid);
        p_6_S02_AXI_bid->set_sv_netview_offsetfromdp(9449352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_bresp.bind(*p_6_S02_AXI_bresp);
        p_6_S02_AXI_bresp->set_sv_netview_offsetfromdp(9449408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_buser.bind(*p_6_S02_AXI_buser);
        p_6_S02_AXI_buser->set_sv_netview_offsetfromdp(9449464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bvalid.bind(*p_6_S02_AXI_bvalid);
        p_6_S02_AXI_bvalid->set_sv_netview_offsetfromdp(9449520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bready.bind(*p_6_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12289].first = 3;
        (*_glb_hdl_sc_channel_map)[12289].second.push_front(p_6_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arid.bind(*p_6_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[12267].first = 3;
        (*_glb_hdl_sc_channel_map)[12267].second.push_front(p_6_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_araddr.bind(*p_6_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12264].first = 3;
        (*_glb_hdl_sc_channel_map)[12264].second.push_front(p_6_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_arlen.bind(*p_6_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12268].first = 3;
        (*_glb_hdl_sc_channel_map)[12268].second.push_front(p_6_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arsize.bind(*p_6_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12273].first = 3;
        (*_glb_hdl_sc_channel_map)[12273].second.push_front(p_6_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_arburst.bind(*p_6_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[12265].first = 3;
        (*_glb_hdl_sc_channel_map)[12265].second.push_front(p_6_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_arlock.bind(*p_6_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[12269].first = 1;
        (*_glb_hdl_sc_channel_map)[12269].second.push_front(p_6_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arcache.bind(*p_6_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12266].first = 3;
        (*_glb_hdl_sc_channel_map)[12266].second.push_front(p_6_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arprot.bind(*p_6_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12270].first = 3;
        (*_glb_hdl_sc_channel_map)[12270].second.push_front(p_6_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arqos.bind(*p_6_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12271].first = 3;
        (*_glb_hdl_sc_channel_map)[12271].second.push_front(p_6_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_aruser.bind(*p_6_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[12274].first = 3;
        (*_glb_hdl_sc_channel_map)[12274].second.push_front(p_6_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arvalid.bind(*p_6_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12275].first = 3;
        (*_glb_hdl_sc_channel_map)[12275].second.push_front(p_6_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arready.bind(*p_6_S02_AXI_arready);
        p_6_S02_AXI_arready->set_sv_netview_offsetfromdp(9450248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rid.bind(*p_6_S02_AXI_rid);
        p_6_S02_AXI_rid->set_sv_netview_offsetfromdp(9450304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_rdata.bind(*p_6_S02_AXI_rdata);
        p_6_S02_AXI_rdata->set_sv_netview_offsetfromdp(9450360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_rresp.bind(*p_6_S02_AXI_rresp);
        p_6_S02_AXI_rresp->set_sv_netview_offsetfromdp(9450416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rlast.bind(*p_6_S02_AXI_rlast);
        p_6_S02_AXI_rlast->set_sv_netview_offsetfromdp(9450472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_ruser.bind(*p_6_S02_AXI_ruser);
        p_6_S02_AXI_ruser->set_sv_netview_offsetfromdp(9450528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rvalid.bind(*p_6_S02_AXI_rvalid);
        p_6_S02_AXI_rvalid->set_sv_netview_offsetfromdp(9450584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rready.bind(*p_6_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12296].first = 3;
        (*_glb_hdl_sc_channel_map)[12296].second.push_front(p_6_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awid.bind(*p_6_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[12321].first = 3;
        (*_glb_hdl_sc_channel_map)[12321].second.push_front(p_6_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_awaddr.bind(*p_6_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12318].first = 3;
        (*_glb_hdl_sc_channel_map)[12318].second.push_front(p_6_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_awlen.bind(*p_6_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12322].first = 3;
        (*_glb_hdl_sc_channel_map)[12322].second.push_front(p_6_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awsize.bind(*p_6_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12327].first = 3;
        (*_glb_hdl_sc_channel_map)[12327].second.push_front(p_6_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_awburst.bind(*p_6_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[12319].first = 3;
        (*_glb_hdl_sc_channel_map)[12319].second.push_front(p_6_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_awlock.bind(*p_6_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[12323].first = 1;
        (*_glb_hdl_sc_channel_map)[12323].second.push_front(p_6_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awcache.bind(*p_6_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12320].first = 3;
        (*_glb_hdl_sc_channel_map)[12320].second.push_front(p_6_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awprot.bind(*p_6_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12324].first = 3;
        (*_glb_hdl_sc_channel_map)[12324].second.push_front(p_6_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awqos.bind(*p_6_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12325].first = 3;
        (*_glb_hdl_sc_channel_map)[12325].second.push_front(p_6_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awuser.bind(*p_6_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[12328].first = 3;
        (*_glb_hdl_sc_channel_map)[12328].second.push_front(p_6_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awvalid.bind(*p_6_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12329].first = 3;
        (*_glb_hdl_sc_channel_map)[12329].second.push_front(p_6_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awready.bind(*p_6_S03_AXI_awready);
        p_6_S03_AXI_awready->set_sv_netview_offsetfromdp(9451312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_wdata.bind(*p_6_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12342].first = 3;
        (*_glb_hdl_sc_channel_map)[12342].second.push_front(p_6_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_wstrb.bind(*p_6_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12345].first = 3;
        (*_glb_hdl_sc_channel_map)[12345].second.push_front(p_6_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wlast.bind(*p_6_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12343].first = 3;
        (*_glb_hdl_sc_channel_map)[12343].second.push_front(p_6_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wuser.bind(*p_6_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[12346].first = 3;
        (*_glb_hdl_sc_channel_map)[12346].second.push_front(p_6_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wvalid.bind(*p_6_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12347].first = 3;
        (*_glb_hdl_sc_channel_map)[12347].second.push_front(p_6_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wready.bind(*p_6_S03_AXI_wready);
        p_6_S03_AXI_wready->set_sv_netview_offsetfromdp(9451648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bid.bind(*p_6_S03_AXI_bid);
        p_6_S03_AXI_bid->set_sv_netview_offsetfromdp(9451704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_bresp.bind(*p_6_S03_AXI_bresp);
        p_6_S03_AXI_bresp->set_sv_netview_offsetfromdp(9451760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_buser.bind(*p_6_S03_AXI_buser);
        p_6_S03_AXI_buser->set_sv_netview_offsetfromdp(9451816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bvalid.bind(*p_6_S03_AXI_bvalid);
        p_6_S03_AXI_bvalid->set_sv_netview_offsetfromdp(9451872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bready.bind(*p_6_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12331].first = 3;
        (*_glb_hdl_sc_channel_map)[12331].second.push_front(p_6_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arid.bind(*p_6_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[12309].first = 3;
        (*_glb_hdl_sc_channel_map)[12309].second.push_front(p_6_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_araddr.bind(*p_6_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12306].first = 3;
        (*_glb_hdl_sc_channel_map)[12306].second.push_front(p_6_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_arlen.bind(*p_6_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12310].first = 3;
        (*_glb_hdl_sc_channel_map)[12310].second.push_front(p_6_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arsize.bind(*p_6_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12315].first = 3;
        (*_glb_hdl_sc_channel_map)[12315].second.push_front(p_6_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_arburst.bind(*p_6_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[12307].first = 3;
        (*_glb_hdl_sc_channel_map)[12307].second.push_front(p_6_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_arlock.bind(*p_6_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[12311].first = 1;
        (*_glb_hdl_sc_channel_map)[12311].second.push_front(p_6_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arcache.bind(*p_6_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12308].first = 3;
        (*_glb_hdl_sc_channel_map)[12308].second.push_front(p_6_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arprot.bind(*p_6_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12312].first = 3;
        (*_glb_hdl_sc_channel_map)[12312].second.push_front(p_6_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arqos.bind(*p_6_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12313].first = 3;
        (*_glb_hdl_sc_channel_map)[12313].second.push_front(p_6_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_aruser.bind(*p_6_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[12316].first = 3;
        (*_glb_hdl_sc_channel_map)[12316].second.push_front(p_6_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arvalid.bind(*p_6_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12317].first = 3;
        (*_glb_hdl_sc_channel_map)[12317].second.push_front(p_6_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arready.bind(*p_6_S03_AXI_arready);
        p_6_S03_AXI_arready->set_sv_netview_offsetfromdp(9452600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rid.bind(*p_6_S03_AXI_rid);
        p_6_S03_AXI_rid->set_sv_netview_offsetfromdp(9452656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_rdata.bind(*p_6_S03_AXI_rdata);
        p_6_S03_AXI_rdata->set_sv_netview_offsetfromdp(9452712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_rresp.bind(*p_6_S03_AXI_rresp);
        p_6_S03_AXI_rresp->set_sv_netview_offsetfromdp(9452768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rlast.bind(*p_6_S03_AXI_rlast);
        p_6_S03_AXI_rlast->set_sv_netview_offsetfromdp(9452824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_ruser.bind(*p_6_S03_AXI_ruser);
        p_6_S03_AXI_ruser->set_sv_netview_offsetfromdp(9452880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rvalid.bind(*p_6_S03_AXI_rvalid);
        p_6_S03_AXI_rvalid->set_sv_netview_offsetfromdp(9452936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rready.bind(*p_6_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12338].first = 3;
        (*_glb_hdl_sc_channel_map)[12338].second.push_front(p_6_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_awaddr.bind(*p_6_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12357].first = 3;
        (*_glb_hdl_sc_channel_map)[12357].second.push_front(p_6_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_awlen.bind(*p_6_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12359].first = 3;
        (*_glb_hdl_sc_channel_map)[12359].second.push_front(p_6_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awsize.bind(*p_6_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12364].first = 3;
        (*_glb_hdl_sc_channel_map)[12364].second.push_front(p_6_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_awlock.bind(*p_6_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1288].first = 1;
        (*_glb_hdl_sc_channel_map)[1288].second.push_front(p_6_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awcache.bind(*p_6_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12358].first = 3;
        (*_glb_hdl_sc_channel_map)[12358].second.push_front(p_6_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awprot.bind(*p_6_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12360].first = 3;
        (*_glb_hdl_sc_channel_map)[12360].second.push_front(p_6_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awregion.bind(*p_6_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[12363].first = 3;
        (*_glb_hdl_sc_channel_map)[12363].second.push_front(p_6_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awqos.bind(*p_6_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12361].first = 3;
        (*_glb_hdl_sc_channel_map)[12361].second.push_front(p_6_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awvalid.bind(*p_6_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12365].first = 3;
        (*_glb_hdl_sc_channel_map)[12365].second.push_front(p_6_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awready.bind(*p_6_S04_AXI_awready);
        p_6_S04_AXI_awready->set_sv_netview_offsetfromdp(9453552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S04_AXI_wdata.bind(*p_6_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12374].first = 3;
        (*_glb_hdl_sc_channel_map)[12374].second.push_front(p_6_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_wstrb.bind(*p_6_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12377].first = 3;
        (*_glb_hdl_sc_channel_map)[12377].second.push_front(p_6_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wlast.bind(*p_6_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12375].first = 3;
        (*_glb_hdl_sc_channel_map)[12375].second.push_front(p_6_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wvalid.bind(*p_6_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12378].first = 3;
        (*_glb_hdl_sc_channel_map)[12378].second.push_front(p_6_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wready.bind(*p_6_S04_AXI_wready);
        p_6_S04_AXI_wready->set_sv_netview_offsetfromdp(9453832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_bresp.bind(*p_6_S04_AXI_bresp);
        p_6_S04_AXI_bresp->set_sv_netview_offsetfromdp(9453888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bvalid.bind(*p_6_S04_AXI_bvalid);
        p_6_S04_AXI_bvalid->set_sv_netview_offsetfromdp(9453944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bready.bind(*p_6_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12366].first = 3;
        (*_glb_hdl_sc_channel_map)[12366].second.push_front(p_6_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_araddr.bind(*p_6_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12348].first = 3;
        (*_glb_hdl_sc_channel_map)[12348].second.push_front(p_6_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_arlen.bind(*p_6_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12350].first = 3;
        (*_glb_hdl_sc_channel_map)[12350].second.push_front(p_6_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arsize.bind(*p_6_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12355].first = 3;
        (*_glb_hdl_sc_channel_map)[12355].second.push_front(p_6_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_arlock.bind(*p_6_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1289].first = 1;
        (*_glb_hdl_sc_channel_map)[1289].second.push_front(p_6_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arcache.bind(*p_6_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12349].first = 3;
        (*_glb_hdl_sc_channel_map)[12349].second.push_front(p_6_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arprot.bind(*p_6_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12351].first = 3;
        (*_glb_hdl_sc_channel_map)[12351].second.push_front(p_6_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arregion.bind(*p_6_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[12354].first = 3;
        (*_glb_hdl_sc_channel_map)[12354].second.push_front(p_6_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arqos.bind(*p_6_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12352].first = 3;
        (*_glb_hdl_sc_channel_map)[12352].second.push_front(p_6_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arvalid.bind(*p_6_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12356].first = 3;
        (*_glb_hdl_sc_channel_map)[12356].second.push_front(p_6_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arready.bind(*p_6_S04_AXI_arready);
        p_6_S04_AXI_arready->set_sv_netview_offsetfromdp(9454560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S04_AXI_rdata.bind(*p_6_S04_AXI_rdata);
        p_6_S04_AXI_rdata->set_sv_netview_offsetfromdp(9454616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_rresp.bind(*p_6_S04_AXI_rresp);
        p_6_S04_AXI_rresp->set_sv_netview_offsetfromdp(9454672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rlast.bind(*p_6_S04_AXI_rlast);
        p_6_S04_AXI_rlast->set_sv_netview_offsetfromdp(9454728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rvalid.bind(*p_6_S04_AXI_rvalid);
        p_6_S04_AXI_rvalid->set_sv_netview_offsetfromdp(9454784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rready.bind(*p_6_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12371].first = 3;
        (*_glb_hdl_sc_channel_map)[12371].second.push_front(p_6_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_awaddr.bind(*p_6_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12388].first = 3;
        (*_glb_hdl_sc_channel_map)[12388].second.push_front(p_6_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_awlen.bind(*p_6_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12390].first = 3;
        (*_glb_hdl_sc_channel_map)[12390].second.push_front(p_6_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awsize.bind(*p_6_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12395].first = 3;
        (*_glb_hdl_sc_channel_map)[12395].second.push_front(p_6_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_awlock.bind(*p_6_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1286].first = 1;
        (*_glb_hdl_sc_channel_map)[1286].second.push_front(p_6_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awcache.bind(*p_6_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12389].first = 3;
        (*_glb_hdl_sc_channel_map)[12389].second.push_front(p_6_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awprot.bind(*p_6_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12391].first = 3;
        (*_glb_hdl_sc_channel_map)[12391].second.push_front(p_6_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awregion.bind(*p_6_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[12394].first = 3;
        (*_glb_hdl_sc_channel_map)[12394].second.push_front(p_6_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awqos.bind(*p_6_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12392].first = 3;
        (*_glb_hdl_sc_channel_map)[12392].second.push_front(p_6_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awvalid.bind(*p_6_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12396].first = 3;
        (*_glb_hdl_sc_channel_map)[12396].second.push_front(p_6_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awready.bind(*p_6_S05_AXI_awready);
        p_6_S05_AXI_awready->set_sv_netview_offsetfromdp(9455400);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S05_AXI_wdata.bind(*p_6_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12405].first = 3;
        (*_glb_hdl_sc_channel_map)[12405].second.push_front(p_6_S05_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_wstrb.bind(*p_6_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12408].first = 3;
        (*_glb_hdl_sc_channel_map)[12408].second.push_front(p_6_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wlast.bind(*p_6_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12406].first = 3;
        (*_glb_hdl_sc_channel_map)[12406].second.push_front(p_6_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wvalid.bind(*p_6_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12409].first = 3;
        (*_glb_hdl_sc_channel_map)[12409].second.push_front(p_6_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wready.bind(*p_6_S05_AXI_wready);
        p_6_S05_AXI_wready->set_sv_netview_offsetfromdp(9455680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_bresp.bind(*p_6_S05_AXI_bresp);
        p_6_S05_AXI_bresp->set_sv_netview_offsetfromdp(9455736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bvalid.bind(*p_6_S05_AXI_bvalid);
        p_6_S05_AXI_bvalid->set_sv_netview_offsetfromdp(9455792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bready.bind(*p_6_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12397].first = 3;
        (*_glb_hdl_sc_channel_map)[12397].second.push_front(p_6_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_araddr.bind(*p_6_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12379].first = 3;
        (*_glb_hdl_sc_channel_map)[12379].second.push_front(p_6_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_arlen.bind(*p_6_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12381].first = 3;
        (*_glb_hdl_sc_channel_map)[12381].second.push_front(p_6_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arsize.bind(*p_6_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12386].first = 3;
        (*_glb_hdl_sc_channel_map)[12386].second.push_front(p_6_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_arlock.bind(*p_6_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1287].first = 1;
        (*_glb_hdl_sc_channel_map)[1287].second.push_front(p_6_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arcache.bind(*p_6_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12380].first = 3;
        (*_glb_hdl_sc_channel_map)[12380].second.push_front(p_6_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arprot.bind(*p_6_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12382].first = 3;
        (*_glb_hdl_sc_channel_map)[12382].second.push_front(p_6_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arregion.bind(*p_6_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[12385].first = 3;
        (*_glb_hdl_sc_channel_map)[12385].second.push_front(p_6_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arqos.bind(*p_6_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12383].first = 3;
        (*_glb_hdl_sc_channel_map)[12383].second.push_front(p_6_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arvalid.bind(*p_6_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12387].first = 3;
        (*_glb_hdl_sc_channel_map)[12387].second.push_front(p_6_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arready.bind(*p_6_S05_AXI_arready);
        p_6_S05_AXI_arready->set_sv_netview_offsetfromdp(9456408);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S05_AXI_rdata.bind(*p_6_S05_AXI_rdata);
        p_6_S05_AXI_rdata->set_sv_netview_offsetfromdp(9456464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_rresp.bind(*p_6_S05_AXI_rresp);
        p_6_S05_AXI_rresp->set_sv_netview_offsetfromdp(9456520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rlast.bind(*p_6_S05_AXI_rlast);
        p_6_S05_AXI_rlast->set_sv_netview_offsetfromdp(9456576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rvalid.bind(*p_6_S05_AXI_rvalid);
        p_6_S05_AXI_rvalid->set_sv_netview_offsetfromdp(9456632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rready.bind(*p_6_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12402].first = 3;
        (*_glb_hdl_sc_channel_map)[12402].second.push_front(p_6_S05_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_awaddr.bind(*p_6_S06_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[12419].first = 3;
        (*_glb_hdl_sc_channel_map)[12419].second.push_front(p_6_S06_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S06_AXI_awlen.bind(*p_6_S06_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[12421].first = 3;
        (*_glb_hdl_sc_channel_map)[12421].second.push_front(p_6_S06_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_awsize.bind(*p_6_S06_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[12426].first = 3;
        (*_glb_hdl_sc_channel_map)[12426].second.push_front(p_6_S06_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S06_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S06_AXI_awlock.bind(*p_6_S06_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1284].first = 1;
        (*_glb_hdl_sc_channel_map)[1284].second.push_front(p_6_S06_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awcache.bind(*p_6_S06_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[12420].first = 3;
        (*_glb_hdl_sc_channel_map)[12420].second.push_front(p_6_S06_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_awprot.bind(*p_6_S06_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[12422].first = 3;
        (*_glb_hdl_sc_channel_map)[12422].second.push_front(p_6_S06_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awregion.bind(*p_6_S06_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[12425].first = 3;
        (*_glb_hdl_sc_channel_map)[12425].second.push_front(p_6_S06_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awqos.bind(*p_6_S06_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[12423].first = 3;
        (*_glb_hdl_sc_channel_map)[12423].second.push_front(p_6_S06_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_awvalid.bind(*p_6_S06_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[12427].first = 3;
        (*_glb_hdl_sc_channel_map)[12427].second.push_front(p_6_S06_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_awready.bind(*p_6_S06_AXI_awready);
        p_6_S06_AXI_awready->set_sv_netview_offsetfromdp(9457248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S06_AXI_wdata.bind(*p_6_S06_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[12436].first = 3;
        (*_glb_hdl_sc_channel_map)[12436].second.push_front(p_6_S06_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_wstrb.bind(*p_6_S06_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[12439].first = 3;
        (*_glb_hdl_sc_channel_map)[12439].second.push_front(p_6_S06_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wlast.bind(*p_6_S06_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[12437].first = 3;
        (*_glb_hdl_sc_channel_map)[12437].second.push_front(p_6_S06_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wvalid.bind(*p_6_S06_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[12440].first = 3;
        (*_glb_hdl_sc_channel_map)[12440].second.push_front(p_6_S06_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wready.bind(*p_6_S06_AXI_wready);
        p_6_S06_AXI_wready->set_sv_netview_offsetfromdp(9457528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S06_AXI_bresp.bind(*p_6_S06_AXI_bresp);
        p_6_S06_AXI_bresp->set_sv_netview_offsetfromdp(9457584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_bvalid.bind(*p_6_S06_AXI_bvalid);
        p_6_S06_AXI_bvalid->set_sv_netview_offsetfromdp(9457640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_bready.bind(*p_6_S06_AXI_bready);
        (*_glb_hdl_sc_channel_map)[12428].first = 3;
        (*_glb_hdl_sc_channel_map)[12428].second.push_front(p_6_S06_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_araddr.bind(*p_6_S06_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[12410].first = 3;
        (*_glb_hdl_sc_channel_map)[12410].second.push_front(p_6_S06_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S06_AXI_arlen.bind(*p_6_S06_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[12412].first = 3;
        (*_glb_hdl_sc_channel_map)[12412].second.push_front(p_6_S06_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_arsize.bind(*p_6_S06_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[12417].first = 3;
        (*_glb_hdl_sc_channel_map)[12417].second.push_front(p_6_S06_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S06_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S06_AXI_arlock.bind(*p_6_S06_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1285].first = 1;
        (*_glb_hdl_sc_channel_map)[1285].second.push_front(p_6_S06_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arcache.bind(*p_6_S06_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[12411].first = 3;
        (*_glb_hdl_sc_channel_map)[12411].second.push_front(p_6_S06_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_arprot.bind(*p_6_S06_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[12413].first = 3;
        (*_glb_hdl_sc_channel_map)[12413].second.push_front(p_6_S06_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arregion.bind(*p_6_S06_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[12416].first = 3;
        (*_glb_hdl_sc_channel_map)[12416].second.push_front(p_6_S06_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arqos.bind(*p_6_S06_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[12414].first = 3;
        (*_glb_hdl_sc_channel_map)[12414].second.push_front(p_6_S06_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_arvalid.bind(*p_6_S06_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[12418].first = 3;
        (*_glb_hdl_sc_channel_map)[12418].second.push_front(p_6_S06_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_arready.bind(*p_6_S06_AXI_arready);
        p_6_S06_AXI_arready->set_sv_netview_offsetfromdp(9458256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S06_AXI_rdata.bind(*p_6_S06_AXI_rdata);
        p_6_S06_AXI_rdata->set_sv_netview_offsetfromdp(9458312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S06_AXI_rresp.bind(*p_6_S06_AXI_rresp);
        p_6_S06_AXI_rresp->set_sv_netview_offsetfromdp(9458368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rlast.bind(*p_6_S06_AXI_rlast);
        p_6_S06_AXI_rlast->set_sv_netview_offsetfromdp(9458424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rvalid.bind(*p_6_S06_AXI_rvalid);
        p_6_S06_AXI_rvalid->set_sv_netview_offsetfromdp(9458480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rready.bind(*p_6_S06_AXI_rready);
        (*_glb_hdl_sc_channel_map)[12433].first = 3;
        (*_glb_hdl_sc_channel_map)[12433].second.push_front(p_6_S06_AXI_rready);
        xsim_sc_channel<0, bool > *p_6_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_6->ddr4_mem_calib_complete.bind(*p_6_ddr4_mem_calib_complete);
        p_6_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(9458592);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_awid.bind(*p_6_M00_AXI_awid);
        p_6_M00_AXI_awid->set_sv_netview_offsetfromdp(9458648);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_awaddr.bind(*p_6_M00_AXI_awaddr);
        p_6_M00_AXI_awaddr->set_sv_netview_offsetfromdp(9458704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_awlen.bind(*p_6_M00_AXI_awlen);
        p_6_M00_AXI_awlen->set_sv_netview_offsetfromdp(9458760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awsize.bind(*p_6_M00_AXI_awsize);
        p_6_M00_AXI_awsize->set_sv_netview_offsetfromdp(9458816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_awburst.bind(*p_6_M00_AXI_awburst);
        p_6_M00_AXI_awburst->set_sv_netview_offsetfromdp(9458872);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_awlock.bind(*p_6_M00_AXI_awlock);
        p_6_M00_AXI_awlock->set_sv_netview_offsetfromdp(9458928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awcache.bind(*p_6_M00_AXI_awcache);
        p_6_M00_AXI_awcache->set_sv_netview_offsetfromdp(9458984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awprot.bind(*p_6_M00_AXI_awprot);
        p_6_M00_AXI_awprot->set_sv_netview_offsetfromdp(9459040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awqos.bind(*p_6_M00_AXI_awqos);
        p_6_M00_AXI_awqos->set_sv_netview_offsetfromdp(9459096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_awuser.bind(*p_6_M00_AXI_awuser);
        p_6_M00_AXI_awuser->set_sv_netview_offsetfromdp(9459152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awvalid.bind(*p_6_M00_AXI_awvalid);
        p_6_M00_AXI_awvalid->set_sv_netview_offsetfromdp(9459208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awready.bind(*p_6_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[12047].first = 3;
        (*_glb_hdl_sc_channel_map)[12047].second.push_front(p_6_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_wdata.bind(*p_6_M00_AXI_wdata);
        p_6_M00_AXI_wdata->set_sv_netview_offsetfromdp(9459320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M00_AXI_wstrb.bind(*p_6_M00_AXI_wstrb);
        p_6_M00_AXI_wstrb->set_sv_netview_offsetfromdp(9459376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wlast.bind(*p_6_M00_AXI_wlast);
        p_6_M00_AXI_wlast->set_sv_netview_offsetfromdp(9459432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wuser.bind(*p_6_M00_AXI_wuser);
        p_6_M00_AXI_wuser->set_sv_netview_offsetfromdp(9459488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wvalid.bind(*p_6_M00_AXI_wvalid);
        p_6_M00_AXI_wvalid->set_sv_netview_offsetfromdp(9459544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wready.bind(*p_6_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[12065].first = 3;
        (*_glb_hdl_sc_channel_map)[12065].second.push_front(p_6_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_bid.bind(*p_6_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[12051].first = 3;
        (*_glb_hdl_sc_channel_map)[12051].second.push_front(p_6_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_bresp.bind(*p_6_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[12053].first = 3;
        (*_glb_hdl_sc_channel_map)[12053].second.push_front(p_6_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_buser.bind(*p_6_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[12054].first = 3;
        (*_glb_hdl_sc_channel_map)[12054].second.push_front(p_6_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bvalid.bind(*p_6_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[12055].first = 3;
        (*_glb_hdl_sc_channel_map)[12055].second.push_front(p_6_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bready.bind(*p_6_M00_AXI_bready);
        p_6_M00_AXI_bready->set_sv_netview_offsetfromdp(9459880);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_arid.bind(*p_6_M00_AXI_arid);
        p_6_M00_AXI_arid->set_sv_netview_offsetfromdp(9459936);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_araddr.bind(*p_6_M00_AXI_araddr);
        p_6_M00_AXI_araddr->set_sv_netview_offsetfromdp(9459992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_arlen.bind(*p_6_M00_AXI_arlen);
        p_6_M00_AXI_arlen->set_sv_netview_offsetfromdp(9460048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arsize.bind(*p_6_M00_AXI_arsize);
        p_6_M00_AXI_arsize->set_sv_netview_offsetfromdp(9460104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_arburst.bind(*p_6_M00_AXI_arburst);
        p_6_M00_AXI_arburst->set_sv_netview_offsetfromdp(9460160);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_arlock.bind(*p_6_M00_AXI_arlock);
        p_6_M00_AXI_arlock->set_sv_netview_offsetfromdp(9460216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arcache.bind(*p_6_M00_AXI_arcache);
        p_6_M00_AXI_arcache->set_sv_netview_offsetfromdp(9460272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arprot.bind(*p_6_M00_AXI_arprot);
        p_6_M00_AXI_arprot->set_sv_netview_offsetfromdp(9460328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arqos.bind(*p_6_M00_AXI_arqos);
        p_6_M00_AXI_arqos->set_sv_netview_offsetfromdp(9460384);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_aruser.bind(*p_6_M00_AXI_aruser);
        p_6_M00_AXI_aruser->set_sv_netview_offsetfromdp(9460440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arvalid.bind(*p_6_M00_AXI_arvalid);
        p_6_M00_AXI_arvalid->set_sv_netview_offsetfromdp(9460496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arready.bind(*p_6_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[12035].first = 3;
        (*_glb_hdl_sc_channel_map)[12035].second.push_front(p_6_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_rid.bind(*p_6_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[12057].first = 3;
        (*_glb_hdl_sc_channel_map)[12057].second.push_front(p_6_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_rdata.bind(*p_6_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[12056].first = 3;
        (*_glb_hdl_sc_channel_map)[12056].second.push_front(p_6_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_rresp.bind(*p_6_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[12060].first = 3;
        (*_glb_hdl_sc_channel_map)[12060].second.push_front(p_6_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rlast.bind(*p_6_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[12058].first = 3;
        (*_glb_hdl_sc_channel_map)[12058].second.push_front(p_6_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_ruser.bind(*p_6_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[12061].first = 3;
        (*_glb_hdl_sc_channel_map)[12061].second.push_front(p_6_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rvalid.bind(*p_6_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[12062].first = 3;
        (*_glb_hdl_sc_channel_map)[12062].second.push_front(p_6_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rready.bind(*p_6_M00_AXI_rready);
        p_6_M00_AXI_rready->set_sv_netview_offsetfromdp(9460944);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_awaddr.bind(*p_6_M01_AXI_awaddr);
        p_6_M01_AXI_awaddr->set_sv_netview_offsetfromdp(9461000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_awlen.bind(*p_6_M01_AXI_awlen);
        p_6_M01_AXI_awlen->set_sv_netview_offsetfromdp(9461056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awsize.bind(*p_6_M01_AXI_awsize);
        p_6_M01_AXI_awsize->set_sv_netview_offsetfromdp(9461112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_awburst.bind(*p_6_M01_AXI_awburst);
        p_6_M01_AXI_awburst->set_sv_netview_offsetfromdp(9461168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awprot.bind(*p_6_M01_AXI_awprot);
        p_6_M01_AXI_awprot->set_sv_netview_offsetfromdp(9461224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awvalid.bind(*p_6_M01_AXI_awvalid);
        p_6_M01_AXI_awvalid->set_sv_netview_offsetfromdp(9461280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awready.bind(*p_6_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[12080].first = 3;
        (*_glb_hdl_sc_channel_map)[12080].second.push_front(p_6_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_wdata.bind(*p_6_M01_AXI_wdata);
        p_6_M01_AXI_wdata->set_sv_netview_offsetfromdp(9461392);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M01_AXI_wstrb.bind(*p_6_M01_AXI_wstrb);
        p_6_M01_AXI_wstrb->set_sv_netview_offsetfromdp(9461448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wlast.bind(*p_6_M01_AXI_wlast);
        p_6_M01_AXI_wlast->set_sv_netview_offsetfromdp(9461504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wvalid.bind(*p_6_M01_AXI_wvalid);
        p_6_M01_AXI_wvalid->set_sv_netview_offsetfromdp(9461560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wready.bind(*p_6_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[12093].first = 3;
        (*_glb_hdl_sc_channel_map)[12093].second.push_front(p_6_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_bresp.bind(*p_6_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[12084].first = 3;
        (*_glb_hdl_sc_channel_map)[12084].second.push_front(p_6_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bvalid.bind(*p_6_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[12085].first = 3;
        (*_glb_hdl_sc_channel_map)[12085].second.push_front(p_6_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bready.bind(*p_6_M01_AXI_bready);
        p_6_M01_AXI_bready->set_sv_netview_offsetfromdp(9461784);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_araddr.bind(*p_6_M01_AXI_araddr);
        p_6_M01_AXI_araddr->set_sv_netview_offsetfromdp(9461840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_arlen.bind(*p_6_M01_AXI_arlen);
        p_6_M01_AXI_arlen->set_sv_netview_offsetfromdp(9461896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arsize.bind(*p_6_M01_AXI_arsize);
        p_6_M01_AXI_arsize->set_sv_netview_offsetfromdp(9461952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_arburst.bind(*p_6_M01_AXI_arburst);
        p_6_M01_AXI_arburst->set_sv_netview_offsetfromdp(9462008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arprot.bind(*p_6_M01_AXI_arprot);
        p_6_M01_AXI_arprot->set_sv_netview_offsetfromdp(9462064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arvalid.bind(*p_6_M01_AXI_arvalid);
        p_6_M01_AXI_arvalid->set_sv_netview_offsetfromdp(9462120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arready.bind(*p_6_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[12073].first = 3;
        (*_glb_hdl_sc_channel_map)[12073].second.push_front(p_6_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_rdata.bind(*p_6_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[12086].first = 3;
        (*_glb_hdl_sc_channel_map)[12086].second.push_front(p_6_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_rresp.bind(*p_6_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[12089].first = 3;
        (*_glb_hdl_sc_channel_map)[12089].second.push_front(p_6_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rlast.bind(*p_6_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[12087].first = 3;
        (*_glb_hdl_sc_channel_map)[12087].second.push_front(p_6_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rvalid.bind(*p_6_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[12090].first = 3;
        (*_glb_hdl_sc_channel_map)[12090].second.push_front(p_6_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rready.bind(*p_6_M01_AXI_rready);
        p_6_M01_AXI_rready->set_sv_netview_offsetfromdp(9462456);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_awid.bind(*p_6_M02_AXI_awid);
        p_6_M02_AXI_awid->set_sv_netview_offsetfromdp(9462512);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_awaddr.bind(*p_6_M02_AXI_awaddr);
        p_6_M02_AXI_awaddr->set_sv_netview_offsetfromdp(9462568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_awlen.bind(*p_6_M02_AXI_awlen);
        p_6_M02_AXI_awlen->set_sv_netview_offsetfromdp(9462624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awsize.bind(*p_6_M02_AXI_awsize);
        p_6_M02_AXI_awsize->set_sv_netview_offsetfromdp(9462680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_awburst.bind(*p_6_M02_AXI_awburst);
        p_6_M02_AXI_awburst->set_sv_netview_offsetfromdp(9462736);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_awlock.bind(*p_6_M02_AXI_awlock);
        p_6_M02_AXI_awlock->set_sv_netview_offsetfromdp(9462792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awcache.bind(*p_6_M02_AXI_awcache);
        p_6_M02_AXI_awcache->set_sv_netview_offsetfromdp(9462848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awprot.bind(*p_6_M02_AXI_awprot);
        p_6_M02_AXI_awprot->set_sv_netview_offsetfromdp(9462904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awqos.bind(*p_6_M02_AXI_awqos);
        p_6_M02_AXI_awqos->set_sv_netview_offsetfromdp(9462960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_awuser.bind(*p_6_M02_AXI_awuser);
        p_6_M02_AXI_awuser->set_sv_netview_offsetfromdp(9463016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awvalid.bind(*p_6_M02_AXI_awvalid);
        p_6_M02_AXI_awvalid->set_sv_netview_offsetfromdp(9463072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awready.bind(*p_6_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[12116].first = 3;
        (*_glb_hdl_sc_channel_map)[12116].second.push_front(p_6_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_wdata.bind(*p_6_M02_AXI_wdata);
        p_6_M02_AXI_wdata->set_sv_netview_offsetfromdp(9463184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M02_AXI_wstrb.bind(*p_6_M02_AXI_wstrb);
        p_6_M02_AXI_wstrb->set_sv_netview_offsetfromdp(9463240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wlast.bind(*p_6_M02_AXI_wlast);
        p_6_M02_AXI_wlast->set_sv_netview_offsetfromdp(9463296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wuser.bind(*p_6_M02_AXI_wuser);
        p_6_M02_AXI_wuser->set_sv_netview_offsetfromdp(9463352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wvalid.bind(*p_6_M02_AXI_wvalid);
        p_6_M02_AXI_wvalid->set_sv_netview_offsetfromdp(9463408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wready.bind(*p_6_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[12134].first = 3;
        (*_glb_hdl_sc_channel_map)[12134].second.push_front(p_6_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_bid.bind(*p_6_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[12120].first = 3;
        (*_glb_hdl_sc_channel_map)[12120].second.push_front(p_6_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_bresp.bind(*p_6_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[12122].first = 3;
        (*_glb_hdl_sc_channel_map)[12122].second.push_front(p_6_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_buser.bind(*p_6_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[12123].first = 3;
        (*_glb_hdl_sc_channel_map)[12123].second.push_front(p_6_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bvalid.bind(*p_6_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[12124].first = 3;
        (*_glb_hdl_sc_channel_map)[12124].second.push_front(p_6_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bready.bind(*p_6_M02_AXI_bready);
        p_6_M02_AXI_bready->set_sv_netview_offsetfromdp(9463744);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_arid.bind(*p_6_M02_AXI_arid);
        p_6_M02_AXI_arid->set_sv_netview_offsetfromdp(9463800);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_araddr.bind(*p_6_M02_AXI_araddr);
        p_6_M02_AXI_araddr->set_sv_netview_offsetfromdp(9463856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_arlen.bind(*p_6_M02_AXI_arlen);
        p_6_M02_AXI_arlen->set_sv_netview_offsetfromdp(9463912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arsize.bind(*p_6_M02_AXI_arsize);
        p_6_M02_AXI_arsize->set_sv_netview_offsetfromdp(9463968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_arburst.bind(*p_6_M02_AXI_arburst);
        p_6_M02_AXI_arburst->set_sv_netview_offsetfromdp(9464024);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_arlock.bind(*p_6_M02_AXI_arlock);
        p_6_M02_AXI_arlock->set_sv_netview_offsetfromdp(9464080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arcache.bind(*p_6_M02_AXI_arcache);
        p_6_M02_AXI_arcache->set_sv_netview_offsetfromdp(9464136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arprot.bind(*p_6_M02_AXI_arprot);
        p_6_M02_AXI_arprot->set_sv_netview_offsetfromdp(9464192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arqos.bind(*p_6_M02_AXI_arqos);
        p_6_M02_AXI_arqos->set_sv_netview_offsetfromdp(9464248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_aruser.bind(*p_6_M02_AXI_aruser);
        p_6_M02_AXI_aruser->set_sv_netview_offsetfromdp(9464304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arvalid.bind(*p_6_M02_AXI_arvalid);
        p_6_M02_AXI_arvalid->set_sv_netview_offsetfromdp(9464360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arready.bind(*p_6_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[12104].first = 3;
        (*_glb_hdl_sc_channel_map)[12104].second.push_front(p_6_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_rid.bind(*p_6_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[12126].first = 3;
        (*_glb_hdl_sc_channel_map)[12126].second.push_front(p_6_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_rdata.bind(*p_6_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[12125].first = 3;
        (*_glb_hdl_sc_channel_map)[12125].second.push_front(p_6_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_rresp.bind(*p_6_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[12129].first = 3;
        (*_glb_hdl_sc_channel_map)[12129].second.push_front(p_6_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rlast.bind(*p_6_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[12127].first = 3;
        (*_glb_hdl_sc_channel_map)[12127].second.push_front(p_6_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_ruser.bind(*p_6_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[12130].first = 3;
        (*_glb_hdl_sc_channel_map)[12130].second.push_front(p_6_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rvalid.bind(*p_6_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[12131].first = 3;
        (*_glb_hdl_sc_channel_map)[12131].second.push_front(p_6_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rready.bind(*p_6_M02_AXI_rready);
        p_6_M02_AXI_rready->set_sv_netview_offsetfromdp(9464808);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_awid.bind(*p_6_M03_AXI_awid);
        p_6_M03_AXI_awid->set_sv_netview_offsetfromdp(9464864);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_awaddr.bind(*p_6_M03_AXI_awaddr);
        p_6_M03_AXI_awaddr->set_sv_netview_offsetfromdp(9464920);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_awlen.bind(*p_6_M03_AXI_awlen);
        p_6_M03_AXI_awlen->set_sv_netview_offsetfromdp(9464976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awsize.bind(*p_6_M03_AXI_awsize);
        p_6_M03_AXI_awsize->set_sv_netview_offsetfromdp(9465032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_awburst.bind(*p_6_M03_AXI_awburst);
        p_6_M03_AXI_awburst->set_sv_netview_offsetfromdp(9465088);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_awlock.bind(*p_6_M03_AXI_awlock);
        p_6_M03_AXI_awlock->set_sv_netview_offsetfromdp(9465144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awcache.bind(*p_6_M03_AXI_awcache);
        p_6_M03_AXI_awcache->set_sv_netview_offsetfromdp(9465200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awprot.bind(*p_6_M03_AXI_awprot);
        p_6_M03_AXI_awprot->set_sv_netview_offsetfromdp(9465256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awqos.bind(*p_6_M03_AXI_awqos);
        p_6_M03_AXI_awqos->set_sv_netview_offsetfromdp(9465312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_awuser.bind(*p_6_M03_AXI_awuser);
        p_6_M03_AXI_awuser->set_sv_netview_offsetfromdp(9465368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awvalid.bind(*p_6_M03_AXI_awvalid);
        p_6_M03_AXI_awvalid->set_sv_netview_offsetfromdp(9465424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awready.bind(*p_6_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[12158].first = 3;
        (*_glb_hdl_sc_channel_map)[12158].second.push_front(p_6_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_wdata.bind(*p_6_M03_AXI_wdata);
        p_6_M03_AXI_wdata->set_sv_netview_offsetfromdp(9465536);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M03_AXI_wstrb.bind(*p_6_M03_AXI_wstrb);
        p_6_M03_AXI_wstrb->set_sv_netview_offsetfromdp(9465592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wlast.bind(*p_6_M03_AXI_wlast);
        p_6_M03_AXI_wlast->set_sv_netview_offsetfromdp(9465648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wuser.bind(*p_6_M03_AXI_wuser);
        p_6_M03_AXI_wuser->set_sv_netview_offsetfromdp(9465704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wvalid.bind(*p_6_M03_AXI_wvalid);
        p_6_M03_AXI_wvalid->set_sv_netview_offsetfromdp(9465760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wready.bind(*p_6_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[12176].first = 3;
        (*_glb_hdl_sc_channel_map)[12176].second.push_front(p_6_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_bid.bind(*p_6_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[12162].first = 3;
        (*_glb_hdl_sc_channel_map)[12162].second.push_front(p_6_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_bresp.bind(*p_6_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[12164].first = 3;
        (*_glb_hdl_sc_channel_map)[12164].second.push_front(p_6_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_buser.bind(*p_6_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[12165].first = 3;
        (*_glb_hdl_sc_channel_map)[12165].second.push_front(p_6_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bvalid.bind(*p_6_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[12166].first = 3;
        (*_glb_hdl_sc_channel_map)[12166].second.push_front(p_6_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bready.bind(*p_6_M03_AXI_bready);
        p_6_M03_AXI_bready->set_sv_netview_offsetfromdp(9466096);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_arid.bind(*p_6_M03_AXI_arid);
        p_6_M03_AXI_arid->set_sv_netview_offsetfromdp(9466152);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_araddr.bind(*p_6_M03_AXI_araddr);
        p_6_M03_AXI_araddr->set_sv_netview_offsetfromdp(9466208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_arlen.bind(*p_6_M03_AXI_arlen);
        p_6_M03_AXI_arlen->set_sv_netview_offsetfromdp(9466264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arsize.bind(*p_6_M03_AXI_arsize);
        p_6_M03_AXI_arsize->set_sv_netview_offsetfromdp(9466320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_arburst.bind(*p_6_M03_AXI_arburst);
        p_6_M03_AXI_arburst->set_sv_netview_offsetfromdp(9466376);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_arlock.bind(*p_6_M03_AXI_arlock);
        p_6_M03_AXI_arlock->set_sv_netview_offsetfromdp(9466432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arcache.bind(*p_6_M03_AXI_arcache);
        p_6_M03_AXI_arcache->set_sv_netview_offsetfromdp(9466488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arprot.bind(*p_6_M03_AXI_arprot);
        p_6_M03_AXI_arprot->set_sv_netview_offsetfromdp(9466544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arqos.bind(*p_6_M03_AXI_arqos);
        p_6_M03_AXI_arqos->set_sv_netview_offsetfromdp(9466600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_aruser.bind(*p_6_M03_AXI_aruser);
        p_6_M03_AXI_aruser->set_sv_netview_offsetfromdp(9466656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arvalid.bind(*p_6_M03_AXI_arvalid);
        p_6_M03_AXI_arvalid->set_sv_netview_offsetfromdp(9466712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arready.bind(*p_6_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[12146].first = 3;
        (*_glb_hdl_sc_channel_map)[12146].second.push_front(p_6_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_rid.bind(*p_6_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[12168].first = 3;
        (*_glb_hdl_sc_channel_map)[12168].second.push_front(p_6_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_rdata.bind(*p_6_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[12167].first = 3;
        (*_glb_hdl_sc_channel_map)[12167].second.push_front(p_6_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_rresp.bind(*p_6_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[12171].first = 3;
        (*_glb_hdl_sc_channel_map)[12171].second.push_front(p_6_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rlast.bind(*p_6_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[12169].first = 3;
        (*_glb_hdl_sc_channel_map)[12169].second.push_front(p_6_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_ruser.bind(*p_6_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[12172].first = 3;
        (*_glb_hdl_sc_channel_map)[12172].second.push_front(p_6_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rvalid.bind(*p_6_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[12173].first = 3;
        (*_glb_hdl_sc_channel_map)[12173].second.push_front(p_6_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rready.bind(*p_6_M03_AXI_rready);
        p_6_M03_AXI_rready->set_sv_netview_offsetfromdp(9467160);
        sc_inst_7 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_7->xsim_set_dbg_index(31);
        sc_inst_8 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_8->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[12489].first = 1;
        (*_glb_hdl_sc_channel_map)[12489].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[12462].first = 3;
        (*_glb_hdl_sc_channel_map)[12462].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[12459].first = 3;
        (*_glb_hdl_sc_channel_map)[12459].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[12463].first = 3;
        (*_glb_hdl_sc_channel_map)[12463].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[12468].first = 3;
        (*_glb_hdl_sc_channel_map)[12468].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[12460].first = 3;
        (*_glb_hdl_sc_channel_map)[12460].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[12464].first = 1;
        (*_glb_hdl_sc_channel_map)[12464].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[12461].first = 3;
        (*_glb_hdl_sc_channel_map)[12461].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[12465].first = 3;
        (*_glb_hdl_sc_channel_map)[12465].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1282].first = 3;
        (*_glb_hdl_sc_channel_map)[1282].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[12466].first = 3;
        (*_glb_hdl_sc_channel_map)[12466].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[12469].first = 3;
        (*_glb_hdl_sc_channel_map)[12469].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[12470].first = 1;
        (*_glb_hdl_sc_channel_map)[12470].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(9468040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[12483].first = 3;
        (*_glb_hdl_sc_channel_map)[12483].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[12486].first = 3;
        (*_glb_hdl_sc_channel_map)[12486].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[12484].first = 1;
        (*_glb_hdl_sc_channel_map)[12484].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[12487].first = 3;
        (*_glb_hdl_sc_channel_map)[12487].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[12488].first = 1;
        (*_glb_hdl_sc_channel_map)[12488].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(9468376);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(9468432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(9468488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(9468544);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(9468600);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[12472].first = 1;
        (*_glb_hdl_sc_channel_map)[12472].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[12450].first = 3;
        (*_glb_hdl_sc_channel_map)[12450].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[12446].first = 3;
        (*_glb_hdl_sc_channel_map)[12446].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[12451].first = 3;
        (*_glb_hdl_sc_channel_map)[12451].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[12456].first = 3;
        (*_glb_hdl_sc_channel_map)[12456].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[12447].first = 3;
        (*_glb_hdl_sc_channel_map)[12447].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[12452].first = 1;
        (*_glb_hdl_sc_channel_map)[12452].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[12448].first = 3;
        (*_glb_hdl_sc_channel_map)[12448].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[12453].first = 3;
        (*_glb_hdl_sc_channel_map)[12453].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1283].first = 3;
        (*_glb_hdl_sc_channel_map)[1283].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[12454].first = 3;
        (*_glb_hdl_sc_channel_map)[12454].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[12457].first = 3;
        (*_glb_hdl_sc_channel_map)[12457].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[12458].first = 1;
        (*_glb_hdl_sc_channel_map)[12458].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(9469384);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(9469440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(9469496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(9469552);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(9469608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(9469664);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(9469720);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[12479].first = 1;
        (*_glb_hdl_sc_channel_map)[12479].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[12445].first = 1;
        (*_glb_hdl_sc_channel_map)[12445].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[12449].first = 1;
        (*_glb_hdl_sc_channel_map)[12449].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1264].first = 1;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1263].first = 3;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1258].first = 1;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(9470616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1254].first = 1;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(9470952);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(9471008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(9471064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(9471120);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(9471176);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1278].first = 3;
        (*_glb_hdl_sc_channel_map)[1278].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1281].first = 3;
        (*_glb_hdl_sc_channel_map)[1281].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1277].first = 3;
        (*_glb_hdl_sc_channel_map)[1277].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1272].first = 3;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1280].first = 3;
        (*_glb_hdl_sc_channel_map)[1280].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1276].first = 1;
        (*_glb_hdl_sc_channel_map)[1276].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1279].first = 3;
        (*_glb_hdl_sc_channel_map)[1279].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1275].first = 3;
        (*_glb_hdl_sc_channel_map)[1275].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1273].first = 3;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1274].first = 3;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1271].first = 3;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1270].first = 1;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(9471960);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(9472016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(9472072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(9472128);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(9472184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(9472240);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(9472296);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1256].first = 1;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12490].first = 1;
        (*_glb_hdl_sc_channel_map)[12490].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12491].first = 1;
        (*_glb_hdl_sc_channel_map)[12491].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_9->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[12549].first = 1;
        (*_glb_hdl_sc_channel_map)[12549].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[12522].first = 3;
        (*_glb_hdl_sc_channel_map)[12522].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[12519].first = 3;
        (*_glb_hdl_sc_channel_map)[12519].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[12523].first = 3;
        (*_glb_hdl_sc_channel_map)[12523].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[12528].first = 3;
        (*_glb_hdl_sc_channel_map)[12528].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[12520].first = 3;
        (*_glb_hdl_sc_channel_map)[12520].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[12524].first = 1;
        (*_glb_hdl_sc_channel_map)[12524].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[12521].first = 3;
        (*_glb_hdl_sc_channel_map)[12521].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[12525].first = 3;
        (*_glb_hdl_sc_channel_map)[12525].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[12526].first = 3;
        (*_glb_hdl_sc_channel_map)[12526].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[12529].first = 3;
        (*_glb_hdl_sc_channel_map)[12529].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[12530].first = 1;
        (*_glb_hdl_sc_channel_map)[12530].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(9473296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[12543].first = 3;
        (*_glb_hdl_sc_channel_map)[12543].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[12546].first = 3;
        (*_glb_hdl_sc_channel_map)[12546].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[12544].first = 1;
        (*_glb_hdl_sc_channel_map)[12544].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[12547].first = 3;
        (*_glb_hdl_sc_channel_map)[12547].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[12548].first = 1;
        (*_glb_hdl_sc_channel_map)[12548].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(9473632);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(9473688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(9473744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(9473800);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(9473856);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[12532].first = 1;
        (*_glb_hdl_sc_channel_map)[12532].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[12510].first = 3;
        (*_glb_hdl_sc_channel_map)[12510].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[12506].first = 3;
        (*_glb_hdl_sc_channel_map)[12506].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[12511].first = 3;
        (*_glb_hdl_sc_channel_map)[12511].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[12516].first = 3;
        (*_glb_hdl_sc_channel_map)[12516].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[12507].first = 3;
        (*_glb_hdl_sc_channel_map)[12507].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[12512].first = 1;
        (*_glb_hdl_sc_channel_map)[12512].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[12508].first = 3;
        (*_glb_hdl_sc_channel_map)[12508].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[12513].first = 3;
        (*_glb_hdl_sc_channel_map)[12513].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[12514].first = 3;
        (*_glb_hdl_sc_channel_map)[12514].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[12517].first = 3;
        (*_glb_hdl_sc_channel_map)[12517].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[12518].first = 1;
        (*_glb_hdl_sc_channel_map)[12518].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(9474640);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(9474696);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(9474752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(9474808);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(9474864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(9474920);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(9474976);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[12539].first = 1;
        (*_glb_hdl_sc_channel_map)[12539].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[12505].first = 1;
        (*_glb_hdl_sc_channel_map)[12505].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[12509].first = 1;
        (*_glb_hdl_sc_channel_map)[12509].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1231].first = 1;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1230].first = 3;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1225].first = 1;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(9475872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1221].first = 1;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(9476208);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(9476264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(9476320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(9476376);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(9476432);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1245].first = 3;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1244].first = 3;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1241].first = 3;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1238].first = 3;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1237].first = 1;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(9477216);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(9477272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(9477328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(9477384);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(9477440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(9477496);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(9477552);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1223].first = 1;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12550].first = 1;
        (*_glb_hdl_sc_channel_map)[12550].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12551].first = 1;
        (*_glb_hdl_sc_channel_map)[12551].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_10->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[12609].first = 1;
        (*_glb_hdl_sc_channel_map)[12609].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[12582].first = 3;
        (*_glb_hdl_sc_channel_map)[12582].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[12579].first = 3;
        (*_glb_hdl_sc_channel_map)[12579].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[12583].first = 3;
        (*_glb_hdl_sc_channel_map)[12583].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[12588].first = 3;
        (*_glb_hdl_sc_channel_map)[12588].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[12580].first = 3;
        (*_glb_hdl_sc_channel_map)[12580].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[12584].first = 1;
        (*_glb_hdl_sc_channel_map)[12584].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[12581].first = 3;
        (*_glb_hdl_sc_channel_map)[12581].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[12585].first = 3;
        (*_glb_hdl_sc_channel_map)[12585].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[12586].first = 3;
        (*_glb_hdl_sc_channel_map)[12586].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[12589].first = 3;
        (*_glb_hdl_sc_channel_map)[12589].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[12590].first = 1;
        (*_glb_hdl_sc_channel_map)[12590].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(9478552);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[12603].first = 3;
        (*_glb_hdl_sc_channel_map)[12603].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[12606].first = 3;
        (*_glb_hdl_sc_channel_map)[12606].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[12604].first = 1;
        (*_glb_hdl_sc_channel_map)[12604].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[12607].first = 3;
        (*_glb_hdl_sc_channel_map)[12607].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[12608].first = 1;
        (*_glb_hdl_sc_channel_map)[12608].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(9478888);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(9478944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(9479000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(9479056);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(9479112);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[12592].first = 1;
        (*_glb_hdl_sc_channel_map)[12592].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[12570].first = 3;
        (*_glb_hdl_sc_channel_map)[12570].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[12566].first = 3;
        (*_glb_hdl_sc_channel_map)[12566].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[12571].first = 3;
        (*_glb_hdl_sc_channel_map)[12571].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[12576].first = 3;
        (*_glb_hdl_sc_channel_map)[12576].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[12567].first = 3;
        (*_glb_hdl_sc_channel_map)[12567].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[12572].first = 1;
        (*_glb_hdl_sc_channel_map)[12572].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[12568].first = 3;
        (*_glb_hdl_sc_channel_map)[12568].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[12573].first = 3;
        (*_glb_hdl_sc_channel_map)[12573].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[12574].first = 3;
        (*_glb_hdl_sc_channel_map)[12574].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[12577].first = 3;
        (*_glb_hdl_sc_channel_map)[12577].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[12578].first = 1;
        (*_glb_hdl_sc_channel_map)[12578].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(9479896);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(9479952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(9480008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(9480064);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(9480120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(9480176);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(9480232);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[12599].first = 1;
        (*_glb_hdl_sc_channel_map)[12599].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[12565].first = 1;
        (*_glb_hdl_sc_channel_map)[12565].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[12569].first = 1;
        (*_glb_hdl_sc_channel_map)[12569].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1198].first = 1;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1197].first = 3;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1192].first = 1;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(9481128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1188].first = 1;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(9481464);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(9481520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(9481576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(9481632);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(9481688);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1212].first = 3;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1211].first = 3;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1208].first = 3;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1205].first = 3;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1204].first = 1;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(9482472);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(9482528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(9482584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(9482640);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(9482696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(9482752);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(9482808);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1190].first = 1;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12610].first = 1;
        (*_glb_hdl_sc_channel_map)[12610].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12611].first = 1;
        (*_glb_hdl_sc_channel_map)[12611].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_11->xsim_set_dbg_index(693);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[12845].first = 3;
        (*_glb_hdl_sc_channel_map)[12845].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[12783].first = 3;
        (*_glb_hdl_sc_channel_map)[12783].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[12846].first = 3;
        (*_glb_hdl_sc_channel_map)[12846].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[12851].first = 3;
        (*_glb_hdl_sc_channel_map)[12851].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[12843].first = 3;
        (*_glb_hdl_sc_channel_map)[12843].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[12847].first = 1;
        (*_glb_hdl_sc_channel_map)[12847].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[12844].first = 3;
        (*_glb_hdl_sc_channel_map)[12844].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[12848].first = 3;
        (*_glb_hdl_sc_channel_map)[12848].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[12782].first = 3;
        (*_glb_hdl_sc_channel_map)[12782].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[12849].first = 3;
        (*_glb_hdl_sc_channel_map)[12849].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[12852].first = 3;
        (*_glb_hdl_sc_channel_map)[12852].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[12853].first = 1;
        (*_glb_hdl_sc_channel_map)[12853].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(9554184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[12866].first = 3;
        (*_glb_hdl_sc_channel_map)[12866].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[12869].first = 3;
        (*_glb_hdl_sc_channel_map)[12869].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[12867].first = 1;
        (*_glb_hdl_sc_channel_map)[12867].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[12870].first = 3;
        (*_glb_hdl_sc_channel_map)[12870].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[12871].first = 1;
        (*_glb_hdl_sc_channel_map)[12871].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(9554520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(9554576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(9554632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(9554688);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(9554744);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[12855].first = 1;
        (*_glb_hdl_sc_channel_map)[12855].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[12834].first = 3;
        (*_glb_hdl_sc_channel_map)[12834].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[12785].first = 3;
        (*_glb_hdl_sc_channel_map)[12785].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[12835].first = 3;
        (*_glb_hdl_sc_channel_map)[12835].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[12840].first = 3;
        (*_glb_hdl_sc_channel_map)[12840].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[12831].first = 3;
        (*_glb_hdl_sc_channel_map)[12831].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[12836].first = 1;
        (*_glb_hdl_sc_channel_map)[12836].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[12832].first = 3;
        (*_glb_hdl_sc_channel_map)[12832].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[12837].first = 3;
        (*_glb_hdl_sc_channel_map)[12837].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[12784].first = 3;
        (*_glb_hdl_sc_channel_map)[12784].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[12838].first = 3;
        (*_glb_hdl_sc_channel_map)[12838].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[12841].first = 3;
        (*_glb_hdl_sc_channel_map)[12841].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[12842].first = 1;
        (*_glb_hdl_sc_channel_map)[12842].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(9555528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(9555584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(9555640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(9555696);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(9555752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(9555808);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(9555864);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[12862].first = 1;
        (*_glb_hdl_sc_channel_map)[12862].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12830].first = 1;
        (*_glb_hdl_sc_channel_map)[12830].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12833].first = 1;
        (*_glb_hdl_sc_channel_map)[12833].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(9556088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(9556144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(9556200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(9556256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(9556312);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(9556368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(9556424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(9556480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(9556536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(9556592);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(9556648);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[12808].first = 1;
        (*_glb_hdl_sc_channel_map)[12808].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(9556760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(9556816);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(9556872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(9556928);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(9556984);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[12826].first = 1;
        (*_glb_hdl_sc_channel_map)[12826].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[12812].first = 3;
        (*_glb_hdl_sc_channel_map)[12812].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[12814].first = 3;
        (*_glb_hdl_sc_channel_map)[12814].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[12815].first = 3;
        (*_glb_hdl_sc_channel_map)[12815].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[12816].first = 1;
        (*_glb_hdl_sc_channel_map)[12816].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(9557320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(9557376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(9557432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(9557488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(9557544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(9557600);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(9557656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(9557712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(9557768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(9557824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(9557880);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(9557936);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[12796].first = 1;
        (*_glb_hdl_sc_channel_map)[12796].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[12818].first = 3;
        (*_glb_hdl_sc_channel_map)[12818].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[12817].first = 3;
        (*_glb_hdl_sc_channel_map)[12817].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[12821].first = 3;
        (*_glb_hdl_sc_channel_map)[12821].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[12819].first = 1;
        (*_glb_hdl_sc_channel_map)[12819].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[12822].first = 3;
        (*_glb_hdl_sc_channel_map)[12822].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[12823].first = 1;
        (*_glb_hdl_sc_channel_map)[12823].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(9558384);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[12786].first = 1;
        (*_glb_hdl_sc_channel_map)[12786].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[12790].first = 1;
        (*_glb_hdl_sc_channel_map)[12790].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_12->xsim_set_dbg_index(847);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[14769].first = 3;
        (*_glb_hdl_sc_channel_map)[14769].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14707].first = 3;
        (*_glb_hdl_sc_channel_map)[14707].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[14770].first = 3;
        (*_glb_hdl_sc_channel_map)[14770].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[14775].first = 3;
        (*_glb_hdl_sc_channel_map)[14775].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[14767].first = 3;
        (*_glb_hdl_sc_channel_map)[14767].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14771].first = 1;
        (*_glb_hdl_sc_channel_map)[14771].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14768].first = 3;
        (*_glb_hdl_sc_channel_map)[14768].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[14772].first = 3;
        (*_glb_hdl_sc_channel_map)[14772].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14706].first = 3;
        (*_glb_hdl_sc_channel_map)[14706].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14773].first = 3;
        (*_glb_hdl_sc_channel_map)[14773].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[14776].first = 3;
        (*_glb_hdl_sc_channel_map)[14776].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[14777].first = 1;
        (*_glb_hdl_sc_channel_map)[14777].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(10123616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[14790].first = 3;
        (*_glb_hdl_sc_channel_map)[14790].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[14793].first = 3;
        (*_glb_hdl_sc_channel_map)[14793].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[14791].first = 1;
        (*_glb_hdl_sc_channel_map)[14791].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[14794].first = 3;
        (*_glb_hdl_sc_channel_map)[14794].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[14795].first = 1;
        (*_glb_hdl_sc_channel_map)[14795].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(10123952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(10124008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(10124064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(10124120);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(10124176);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[14779].first = 1;
        (*_glb_hdl_sc_channel_map)[14779].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[14758].first = 3;
        (*_glb_hdl_sc_channel_map)[14758].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14709].first = 3;
        (*_glb_hdl_sc_channel_map)[14709].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[14759].first = 3;
        (*_glb_hdl_sc_channel_map)[14759].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[14764].first = 3;
        (*_glb_hdl_sc_channel_map)[14764].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[14755].first = 3;
        (*_glb_hdl_sc_channel_map)[14755].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14760].first = 1;
        (*_glb_hdl_sc_channel_map)[14760].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14756].first = 3;
        (*_glb_hdl_sc_channel_map)[14756].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[14761].first = 3;
        (*_glb_hdl_sc_channel_map)[14761].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14708].first = 3;
        (*_glb_hdl_sc_channel_map)[14708].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14762].first = 3;
        (*_glb_hdl_sc_channel_map)[14762].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[14765].first = 3;
        (*_glb_hdl_sc_channel_map)[14765].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[14766].first = 1;
        (*_glb_hdl_sc_channel_map)[14766].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(10124960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(10125016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(10125072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(10125128);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(10125184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(10125240);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(10125296);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[14786].first = 1;
        (*_glb_hdl_sc_channel_map)[14786].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14754].first = 1;
        (*_glb_hdl_sc_channel_map)[14754].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14757].first = 1;
        (*_glb_hdl_sc_channel_map)[14757].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(10125520);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(10125576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(10125632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(10125688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(10125744);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(10125800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(10125856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(10125912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(10125968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(10126024);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(10126080);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[14732].first = 1;
        (*_glb_hdl_sc_channel_map)[14732].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(10126192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(10126248);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(10126304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(10126360);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(10126416);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[14750].first = 1;
        (*_glb_hdl_sc_channel_map)[14750].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[14736].first = 3;
        (*_glb_hdl_sc_channel_map)[14736].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[14738].first = 3;
        (*_glb_hdl_sc_channel_map)[14738].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[14739].first = 3;
        (*_glb_hdl_sc_channel_map)[14739].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[14740].first = 1;
        (*_glb_hdl_sc_channel_map)[14740].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(10126752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(10126808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(10126864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(10126920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(10126976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(10127032);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(10127088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(10127144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(10127200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(10127256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(10127312);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(10127368);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[14720].first = 1;
        (*_glb_hdl_sc_channel_map)[14720].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[14742].first = 3;
        (*_glb_hdl_sc_channel_map)[14742].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[14741].first = 3;
        (*_glb_hdl_sc_channel_map)[14741].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[14745].first = 3;
        (*_glb_hdl_sc_channel_map)[14745].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[14743].first = 1;
        (*_glb_hdl_sc_channel_map)[14743].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[14746].first = 3;
        (*_glb_hdl_sc_channel_map)[14746].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[14747].first = 1;
        (*_glb_hdl_sc_channel_map)[14747].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(10127816);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14710].first = 1;
        (*_glb_hdl_sc_channel_map)[14710].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14714].first = 1;
        (*_glb_hdl_sc_channel_map)[14714].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_13->xsim_set_dbg_index(848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[14855].first = 3;
        (*_glb_hdl_sc_channel_map)[14855].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14703].first = 3;
        (*_glb_hdl_sc_channel_map)[14703].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[14856].first = 3;
        (*_glb_hdl_sc_channel_map)[14856].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[14861].first = 3;
        (*_glb_hdl_sc_channel_map)[14861].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[14853].first = 3;
        (*_glb_hdl_sc_channel_map)[14853].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14857].first = 1;
        (*_glb_hdl_sc_channel_map)[14857].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14854].first = 3;
        (*_glb_hdl_sc_channel_map)[14854].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[14858].first = 3;
        (*_glb_hdl_sc_channel_map)[14858].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14702].first = 3;
        (*_glb_hdl_sc_channel_map)[14702].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14859].first = 3;
        (*_glb_hdl_sc_channel_map)[14859].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[14862].first = 3;
        (*_glb_hdl_sc_channel_map)[14862].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[14863].first = 1;
        (*_glb_hdl_sc_channel_map)[14863].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(10128704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[14876].first = 3;
        (*_glb_hdl_sc_channel_map)[14876].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[14879].first = 3;
        (*_glb_hdl_sc_channel_map)[14879].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[14877].first = 1;
        (*_glb_hdl_sc_channel_map)[14877].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[14880].first = 3;
        (*_glb_hdl_sc_channel_map)[14880].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[14881].first = 1;
        (*_glb_hdl_sc_channel_map)[14881].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(10129040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(10129096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(10129152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(10129208);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(10129264);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[14865].first = 1;
        (*_glb_hdl_sc_channel_map)[14865].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[14844].first = 3;
        (*_glb_hdl_sc_channel_map)[14844].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14705].first = 3;
        (*_glb_hdl_sc_channel_map)[14705].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[14845].first = 3;
        (*_glb_hdl_sc_channel_map)[14845].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[14850].first = 3;
        (*_glb_hdl_sc_channel_map)[14850].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[14841].first = 3;
        (*_glb_hdl_sc_channel_map)[14841].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14846].first = 1;
        (*_glb_hdl_sc_channel_map)[14846].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14842].first = 3;
        (*_glb_hdl_sc_channel_map)[14842].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[14847].first = 3;
        (*_glb_hdl_sc_channel_map)[14847].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14704].first = 3;
        (*_glb_hdl_sc_channel_map)[14704].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14848].first = 3;
        (*_glb_hdl_sc_channel_map)[14848].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[14851].first = 3;
        (*_glb_hdl_sc_channel_map)[14851].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[14852].first = 1;
        (*_glb_hdl_sc_channel_map)[14852].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(10130048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(10130104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(10130160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(10130216);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(10130272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(10130328);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(10130384);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[14872].first = 1;
        (*_glb_hdl_sc_channel_map)[14872].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14840].first = 1;
        (*_glb_hdl_sc_channel_map)[14840].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14843].first = 1;
        (*_glb_hdl_sc_channel_map)[14843].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(10130608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(10130664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(10130720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(10130776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(10130832);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(10130888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(10130944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(10131000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(10131056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(10131112);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(10131168);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[14818].first = 1;
        (*_glb_hdl_sc_channel_map)[14818].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(10131280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(10131336);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(10131392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(10131448);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(10131504);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[14836].first = 1;
        (*_glb_hdl_sc_channel_map)[14836].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[14822].first = 3;
        (*_glb_hdl_sc_channel_map)[14822].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[14824].first = 3;
        (*_glb_hdl_sc_channel_map)[14824].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[14825].first = 3;
        (*_glb_hdl_sc_channel_map)[14825].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[14826].first = 1;
        (*_glb_hdl_sc_channel_map)[14826].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(10131840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(10131896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(10131952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(10132008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(10132064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(10132120);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(10132176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(10132232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(10132288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(10132344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(10132400);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(10132456);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[14806].first = 1;
        (*_glb_hdl_sc_channel_map)[14806].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[14828].first = 3;
        (*_glb_hdl_sc_channel_map)[14828].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[14827].first = 3;
        (*_glb_hdl_sc_channel_map)[14827].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[14831].first = 3;
        (*_glb_hdl_sc_channel_map)[14831].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[14829].first = 1;
        (*_glb_hdl_sc_channel_map)[14829].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[14832].first = 3;
        (*_glb_hdl_sc_channel_map)[14832].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[14833].first = 1;
        (*_glb_hdl_sc_channel_map)[14833].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(10132904);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[14796].first = 1;
        (*_glb_hdl_sc_channel_map)[14796].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[14800].first = 1;
        (*_glb_hdl_sc_channel_map)[14800].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_14->xsim_set_dbg_index(1046);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[17314].first = 3;
        (*_glb_hdl_sc_channel_map)[17314].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17252].first = 3;
        (*_glb_hdl_sc_channel_map)[17252].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[17315].first = 3;
        (*_glb_hdl_sc_channel_map)[17315].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[17320].first = 3;
        (*_glb_hdl_sc_channel_map)[17320].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[17312].first = 3;
        (*_glb_hdl_sc_channel_map)[17312].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17316].first = 1;
        (*_glb_hdl_sc_channel_map)[17316].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17313].first = 3;
        (*_glb_hdl_sc_channel_map)[17313].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[17317].first = 3;
        (*_glb_hdl_sc_channel_map)[17317].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17251].first = 3;
        (*_glb_hdl_sc_channel_map)[17251].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17318].first = 3;
        (*_glb_hdl_sc_channel_map)[17318].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[17321].first = 3;
        (*_glb_hdl_sc_channel_map)[17321].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[17322].first = 1;
        (*_glb_hdl_sc_channel_map)[17322].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(10706784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[17335].first = 3;
        (*_glb_hdl_sc_channel_map)[17335].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[17338].first = 3;
        (*_glb_hdl_sc_channel_map)[17338].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[17336].first = 1;
        (*_glb_hdl_sc_channel_map)[17336].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[17339].first = 3;
        (*_glb_hdl_sc_channel_map)[17339].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[17340].first = 1;
        (*_glb_hdl_sc_channel_map)[17340].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(10707120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(10707176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(10707232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(10707288);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(10707344);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[17324].first = 1;
        (*_glb_hdl_sc_channel_map)[17324].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[17303].first = 3;
        (*_glb_hdl_sc_channel_map)[17303].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17254].first = 3;
        (*_glb_hdl_sc_channel_map)[17254].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17304].first = 3;
        (*_glb_hdl_sc_channel_map)[17304].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[17309].first = 3;
        (*_glb_hdl_sc_channel_map)[17309].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17300].first = 3;
        (*_glb_hdl_sc_channel_map)[17300].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17305].first = 1;
        (*_glb_hdl_sc_channel_map)[17305].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17301].first = 3;
        (*_glb_hdl_sc_channel_map)[17301].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17306].first = 3;
        (*_glb_hdl_sc_channel_map)[17306].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17253].first = 3;
        (*_glb_hdl_sc_channel_map)[17253].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17307].first = 3;
        (*_glb_hdl_sc_channel_map)[17307].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[17310].first = 3;
        (*_glb_hdl_sc_channel_map)[17310].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[17311].first = 1;
        (*_glb_hdl_sc_channel_map)[17311].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(10708128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(10708184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(10708240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(10708296);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(10708352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(10708408);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(10708464);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[17331].first = 1;
        (*_glb_hdl_sc_channel_map)[17331].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17299].first = 1;
        (*_glb_hdl_sc_channel_map)[17299].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17302].first = 1;
        (*_glb_hdl_sc_channel_map)[17302].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(10708688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(10708744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(10708800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(10708856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(10708912);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(10708968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(10709024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(10709080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(10709136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(10709192);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(10709248);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[17277].first = 1;
        (*_glb_hdl_sc_channel_map)[17277].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(10709360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(10709416);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(10709472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(10709528);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(10709584);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[17295].first = 1;
        (*_glb_hdl_sc_channel_map)[17295].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[17281].first = 3;
        (*_glb_hdl_sc_channel_map)[17281].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[17283].first = 3;
        (*_glb_hdl_sc_channel_map)[17283].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[17284].first = 3;
        (*_glb_hdl_sc_channel_map)[17284].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[17285].first = 1;
        (*_glb_hdl_sc_channel_map)[17285].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(10709920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(10709976);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(10710032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(10710088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(10710144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(10710200);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(10710256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(10710312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(10710368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(10710424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(10710480);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(10710536);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[17265].first = 1;
        (*_glb_hdl_sc_channel_map)[17265].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[17287].first = 3;
        (*_glb_hdl_sc_channel_map)[17287].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[17286].first = 3;
        (*_glb_hdl_sc_channel_map)[17286].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[17290].first = 3;
        (*_glb_hdl_sc_channel_map)[17290].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[17288].first = 1;
        (*_glb_hdl_sc_channel_map)[17288].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[17291].first = 3;
        (*_glb_hdl_sc_channel_map)[17291].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[17292].first = 1;
        (*_glb_hdl_sc_channel_map)[17292].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(10710984);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[17255].first = 1;
        (*_glb_hdl_sc_channel_map)[17255].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[17259].first = 1;
        (*_glb_hdl_sc_channel_map)[17259].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_15->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[20448].first = 3;
        (*_glb_hdl_sc_channel_map)[20448].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[20445].first = 3;
        (*_glb_hdl_sc_channel_map)[20445].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[20449].first = 3;
        (*_glb_hdl_sc_channel_map)[20449].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[20455].first = 3;
        (*_glb_hdl_sc_channel_map)[20455].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[20446].first = 3;
        (*_glb_hdl_sc_channel_map)[20446].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[20450].first = 1;
        (*_glb_hdl_sc_channel_map)[20450].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[20447].first = 3;
        (*_glb_hdl_sc_channel_map)[20447].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[20451].first = 3;
        (*_glb_hdl_sc_channel_map)[20451].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[20454].first = 3;
        (*_glb_hdl_sc_channel_map)[20454].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[20452].first = 3;
        (*_glb_hdl_sc_channel_map)[20452].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[20456].first = 1;
        (*_glb_hdl_sc_channel_map)[20456].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(11455688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[20467].first = 3;
        (*_glb_hdl_sc_channel_map)[20467].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[20470].first = 3;
        (*_glb_hdl_sc_channel_map)[20470].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[20468].first = 1;
        (*_glb_hdl_sc_channel_map)[20468].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[20471].first = 1;
        (*_glb_hdl_sc_channel_map)[20471].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(11455968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(11456024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(11456080);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(11456136);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[20458].first = 1;
        (*_glb_hdl_sc_channel_map)[20458].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[20436].first = 3;
        (*_glb_hdl_sc_channel_map)[20436].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[20432].first = 3;
        (*_glb_hdl_sc_channel_map)[20432].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[20437].first = 3;
        (*_glb_hdl_sc_channel_map)[20437].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[20443].first = 3;
        (*_glb_hdl_sc_channel_map)[20443].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[20433].first = 3;
        (*_glb_hdl_sc_channel_map)[20433].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[20438].first = 1;
        (*_glb_hdl_sc_channel_map)[20438].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[20434].first = 3;
        (*_glb_hdl_sc_channel_map)[20434].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[20439].first = 3;
        (*_glb_hdl_sc_channel_map)[20439].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[20442].first = 3;
        (*_glb_hdl_sc_channel_map)[20442].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[20440].first = 3;
        (*_glb_hdl_sc_channel_map)[20440].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[20444].first = 1;
        (*_glb_hdl_sc_channel_map)[20444].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(11456864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(11456920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(11456976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(11457032);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(11457088);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(11457144);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[20464].first = 1;
        (*_glb_hdl_sc_channel_map)[20464].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20431].first = 1;
        (*_glb_hdl_sc_channel_map)[20431].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20435].first = 1;
        (*_glb_hdl_sc_channel_map)[20435].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(11457368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(11457424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(11457480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(11457536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(11457592);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(11457648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(11457704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(11457760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(11457816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(11457872);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(11457928);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[20246].first = 1;
        (*_glb_hdl_sc_channel_map)[20246].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(11458040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(11458096);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(11458152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(11458208);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(11458264);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[20264].first = 1;
        (*_glb_hdl_sc_channel_map)[20264].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[20250].first = 3;
        (*_glb_hdl_sc_channel_map)[20250].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[20252].first = 3;
        (*_glb_hdl_sc_channel_map)[20252].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[20253].first = 3;
        (*_glb_hdl_sc_channel_map)[20253].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[20254].first = 1;
        (*_glb_hdl_sc_channel_map)[20254].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(11458600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(11458656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(11458712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(11458768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(11458824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(11458880);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(11458936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(11458992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(11459048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(11459104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(11459160);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(11459216);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[20234].first = 1;
        (*_glb_hdl_sc_channel_map)[20234].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[20256].first = 3;
        (*_glb_hdl_sc_channel_map)[20256].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[20255].first = 3;
        (*_glb_hdl_sc_channel_map)[20255].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[20259].first = 3;
        (*_glb_hdl_sc_channel_map)[20259].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[20257].first = 1;
        (*_glb_hdl_sc_channel_map)[20257].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[20260].first = 3;
        (*_glb_hdl_sc_channel_map)[20260].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[20261].first = 1;
        (*_glb_hdl_sc_channel_map)[20261].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(11459664);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20224].first = 1;
        (*_glb_hdl_sc_channel_map)[20224].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20228].first = 1;
        (*_glb_hdl_sc_channel_map)[20228].second.push_front(p_15_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awid.bind(*p_15_m02_axi_awid);
        p_15_m02_axi_awid->set_sv_netview_offsetfromdp(11459832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_awaddr.bind(*p_15_m02_axi_awaddr);
        p_15_m02_axi_awaddr->set_sv_netview_offsetfromdp(11459888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_awlen.bind(*p_15_m02_axi_awlen);
        p_15_m02_axi_awlen->set_sv_netview_offsetfromdp(11459944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awsize.bind(*p_15_m02_axi_awsize);
        p_15_m02_axi_awsize->set_sv_netview_offsetfromdp(11460000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_awburst.bind(*p_15_m02_axi_awburst);
        p_15_m02_axi_awburst->set_sv_netview_offsetfromdp(11460056);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awlock.bind(*p_15_m02_axi_awlock);
        p_15_m02_axi_awlock->set_sv_netview_offsetfromdp(11460112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awcache.bind(*p_15_m02_axi_awcache);
        p_15_m02_axi_awcache->set_sv_netview_offsetfromdp(11460168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awprot.bind(*p_15_m02_axi_awprot);
        p_15_m02_axi_awprot->set_sv_netview_offsetfromdp(11460224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awqos.bind(*p_15_m02_axi_awqos);
        p_15_m02_axi_awqos->set_sv_netview_offsetfromdp(11460280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awuser.bind(*p_15_m02_axi_awuser);
        p_15_m02_axi_awuser->set_sv_netview_offsetfromdp(11460336);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awvalid.bind(*p_15_m02_axi_awvalid);
        p_15_m02_axi_awvalid->set_sv_netview_offsetfromdp(11460392);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awready.bind(*p_15_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[20334].first = 1;
        (*_glb_hdl_sc_channel_map)[20334].second.push_front(p_15_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_wdata.bind(*p_15_m02_axi_wdata);
        p_15_m02_axi_wdata->set_sv_netview_offsetfromdp(11460504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_wstrb.bind(*p_15_m02_axi_wstrb);
        p_15_m02_axi_wstrb->set_sv_netview_offsetfromdp(11460560);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wlast.bind(*p_15_m02_axi_wlast);
        p_15_m02_axi_wlast->set_sv_netview_offsetfromdp(11460616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_wuser.bind(*p_15_m02_axi_wuser);
        p_15_m02_axi_wuser->set_sv_netview_offsetfromdp(11460672);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wvalid.bind(*p_15_m02_axi_wvalid);
        p_15_m02_axi_wvalid->set_sv_netview_offsetfromdp(11460728);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wready.bind(*p_15_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[20352].first = 1;
        (*_glb_hdl_sc_channel_map)[20352].second.push_front(p_15_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_bid.bind(*p_15_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[20338].first = 3;
        (*_glb_hdl_sc_channel_map)[20338].second.push_front(p_15_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_bresp.bind(*p_15_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[20340].first = 3;
        (*_glb_hdl_sc_channel_map)[20340].second.push_front(p_15_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_buser.bind(*p_15_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[20341].first = 3;
        (*_glb_hdl_sc_channel_map)[20341].second.push_front(p_15_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bvalid.bind(*p_15_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[20342].first = 1;
        (*_glb_hdl_sc_channel_map)[20342].second.push_front(p_15_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bready.bind(*p_15_m02_axi_bready);
        p_15_m02_axi_bready->set_sv_netview_offsetfromdp(11461064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_arid.bind(*p_15_m02_axi_arid);
        p_15_m02_axi_arid->set_sv_netview_offsetfromdp(11461120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_araddr.bind(*p_15_m02_axi_araddr);
        p_15_m02_axi_araddr->set_sv_netview_offsetfromdp(11461176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_arlen.bind(*p_15_m02_axi_arlen);
        p_15_m02_axi_arlen->set_sv_netview_offsetfromdp(11461232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arsize.bind(*p_15_m02_axi_arsize);
        p_15_m02_axi_arsize->set_sv_netview_offsetfromdp(11461288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_arburst.bind(*p_15_m02_axi_arburst);
        p_15_m02_axi_arburst->set_sv_netview_offsetfromdp(11461344);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arlock.bind(*p_15_m02_axi_arlock);
        p_15_m02_axi_arlock->set_sv_netview_offsetfromdp(11461400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arcache.bind(*p_15_m02_axi_arcache);
        p_15_m02_axi_arcache->set_sv_netview_offsetfromdp(11461456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arprot.bind(*p_15_m02_axi_arprot);
        p_15_m02_axi_arprot->set_sv_netview_offsetfromdp(11461512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arqos.bind(*p_15_m02_axi_arqos);
        p_15_m02_axi_arqos->set_sv_netview_offsetfromdp(11461568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_aruser.bind(*p_15_m02_axi_aruser);
        p_15_m02_axi_aruser->set_sv_netview_offsetfromdp(11461624);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arvalid.bind(*p_15_m02_axi_arvalid);
        p_15_m02_axi_arvalid->set_sv_netview_offsetfromdp(11461680);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arready.bind(*p_15_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[20322].first = 1;
        (*_glb_hdl_sc_channel_map)[20322].second.push_front(p_15_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_rid.bind(*p_15_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[20344].first = 3;
        (*_glb_hdl_sc_channel_map)[20344].second.push_front(p_15_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_rdata.bind(*p_15_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[20343].first = 3;
        (*_glb_hdl_sc_channel_map)[20343].second.push_front(p_15_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_rresp.bind(*p_15_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[20347].first = 3;
        (*_glb_hdl_sc_channel_map)[20347].second.push_front(p_15_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rlast.bind(*p_15_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[20345].first = 1;
        (*_glb_hdl_sc_channel_map)[20345].second.push_front(p_15_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_ruser.bind(*p_15_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[20348].first = 3;
        (*_glb_hdl_sc_channel_map)[20348].second.push_front(p_15_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rvalid.bind(*p_15_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[20349].first = 1;
        (*_glb_hdl_sc_channel_map)[20349].second.push_front(p_15_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rready.bind(*p_15_m02_axi_rready);
        p_15_m02_axi_rready->set_sv_netview_offsetfromdp(11462128);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aclk.bind(*p_15_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20312].first = 1;
        (*_glb_hdl_sc_channel_map)[20312].second.push_front(p_15_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aresetn.bind(*p_15_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20316].first = 1;
        (*_glb_hdl_sc_channel_map)[20316].second.push_front(p_15_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awid.bind(*p_15_m03_axi_awid);
        p_15_m03_axi_awid->set_sv_netview_offsetfromdp(11462296);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_awaddr.bind(*p_15_m03_axi_awaddr);
        p_15_m03_axi_awaddr->set_sv_netview_offsetfromdp(11462352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_awlen.bind(*p_15_m03_axi_awlen);
        p_15_m03_axi_awlen->set_sv_netview_offsetfromdp(11462408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awsize.bind(*p_15_m03_axi_awsize);
        p_15_m03_axi_awsize->set_sv_netview_offsetfromdp(11462464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_awburst.bind(*p_15_m03_axi_awburst);
        p_15_m03_axi_awburst->set_sv_netview_offsetfromdp(11462520);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awlock.bind(*p_15_m03_axi_awlock);
        p_15_m03_axi_awlock->set_sv_netview_offsetfromdp(11462576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awcache.bind(*p_15_m03_axi_awcache);
        p_15_m03_axi_awcache->set_sv_netview_offsetfromdp(11462632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awprot.bind(*p_15_m03_axi_awprot);
        p_15_m03_axi_awprot->set_sv_netview_offsetfromdp(11462688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awqos.bind(*p_15_m03_axi_awqos);
        p_15_m03_axi_awqos->set_sv_netview_offsetfromdp(11462744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awuser.bind(*p_15_m03_axi_awuser);
        p_15_m03_axi_awuser->set_sv_netview_offsetfromdp(11462800);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awvalid.bind(*p_15_m03_axi_awvalid);
        p_15_m03_axi_awvalid->set_sv_netview_offsetfromdp(11462856);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awready.bind(*p_15_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[20378].first = 1;
        (*_glb_hdl_sc_channel_map)[20378].second.push_front(p_15_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_wdata.bind(*p_15_m03_axi_wdata);
        p_15_m03_axi_wdata->set_sv_netview_offsetfromdp(11462968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_wstrb.bind(*p_15_m03_axi_wstrb);
        p_15_m03_axi_wstrb->set_sv_netview_offsetfromdp(11463024);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wlast.bind(*p_15_m03_axi_wlast);
        p_15_m03_axi_wlast->set_sv_netview_offsetfromdp(11463080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_wuser.bind(*p_15_m03_axi_wuser);
        p_15_m03_axi_wuser->set_sv_netview_offsetfromdp(11463136);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wvalid.bind(*p_15_m03_axi_wvalid);
        p_15_m03_axi_wvalid->set_sv_netview_offsetfromdp(11463192);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wready.bind(*p_15_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[20396].first = 1;
        (*_glb_hdl_sc_channel_map)[20396].second.push_front(p_15_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_bid.bind(*p_15_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[20382].first = 3;
        (*_glb_hdl_sc_channel_map)[20382].second.push_front(p_15_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_bresp.bind(*p_15_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[20384].first = 3;
        (*_glb_hdl_sc_channel_map)[20384].second.push_front(p_15_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_buser.bind(*p_15_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[20385].first = 3;
        (*_glb_hdl_sc_channel_map)[20385].second.push_front(p_15_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bvalid.bind(*p_15_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[20386].first = 1;
        (*_glb_hdl_sc_channel_map)[20386].second.push_front(p_15_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bready.bind(*p_15_m03_axi_bready);
        p_15_m03_axi_bready->set_sv_netview_offsetfromdp(11463528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_arid.bind(*p_15_m03_axi_arid);
        p_15_m03_axi_arid->set_sv_netview_offsetfromdp(11463584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_araddr.bind(*p_15_m03_axi_araddr);
        p_15_m03_axi_araddr->set_sv_netview_offsetfromdp(11463640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_arlen.bind(*p_15_m03_axi_arlen);
        p_15_m03_axi_arlen->set_sv_netview_offsetfromdp(11463696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arsize.bind(*p_15_m03_axi_arsize);
        p_15_m03_axi_arsize->set_sv_netview_offsetfromdp(11463752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_arburst.bind(*p_15_m03_axi_arburst);
        p_15_m03_axi_arburst->set_sv_netview_offsetfromdp(11463808);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arlock.bind(*p_15_m03_axi_arlock);
        p_15_m03_axi_arlock->set_sv_netview_offsetfromdp(11463864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arcache.bind(*p_15_m03_axi_arcache);
        p_15_m03_axi_arcache->set_sv_netview_offsetfromdp(11463920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arprot.bind(*p_15_m03_axi_arprot);
        p_15_m03_axi_arprot->set_sv_netview_offsetfromdp(11463976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arqos.bind(*p_15_m03_axi_arqos);
        p_15_m03_axi_arqos->set_sv_netview_offsetfromdp(11464032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_aruser.bind(*p_15_m03_axi_aruser);
        p_15_m03_axi_aruser->set_sv_netview_offsetfromdp(11464088);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arvalid.bind(*p_15_m03_axi_arvalid);
        p_15_m03_axi_arvalid->set_sv_netview_offsetfromdp(11464144);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arready.bind(*p_15_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[20366].first = 1;
        (*_glb_hdl_sc_channel_map)[20366].second.push_front(p_15_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_rid.bind(*p_15_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[20388].first = 3;
        (*_glb_hdl_sc_channel_map)[20388].second.push_front(p_15_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_rdata.bind(*p_15_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[20387].first = 3;
        (*_glb_hdl_sc_channel_map)[20387].second.push_front(p_15_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_rresp.bind(*p_15_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[20391].first = 3;
        (*_glb_hdl_sc_channel_map)[20391].second.push_front(p_15_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rlast.bind(*p_15_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[20389].first = 1;
        (*_glb_hdl_sc_channel_map)[20389].second.push_front(p_15_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_ruser.bind(*p_15_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[20392].first = 3;
        (*_glb_hdl_sc_channel_map)[20392].second.push_front(p_15_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rvalid.bind(*p_15_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[20393].first = 1;
        (*_glb_hdl_sc_channel_map)[20393].second.push_front(p_15_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rready.bind(*p_15_m03_axi_rready);
        p_15_m03_axi_rready->set_sv_netview_offsetfromdp(11464592);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aclk.bind(*p_15_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20356].first = 1;
        (*_glb_hdl_sc_channel_map)[20356].second.push_front(p_15_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aresetn.bind(*p_15_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20360].first = 1;
        (*_glb_hdl_sc_channel_map)[20360].second.push_front(p_15_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awid.bind(*p_15_m04_axi_awid);
        p_15_m04_axi_awid->set_sv_netview_offsetfromdp(11464760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_awaddr.bind(*p_15_m04_axi_awaddr);
        p_15_m04_axi_awaddr->set_sv_netview_offsetfromdp(11464816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_awlen.bind(*p_15_m04_axi_awlen);
        p_15_m04_axi_awlen->set_sv_netview_offsetfromdp(11464872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awsize.bind(*p_15_m04_axi_awsize);
        p_15_m04_axi_awsize->set_sv_netview_offsetfromdp(11464928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_awburst.bind(*p_15_m04_axi_awburst);
        p_15_m04_axi_awburst->set_sv_netview_offsetfromdp(11464984);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awlock.bind(*p_15_m04_axi_awlock);
        p_15_m04_axi_awlock->set_sv_netview_offsetfromdp(11465040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awcache.bind(*p_15_m04_axi_awcache);
        p_15_m04_axi_awcache->set_sv_netview_offsetfromdp(11465096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awprot.bind(*p_15_m04_axi_awprot);
        p_15_m04_axi_awprot->set_sv_netview_offsetfromdp(11465152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awqos.bind(*p_15_m04_axi_awqos);
        p_15_m04_axi_awqos->set_sv_netview_offsetfromdp(11465208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awuser.bind(*p_15_m04_axi_awuser);
        p_15_m04_axi_awuser->set_sv_netview_offsetfromdp(11465264);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awvalid.bind(*p_15_m04_axi_awvalid);
        p_15_m04_axi_awvalid->set_sv_netview_offsetfromdp(11465320);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awready.bind(*p_15_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[20413].first = 1;
        (*_glb_hdl_sc_channel_map)[20413].second.push_front(p_15_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_wdata.bind(*p_15_m04_axi_wdata);
        p_15_m04_axi_wdata->set_sv_netview_offsetfromdp(11465432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_wstrb.bind(*p_15_m04_axi_wstrb);
        p_15_m04_axi_wstrb->set_sv_netview_offsetfromdp(11465488);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wlast.bind(*p_15_m04_axi_wlast);
        p_15_m04_axi_wlast->set_sv_netview_offsetfromdp(11465544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_wuser.bind(*p_15_m04_axi_wuser);
        p_15_m04_axi_wuser->set_sv_netview_offsetfromdp(11465600);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wvalid.bind(*p_15_m04_axi_wvalid);
        p_15_m04_axi_wvalid->set_sv_netview_offsetfromdp(11465656);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wready.bind(*p_15_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[20428].first = 1;
        (*_glb_hdl_sc_channel_map)[20428].second.push_front(p_15_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_bid.bind(*p_15_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[20416].first = 3;
        (*_glb_hdl_sc_channel_map)[20416].second.push_front(p_15_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_bresp.bind(*p_15_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[20418].first = 3;
        (*_glb_hdl_sc_channel_map)[20418].second.push_front(p_15_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_buser.bind(*p_15_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_15_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bvalid.bind(*p_15_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[20419].first = 1;
        (*_glb_hdl_sc_channel_map)[20419].second.push_front(p_15_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bready.bind(*p_15_m04_axi_bready);
        p_15_m04_axi_bready->set_sv_netview_offsetfromdp(11465992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_arid.bind(*p_15_m04_axi_arid);
        p_15_m04_axi_arid->set_sv_netview_offsetfromdp(11466048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_araddr.bind(*p_15_m04_axi_araddr);
        p_15_m04_axi_araddr->set_sv_netview_offsetfromdp(11466104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_arlen.bind(*p_15_m04_axi_arlen);
        p_15_m04_axi_arlen->set_sv_netview_offsetfromdp(11466160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arsize.bind(*p_15_m04_axi_arsize);
        p_15_m04_axi_arsize->set_sv_netview_offsetfromdp(11466216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_arburst.bind(*p_15_m04_axi_arburst);
        p_15_m04_axi_arburst->set_sv_netview_offsetfromdp(11466272);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arlock.bind(*p_15_m04_axi_arlock);
        p_15_m04_axi_arlock->set_sv_netview_offsetfromdp(11466328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arcache.bind(*p_15_m04_axi_arcache);
        p_15_m04_axi_arcache->set_sv_netview_offsetfromdp(11466384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arprot.bind(*p_15_m04_axi_arprot);
        p_15_m04_axi_arprot->set_sv_netview_offsetfromdp(11466440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arqos.bind(*p_15_m04_axi_arqos);
        p_15_m04_axi_arqos->set_sv_netview_offsetfromdp(11466496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_aruser.bind(*p_15_m04_axi_aruser);
        p_15_m04_axi_aruser->set_sv_netview_offsetfromdp(11466552);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arvalid.bind(*p_15_m04_axi_arvalid);
        p_15_m04_axi_arvalid->set_sv_netview_offsetfromdp(11466608);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arready.bind(*p_15_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[20406].first = 1;
        (*_glb_hdl_sc_channel_map)[20406].second.push_front(p_15_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_rid.bind(*p_15_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[20421].first = 3;
        (*_glb_hdl_sc_channel_map)[20421].second.push_front(p_15_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_rdata.bind(*p_15_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[20420].first = 3;
        (*_glb_hdl_sc_channel_map)[20420].second.push_front(p_15_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_rresp.bind(*p_15_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[20424].first = 3;
        (*_glb_hdl_sc_channel_map)[20424].second.push_front(p_15_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rlast.bind(*p_15_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[20422].first = 1;
        (*_glb_hdl_sc_channel_map)[20422].second.push_front(p_15_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_ruser.bind(*p_15_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_15_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rvalid.bind(*p_15_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[20425].first = 1;
        (*_glb_hdl_sc_channel_map)[20425].second.push_front(p_15_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rready.bind(*p_15_m04_axi_rready);
        p_15_m04_axi_rready->set_sv_netview_offsetfromdp(11467056);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aclk.bind(*p_15_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20400].first = 1;
        (*_glb_hdl_sc_channel_map)[20400].second.push_front(p_15_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aresetn.bind(*p_15_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20403].first = 1;
        (*_glb_hdl_sc_channel_map)[20403].second.push_front(p_15_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awid.bind(*p_15_m01_axi_awid);
        p_15_m01_axi_awid->set_sv_netview_offsetfromdp(11467224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_awaddr.bind(*p_15_m01_axi_awaddr);
        p_15_m01_axi_awaddr->set_sv_netview_offsetfromdp(11467280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_awlen.bind(*p_15_m01_axi_awlen);
        p_15_m01_axi_awlen->set_sv_netview_offsetfromdp(11467336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awsize.bind(*p_15_m01_axi_awsize);
        p_15_m01_axi_awsize->set_sv_netview_offsetfromdp(11467392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_awburst.bind(*p_15_m01_axi_awburst);
        p_15_m01_axi_awburst->set_sv_netview_offsetfromdp(11467448);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awlock.bind(*p_15_m01_axi_awlock);
        p_15_m01_axi_awlock->set_sv_netview_offsetfromdp(11467504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awcache.bind(*p_15_m01_axi_awcache);
        p_15_m01_axi_awcache->set_sv_netview_offsetfromdp(11467560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awprot.bind(*p_15_m01_axi_awprot);
        p_15_m01_axi_awprot->set_sv_netview_offsetfromdp(11467616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awqos.bind(*p_15_m01_axi_awqos);
        p_15_m01_axi_awqos->set_sv_netview_offsetfromdp(11467672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awuser.bind(*p_15_m01_axi_awuser);
        p_15_m01_axi_awuser->set_sv_netview_offsetfromdp(11467728);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awvalid.bind(*p_15_m01_axi_awvalid);
        p_15_m01_axi_awvalid->set_sv_netview_offsetfromdp(11467784);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awready.bind(*p_15_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[20290].first = 1;
        (*_glb_hdl_sc_channel_map)[20290].second.push_front(p_15_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_wdata.bind(*p_15_m01_axi_wdata);
        p_15_m01_axi_wdata->set_sv_netview_offsetfromdp(11467896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_wstrb.bind(*p_15_m01_axi_wstrb);
        p_15_m01_axi_wstrb->set_sv_netview_offsetfromdp(11467952);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wlast.bind(*p_15_m01_axi_wlast);
        p_15_m01_axi_wlast->set_sv_netview_offsetfromdp(11468008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_wuser.bind(*p_15_m01_axi_wuser);
        p_15_m01_axi_wuser->set_sv_netview_offsetfromdp(11468064);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wvalid.bind(*p_15_m01_axi_wvalid);
        p_15_m01_axi_wvalid->set_sv_netview_offsetfromdp(11468120);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wready.bind(*p_15_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[20308].first = 1;
        (*_glb_hdl_sc_channel_map)[20308].second.push_front(p_15_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_bid.bind(*p_15_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[20294].first = 3;
        (*_glb_hdl_sc_channel_map)[20294].second.push_front(p_15_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_bresp.bind(*p_15_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[20296].first = 3;
        (*_glb_hdl_sc_channel_map)[20296].second.push_front(p_15_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_buser.bind(*p_15_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[20297].first = 3;
        (*_glb_hdl_sc_channel_map)[20297].second.push_front(p_15_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bvalid.bind(*p_15_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[20298].first = 1;
        (*_glb_hdl_sc_channel_map)[20298].second.push_front(p_15_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bready.bind(*p_15_m01_axi_bready);
        p_15_m01_axi_bready->set_sv_netview_offsetfromdp(11468456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_arid.bind(*p_15_m01_axi_arid);
        p_15_m01_axi_arid->set_sv_netview_offsetfromdp(11468512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_araddr.bind(*p_15_m01_axi_araddr);
        p_15_m01_axi_araddr->set_sv_netview_offsetfromdp(11468568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_arlen.bind(*p_15_m01_axi_arlen);
        p_15_m01_axi_arlen->set_sv_netview_offsetfromdp(11468624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arsize.bind(*p_15_m01_axi_arsize);
        p_15_m01_axi_arsize->set_sv_netview_offsetfromdp(11468680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_arburst.bind(*p_15_m01_axi_arburst);
        p_15_m01_axi_arburst->set_sv_netview_offsetfromdp(11468736);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arlock.bind(*p_15_m01_axi_arlock);
        p_15_m01_axi_arlock->set_sv_netview_offsetfromdp(11468792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arcache.bind(*p_15_m01_axi_arcache);
        p_15_m01_axi_arcache->set_sv_netview_offsetfromdp(11468848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arprot.bind(*p_15_m01_axi_arprot);
        p_15_m01_axi_arprot->set_sv_netview_offsetfromdp(11468904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arqos.bind(*p_15_m01_axi_arqos);
        p_15_m01_axi_arqos->set_sv_netview_offsetfromdp(11468960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_aruser.bind(*p_15_m01_axi_aruser);
        p_15_m01_axi_aruser->set_sv_netview_offsetfromdp(11469016);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arvalid.bind(*p_15_m01_axi_arvalid);
        p_15_m01_axi_arvalid->set_sv_netview_offsetfromdp(11469072);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arready.bind(*p_15_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[20278].first = 1;
        (*_glb_hdl_sc_channel_map)[20278].second.push_front(p_15_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_rid.bind(*p_15_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[20300].first = 3;
        (*_glb_hdl_sc_channel_map)[20300].second.push_front(p_15_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_rdata.bind(*p_15_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[20299].first = 3;
        (*_glb_hdl_sc_channel_map)[20299].second.push_front(p_15_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_rresp.bind(*p_15_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[20303].first = 3;
        (*_glb_hdl_sc_channel_map)[20303].second.push_front(p_15_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rlast.bind(*p_15_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[20301].first = 1;
        (*_glb_hdl_sc_channel_map)[20301].second.push_front(p_15_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_ruser.bind(*p_15_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[20304].first = 3;
        (*_glb_hdl_sc_channel_map)[20304].second.push_front(p_15_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rvalid.bind(*p_15_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[20305].first = 1;
        (*_glb_hdl_sc_channel_map)[20305].second.push_front(p_15_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rready.bind(*p_15_m01_axi_rready);
        p_15_m01_axi_rready->set_sv_netview_offsetfromdp(11469520);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aclk.bind(*p_15_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20268].first = 1;
        (*_glb_hdl_sc_channel_map)[20268].second.push_front(p_15_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aresetn.bind(*p_15_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20272].first = 1;
        (*_glb_hdl_sc_channel_map)[20272].second.push_front(p_15_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_awid.bind(*p_15_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[20571].first = 3;
        (*_glb_hdl_sc_channel_map)[20571].second.push_front(p_15_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_awaddr.bind(*p_15_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[20568].first = 3;
        (*_glb_hdl_sc_channel_map)[20568].second.push_front(p_15_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_awlen.bind(*p_15_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[20572].first = 3;
        (*_glb_hdl_sc_channel_map)[20572].second.push_front(p_15_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awsize.bind(*p_15_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[20578].first = 3;
        (*_glb_hdl_sc_channel_map)[20578].second.push_front(p_15_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_awburst.bind(*p_15_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[20569].first = 3;
        (*_glb_hdl_sc_channel_map)[20569].second.push_front(p_15_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awlock.bind(*p_15_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[20573].first = 1;
        (*_glb_hdl_sc_channel_map)[20573].second.push_front(p_15_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awcache.bind(*p_15_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[20570].first = 3;
        (*_glb_hdl_sc_channel_map)[20570].second.push_front(p_15_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awprot.bind(*p_15_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[20574].first = 3;
        (*_glb_hdl_sc_channel_map)[20574].second.push_front(p_15_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awregion.bind(*p_15_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[20577].first = 3;
        (*_glb_hdl_sc_channel_map)[20577].second.push_front(p_15_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awqos.bind(*p_15_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[20575].first = 3;
        (*_glb_hdl_sc_channel_map)[20575].second.push_front(p_15_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awvalid.bind(*p_15_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[20579].first = 1;
        (*_glb_hdl_sc_channel_map)[20579].second.push_front(p_15_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awready.bind(*p_15_s03_axi_awready);
        p_15_s03_axi_awready->set_sv_netview_offsetfromdp(11470304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_wdata.bind(*p_15_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[20590].first = 3;
        (*_glb_hdl_sc_channel_map)[20590].second.push_front(p_15_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_wstrb.bind(*p_15_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[20593].first = 3;
        (*_glb_hdl_sc_channel_map)[20593].second.push_front(p_15_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wlast.bind(*p_15_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[20591].first = 1;
        (*_glb_hdl_sc_channel_map)[20591].second.push_front(p_15_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wvalid.bind(*p_15_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[20594].first = 1;
        (*_glb_hdl_sc_channel_map)[20594].second.push_front(p_15_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wready.bind(*p_15_s03_axi_wready);
        p_15_s03_axi_wready->set_sv_netview_offsetfromdp(11470584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_bid.bind(*p_15_s03_axi_bid);
        p_15_s03_axi_bid->set_sv_netview_offsetfromdp(11470640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_bresp.bind(*p_15_s03_axi_bresp);
        p_15_s03_axi_bresp->set_sv_netview_offsetfromdp(11470696);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bvalid.bind(*p_15_s03_axi_bvalid);
        p_15_s03_axi_bvalid->set_sv_netview_offsetfromdp(11470752);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bready.bind(*p_15_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[20581].first = 1;
        (*_glb_hdl_sc_channel_map)[20581].second.push_front(p_15_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_arid.bind(*p_15_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[20559].first = 3;
        (*_glb_hdl_sc_channel_map)[20559].second.push_front(p_15_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_araddr.bind(*p_15_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[20555].first = 3;
        (*_glb_hdl_sc_channel_map)[20555].second.push_front(p_15_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_arlen.bind(*p_15_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[20560].first = 3;
        (*_glb_hdl_sc_channel_map)[20560].second.push_front(p_15_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arsize.bind(*p_15_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[20566].first = 3;
        (*_glb_hdl_sc_channel_map)[20566].second.push_front(p_15_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_arburst.bind(*p_15_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[20556].first = 3;
        (*_glb_hdl_sc_channel_map)[20556].second.push_front(p_15_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arlock.bind(*p_15_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[20561].first = 1;
        (*_glb_hdl_sc_channel_map)[20561].second.push_front(p_15_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arcache.bind(*p_15_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[20557].first = 3;
        (*_glb_hdl_sc_channel_map)[20557].second.push_front(p_15_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arprot.bind(*p_15_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[20562].first = 3;
        (*_glb_hdl_sc_channel_map)[20562].second.push_front(p_15_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arregion.bind(*p_15_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[20565].first = 3;
        (*_glb_hdl_sc_channel_map)[20565].second.push_front(p_15_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arqos.bind(*p_15_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[20563].first = 3;
        (*_glb_hdl_sc_channel_map)[20563].second.push_front(p_15_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arvalid.bind(*p_15_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[20567].first = 1;
        (*_glb_hdl_sc_channel_map)[20567].second.push_front(p_15_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arready.bind(*p_15_s03_axi_arready);
        p_15_s03_axi_arready->set_sv_netview_offsetfromdp(11471480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_rid.bind(*p_15_s03_axi_rid);
        p_15_s03_axi_rid->set_sv_netview_offsetfromdp(11471536);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_rdata.bind(*p_15_s03_axi_rdata);
        p_15_s03_axi_rdata->set_sv_netview_offsetfromdp(11471592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_rresp.bind(*p_15_s03_axi_rresp);
        p_15_s03_axi_rresp->set_sv_netview_offsetfromdp(11471648);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rlast.bind(*p_15_s03_axi_rlast);
        p_15_s03_axi_rlast->set_sv_netview_offsetfromdp(11471704);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rvalid.bind(*p_15_s03_axi_rvalid);
        p_15_s03_axi_rvalid->set_sv_netview_offsetfromdp(11471760);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rready.bind(*p_15_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[20587].first = 1;
        (*_glb_hdl_sc_channel_map)[20587].second.push_front(p_15_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aclk.bind(*p_15_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20554].first = 1;
        (*_glb_hdl_sc_channel_map)[20554].second.push_front(p_15_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aresetn.bind(*p_15_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20558].first = 1;
        (*_glb_hdl_sc_channel_map)[20558].second.push_front(p_15_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_awid.bind(*p_15_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[20489].first = 3;
        (*_glb_hdl_sc_channel_map)[20489].second.push_front(p_15_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_awaddr.bind(*p_15_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[20486].first = 3;
        (*_glb_hdl_sc_channel_map)[20486].second.push_front(p_15_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_awlen.bind(*p_15_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[20490].first = 3;
        (*_glb_hdl_sc_channel_map)[20490].second.push_front(p_15_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awsize.bind(*p_15_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[20496].first = 3;
        (*_glb_hdl_sc_channel_map)[20496].second.push_front(p_15_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_awburst.bind(*p_15_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[20487].first = 3;
        (*_glb_hdl_sc_channel_map)[20487].second.push_front(p_15_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awlock.bind(*p_15_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[20491].first = 1;
        (*_glb_hdl_sc_channel_map)[20491].second.push_front(p_15_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awcache.bind(*p_15_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[20488].first = 3;
        (*_glb_hdl_sc_channel_map)[20488].second.push_front(p_15_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awprot.bind(*p_15_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[20492].first = 3;
        (*_glb_hdl_sc_channel_map)[20492].second.push_front(p_15_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awregion.bind(*p_15_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[20495].first = 3;
        (*_glb_hdl_sc_channel_map)[20495].second.push_front(p_15_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awqos.bind(*p_15_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[20493].first = 3;
        (*_glb_hdl_sc_channel_map)[20493].second.push_front(p_15_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awvalid.bind(*p_15_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[20497].first = 1;
        (*_glb_hdl_sc_channel_map)[20497].second.push_front(p_15_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awready.bind(*p_15_s01_axi_awready);
        p_15_s01_axi_awready->set_sv_netview_offsetfromdp(11472600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_wdata.bind(*p_15_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[20508].first = 3;
        (*_glb_hdl_sc_channel_map)[20508].second.push_front(p_15_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_wstrb.bind(*p_15_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[20511].first = 3;
        (*_glb_hdl_sc_channel_map)[20511].second.push_front(p_15_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wlast.bind(*p_15_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[20509].first = 1;
        (*_glb_hdl_sc_channel_map)[20509].second.push_front(p_15_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wvalid.bind(*p_15_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[20512].first = 1;
        (*_glb_hdl_sc_channel_map)[20512].second.push_front(p_15_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wready.bind(*p_15_s01_axi_wready);
        p_15_s01_axi_wready->set_sv_netview_offsetfromdp(11472880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_bid.bind(*p_15_s01_axi_bid);
        p_15_s01_axi_bid->set_sv_netview_offsetfromdp(11472936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_bresp.bind(*p_15_s01_axi_bresp);
        p_15_s01_axi_bresp->set_sv_netview_offsetfromdp(11472992);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bvalid.bind(*p_15_s01_axi_bvalid);
        p_15_s01_axi_bvalid->set_sv_netview_offsetfromdp(11473048);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bready.bind(*p_15_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[20499].first = 1;
        (*_glb_hdl_sc_channel_map)[20499].second.push_front(p_15_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_arid.bind(*p_15_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[20477].first = 3;
        (*_glb_hdl_sc_channel_map)[20477].second.push_front(p_15_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_araddr.bind(*p_15_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[20473].first = 3;
        (*_glb_hdl_sc_channel_map)[20473].second.push_front(p_15_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_arlen.bind(*p_15_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[20478].first = 3;
        (*_glb_hdl_sc_channel_map)[20478].second.push_front(p_15_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arsize.bind(*p_15_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[20484].first = 3;
        (*_glb_hdl_sc_channel_map)[20484].second.push_front(p_15_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_arburst.bind(*p_15_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[20474].first = 3;
        (*_glb_hdl_sc_channel_map)[20474].second.push_front(p_15_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arlock.bind(*p_15_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[20479].first = 1;
        (*_glb_hdl_sc_channel_map)[20479].second.push_front(p_15_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arcache.bind(*p_15_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[20475].first = 3;
        (*_glb_hdl_sc_channel_map)[20475].second.push_front(p_15_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arprot.bind(*p_15_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[20480].first = 3;
        (*_glb_hdl_sc_channel_map)[20480].second.push_front(p_15_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arregion.bind(*p_15_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[20483].first = 3;
        (*_glb_hdl_sc_channel_map)[20483].second.push_front(p_15_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arqos.bind(*p_15_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[20481].first = 3;
        (*_glb_hdl_sc_channel_map)[20481].second.push_front(p_15_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arvalid.bind(*p_15_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[20485].first = 1;
        (*_glb_hdl_sc_channel_map)[20485].second.push_front(p_15_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arready.bind(*p_15_s01_axi_arready);
        p_15_s01_axi_arready->set_sv_netview_offsetfromdp(11473776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_rid.bind(*p_15_s01_axi_rid);
        p_15_s01_axi_rid->set_sv_netview_offsetfromdp(11473832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_rdata.bind(*p_15_s01_axi_rdata);
        p_15_s01_axi_rdata->set_sv_netview_offsetfromdp(11473888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_rresp.bind(*p_15_s01_axi_rresp);
        p_15_s01_axi_rresp->set_sv_netview_offsetfromdp(11473944);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rlast.bind(*p_15_s01_axi_rlast);
        p_15_s01_axi_rlast->set_sv_netview_offsetfromdp(11474000);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rvalid.bind(*p_15_s01_axi_rvalid);
        p_15_s01_axi_rvalid->set_sv_netview_offsetfromdp(11474056);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rready.bind(*p_15_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[20505].first = 1;
        (*_glb_hdl_sc_channel_map)[20505].second.push_front(p_15_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aclk.bind(*p_15_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20472].first = 1;
        (*_glb_hdl_sc_channel_map)[20472].second.push_front(p_15_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aresetn.bind(*p_15_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20476].first = 1;
        (*_glb_hdl_sc_channel_map)[20476].second.push_front(p_15_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_awid.bind(*p_15_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[20530].first = 3;
        (*_glb_hdl_sc_channel_map)[20530].second.push_front(p_15_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_awaddr.bind(*p_15_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[20527].first = 3;
        (*_glb_hdl_sc_channel_map)[20527].second.push_front(p_15_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_awlen.bind(*p_15_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[20531].first = 3;
        (*_glb_hdl_sc_channel_map)[20531].second.push_front(p_15_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awsize.bind(*p_15_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[20537].first = 3;
        (*_glb_hdl_sc_channel_map)[20537].second.push_front(p_15_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_awburst.bind(*p_15_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[20528].first = 3;
        (*_glb_hdl_sc_channel_map)[20528].second.push_front(p_15_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awlock.bind(*p_15_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[20532].first = 1;
        (*_glb_hdl_sc_channel_map)[20532].second.push_front(p_15_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awcache.bind(*p_15_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[20529].first = 3;
        (*_glb_hdl_sc_channel_map)[20529].second.push_front(p_15_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awprot.bind(*p_15_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[20533].first = 3;
        (*_glb_hdl_sc_channel_map)[20533].second.push_front(p_15_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awregion.bind(*p_15_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[20536].first = 3;
        (*_glb_hdl_sc_channel_map)[20536].second.push_front(p_15_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awqos.bind(*p_15_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[20534].first = 3;
        (*_glb_hdl_sc_channel_map)[20534].second.push_front(p_15_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awvalid.bind(*p_15_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[20538].first = 1;
        (*_glb_hdl_sc_channel_map)[20538].second.push_front(p_15_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awready.bind(*p_15_s02_axi_awready);
        p_15_s02_axi_awready->set_sv_netview_offsetfromdp(11474896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_wdata.bind(*p_15_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[20549].first = 3;
        (*_glb_hdl_sc_channel_map)[20549].second.push_front(p_15_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_wstrb.bind(*p_15_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[20552].first = 3;
        (*_glb_hdl_sc_channel_map)[20552].second.push_front(p_15_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wlast.bind(*p_15_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[20550].first = 1;
        (*_glb_hdl_sc_channel_map)[20550].second.push_front(p_15_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wvalid.bind(*p_15_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[20553].first = 1;
        (*_glb_hdl_sc_channel_map)[20553].second.push_front(p_15_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wready.bind(*p_15_s02_axi_wready);
        p_15_s02_axi_wready->set_sv_netview_offsetfromdp(11475176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_bid.bind(*p_15_s02_axi_bid);
        p_15_s02_axi_bid->set_sv_netview_offsetfromdp(11475232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_bresp.bind(*p_15_s02_axi_bresp);
        p_15_s02_axi_bresp->set_sv_netview_offsetfromdp(11475288);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bvalid.bind(*p_15_s02_axi_bvalid);
        p_15_s02_axi_bvalid->set_sv_netview_offsetfromdp(11475344);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bready.bind(*p_15_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[20540].first = 1;
        (*_glb_hdl_sc_channel_map)[20540].second.push_front(p_15_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_arid.bind(*p_15_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[20518].first = 3;
        (*_glb_hdl_sc_channel_map)[20518].second.push_front(p_15_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_araddr.bind(*p_15_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[20514].first = 3;
        (*_glb_hdl_sc_channel_map)[20514].second.push_front(p_15_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_arlen.bind(*p_15_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[20519].first = 3;
        (*_glb_hdl_sc_channel_map)[20519].second.push_front(p_15_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arsize.bind(*p_15_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[20525].first = 3;
        (*_glb_hdl_sc_channel_map)[20525].second.push_front(p_15_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_arburst.bind(*p_15_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[20515].first = 3;
        (*_glb_hdl_sc_channel_map)[20515].second.push_front(p_15_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arlock.bind(*p_15_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[20520].first = 1;
        (*_glb_hdl_sc_channel_map)[20520].second.push_front(p_15_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arcache.bind(*p_15_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[20516].first = 3;
        (*_glb_hdl_sc_channel_map)[20516].second.push_front(p_15_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arprot.bind(*p_15_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[20521].first = 3;
        (*_glb_hdl_sc_channel_map)[20521].second.push_front(p_15_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arregion.bind(*p_15_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[20524].first = 3;
        (*_glb_hdl_sc_channel_map)[20524].second.push_front(p_15_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arqos.bind(*p_15_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[20522].first = 3;
        (*_glb_hdl_sc_channel_map)[20522].second.push_front(p_15_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arvalid.bind(*p_15_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[20526].first = 1;
        (*_glb_hdl_sc_channel_map)[20526].second.push_front(p_15_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arready.bind(*p_15_s02_axi_arready);
        p_15_s02_axi_arready->set_sv_netview_offsetfromdp(11476072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_rid.bind(*p_15_s02_axi_rid);
        p_15_s02_axi_rid->set_sv_netview_offsetfromdp(11476128);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_rdata.bind(*p_15_s02_axi_rdata);
        p_15_s02_axi_rdata->set_sv_netview_offsetfromdp(11476184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_rresp.bind(*p_15_s02_axi_rresp);
        p_15_s02_axi_rresp->set_sv_netview_offsetfromdp(11476240);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rlast.bind(*p_15_s02_axi_rlast);
        p_15_s02_axi_rlast->set_sv_netview_offsetfromdp(11476296);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rvalid.bind(*p_15_s02_axi_rvalid);
        p_15_s02_axi_rvalid->set_sv_netview_offsetfromdp(11476352);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rready.bind(*p_15_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[20546].first = 1;
        (*_glb_hdl_sc_channel_map)[20546].second.push_front(p_15_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aclk.bind(*p_15_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20513].first = 1;
        (*_glb_hdl_sc_channel_map)[20513].second.push_front(p_15_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aresetn.bind(*p_15_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20517].first = 1;
        (*_glb_hdl_sc_channel_map)[20517].second.push_front(p_15_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_awid.bind(*p_15_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[20612].first = 3;
        (*_glb_hdl_sc_channel_map)[20612].second.push_front(p_15_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_awaddr.bind(*p_15_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[20609].first = 3;
        (*_glb_hdl_sc_channel_map)[20609].second.push_front(p_15_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_awlen.bind(*p_15_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[20613].first = 3;
        (*_glb_hdl_sc_channel_map)[20613].second.push_front(p_15_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awsize.bind(*p_15_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[20619].first = 3;
        (*_glb_hdl_sc_channel_map)[20619].second.push_front(p_15_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_awburst.bind(*p_15_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[20610].first = 3;
        (*_glb_hdl_sc_channel_map)[20610].second.push_front(p_15_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awlock.bind(*p_15_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[20614].first = 1;
        (*_glb_hdl_sc_channel_map)[20614].second.push_front(p_15_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awcache.bind(*p_15_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[20611].first = 3;
        (*_glb_hdl_sc_channel_map)[20611].second.push_front(p_15_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awprot.bind(*p_15_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[20615].first = 3;
        (*_glb_hdl_sc_channel_map)[20615].second.push_front(p_15_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awregion.bind(*p_15_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[20618].first = 3;
        (*_glb_hdl_sc_channel_map)[20618].second.push_front(p_15_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awqos.bind(*p_15_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[20616].first = 3;
        (*_glb_hdl_sc_channel_map)[20616].second.push_front(p_15_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awvalid.bind(*p_15_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[20620].first = 1;
        (*_glb_hdl_sc_channel_map)[20620].second.push_front(p_15_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awready.bind(*p_15_s04_axi_awready);
        p_15_s04_axi_awready->set_sv_netview_offsetfromdp(11477192);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_wdata.bind(*p_15_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[20631].first = 3;
        (*_glb_hdl_sc_channel_map)[20631].second.push_front(p_15_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_wstrb.bind(*p_15_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[20634].first = 3;
        (*_glb_hdl_sc_channel_map)[20634].second.push_front(p_15_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wlast.bind(*p_15_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[20632].first = 1;
        (*_glb_hdl_sc_channel_map)[20632].second.push_front(p_15_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wvalid.bind(*p_15_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[20635].first = 1;
        (*_glb_hdl_sc_channel_map)[20635].second.push_front(p_15_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wready.bind(*p_15_s04_axi_wready);
        p_15_s04_axi_wready->set_sv_netview_offsetfromdp(11477472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_bid.bind(*p_15_s04_axi_bid);
        p_15_s04_axi_bid->set_sv_netview_offsetfromdp(11477528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_bresp.bind(*p_15_s04_axi_bresp);
        p_15_s04_axi_bresp->set_sv_netview_offsetfromdp(11477584);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bvalid.bind(*p_15_s04_axi_bvalid);
        p_15_s04_axi_bvalid->set_sv_netview_offsetfromdp(11477640);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bready.bind(*p_15_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[20622].first = 1;
        (*_glb_hdl_sc_channel_map)[20622].second.push_front(p_15_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_arid.bind(*p_15_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[20600].first = 3;
        (*_glb_hdl_sc_channel_map)[20600].second.push_front(p_15_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_araddr.bind(*p_15_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[20596].first = 3;
        (*_glb_hdl_sc_channel_map)[20596].second.push_front(p_15_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_arlen.bind(*p_15_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[20601].first = 3;
        (*_glb_hdl_sc_channel_map)[20601].second.push_front(p_15_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arsize.bind(*p_15_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[20607].first = 3;
        (*_glb_hdl_sc_channel_map)[20607].second.push_front(p_15_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_arburst.bind(*p_15_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[20597].first = 3;
        (*_glb_hdl_sc_channel_map)[20597].second.push_front(p_15_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arlock.bind(*p_15_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[20602].first = 1;
        (*_glb_hdl_sc_channel_map)[20602].second.push_front(p_15_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arcache.bind(*p_15_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[20598].first = 3;
        (*_glb_hdl_sc_channel_map)[20598].second.push_front(p_15_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arprot.bind(*p_15_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[20603].first = 3;
        (*_glb_hdl_sc_channel_map)[20603].second.push_front(p_15_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arregion.bind(*p_15_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[20606].first = 3;
        (*_glb_hdl_sc_channel_map)[20606].second.push_front(p_15_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arqos.bind(*p_15_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[20604].first = 3;
        (*_glb_hdl_sc_channel_map)[20604].second.push_front(p_15_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arvalid.bind(*p_15_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[20608].first = 1;
        (*_glb_hdl_sc_channel_map)[20608].second.push_front(p_15_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arready.bind(*p_15_s04_axi_arready);
        p_15_s04_axi_arready->set_sv_netview_offsetfromdp(11478368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_rid.bind(*p_15_s04_axi_rid);
        p_15_s04_axi_rid->set_sv_netview_offsetfromdp(11478424);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_rdata.bind(*p_15_s04_axi_rdata);
        p_15_s04_axi_rdata->set_sv_netview_offsetfromdp(11478480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_rresp.bind(*p_15_s04_axi_rresp);
        p_15_s04_axi_rresp->set_sv_netview_offsetfromdp(11478536);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rlast.bind(*p_15_s04_axi_rlast);
        p_15_s04_axi_rlast->set_sv_netview_offsetfromdp(11478592);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rvalid.bind(*p_15_s04_axi_rvalid);
        p_15_s04_axi_rvalid->set_sv_netview_offsetfromdp(11478648);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rready.bind(*p_15_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[20628].first = 1;
        (*_glb_hdl_sc_channel_map)[20628].second.push_front(p_15_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aclk.bind(*p_15_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20595].first = 1;
        (*_glb_hdl_sc_channel_map)[20595].second.push_front(p_15_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aresetn.bind(*p_15_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20599].first = 1;
        (*_glb_hdl_sc_channel_map)[20599].second.push_front(p_15_s04_axi_aresetn);
        sc_inst_16 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_16->xsim_set_dbg_index(23);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1597);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[26780].first = 3;
        (*_glb_hdl_sc_channel_map)[26780].second.push_front(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[26781].first = 3;
        (*_glb_hdl_sc_channel_map)[26781].second.push_front(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[26783].first = 1;
        (*_glb_hdl_sc_channel_map)[26783].second.push_front(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(13644064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[26791].first = 3;
        (*_glb_hdl_sc_channel_map)[26791].second.push_front(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[26793].first = 3;
        (*_glb_hdl_sc_channel_map)[26793].second.push_front(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[26794].first = 1;
        (*_glb_hdl_sc_channel_map)[26794].second.push_front(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(13644288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(13644344);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(13644400);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[26784].first = 1;
        (*_glb_hdl_sc_channel_map)[26784].second.push_front(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[26775].first = 3;
        (*_glb_hdl_sc_channel_map)[26775].second.push_front(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[26777].first = 3;
        (*_glb_hdl_sc_channel_map)[26777].second.push_front(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[26779].first = 1;
        (*_glb_hdl_sc_channel_map)[26779].second.push_front(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(13644680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(13644736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(13644792);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(13644848);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[26788].first = 1;
        (*_glb_hdl_sc_channel_map)[26788].second.push_front(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[26774].first = 1;
        (*_glb_hdl_sc_channel_map)[26774].second.push_front(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[26776].first = 1;
        (*_glb_hdl_sc_channel_map)[26776].second.push_front(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(13645072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(13645128);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(13645184);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[26761].first = 1;
        (*_glb_hdl_sc_channel_map)[26761].second.push_front(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(13645296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(13645352);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(13645408);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[26771].first = 1;
        (*_glb_hdl_sc_channel_map)[26771].second.push_front(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[26764].first = 3;
        (*_glb_hdl_sc_channel_map)[26764].second.push_front(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[26765].first = 1;
        (*_glb_hdl_sc_channel_map)[26765].second.push_front(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(13645632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(13645688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(13645744);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(13645800);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[26757].first = 1;
        (*_glb_hdl_sc_channel_map)[26757].second.push_front(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[26766].first = 3;
        (*_glb_hdl_sc_channel_map)[26766].second.push_front(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[26768].first = 3;
        (*_glb_hdl_sc_channel_map)[26768].second.push_front(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[26769].first = 1;
        (*_glb_hdl_sc_channel_map)[26769].second.push_front(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(13646080);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[26753].first = 1;
        (*_glb_hdl_sc_channel_map)[26753].second.push_front(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[26755].first = 1;
        (*_glb_hdl_sc_channel_map)[26755].second.push_front(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map)[26752].first = 1;
        (*_glb_hdl_sc_channel_map)[26752].second.push_front(p_17_irq);
        sc_inst_18 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_18->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_awaddr.bind(*p_18_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[21254].first = 3;
        (*_glb_hdl_sc_channel_map)[21254].second.push_front(p_18_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_awlen.bind(*p_18_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[26877].first = 3;
        (*_glb_hdl_sc_channel_map)[26877].second.push_front(p_18_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awsize.bind(*p_18_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[26880].first = 3;
        (*_glb_hdl_sc_channel_map)[26880].second.push_front(p_18_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_awburst.bind(*p_18_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[26876].first = 3;
        (*_glb_hdl_sc_channel_map)[26876].second.push_front(p_18_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awlock.bind(*p_18_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[21252].first = 1;
        (*_glb_hdl_sc_channel_map)[21252].second.push_front(p_18_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awcache.bind(*p_18_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[21253].first = 3;
        (*_glb_hdl_sc_channel_map)[21253].second.push_front(p_18_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awprot.bind(*p_18_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[26878].first = 3;
        (*_glb_hdl_sc_channel_map)[26878].second.push_front(p_18_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awregion.bind(*p_18_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[21250].first = 3;
        (*_glb_hdl_sc_channel_map)[21250].second.push_front(p_18_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awqos.bind(*p_18_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[21251].first = 3;
        (*_glb_hdl_sc_channel_map)[21251].second.push_front(p_18_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awvalid.bind(*p_18_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[26881].first = 1;
        (*_glb_hdl_sc_channel_map)[26881].second.push_front(p_18_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awready.bind(*p_18_s00_axi_awready);
        p_18_s00_axi_awready->set_sv_netview_offsetfromdp(13656632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_wdata.bind(*p_18_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[26890].first = 3;
        (*_glb_hdl_sc_channel_map)[26890].second.push_front(p_18_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_wstrb.bind(*p_18_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[26893].first = 3;
        (*_glb_hdl_sc_channel_map)[26893].second.push_front(p_18_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wlast.bind(*p_18_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[26891].first = 1;
        (*_glb_hdl_sc_channel_map)[26891].second.push_front(p_18_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wvalid.bind(*p_18_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[26894].first = 1;
        (*_glb_hdl_sc_channel_map)[26894].second.push_front(p_18_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wready.bind(*p_18_s00_axi_wready);
        p_18_s00_axi_wready->set_sv_netview_offsetfromdp(13656912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_bresp.bind(*p_18_s00_axi_bresp);
        p_18_s00_axi_bresp->set_sv_netview_offsetfromdp(13656968);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bvalid.bind(*p_18_s00_axi_bvalid);
        p_18_s00_axi_bvalid->set_sv_netview_offsetfromdp(13657024);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bready.bind(*p_18_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[26882].first = 1;
        (*_glb_hdl_sc_channel_map)[26882].second.push_front(p_18_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_araddr.bind(*p_18_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[21259].first = 3;
        (*_glb_hdl_sc_channel_map)[21259].second.push_front(p_18_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_arlen.bind(*p_18_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[26871].first = 3;
        (*_glb_hdl_sc_channel_map)[26871].second.push_front(p_18_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arsize.bind(*p_18_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[26874].first = 3;
        (*_glb_hdl_sc_channel_map)[26874].second.push_front(p_18_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_arburst.bind(*p_18_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[26869].first = 3;
        (*_glb_hdl_sc_channel_map)[26869].second.push_front(p_18_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arlock.bind(*p_18_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[21257].first = 1;
        (*_glb_hdl_sc_channel_map)[21257].second.push_front(p_18_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arcache.bind(*p_18_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[21258].first = 3;
        (*_glb_hdl_sc_channel_map)[21258].second.push_front(p_18_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arprot.bind(*p_18_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[26872].first = 3;
        (*_glb_hdl_sc_channel_map)[26872].second.push_front(p_18_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arregion.bind(*p_18_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[21255].first = 3;
        (*_glb_hdl_sc_channel_map)[21255].second.push_front(p_18_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arqos.bind(*p_18_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[21256].first = 3;
        (*_glb_hdl_sc_channel_map)[21256].second.push_front(p_18_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arvalid.bind(*p_18_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[26875].first = 1;
        (*_glb_hdl_sc_channel_map)[26875].second.push_front(p_18_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arready.bind(*p_18_s00_axi_arready);
        p_18_s00_axi_arready->set_sv_netview_offsetfromdp(13657696);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_rdata.bind(*p_18_s00_axi_rdata);
        p_18_s00_axi_rdata->set_sv_netview_offsetfromdp(13657752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_rresp.bind(*p_18_s00_axi_rresp);
        p_18_s00_axi_rresp->set_sv_netview_offsetfromdp(13657808);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rlast.bind(*p_18_s00_axi_rlast);
        p_18_s00_axi_rlast->set_sv_netview_offsetfromdp(13657864);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rvalid.bind(*p_18_s00_axi_rvalid);
        p_18_s00_axi_rvalid->set_sv_netview_offsetfromdp(13657920);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rready.bind(*p_18_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[26887].first = 1;
        (*_glb_hdl_sc_channel_map)[26887].second.push_front(p_18_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aclk.bind(*p_18_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26868].first = 1;
        (*_glb_hdl_sc_channel_map)[26868].second.push_front(p_18_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aresetn.bind(*p_18_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26870].first = 1;
        (*_glb_hdl_sc_channel_map)[26870].second.push_front(p_18_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awid.bind(*p_18_m00_axi_awid);
        p_18_m00_axi_awid->set_sv_netview_offsetfromdp(13658144);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_awaddr.bind(*p_18_m00_axi_awaddr);
        p_18_m00_axi_awaddr->set_sv_netview_offsetfromdp(13658200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_awlen.bind(*p_18_m00_axi_awlen);
        p_18_m00_axi_awlen->set_sv_netview_offsetfromdp(13658256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awsize.bind(*p_18_m00_axi_awsize);
        p_18_m00_axi_awsize->set_sv_netview_offsetfromdp(13658312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_awburst.bind(*p_18_m00_axi_awburst);
        p_18_m00_axi_awburst->set_sv_netview_offsetfromdp(13658368);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awlock.bind(*p_18_m00_axi_awlock);
        p_18_m00_axi_awlock->set_sv_netview_offsetfromdp(13658424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awcache.bind(*p_18_m00_axi_awcache);
        p_18_m00_axi_awcache->set_sv_netview_offsetfromdp(13658480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awprot.bind(*p_18_m00_axi_awprot);
        p_18_m00_axi_awprot->set_sv_netview_offsetfromdp(13658536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awqos.bind(*p_18_m00_axi_awqos);
        p_18_m00_axi_awqos->set_sv_netview_offsetfromdp(13658592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awuser.bind(*p_18_m00_axi_awuser);
        p_18_m00_axi_awuser->set_sv_netview_offsetfromdp(13658648);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awvalid.bind(*p_18_m00_axi_awvalid);
        p_18_m00_axi_awvalid->set_sv_netview_offsetfromdp(13658704);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awready.bind(*p_18_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[26846].first = 1;
        (*_glb_hdl_sc_channel_map)[26846].second.push_front(p_18_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_wdata.bind(*p_18_m00_axi_wdata);
        p_18_m00_axi_wdata->set_sv_netview_offsetfromdp(13658816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m00_axi_wstrb.bind(*p_18_m00_axi_wstrb);
        p_18_m00_axi_wstrb->set_sv_netview_offsetfromdp(13658872);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wlast.bind(*p_18_m00_axi_wlast);
        p_18_m00_axi_wlast->set_sv_netview_offsetfromdp(13658928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_wuser.bind(*p_18_m00_axi_wuser);
        p_18_m00_axi_wuser->set_sv_netview_offsetfromdp(13658984);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wvalid.bind(*p_18_m00_axi_wvalid);
        p_18_m00_axi_wvalid->set_sv_netview_offsetfromdp(13659040);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wready.bind(*p_18_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[26864].first = 1;
        (*_glb_hdl_sc_channel_map)[26864].second.push_front(p_18_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_bid.bind(*p_18_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[26850].first = 3;
        (*_glb_hdl_sc_channel_map)[26850].second.push_front(p_18_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_bresp.bind(*p_18_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[26852].first = 3;
        (*_glb_hdl_sc_channel_map)[26852].second.push_front(p_18_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_buser.bind(*p_18_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[26853].first = 3;
        (*_glb_hdl_sc_channel_map)[26853].second.push_front(p_18_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bvalid.bind(*p_18_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[26854].first = 1;
        (*_glb_hdl_sc_channel_map)[26854].second.push_front(p_18_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bready.bind(*p_18_m00_axi_bready);
        p_18_m00_axi_bready->set_sv_netview_offsetfromdp(13659376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_arid.bind(*p_18_m00_axi_arid);
        p_18_m00_axi_arid->set_sv_netview_offsetfromdp(13659432);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_araddr.bind(*p_18_m00_axi_araddr);
        p_18_m00_axi_araddr->set_sv_netview_offsetfromdp(13659488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_arlen.bind(*p_18_m00_axi_arlen);
        p_18_m00_axi_arlen->set_sv_netview_offsetfromdp(13659544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arsize.bind(*p_18_m00_axi_arsize);
        p_18_m00_axi_arsize->set_sv_netview_offsetfromdp(13659600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_arburst.bind(*p_18_m00_axi_arburst);
        p_18_m00_axi_arburst->set_sv_netview_offsetfromdp(13659656);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arlock.bind(*p_18_m00_axi_arlock);
        p_18_m00_axi_arlock->set_sv_netview_offsetfromdp(13659712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arcache.bind(*p_18_m00_axi_arcache);
        p_18_m00_axi_arcache->set_sv_netview_offsetfromdp(13659768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arprot.bind(*p_18_m00_axi_arprot);
        p_18_m00_axi_arprot->set_sv_netview_offsetfromdp(13659824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arqos.bind(*p_18_m00_axi_arqos);
        p_18_m00_axi_arqos->set_sv_netview_offsetfromdp(13659880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_aruser.bind(*p_18_m00_axi_aruser);
        p_18_m00_axi_aruser->set_sv_netview_offsetfromdp(13659936);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arvalid.bind(*p_18_m00_axi_arvalid);
        p_18_m00_axi_arvalid->set_sv_netview_offsetfromdp(13659992);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arready.bind(*p_18_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[26834].first = 1;
        (*_glb_hdl_sc_channel_map)[26834].second.push_front(p_18_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_rid.bind(*p_18_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[26856].first = 3;
        (*_glb_hdl_sc_channel_map)[26856].second.push_front(p_18_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_rdata.bind(*p_18_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[26855].first = 3;
        (*_glb_hdl_sc_channel_map)[26855].second.push_front(p_18_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_rresp.bind(*p_18_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[26859].first = 3;
        (*_glb_hdl_sc_channel_map)[26859].second.push_front(p_18_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rlast.bind(*p_18_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[26857].first = 1;
        (*_glb_hdl_sc_channel_map)[26857].second.push_front(p_18_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_ruser.bind(*p_18_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[26860].first = 3;
        (*_glb_hdl_sc_channel_map)[26860].second.push_front(p_18_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rvalid.bind(*p_18_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[26861].first = 1;
        (*_glb_hdl_sc_channel_map)[26861].second.push_front(p_18_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rready.bind(*p_18_m00_axi_rready);
        p_18_m00_axi_rready->set_sv_netview_offsetfromdp(13660440);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aclk.bind(*p_18_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[26824].first = 1;
        (*_glb_hdl_sc_channel_map)[26824].second.push_front(p_18_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aresetn.bind(*p_18_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[26828].first = 1;
        (*_glb_hdl_sc_channel_map)[26828].second.push_front(p_18_m00_axi_aresetn);
        sc_inst_19 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_19->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[21245].first = 3;
        (*_glb_hdl_sc_channel_map)[21245].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[27182].first = 1;
        (*_glb_hdl_sc_channel_map)[27182].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(13706944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[27190].first = 3;
        (*_glb_hdl_sc_channel_map)[27190].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[27192].first = 3;
        (*_glb_hdl_sc_channel_map)[27192].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[27193].first = 1;
        (*_glb_hdl_sc_channel_map)[27193].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(13707168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(13707224);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(13707280);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[27183].first = 1;
        (*_glb_hdl_sc_channel_map)[27183].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[21246].first = 3;
        (*_glb_hdl_sc_channel_map)[21246].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[27180].first = 1;
        (*_glb_hdl_sc_channel_map)[27180].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(13707504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(13707560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(13707616);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(13707672);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[27187].first = 1;
        (*_glb_hdl_sc_channel_map)[27187].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[27141].first = 1;
        (*_glb_hdl_sc_channel_map)[27141].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[27142].first = 1;
        (*_glb_hdl_sc_channel_map)[27142].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(13707896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(13707952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(13708008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(13708064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(13708120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(13708176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(13708232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(13708288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(13708344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(13708400);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(13708456);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[27162].first = 1;
        (*_glb_hdl_sc_channel_map)[27162].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(13708568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(13708624);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(13708680);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(13708736);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[27176].first = 1;
        (*_glb_hdl_sc_channel_map)[27176].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[27167].first = 3;
        (*_glb_hdl_sc_channel_map)[27167].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[27168].first = 1;
        (*_glb_hdl_sc_channel_map)[27168].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(13708960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(13709016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(13709072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(13709128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(13709184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(13709240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(13709296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(13709352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(13709408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(13709464);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(13709520);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[27151].first = 1;
        (*_glb_hdl_sc_channel_map)[27151].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[27169].first = 3;
        (*_glb_hdl_sc_channel_map)[27169].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[27172].first = 3;
        (*_glb_hdl_sc_channel_map)[27172].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[27170].first = 1;
        (*_glb_hdl_sc_channel_map)[27170].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[27173].first = 1;
        (*_glb_hdl_sc_channel_map)[27173].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(13709856);
        sc_inst_20 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_20->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[21243].first = 3;
        (*_glb_hdl_sc_channel_map)[21243].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[27234].first = 1;
        (*_glb_hdl_sc_channel_map)[27234].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(13710072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[27242].first = 3;
        (*_glb_hdl_sc_channel_map)[27242].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[27244].first = 3;
        (*_glb_hdl_sc_channel_map)[27244].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[27245].first = 1;
        (*_glb_hdl_sc_channel_map)[27245].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(13710296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(13710352);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(13710408);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[27235].first = 1;
        (*_glb_hdl_sc_channel_map)[27235].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[21244].first = 3;
        (*_glb_hdl_sc_channel_map)[21244].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[27232].first = 1;
        (*_glb_hdl_sc_channel_map)[27232].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(13710632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(13710688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(13710744);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(13710800);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[27239].first = 1;
        (*_glb_hdl_sc_channel_map)[27239].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[27194].first = 1;
        (*_glb_hdl_sc_channel_map)[27194].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[27195].first = 1;
        (*_glb_hdl_sc_channel_map)[27195].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(13711024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(13711080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(13711136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(13711192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(13711248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(13711304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(13711360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(13711416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(13711472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(13711528);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(13711584);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[27214].first = 1;
        (*_glb_hdl_sc_channel_map)[27214].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(13711696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(13711752);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(13711808);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(13711864);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[27228].first = 1;
        (*_glb_hdl_sc_channel_map)[27228].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[27219].first = 3;
        (*_glb_hdl_sc_channel_map)[27219].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[27220].first = 1;
        (*_glb_hdl_sc_channel_map)[27220].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(13712088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(13712144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(13712200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(13712256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(13712312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(13712368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(13712424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(13712480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(13712536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(13712592);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(13712648);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[27203].first = 1;
        (*_glb_hdl_sc_channel_map)[27203].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[27221].first = 3;
        (*_glb_hdl_sc_channel_map)[27221].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[27224].first = 3;
        (*_glb_hdl_sc_channel_map)[27224].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[27222].first = 1;
        (*_glb_hdl_sc_channel_map)[27222].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[27225].first = 1;
        (*_glb_hdl_sc_channel_map)[27225].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(13712984);
        sc_inst_21 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_21->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[21241].first = 3;
        (*_glb_hdl_sc_channel_map)[21241].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[27287].first = 1;
        (*_glb_hdl_sc_channel_map)[27287].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(13713200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[27295].first = 3;
        (*_glb_hdl_sc_channel_map)[27295].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[27297].first = 3;
        (*_glb_hdl_sc_channel_map)[27297].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[27298].first = 1;
        (*_glb_hdl_sc_channel_map)[27298].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(13713424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(13713480);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(13713536);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[27288].first = 1;
        (*_glb_hdl_sc_channel_map)[27288].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[21242].first = 3;
        (*_glb_hdl_sc_channel_map)[21242].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[27285].first = 1;
        (*_glb_hdl_sc_channel_map)[27285].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(13713760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(13713816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(13713872);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(13713928);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[27292].first = 1;
        (*_glb_hdl_sc_channel_map)[27292].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[27247].first = 1;
        (*_glb_hdl_sc_channel_map)[27247].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[27248].first = 1;
        (*_glb_hdl_sc_channel_map)[27248].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(13714152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(13714208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(13714264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(13714320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(13714376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(13714432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(13714488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(13714544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(13714600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(13714656);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(13714712);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[27267].first = 1;
        (*_glb_hdl_sc_channel_map)[27267].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(13714824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(13714880);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(13714936);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(13714992);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[27281].first = 1;
        (*_glb_hdl_sc_channel_map)[27281].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[27272].first = 3;
        (*_glb_hdl_sc_channel_map)[27272].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[27273].first = 1;
        (*_glb_hdl_sc_channel_map)[27273].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(13715216);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(13715272);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(13715328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(13715384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(13715440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(13715496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(13715552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(13715608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(13715664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(13715720);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(13715776);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[27256].first = 1;
        (*_glb_hdl_sc_channel_map)[27256].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[27274].first = 3;
        (*_glb_hdl_sc_channel_map)[27274].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[27277].first = 3;
        (*_glb_hdl_sc_channel_map)[27277].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[27275].first = 1;
        (*_glb_hdl_sc_channel_map)[27275].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[27278].first = 1;
        (*_glb_hdl_sc_channel_map)[27278].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(13716112);
        sc_inst_22 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_22->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[21239].first = 3;
        (*_glb_hdl_sc_channel_map)[21239].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[27340].first = 1;
        (*_glb_hdl_sc_channel_map)[27340].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(13716328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[27348].first = 3;
        (*_glb_hdl_sc_channel_map)[27348].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[27350].first = 3;
        (*_glb_hdl_sc_channel_map)[27350].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[27351].first = 1;
        (*_glb_hdl_sc_channel_map)[27351].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(13716552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(13716608);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(13716664);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[27341].first = 1;
        (*_glb_hdl_sc_channel_map)[27341].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[21240].first = 3;
        (*_glb_hdl_sc_channel_map)[21240].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[27338].first = 1;
        (*_glb_hdl_sc_channel_map)[27338].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(13716888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(13716944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(13717000);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(13717056);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[27345].first = 1;
        (*_glb_hdl_sc_channel_map)[27345].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[27300].first = 1;
        (*_glb_hdl_sc_channel_map)[27300].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[27301].first = 1;
        (*_glb_hdl_sc_channel_map)[27301].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(13717280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(13717336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(13717392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(13717448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(13717504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(13717560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(13717616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(13717672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(13717728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(13717784);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(13717840);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[27320].first = 1;
        (*_glb_hdl_sc_channel_map)[27320].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(13717952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(13718008);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(13718064);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(13718120);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[27334].first = 1;
        (*_glb_hdl_sc_channel_map)[27334].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[27325].first = 3;
        (*_glb_hdl_sc_channel_map)[27325].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[27326].first = 1;
        (*_glb_hdl_sc_channel_map)[27326].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(13718344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(13718400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(13718456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(13718512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(13718568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(13718624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(13718680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(13718736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(13718792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(13718848);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(13718904);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[27309].first = 1;
        (*_glb_hdl_sc_channel_map)[27309].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[27327].first = 3;
        (*_glb_hdl_sc_channel_map)[27327].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[27330].first = 3;
        (*_glb_hdl_sc_channel_map)[27330].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[27328].first = 1;
        (*_glb_hdl_sc_channel_map)[27328].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[27331].first = 1;
        (*_glb_hdl_sc_channel_map)[27331].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(13719240);
        sc_inst_23 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_23->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_23_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ui_clk.bind(*p_23_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[27397].first = 1;
        (*_glb_hdl_sc_channel_map)[27397].second.push_front(p_23_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awid.bind(*p_23_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[27370].first = 3;
        (*_glb_hdl_sc_channel_map)[27370].second.push_front(p_23_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_awaddr.bind(*p_23_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[27367].first = 3;
        (*_glb_hdl_sc_channel_map)[27367].second.push_front(p_23_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_awlen.bind(*p_23_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[27371].first = 3;
        (*_glb_hdl_sc_channel_map)[27371].second.push_front(p_23_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awsize.bind(*p_23_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[27376].first = 3;
        (*_glb_hdl_sc_channel_map)[27376].second.push_front(p_23_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_awburst.bind(*p_23_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[27368].first = 3;
        (*_glb_hdl_sc_channel_map)[27368].second.push_front(p_23_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awlock.bind(*p_23_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[27372].first = 1;
        (*_glb_hdl_sc_channel_map)[27372].second.push_front(p_23_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awcache.bind(*p_23_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[27369].first = 3;
        (*_glb_hdl_sc_channel_map)[27369].second.push_front(p_23_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awprot.bind(*p_23_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[27373].first = 3;
        (*_glb_hdl_sc_channel_map)[27373].second.push_front(p_23_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awregion.bind(*p_23_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[21237].first = 3;
        (*_glb_hdl_sc_channel_map)[21237].second.push_front(p_23_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awqos.bind(*p_23_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[27374].first = 3;
        (*_glb_hdl_sc_channel_map)[27374].second.push_front(p_23_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awuser.bind(*p_23_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[27377].first = 3;
        (*_glb_hdl_sc_channel_map)[27377].second.push_front(p_23_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awvalid.bind(*p_23_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[27378].first = 1;
        (*_glb_hdl_sc_channel_map)[27378].second.push_front(p_23_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awready.bind(*p_23_c0_ddr_saxi_awready);
        p_23_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(13720072);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_wdata.bind(*p_23_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[27391].first = 3;
        (*_glb_hdl_sc_channel_map)[27391].second.push_front(p_23_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->c0_ddr_saxi_wstrb.bind(*p_23_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[27394].first = 3;
        (*_glb_hdl_sc_channel_map)[27394].second.push_front(p_23_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wlast.bind(*p_23_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[27392].first = 1;
        (*_glb_hdl_sc_channel_map)[27392].second.push_front(p_23_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_wuser.bind(*p_23_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[27395].first = 3;
        (*_glb_hdl_sc_channel_map)[27395].second.push_front(p_23_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wvalid.bind(*p_23_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[27396].first = 1;
        (*_glb_hdl_sc_channel_map)[27396].second.push_front(p_23_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wready.bind(*p_23_c0_ddr_saxi_wready);
        p_23_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(13720408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_bid.bind(*p_23_c0_ddr_saxi_bid);
        p_23_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(13720464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_bresp.bind(*p_23_c0_ddr_saxi_bresp);
        p_23_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(13720520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_buser.bind(*p_23_c0_ddr_saxi_buser);
        p_23_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(13720576);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bvalid.bind(*p_23_c0_ddr_saxi_bvalid);
        p_23_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(13720632);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bready.bind(*p_23_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[27380].first = 1;
        (*_glb_hdl_sc_channel_map)[27380].second.push_front(p_23_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_arid.bind(*p_23_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[27358].first = 3;
        (*_glb_hdl_sc_channel_map)[27358].second.push_front(p_23_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_araddr.bind(*p_23_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[27354].first = 3;
        (*_glb_hdl_sc_channel_map)[27354].second.push_front(p_23_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_arlen.bind(*p_23_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[27359].first = 3;
        (*_glb_hdl_sc_channel_map)[27359].second.push_front(p_23_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arsize.bind(*p_23_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[27364].first = 3;
        (*_glb_hdl_sc_channel_map)[27364].second.push_front(p_23_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_arburst.bind(*p_23_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[27355].first = 3;
        (*_glb_hdl_sc_channel_map)[27355].second.push_front(p_23_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arlock.bind(*p_23_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[27360].first = 1;
        (*_glb_hdl_sc_channel_map)[27360].second.push_front(p_23_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arcache.bind(*p_23_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[27356].first = 3;
        (*_glb_hdl_sc_channel_map)[27356].second.push_front(p_23_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arprot.bind(*p_23_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[27361].first = 3;
        (*_glb_hdl_sc_channel_map)[27361].second.push_front(p_23_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arregion.bind(*p_23_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[21238].first = 3;
        (*_glb_hdl_sc_channel_map)[21238].second.push_front(p_23_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arqos.bind(*p_23_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[27362].first = 3;
        (*_glb_hdl_sc_channel_map)[27362].second.push_front(p_23_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_aruser.bind(*p_23_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[27365].first = 3;
        (*_glb_hdl_sc_channel_map)[27365].second.push_front(p_23_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arvalid.bind(*p_23_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[27366].first = 1;
        (*_glb_hdl_sc_channel_map)[27366].second.push_front(p_23_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arready.bind(*p_23_c0_ddr_saxi_arready);
        p_23_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(13721416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_rid.bind(*p_23_c0_ddr_saxi_rid);
        p_23_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(13721472);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_rdata.bind(*p_23_c0_ddr_saxi_rdata);
        p_23_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(13721528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_rresp.bind(*p_23_c0_ddr_saxi_rresp);
        p_23_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(13721584);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rlast.bind(*p_23_c0_ddr_saxi_rlast);
        p_23_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(13721640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_ruser.bind(*p_23_c0_ddr_saxi_ruser);
        p_23_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(13721696);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rvalid.bind(*p_23_c0_ddr_saxi_rvalid);
        p_23_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(13721752);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rready.bind(*p_23_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[27387].first = 1;
        (*_glb_hdl_sc_channel_map)[27387].second.push_front(p_23_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aclk.bind(*p_23_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[27353].first = 1;
        (*_glb_hdl_sc_channel_map)[27353].second.push_front(p_23_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aresetn.bind(*p_23_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[27357].first = 1;
        (*_glb_hdl_sc_channel_map)[27357].second.push_front(p_23_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_awid.bind(*p_23_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[21221].first = 3;
        (*_glb_hdl_sc_channel_map)[21221].second.push_front(p_23_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awaddr.bind(*p_23_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[21224].first = 3;
        (*_glb_hdl_sc_channel_map)[21224].second.push_front(p_23_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_awlen.bind(*p_23_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[21220].first = 3;
        (*_glb_hdl_sc_channel_map)[21220].second.push_front(p_23_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awsize.bind(*p_23_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[21215].first = 3;
        (*_glb_hdl_sc_channel_map)[21215].second.push_front(p_23_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_awburst.bind(*p_23_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[21223].first = 3;
        (*_glb_hdl_sc_channel_map)[21223].second.push_front(p_23_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awlock.bind(*p_23_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[21219].first = 1;
        (*_glb_hdl_sc_channel_map)[21219].second.push_front(p_23_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awcache.bind(*p_23_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[21222].first = 3;
        (*_glb_hdl_sc_channel_map)[21222].second.push_front(p_23_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awprot.bind(*p_23_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[21218].first = 3;
        (*_glb_hdl_sc_channel_map)[21218].second.push_front(p_23_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awregion.bind(*p_23_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[21216].first = 3;
        (*_glb_hdl_sc_channel_map)[21216].second.push_front(p_23_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awqos.bind(*p_23_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[21217].first = 3;
        (*_glb_hdl_sc_channel_map)[21217].second.push_front(p_23_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awuser.bind(*p_23_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[21214].first = 3;
        (*_glb_hdl_sc_channel_map)[21214].second.push_front(p_23_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awvalid.bind(*p_23_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[21213].first = 1;
        (*_glb_hdl_sc_channel_map)[21213].second.push_front(p_23_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awready.bind(*p_23_s_xdma_axi_awready);
        p_23_s_xdma_axi_awready->set_sv_netview_offsetfromdp(13722648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_wdata.bind(*p_23_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[21210].first = 3;
        (*_glb_hdl_sc_channel_map)[21210].second.push_front(p_23_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_wstrb.bind(*p_23_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[21208].first = 3;
        (*_glb_hdl_sc_channel_map)[21208].second.push_front(p_23_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wlast.bind(*p_23_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[21209].first = 1;
        (*_glb_hdl_sc_channel_map)[21209].second.push_front(p_23_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_wuser.bind(*p_23_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[21207].first = 3;
        (*_glb_hdl_sc_channel_map)[21207].second.push_front(p_23_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wvalid.bind(*p_23_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[21206].first = 1;
        (*_glb_hdl_sc_channel_map)[21206].second.push_front(p_23_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wready.bind(*p_23_s_xdma_axi_wready);
        p_23_s_xdma_axi_wready->set_sv_netview_offsetfromdp(13722984);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_bid.bind(*p_23_s_xdma_axi_bid);
        p_23_s_xdma_axi_bid->set_sv_netview_offsetfromdp(13723040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_bresp.bind(*p_23_s_xdma_axi_bresp);
        p_23_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(13723096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_buser.bind(*p_23_s_xdma_axi_buser);
        p_23_s_xdma_axi_buser->set_sv_netview_offsetfromdp(13723152);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bvalid.bind(*p_23_s_xdma_axi_bvalid);
        p_23_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(13723208);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bready.bind(*p_23_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[21212].first = 1;
        (*_glb_hdl_sc_channel_map)[21212].second.push_front(p_23_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_arid.bind(*p_23_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[21233].first = 3;
        (*_glb_hdl_sc_channel_map)[21233].second.push_front(p_23_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_araddr.bind(*p_23_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[21236].first = 3;
        (*_glb_hdl_sc_channel_map)[21236].second.push_front(p_23_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_arlen.bind(*p_23_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[21232].first = 3;
        (*_glb_hdl_sc_channel_map)[21232].second.push_front(p_23_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arsize.bind(*p_23_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[21227].first = 3;
        (*_glb_hdl_sc_channel_map)[21227].second.push_front(p_23_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_arburst.bind(*p_23_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[21235].first = 3;
        (*_glb_hdl_sc_channel_map)[21235].second.push_front(p_23_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arlock.bind(*p_23_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[21231].first = 1;
        (*_glb_hdl_sc_channel_map)[21231].second.push_front(p_23_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arcache.bind(*p_23_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[21234].first = 3;
        (*_glb_hdl_sc_channel_map)[21234].second.push_front(p_23_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arprot.bind(*p_23_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[21230].first = 3;
        (*_glb_hdl_sc_channel_map)[21230].second.push_front(p_23_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arregion.bind(*p_23_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[21228].first = 3;
        (*_glb_hdl_sc_channel_map)[21228].second.push_front(p_23_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arqos.bind(*p_23_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[21229].first = 3;
        (*_glb_hdl_sc_channel_map)[21229].second.push_front(p_23_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_aruser.bind(*p_23_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[21226].first = 3;
        (*_glb_hdl_sc_channel_map)[21226].second.push_front(p_23_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arvalid.bind(*p_23_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[21225].first = 1;
        (*_glb_hdl_sc_channel_map)[21225].second.push_front(p_23_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arready.bind(*p_23_s_xdma_axi_arready);
        p_23_s_xdma_axi_arready->set_sv_netview_offsetfromdp(13723992);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_rid.bind(*p_23_s_xdma_axi_rid);
        p_23_s_xdma_axi_rid->set_sv_netview_offsetfromdp(13724048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_rdata.bind(*p_23_s_xdma_axi_rdata);
        p_23_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(13724104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_rresp.bind(*p_23_s_xdma_axi_rresp);
        p_23_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(13724160);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rlast.bind(*p_23_s_xdma_axi_rlast);
        p_23_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(13724216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_ruser.bind(*p_23_s_xdma_axi_ruser);
        p_23_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(13724272);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rvalid.bind(*p_23_s_xdma_axi_rvalid);
        p_23_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(13724328);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rready.bind(*p_23_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[21211].first = 1;
        (*_glb_hdl_sc_channel_map)[21211].second.push_front(p_23_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aclk.bind(*p_23_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[27398].first = 1;
        (*_glb_hdl_sc_channel_map)[27398].second.push_front(p_23_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aresetn.bind(*p_23_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[27399].first = 1;
        (*_glb_hdl_sc_channel_map)[27399].second.push_front(p_23_s_xdma_axi_aresetn);
        sc_inst_24 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_24->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_awid.bind(*p_24_m_aximm_awid);
        p_24_m_aximm_awid->set_sv_netview_offsetfromdp(13724600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_awaddr.bind(*p_24_m_aximm_awaddr);
        p_24_m_aximm_awaddr->set_sv_netview_offsetfromdp(13724656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_awlen.bind(*p_24_m_aximm_awlen);
        p_24_m_aximm_awlen->set_sv_netview_offsetfromdp(13724712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awsize.bind(*p_24_m_aximm_awsize);
        p_24_m_aximm_awsize->set_sv_netview_offsetfromdp(13724768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_awburst.bind(*p_24_m_aximm_awburst);
        p_24_m_aximm_awburst->set_sv_netview_offsetfromdp(13724824);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awlock.bind(*p_24_m_aximm_awlock);
        p_24_m_aximm_awlock->set_sv_netview_offsetfromdp(13724880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awcache.bind(*p_24_m_aximm_awcache);
        p_24_m_aximm_awcache->set_sv_netview_offsetfromdp(13724936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awprot.bind(*p_24_m_aximm_awprot);
        p_24_m_aximm_awprot->set_sv_netview_offsetfromdp(13724992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awqos.bind(*p_24_m_aximm_awqos);
        p_24_m_aximm_awqos->set_sv_netview_offsetfromdp(13725048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_awuser.bind(*p_24_m_aximm_awuser);
        p_24_m_aximm_awuser->set_sv_netview_offsetfromdp(13725104);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awvalid.bind(*p_24_m_aximm_awvalid);
        p_24_m_aximm_awvalid->set_sv_netview_offsetfromdp(13725160);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awready.bind(*p_24_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[27455].first = 1;
        (*_glb_hdl_sc_channel_map)[27455].second.push_front(p_24_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_wdata.bind(*p_24_m_aximm_wdata);
        p_24_m_aximm_wdata->set_sv_netview_offsetfromdp(13725272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_wstrb.bind(*p_24_m_aximm_wstrb);
        p_24_m_aximm_wstrb->set_sv_netview_offsetfromdp(13725328);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wlast.bind(*p_24_m_aximm_wlast);
        p_24_m_aximm_wlast->set_sv_netview_offsetfromdp(13725384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_wuser.bind(*p_24_m_aximm_wuser);
        p_24_m_aximm_wuser->set_sv_netview_offsetfromdp(13725440);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wvalid.bind(*p_24_m_aximm_wvalid);
        p_24_m_aximm_wvalid->set_sv_netview_offsetfromdp(13725496);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wready.bind(*p_24_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[27470].first = 1;
        (*_glb_hdl_sc_channel_map)[27470].second.push_front(p_24_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_bid.bind(*p_24_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[27458].first = 3;
        (*_glb_hdl_sc_channel_map)[27458].second.push_front(p_24_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_bresp.bind(*p_24_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[27460].first = 3;
        (*_glb_hdl_sc_channel_map)[27460].second.push_front(p_24_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_buser.bind(*p_24_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[21205].first = 3;
        (*_glb_hdl_sc_channel_map)[21205].second.push_front(p_24_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bvalid.bind(*p_24_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[27461].first = 1;
        (*_glb_hdl_sc_channel_map)[27461].second.push_front(p_24_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bready.bind(*p_24_m_aximm_bready);
        p_24_m_aximm_bready->set_sv_netview_offsetfromdp(13725832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_arid.bind(*p_24_m_aximm_arid);
        p_24_m_aximm_arid->set_sv_netview_offsetfromdp(13725888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_araddr.bind(*p_24_m_aximm_araddr);
        p_24_m_aximm_araddr->set_sv_netview_offsetfromdp(13725944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_arlen.bind(*p_24_m_aximm_arlen);
        p_24_m_aximm_arlen->set_sv_netview_offsetfromdp(13726000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arsize.bind(*p_24_m_aximm_arsize);
        p_24_m_aximm_arsize->set_sv_netview_offsetfromdp(13726056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_arburst.bind(*p_24_m_aximm_arburst);
        p_24_m_aximm_arburst->set_sv_netview_offsetfromdp(13726112);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arlock.bind(*p_24_m_aximm_arlock);
        p_24_m_aximm_arlock->set_sv_netview_offsetfromdp(13726168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arcache.bind(*p_24_m_aximm_arcache);
        p_24_m_aximm_arcache->set_sv_netview_offsetfromdp(13726224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arprot.bind(*p_24_m_aximm_arprot);
        p_24_m_aximm_arprot->set_sv_netview_offsetfromdp(13726280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arqos.bind(*p_24_m_aximm_arqos);
        p_24_m_aximm_arqos->set_sv_netview_offsetfromdp(13726336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_aruser.bind(*p_24_m_aximm_aruser);
        p_24_m_aximm_aruser->set_sv_netview_offsetfromdp(13726392);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arvalid.bind(*p_24_m_aximm_arvalid);
        p_24_m_aximm_arvalid->set_sv_netview_offsetfromdp(13726448);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arready.bind(*p_24_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[27444].first = 1;
        (*_glb_hdl_sc_channel_map)[27444].second.push_front(p_24_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_rid.bind(*p_24_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[27463].first = 3;
        (*_glb_hdl_sc_channel_map)[27463].second.push_front(p_24_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_rdata.bind(*p_24_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[27462].first = 3;
        (*_glb_hdl_sc_channel_map)[27462].second.push_front(p_24_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_rresp.bind(*p_24_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[27466].first = 3;
        (*_glb_hdl_sc_channel_map)[27466].second.push_front(p_24_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rlast.bind(*p_24_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[27464].first = 1;
        (*_glb_hdl_sc_channel_map)[27464].second.push_front(p_24_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_ruser.bind(*p_24_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[21204].first = 3;
        (*_glb_hdl_sc_channel_map)[21204].second.push_front(p_24_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rvalid.bind(*p_24_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[27467].first = 1;
        (*_glb_hdl_sc_channel_map)[27467].second.push_front(p_24_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rready.bind(*p_24_m_aximm_rready);
        p_24_m_aximm_rready->set_sv_netview_offsetfromdp(13726896);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aclk.bind(*p_24_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[27434].first = 1;
        (*_glb_hdl_sc_channel_map)[27434].second.push_front(p_24_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aresetn.bind(*p_24_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[27438].first = 1;
        (*_glb_hdl_sc_channel_map)[27438].second.push_front(p_24_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_awaddr.bind(*p_24_m_axictrl_awaddr);
        p_24_m_axictrl_awaddr->set_sv_netview_offsetfromdp(13727064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_awprot.bind(*p_24_m_axictrl_awprot);
        p_24_m_axictrl_awprot->set_sv_netview_offsetfromdp(13727120);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awvalid.bind(*p_24_m_axictrl_awvalid);
        p_24_m_axictrl_awvalid->set_sv_netview_offsetfromdp(13727176);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awready.bind(*p_24_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[27421].first = 1;
        (*_glb_hdl_sc_channel_map)[27421].second.push_front(p_24_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_wdata.bind(*p_24_m_axictrl_wdata);
        p_24_m_axictrl_wdata->set_sv_netview_offsetfromdp(13727288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axictrl_wstrb.bind(*p_24_m_axictrl_wstrb);
        p_24_m_axictrl_wstrb->set_sv_netview_offsetfromdp(13727344);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wvalid.bind(*p_24_m_axictrl_wvalid);
        p_24_m_axictrl_wvalid->set_sv_netview_offsetfromdp(13727400);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wready.bind(*p_24_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[27431].first = 1;
        (*_glb_hdl_sc_channel_map)[27431].second.push_front(p_24_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_bresp.bind(*p_24_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[27424].first = 3;
        (*_glb_hdl_sc_channel_map)[27424].second.push_front(p_24_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bvalid.bind(*p_24_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[27425].first = 1;
        (*_glb_hdl_sc_channel_map)[27425].second.push_front(p_24_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bready.bind(*p_24_m_axictrl_bready);
        p_24_m_axictrl_bready->set_sv_netview_offsetfromdp(13727624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_araddr.bind(*p_24_m_axictrl_araddr);
        p_24_m_axictrl_araddr->set_sv_netview_offsetfromdp(13727680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_arprot.bind(*p_24_m_axictrl_arprot);
        p_24_m_axictrl_arprot->set_sv_netview_offsetfromdp(13727736);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arvalid.bind(*p_24_m_axictrl_arvalid);
        p_24_m_axictrl_arvalid->set_sv_netview_offsetfromdp(13727792);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arready.bind(*p_24_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[27417].first = 1;
        (*_glb_hdl_sc_channel_map)[27417].second.push_front(p_24_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_rdata.bind(*p_24_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[27426].first = 3;
        (*_glb_hdl_sc_channel_map)[27426].second.push_front(p_24_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_rresp.bind(*p_24_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[27428].first = 3;
        (*_glb_hdl_sc_channel_map)[27428].second.push_front(p_24_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rvalid.bind(*p_24_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[27429].first = 1;
        (*_glb_hdl_sc_channel_map)[27429].second.push_front(p_24_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rready.bind(*p_24_m_axictrl_rready);
        p_24_m_axictrl_rready->set_sv_netview_offsetfromdp(13728072);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aclk.bind(*p_24_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[27413].first = 1;
        (*_glb_hdl_sc_channel_map)[27413].second.push_front(p_24_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aresetn.bind(*p_24_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[27415].first = 1;
        (*_glb_hdl_sc_channel_map)[27415].second.push_front(p_24_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
    }
