-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity wide_vadd_dataflow_in_loop_VITIS_LOOP_88_1 is
port (
    i : IN STD_LOGIC_VECTOR (63 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    in1 : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in2 : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    i_ap_vld : IN STD_LOGIC;
    size_ap_vld : IN STD_LOGIC;
    in1_ap_vld : IN STD_LOGIC;
    in2_ap_vld : IN STD_LOGIC;
    out_r_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of wide_vadd_dataflow_in_loop_VITIS_LOOP_88_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal v1_rd_proc5_U0_ap_start : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_done : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_continue : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_idle : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_ready : STD_LOGIC;
    signal v1_rd_proc5_U0_start_out : STD_LOGIC;
    signal v1_rd_proc5_U0_start_write : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_AWVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_WVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_WLAST : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem_RREADY : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem_BREADY : STD_LOGIC;
    signal v1_rd_proc5_U0_v1_local_V1_din : STD_LOGIC_VECTOR (511 downto 0);
    signal v1_rd_proc5_U0_v1_local_V1_write : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_WVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_WLAST : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_rd_proc5_U0_m_axi_gmem1_RREADY : STD_LOGIC;
    signal v1_rd_proc5_U0_m_axi_gmem1_BREADY : STD_LOGIC;
    signal v1_rd_proc5_U0_v2_local_V2_din : STD_LOGIC_VECTOR (511 downto 0);
    signal v1_rd_proc5_U0_v2_local_V2_write : STD_LOGIC;
    signal v1_rd_proc5_U0_i_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_i_out_write : STD_LOGIC;
    signal v1_rd_proc5_U0_size_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal v1_rd_proc5_U0_size_out_write : STD_LOGIC;
    signal v1_rd_proc5_U0_out_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal v1_rd_proc5_U0_out_out_write : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_ext_blocking_n : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_str_blocking_n : STD_LOGIC;
    signal v1_rd_proc5_U0_ap_int_blocking_n : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_start : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_done : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_continue : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_idle : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_ready : STD_LOGIC;
    signal v2_rd_add_proc_U0_i_read : STD_LOGIC;
    signal v2_rd_add_proc_U0_size_read : STD_LOGIC;
    signal v2_rd_add_proc_U0_v1_local_V1_read : STD_LOGIC;
    signal v2_rd_add_proc_U0_v2_local_V2_read : STD_LOGIC;
    signal v2_rd_add_proc_U0_out_r_read : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_WVALID : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_WLAST : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal v2_rd_add_proc_U0_m_axi_gmem2_RREADY : STD_LOGIC;
    signal v2_rd_add_proc_U0_m_axi_gmem2_BREADY : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_ext_blocking_n : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_str_blocking_n : STD_LOGIC;
    signal v2_rd_add_proc_U0_ap_int_blocking_n : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal v1_local_V_full_n : STD_LOGIC;
    signal v1_local_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal v1_local_V_empty_n : STD_LOGIC;
    signal v2_local_V_full_n : STD_LOGIC;
    signal v2_local_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal v2_local_V_empty_n : STD_LOGIC;
    signal i_c_full_n : STD_LOGIC;
    signal i_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal i_c_empty_n : STD_LOGIC;
    signal size_c_full_n : STD_LOGIC;
    signal size_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal size_c_empty_n : STD_LOGIC;
    signal out_c_full_n : STD_LOGIC;
    signal out_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal out_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_v2_rd_add_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v2_rd_add_proc_U0_full_n : STD_LOGIC;
    signal start_for_v2_rd_add_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_v2_rd_add_proc_U0_empty_n : STD_LOGIC;
    signal v2_rd_add_proc_U0_start_full_n : STD_LOGIC;
    signal v2_rd_add_proc_U0_start_write : STD_LOGIC;
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_str_blocking_cur_n : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;

    component wide_vadd_v1_rd_proc5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        i : IN STD_LOGIC_VECTOR (63 downto 0);
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        in1 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        v1_local_V1_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        v1_local_V1_full_n : IN STD_LOGIC;
        v1_local_V1_write : OUT STD_LOGIC;
        in2 : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        v2_local_V2_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        v2_local_V2_full_n : IN STD_LOGIC;
        v2_local_V2_write : OUT STD_LOGIC;
        out_r : IN STD_LOGIC_VECTOR (63 downto 0);
        i_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_out_full_n : IN STD_LOGIC;
        i_out_write : OUT STD_LOGIC;
        size_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        size_out_full_n : IN STD_LOGIC;
        size_out_write : OUT STD_LOGIC;
        out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_out_full_n : IN STD_LOGIC;
        out_out_write : OUT STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component wide_vadd_v2_rd_add_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        i_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        i_empty_n : IN STD_LOGIC;
        i_read : OUT STD_LOGIC;
        size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        size_empty_n : IN STD_LOGIC;
        size_read : OUT STD_LOGIC;
        v1_local_V1_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        v1_local_V1_empty_n : IN STD_LOGIC;
        v1_local_V1_read : OUT STD_LOGIC;
        v2_local_V2_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        v2_local_V2_empty_n : IN STD_LOGIC;
        v2_local_V2_read : OUT STD_LOGIC;
        out_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_empty_n : IN STD_LOGIC;
        out_r_read : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component wide_vadd_fifo_w512_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component wide_vadd_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component wide_vadd_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component wide_vadd_start_for_v2_rd_add_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    v1_rd_proc5_U0 : component wide_vadd_v1_rd_proc5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v1_rd_proc5_U0_ap_start,
        start_full_n => start_for_v2_rd_add_proc_U0_full_n,
        ap_done => v1_rd_proc5_U0_ap_done,
        ap_continue => v1_rd_proc5_U0_ap_continue,
        ap_idle => v1_rd_proc5_U0_ap_idle,
        ap_ready => v1_rd_proc5_U0_ap_ready,
        start_out => v1_rd_proc5_U0_start_out,
        start_write => v1_rd_proc5_U0_start_write,
        i => i,
        size => size,
        in1 => in1,
        m_axi_gmem_AWVALID => v1_rd_proc5_U0_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => v1_rd_proc5_U0_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => v1_rd_proc5_U0_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => v1_rd_proc5_U0_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => v1_rd_proc5_U0_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => v1_rd_proc5_U0_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => v1_rd_proc5_U0_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => v1_rd_proc5_U0_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => v1_rd_proc5_U0_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => v1_rd_proc5_U0_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => v1_rd_proc5_U0_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => v1_rd_proc5_U0_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => v1_rd_proc5_U0_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => v1_rd_proc5_U0_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => v1_rd_proc5_U0_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => v1_rd_proc5_U0_m_axi_gmem_WLAST,
        m_axi_gmem_WID => v1_rd_proc5_U0_m_axi_gmem_WID,
        m_axi_gmem_WUSER => v1_rd_proc5_U0_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => v1_rd_proc5_U0_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => v1_rd_proc5_U0_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => v1_rd_proc5_U0_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => v1_rd_proc5_U0_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => v1_rd_proc5_U0_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => v1_rd_proc5_U0_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => v1_rd_proc5_U0_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => v1_rd_proc5_U0_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => v1_rd_proc5_U0_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => v1_rd_proc5_U0_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => v1_rd_proc5_U0_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => v1_rd_proc5_U0_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => v1_rd_proc5_U0_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => v1_rd_proc5_U0_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        v1_local_V1_din => v1_rd_proc5_U0_v1_local_V1_din,
        v1_local_V1_full_n => v1_local_V_full_n,
        v1_local_V1_write => v1_rd_proc5_U0_v1_local_V1_write,
        in2 => in2,
        m_axi_gmem1_AWVALID => v1_rd_proc5_U0_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => v1_rd_proc5_U0_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => v1_rd_proc5_U0_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => v1_rd_proc5_U0_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => v1_rd_proc5_U0_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => v1_rd_proc5_U0_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => v1_rd_proc5_U0_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => v1_rd_proc5_U0_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => v1_rd_proc5_U0_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => v1_rd_proc5_U0_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => v1_rd_proc5_U0_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => v1_rd_proc5_U0_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => v1_rd_proc5_U0_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => v1_rd_proc5_U0_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => v1_rd_proc5_U0_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => v1_rd_proc5_U0_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => v1_rd_proc5_U0_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => v1_rd_proc5_U0_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => v1_rd_proc5_U0_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR => v1_rd_proc5_U0_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => v1_rd_proc5_U0_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => v1_rd_proc5_U0_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => v1_rd_proc5_U0_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => v1_rd_proc5_U0_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => v1_rd_proc5_U0_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => v1_rd_proc5_U0_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => v1_rd_proc5_U0_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => v1_rd_proc5_U0_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => v1_rd_proc5_U0_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => v1_rd_proc5_U0_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY => v1_rd_proc5_U0_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST => m_axi_gmem1_RLAST,
        m_axi_gmem1_RID => m_axi_gmem1_RID,
        m_axi_gmem1_RUSER => m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP => m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => v1_rd_proc5_U0_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        v2_local_V2_din => v1_rd_proc5_U0_v2_local_V2_din,
        v2_local_V2_full_n => v2_local_V_full_n,
        v2_local_V2_write => v1_rd_proc5_U0_v2_local_V2_write,
        out_r => out_r,
        i_out_din => v1_rd_proc5_U0_i_out_din,
        i_out_full_n => i_c_full_n,
        i_out_write => v1_rd_proc5_U0_i_out_write,
        size_out_din => v1_rd_proc5_U0_size_out_din,
        size_out_full_n => size_c_full_n,
        size_out_write => v1_rd_proc5_U0_size_out_write,
        out_out_din => v1_rd_proc5_U0_out_out_din,
        out_out_full_n => out_c_full_n,
        out_out_write => v1_rd_proc5_U0_out_out_write,
        ap_ext_blocking_n => v1_rd_proc5_U0_ap_ext_blocking_n,
        ap_str_blocking_n => v1_rd_proc5_U0_ap_str_blocking_n,
        ap_int_blocking_n => v1_rd_proc5_U0_ap_int_blocking_n);

    v2_rd_add_proc_U0 : component wide_vadd_v2_rd_add_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => v2_rd_add_proc_U0_ap_start,
        ap_done => v2_rd_add_proc_U0_ap_done,
        ap_continue => v2_rd_add_proc_U0_ap_continue,
        ap_idle => v2_rd_add_proc_U0_ap_idle,
        ap_ready => v2_rd_add_proc_U0_ap_ready,
        i_dout => i_c_dout,
        i_empty_n => i_c_empty_n,
        i_read => v2_rd_add_proc_U0_i_read,
        size_dout => size_c_dout,
        size_empty_n => size_c_empty_n,
        size_read => v2_rd_add_proc_U0_size_read,
        v1_local_V1_dout => v1_local_V_dout,
        v1_local_V1_empty_n => v1_local_V_empty_n,
        v1_local_V1_read => v2_rd_add_proc_U0_v1_local_V1_read,
        v2_local_V2_dout => v2_local_V_dout,
        v2_local_V2_empty_n => v2_local_V_empty_n,
        v2_local_V2_read => v2_rd_add_proc_U0_v2_local_V2_read,
        out_r_dout => out_c_dout,
        out_r_empty_n => out_c_empty_n,
        out_r_read => v2_rd_add_proc_U0_out_r_read,
        m_axi_gmem2_AWVALID => v2_rd_add_proc_U0_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR => v2_rd_add_proc_U0_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => v2_rd_add_proc_U0_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => v2_rd_add_proc_U0_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => v2_rd_add_proc_U0_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => v2_rd_add_proc_U0_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => v2_rd_add_proc_U0_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => v2_rd_add_proc_U0_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => v2_rd_add_proc_U0_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => v2_rd_add_proc_U0_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => v2_rd_add_proc_U0_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => v2_rd_add_proc_U0_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => v2_rd_add_proc_U0_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA => v2_rd_add_proc_U0_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => v2_rd_add_proc_U0_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => v2_rd_add_proc_U0_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => v2_rd_add_proc_U0_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => v2_rd_add_proc_U0_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => v2_rd_add_proc_U0_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => v2_rd_add_proc_U0_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => v2_rd_add_proc_U0_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => v2_rd_add_proc_U0_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => v2_rd_add_proc_U0_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => v2_rd_add_proc_U0_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => v2_rd_add_proc_U0_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => v2_rd_add_proc_U0_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => v2_rd_add_proc_U0_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => v2_rd_add_proc_U0_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => v2_rd_add_proc_U0_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => v2_rd_add_proc_U0_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => v2_rd_add_proc_U0_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY => v2_rd_add_proc_U0_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => m_axi_gmem2_BRESP,
        m_axi_gmem2_BID => m_axi_gmem2_BID,
        m_axi_gmem2_BUSER => m_axi_gmem2_BUSER,
        ap_ext_blocking_n => v2_rd_add_proc_U0_ap_ext_blocking_n,
        ap_str_blocking_n => v2_rd_add_proc_U0_ap_str_blocking_n,
        ap_int_blocking_n => v2_rd_add_proc_U0_ap_int_blocking_n);

    v1_local_V_U : component wide_vadd_fifo_w512_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v1_rd_proc5_U0_v1_local_V1_din,
        if_full_n => v1_local_V_full_n,
        if_write => v1_rd_proc5_U0_v1_local_V1_write,
        if_dout => v1_local_V_dout,
        if_empty_n => v1_local_V_empty_n,
        if_read => v2_rd_add_proc_U0_v1_local_V1_read);

    v2_local_V_U : component wide_vadd_fifo_w512_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v1_rd_proc5_U0_v2_local_V2_din,
        if_full_n => v2_local_V_full_n,
        if_write => v1_rd_proc5_U0_v2_local_V2_write,
        if_dout => v2_local_V_dout,
        if_empty_n => v2_local_V_empty_n,
        if_read => v2_rd_add_proc_U0_v2_local_V2_read);

    i_c_U : component wide_vadd_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v1_rd_proc5_U0_i_out_din,
        if_full_n => i_c_full_n,
        if_write => v1_rd_proc5_U0_i_out_write,
        if_dout => i_c_dout,
        if_empty_n => i_c_empty_n,
        if_read => v2_rd_add_proc_U0_i_read);

    size_c_U : component wide_vadd_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v1_rd_proc5_U0_size_out_din,
        if_full_n => size_c_full_n,
        if_write => v1_rd_proc5_U0_size_out_write,
        if_dout => size_c_dout,
        if_empty_n => size_c_empty_n,
        if_read => v2_rd_add_proc_U0_size_read);

    out_c_U : component wide_vadd_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => v1_rd_proc5_U0_out_out_din,
        if_full_n => out_c_full_n,
        if_write => v1_rd_proc5_U0_out_out_write,
        if_dout => out_c_dout,
        if_empty_n => out_c_empty_n,
        if_read => v2_rd_add_proc_U0_out_r_read);

    start_for_v2_rd_add_proc_U0_U : component wide_vadd_start_for_v2_rd_add_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_v2_rd_add_proc_U0_din,
        if_full_n => start_for_v2_rd_add_proc_U0_full_n,
        if_write => v1_rd_proc5_U0_start_write,
        if_dout => start_for_v2_rd_add_proc_U0_dout,
        if_empty_n => start_for_v2_rd_add_proc_U0_empty_n,
        if_read => v2_rd_add_proc_U0_ap_ready);




    ap_done <= v2_rd_add_proc_U0_ap_done;
    ap_ext_blocking_cur_n <= ap_const_logic_1;
    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_ext_blocking_cur_n);
    ap_ext_blocking_sub_n <= (v2_rd_add_proc_U0_ap_ext_blocking_n and v1_rd_proc5_U0_ap_ext_blocking_n);
    ap_idle <= (v2_rd_add_proc_U0_ap_idle and v1_rd_proc5_U0_ap_idle);
    ap_int_blocking_cur_n <= ap_const_logic_1;
    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_int_blocking_cur_n);
    ap_int_blocking_sub_n <= (v2_rd_add_proc_U0_ap_int_blocking_n and v1_rd_proc5_U0_ap_int_blocking_n);
    ap_ready <= v1_rd_proc5_U0_ap_ready;
    ap_str_blocking_cur_n <= ap_const_logic_1;
    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_str_blocking_cur_n);
    ap_str_blocking_sub_n <= (v2_rd_add_proc_U0_ap_str_blocking_n and v1_rd_proc5_U0_ap_str_blocking_n);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= v2_rd_add_proc_U0_ap_done;
    ap_sync_ready <= v1_rd_proc5_U0_ap_ready;
    m_axi_gmem1_ARADDR <= v1_rd_proc5_U0_m_axi_gmem1_ARADDR;
    m_axi_gmem1_ARBURST <= v1_rd_proc5_U0_m_axi_gmem1_ARBURST;
    m_axi_gmem1_ARCACHE <= v1_rd_proc5_U0_m_axi_gmem1_ARCACHE;
    m_axi_gmem1_ARID <= v1_rd_proc5_U0_m_axi_gmem1_ARID;
    m_axi_gmem1_ARLEN <= v1_rd_proc5_U0_m_axi_gmem1_ARLEN;
    m_axi_gmem1_ARLOCK <= v1_rd_proc5_U0_m_axi_gmem1_ARLOCK;
    m_axi_gmem1_ARPROT <= v1_rd_proc5_U0_m_axi_gmem1_ARPROT;
    m_axi_gmem1_ARQOS <= v1_rd_proc5_U0_m_axi_gmem1_ARQOS;
    m_axi_gmem1_ARREGION <= v1_rd_proc5_U0_m_axi_gmem1_ARREGION;
    m_axi_gmem1_ARSIZE <= v1_rd_proc5_U0_m_axi_gmem1_ARSIZE;
    m_axi_gmem1_ARUSER <= v1_rd_proc5_U0_m_axi_gmem1_ARUSER;
    m_axi_gmem1_ARVALID <= v1_rd_proc5_U0_m_axi_gmem1_ARVALID;
    m_axi_gmem1_AWADDR <= ap_const_lv64_0;
    m_axi_gmem1_AWBURST <= ap_const_lv2_0;
    m_axi_gmem1_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem1_AWID <= ap_const_lv1_0;
    m_axi_gmem1_AWLEN <= ap_const_lv32_0;
    m_axi_gmem1_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem1_AWPROT <= ap_const_lv3_0;
    m_axi_gmem1_AWQOS <= ap_const_lv4_0;
    m_axi_gmem1_AWREGION <= ap_const_lv4_0;
    m_axi_gmem1_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem1_AWUSER <= ap_const_lv1_0;
    m_axi_gmem1_AWVALID <= ap_const_logic_0;
    m_axi_gmem1_BREADY <= ap_const_logic_0;
    m_axi_gmem1_RREADY <= v1_rd_proc5_U0_m_axi_gmem1_RREADY;
    m_axi_gmem1_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem1_WID <= ap_const_lv1_0;
    m_axi_gmem1_WLAST <= ap_const_logic_0;
    m_axi_gmem1_WSTRB <= ap_const_lv64_0;
    m_axi_gmem1_WUSER <= ap_const_lv1_0;
    m_axi_gmem1_WVALID <= ap_const_logic_0;
    m_axi_gmem2_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_ARVALID <= ap_const_logic_0;
    m_axi_gmem2_AWADDR <= v2_rd_add_proc_U0_m_axi_gmem2_AWADDR;
    m_axi_gmem2_AWBURST <= v2_rd_add_proc_U0_m_axi_gmem2_AWBURST;
    m_axi_gmem2_AWCACHE <= v2_rd_add_proc_U0_m_axi_gmem2_AWCACHE;
    m_axi_gmem2_AWID <= v2_rd_add_proc_U0_m_axi_gmem2_AWID;
    m_axi_gmem2_AWLEN <= v2_rd_add_proc_U0_m_axi_gmem2_AWLEN;
    m_axi_gmem2_AWLOCK <= v2_rd_add_proc_U0_m_axi_gmem2_AWLOCK;
    m_axi_gmem2_AWPROT <= v2_rd_add_proc_U0_m_axi_gmem2_AWPROT;
    m_axi_gmem2_AWQOS <= v2_rd_add_proc_U0_m_axi_gmem2_AWQOS;
    m_axi_gmem2_AWREGION <= v2_rd_add_proc_U0_m_axi_gmem2_AWREGION;
    m_axi_gmem2_AWSIZE <= v2_rd_add_proc_U0_m_axi_gmem2_AWSIZE;
    m_axi_gmem2_AWUSER <= v2_rd_add_proc_U0_m_axi_gmem2_AWUSER;
    m_axi_gmem2_AWVALID <= v2_rd_add_proc_U0_m_axi_gmem2_AWVALID;
    m_axi_gmem2_BREADY <= v2_rd_add_proc_U0_m_axi_gmem2_BREADY;
    m_axi_gmem2_RREADY <= ap_const_logic_0;
    m_axi_gmem2_WDATA <= v2_rd_add_proc_U0_m_axi_gmem2_WDATA;
    m_axi_gmem2_WID <= v2_rd_add_proc_U0_m_axi_gmem2_WID;
    m_axi_gmem2_WLAST <= v2_rd_add_proc_U0_m_axi_gmem2_WLAST;
    m_axi_gmem2_WSTRB <= v2_rd_add_proc_U0_m_axi_gmem2_WSTRB;
    m_axi_gmem2_WUSER <= v2_rd_add_proc_U0_m_axi_gmem2_WUSER;
    m_axi_gmem2_WVALID <= v2_rd_add_proc_U0_m_axi_gmem2_WVALID;
    m_axi_gmem_ARADDR <= v1_rd_proc5_U0_m_axi_gmem_ARADDR;
    m_axi_gmem_ARBURST <= v1_rd_proc5_U0_m_axi_gmem_ARBURST;
    m_axi_gmem_ARCACHE <= v1_rd_proc5_U0_m_axi_gmem_ARCACHE;
    m_axi_gmem_ARID <= v1_rd_proc5_U0_m_axi_gmem_ARID;
    m_axi_gmem_ARLEN <= v1_rd_proc5_U0_m_axi_gmem_ARLEN;
    m_axi_gmem_ARLOCK <= v1_rd_proc5_U0_m_axi_gmem_ARLOCK;
    m_axi_gmem_ARPROT <= v1_rd_proc5_U0_m_axi_gmem_ARPROT;
    m_axi_gmem_ARQOS <= v1_rd_proc5_U0_m_axi_gmem_ARQOS;
    m_axi_gmem_ARREGION <= v1_rd_proc5_U0_m_axi_gmem_ARREGION;
    m_axi_gmem_ARSIZE <= v1_rd_proc5_U0_m_axi_gmem_ARSIZE;
    m_axi_gmem_ARUSER <= v1_rd_proc5_U0_m_axi_gmem_ARUSER;
    m_axi_gmem_ARVALID <= v1_rd_proc5_U0_m_axi_gmem_ARVALID;
    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;
    m_axi_gmem_RREADY <= v1_rd_proc5_U0_m_axi_gmem_RREADY;
    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    start_for_v2_rd_add_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    v1_rd_proc5_U0_ap_continue <= ap_const_logic_1;
    v1_rd_proc5_U0_ap_start <= ap_start;
    v2_rd_add_proc_U0_ap_continue <= ap_continue;
    v2_rd_add_proc_U0_ap_start <= start_for_v2_rd_add_proc_U0_empty_n;
    v2_rd_add_proc_U0_start_full_n <= ap_const_logic_1;
    v2_rd_add_proc_U0_start_write <= ap_const_logic_0;
end behav;
