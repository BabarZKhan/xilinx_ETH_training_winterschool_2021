#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[5570].first = 1;
        (*_glb_hdl_sc_channel_map)[5570].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[5553].first = 1;
        (*_glb_hdl_sc_channel_map)[5553].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[5583].first = 1;
        (*_glb_hdl_sc_channel_map)[5583].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[5582].first = 1;
        (*_glb_hdl_sc_channel_map)[5582].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[5516].first = 1;
        (*_glb_hdl_sc_channel_map)[5516].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[5515].first = 1;
        (*_glb_hdl_sc_channel_map)[5515].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6889144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[5584].first = 3;
        (*_glb_hdl_sc_channel_map)[5584].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[5605].first = 1;
        (*_glb_hdl_sc_channel_map)[5605].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[5598].first = 3;
        (*_glb_hdl_sc_channel_map)[5598].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[5591].first = 3;
        (*_glb_hdl_sc_channel_map)[5591].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[5619].first = 1;
        (*_glb_hdl_sc_channel_map)[5619].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6889480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6889536);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[5606].first = 1;
        (*_glb_hdl_sc_channel_map)[5606].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[5599].first = 3;
        (*_glb_hdl_sc_channel_map)[5599].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[5592].first = 3;
        (*_glb_hdl_sc_channel_map)[5592].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[5620].first = 1;
        (*_glb_hdl_sc_channel_map)[5620].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[5586].first = 3;
        (*_glb_hdl_sc_channel_map)[5586].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6889872);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[5607].first = 1;
        (*_glb_hdl_sc_channel_map)[5607].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[5600].first = 3;
        (*_glb_hdl_sc_channel_map)[5600].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[5593].first = 3;
        (*_glb_hdl_sc_channel_map)[5593].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[5621].first = 1;
        (*_glb_hdl_sc_channel_map)[5621].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map)[5587].first = 3;
        (*_glb_hdl_sc_channel_map)[5587].second.push_front(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6890208);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map)[5608].first = 1;
        (*_glb_hdl_sc_channel_map)[5608].second.push_front(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map)[5601].first = 3;
        (*_glb_hdl_sc_channel_map)[5601].second.push_front(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map)[5594].first = 3;
        (*_glb_hdl_sc_channel_map)[5594].second.push_front(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map)[5622].first = 1;
        (*_glb_hdl_sc_channel_map)[5622].second.push_front(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map)[5588].first = 3;
        (*_glb_hdl_sc_channel_map)[5588].second.push_front(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6890544);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map)[5609].first = 1;
        (*_glb_hdl_sc_channel_map)[5609].second.push_front(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map)[5602].first = 3;
        (*_glb_hdl_sc_channel_map)[5602].second.push_front(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map)[5595].first = 3;
        (*_glb_hdl_sc_channel_map)[5595].second.push_front(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map)[5623].first = 1;
        (*_glb_hdl_sc_channel_map)[5623].second.push_front(p_1_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata5.bind(*p_1_trace_tdata5);
        (*_glb_hdl_sc_channel_map)[5589].first = 3;
        (*_glb_hdl_sc_channel_map)[5589].second.push_front(p_1_trace_tdata5);
        xsim_sc_channel<0, bool > *p_1_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready5.bind(*p_1_trace_tready5);
        p_1_trace_tready5->set_sv_netview_offsetfromdp(6890880);
        xsim_sc_channel<0, bool > *p_1_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast5.bind(*p_1_trace_tlast5);
        (*_glb_hdl_sc_channel_map)[5610].first = 1;
        (*_glb_hdl_sc_channel_map)[5610].second.push_front(p_1_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid5.bind(*p_1_trace_tid5);
        (*_glb_hdl_sc_channel_map)[5603].first = 3;
        (*_glb_hdl_sc_channel_map)[5603].second.push_front(p_1_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest5.bind(*p_1_trace_tdest5);
        (*_glb_hdl_sc_channel_map)[5596].first = 3;
        (*_glb_hdl_sc_channel_map)[5596].second.push_front(p_1_trace_tdest5);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid5.bind(*p_1_trace_tvalid5);
        (*_glb_hdl_sc_channel_map)[5624].first = 1;
        (*_glb_hdl_sc_channel_map)[5624].second.push_front(p_1_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata6.bind(*p_1_trace_tdata6);
        (*_glb_hdl_sc_channel_map)[5590].first = 3;
        (*_glb_hdl_sc_channel_map)[5590].second.push_front(p_1_trace_tdata6);
        xsim_sc_channel<0, bool > *p_1_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready6.bind(*p_1_trace_tready6);
        p_1_trace_tready6->set_sv_netview_offsetfromdp(6891216);
        xsim_sc_channel<0, bool > *p_1_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast6.bind(*p_1_trace_tlast6);
        (*_glb_hdl_sc_channel_map)[5611].first = 1;
        (*_glb_hdl_sc_channel_map)[5611].second.push_front(p_1_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid6.bind(*p_1_trace_tid6);
        (*_glb_hdl_sc_channel_map)[5604].first = 3;
        (*_glb_hdl_sc_channel_map)[5604].second.push_front(p_1_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest6.bind(*p_1_trace_tdest6);
        (*_glb_hdl_sc_channel_map)[5597].first = 3;
        (*_glb_hdl_sc_channel_map)[5597].second.push_front(p_1_trace_tdest6);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid6.bind(*p_1_trace_tvalid6);
        (*_glb_hdl_sc_channel_map)[5625].first = 1;
        (*_glb_hdl_sc_channel_map)[5625].second.push_front(p_1_trace_tvalid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5520].first = 3;
        (*_glb_hdl_sc_channel_map)[5520].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5522].first = 1;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6891608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5532].first = 3;
        (*_glb_hdl_sc_channel_map)[5532].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5533].first = 1;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6891832);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6891888);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5523].first = 1;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6892000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5517].first = 3;
        (*_glb_hdl_sc_channel_map)[5517].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5519].first = 1;
        (*_glb_hdl_sc_channel_map)[5519].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6892168);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6892224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6892280);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6892336);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5527].first = 1;
        (*_glb_hdl_sc_channel_map)[5527].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[5537].first = 3;
        (*_glb_hdl_sc_channel_map)[5537].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[5539].first = 1;
        (*_glb_hdl_sc_channel_map)[5539].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6892560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[5547].first = 3;
        (*_glb_hdl_sc_channel_map)[5547].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[5549].first = 3;
        (*_glb_hdl_sc_channel_map)[5549].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[5550].first = 1;
        (*_glb_hdl_sc_channel_map)[5550].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6892784);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6892840);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[5540].first = 1;
        (*_glb_hdl_sc_channel_map)[5540].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6892952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[5534].first = 3;
        (*_glb_hdl_sc_channel_map)[5534].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[5536].first = 1;
        (*_glb_hdl_sc_channel_map)[5536].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6893120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6893176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6893232);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6893288);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[5544].first = 1;
        (*_glb_hdl_sc_channel_map)[5544].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[5559].first = 3;
        (*_glb_hdl_sc_channel_map)[5559].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[5565].first = 1;
        (*_glb_hdl_sc_channel_map)[5565].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6893512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[5562].first = 3;
        (*_glb_hdl_sc_channel_map)[5562].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[5564].first = 3;
        (*_glb_hdl_sc_channel_map)[5564].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[5560].first = 3;
        (*_glb_hdl_sc_channel_map)[5560].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[5561].first = 3;
        (*_glb_hdl_sc_channel_map)[5561].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[5577].first = 3;
        (*_glb_hdl_sc_channel_map)[5577].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[5580].first = 3;
        (*_glb_hdl_sc_channel_map)[5580].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[5581].first = 1;
        (*_glb_hdl_sc_channel_map)[5581].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6893960);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6894016);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[5567].first = 1;
        (*_glb_hdl_sc_channel_map)[5567].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[5578].first = 1;
        (*_glb_hdl_sc_channel_map)[5578].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6894184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6894240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6894296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[5551].first = 3;
        (*_glb_hdl_sc_channel_map)[5551].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[5558].first = 1;
        (*_glb_hdl_sc_channel_map)[5558].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6894464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[5555].first = 3;
        (*_glb_hdl_sc_channel_map)[5555].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[5557].first = 3;
        (*_glb_hdl_sc_channel_map)[5557].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[5552].first = 3;
        (*_glb_hdl_sc_channel_map)[5552].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[5554].first = 3;
        (*_glb_hdl_sc_channel_map)[5554].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6894744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6894800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6894856);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6894912);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[5574].first = 1;
        (*_glb_hdl_sc_channel_map)[5574].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[5647].first = 1;
        (*_glb_hdl_sc_channel_map)[5647].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5648].first = 1;
        (*_glb_hdl_sc_channel_map)[5648].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[5668].first = 1;
        (*_glb_hdl_sc_channel_map)[5668].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[5669].first = 1;
        (*_glb_hdl_sc_channel_map)[5669].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5653].first = 3;
        (*_glb_hdl_sc_channel_map)[5653].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5654].first = 3;
        (*_glb_hdl_sc_channel_map)[5654].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5656].first = 1;
        (*_glb_hdl_sc_channel_map)[5656].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6895464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5664].first = 3;
        (*_glb_hdl_sc_channel_map)[5664].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5666].first = 3;
        (*_glb_hdl_sc_channel_map)[5666].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5667].first = 1;
        (*_glb_hdl_sc_channel_map)[5667].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6895688);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6895744);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5657].first = 1;
        (*_glb_hdl_sc_channel_map)[5657].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6895856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5649].first = 3;
        (*_glb_hdl_sc_channel_map)[5649].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5650].first = 3;
        (*_glb_hdl_sc_channel_map)[5650].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5652].first = 1;
        (*_glb_hdl_sc_channel_map)[5652].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6896080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6896136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6896192);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6896248);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5661].first = 1;
        (*_glb_hdl_sc_channel_map)[5661].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5635].first = 1;
        (*_glb_hdl_sc_channel_map)[5635].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5634].first = 1;
        (*_glb_hdl_sc_channel_map)[5634].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1606].first = 3;
        (*_glb_hdl_sc_channel_map)[1606].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5646].first = 1;
        (*_glb_hdl_sc_channel_map)[5646].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5644].first = 1;
        (*_glb_hdl_sc_channel_map)[5644].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5643].first = 3;
        (*_glb_hdl_sc_channel_map)[5643].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5645].first = 3;
        (*_glb_hdl_sc_channel_map)[5645].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5633].first = 1;
        (*_glb_hdl_sc_channel_map)[5633].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5632].first = 1;
        (*_glb_hdl_sc_channel_map)[5632].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1607].first = 3;
        (*_glb_hdl_sc_channel_map)[1607].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5642].first = 1;
        (*_glb_hdl_sc_channel_map)[5642].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5640].first = 1;
        (*_glb_hdl_sc_channel_map)[5640].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5639].first = 3;
        (*_glb_hdl_sc_channel_map)[5639].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5641].first = 3;
        (*_glb_hdl_sc_channel_map)[5641].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5638].first = 1;
        (*_glb_hdl_sc_channel_map)[5638].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5636].first = 1;
        (*_glb_hdl_sc_channel_map)[5636].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5637].first = 3;
        (*_glb_hdl_sc_channel_map)[5637].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[5630].first = 3;
        (*_glb_hdl_sc_channel_map)[5630].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(6897368);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(6897424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(6897480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(6897536);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(6897592);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[5707].first = 1;
        (*_glb_hdl_sc_channel_map)[5707].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5708].first = 1;
        (*_glb_hdl_sc_channel_map)[5708].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[5743].first = 1;
        (*_glb_hdl_sc_channel_map)[5743].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[5744].first = 1;
        (*_glb_hdl_sc_channel_map)[5744].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5715].first = 3;
        (*_glb_hdl_sc_channel_map)[5715].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5719].first = 1;
        (*_glb_hdl_sc_channel_map)[5719].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6898032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5735].first = 3;
        (*_glb_hdl_sc_channel_map)[5735].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5739].first = 3;
        (*_glb_hdl_sc_channel_map)[5739].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5741].first = 1;
        (*_glb_hdl_sc_channel_map)[5741].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6898256);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6898312);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5721].first = 1;
        (*_glb_hdl_sc_channel_map)[5721].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6898424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5709].first = 3;
        (*_glb_hdl_sc_channel_map)[5709].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5713].first = 1;
        (*_glb_hdl_sc_channel_map)[5713].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6898592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6898648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6898704);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6898760);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5729].first = 1;
        (*_glb_hdl_sc_channel_map)[5729].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5691].first = 1;
        (*_glb_hdl_sc_channel_map)[5691].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5689].first = 1;
        (*_glb_hdl_sc_channel_map)[5689].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5687].first = 3;
        (*_glb_hdl_sc_channel_map)[5687].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1602].first = 3;
        (*_glb_hdl_sc_channel_map)[1602].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5688].first = 3;
        (*_glb_hdl_sc_channel_map)[5688].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5690].first = 3;
        (*_glb_hdl_sc_channel_map)[5690].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1603].first = 3;
        (*_glb_hdl_sc_channel_map)[1603].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5706].first = 1;
        (*_glb_hdl_sc_channel_map)[5706].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5704].first = 1;
        (*_glb_hdl_sc_channel_map)[5704].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5702].first = 3;
        (*_glb_hdl_sc_channel_map)[5702].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5705].first = 3;
        (*_glb_hdl_sc_channel_map)[5705].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5703].first = 1;
        (*_glb_hdl_sc_channel_map)[5703].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5686].first = 1;
        (*_glb_hdl_sc_channel_map)[5686].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5684].first = 1;
        (*_glb_hdl_sc_channel_map)[5684].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5682].first = 3;
        (*_glb_hdl_sc_channel_map)[5682].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1604].first = 3;
        (*_glb_hdl_sc_channel_map)[1604].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5683].first = 3;
        (*_glb_hdl_sc_channel_map)[5683].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5685].first = 3;
        (*_glb_hdl_sc_channel_map)[5685].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1605].first = 3;
        (*_glb_hdl_sc_channel_map)[1605].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5701].first = 1;
        (*_glb_hdl_sc_channel_map)[5701].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5699].first = 1;
        (*_glb_hdl_sc_channel_map)[5699].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5696].first = 3;
        (*_glb_hdl_sc_channel_map)[5696].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5698].first = 1;
        (*_glb_hdl_sc_channel_map)[5698].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[5697].first = 3;
        (*_glb_hdl_sc_channel_map)[5697].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5700].first = 3;
        (*_glb_hdl_sc_channel_map)[5700].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5695].first = 1;
        (*_glb_hdl_sc_channel_map)[5695].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5693].first = 1;
        (*_glb_hdl_sc_channel_map)[5693].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5694].first = 3;
        (*_glb_hdl_sc_channel_map)[5694].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[5692].first = 3;
        (*_glb_hdl_sc_channel_map)[5692].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5674].first = 1;
        (*_glb_hdl_sc_channel_map)[5674].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6900552);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6900608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6900664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6900720);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5680].first = 1;
        (*_glb_hdl_sc_channel_map)[5680].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6900832);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6900888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6900944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6901000);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6901056);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6901112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1600].first = 3;
        (*_glb_hdl_sc_channel_map)[1600].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5716].first = 3;
        (*_glb_hdl_sc_channel_map)[5716].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5720].first = 1;
        (*_glb_hdl_sc_channel_map)[5720].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5718].first = 1;
        (*_glb_hdl_sc_channel_map)[5718].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5736].first = 3;
        (*_glb_hdl_sc_channel_map)[5736].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5740].first = 3;
        (*_glb_hdl_sc_channel_map)[5740].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5742].first = 1;
        (*_glb_hdl_sc_channel_map)[5742].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5738].first = 1;
        (*_glb_hdl_sc_channel_map)[5738].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5724].first = 3;
        (*_glb_hdl_sc_channel_map)[5724].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5726].first = 1;
        (*_glb_hdl_sc_channel_map)[5726].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5722].first = 1;
        (*_glb_hdl_sc_channel_map)[5722].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1601].first = 3;
        (*_glb_hdl_sc_channel_map)[1601].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5710].first = 3;
        (*_glb_hdl_sc_channel_map)[5710].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5714].first = 1;
        (*_glb_hdl_sc_channel_map)[5714].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5712].first = 1;
        (*_glb_hdl_sc_channel_map)[5712].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5728].first = 3;
        (*_glb_hdl_sc_channel_map)[5728].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5732].first = 3;
        (*_glb_hdl_sc_channel_map)[5732].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5734].first = 1;
        (*_glb_hdl_sc_channel_map)[5734].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5730].first = 1;
        (*_glb_hdl_sc_channel_map)[5730].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map)[5782].first = 1;
        (*_glb_hdl_sc_channel_map)[5782].second.push_front(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5783].first = 1;
        (*_glb_hdl_sc_channel_map)[5783].second.push_front(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map)[5818].first = 1;
        (*_glb_hdl_sc_channel_map)[5818].second.push_front(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map)[5819].first = 1;
        (*_glb_hdl_sc_channel_map)[5819].second.push_front(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5790].first = 3;
        (*_glb_hdl_sc_channel_map)[5790].second.push_front(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5794].first = 1;
        (*_glb_hdl_sc_channel_map)[5794].second.push_front(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6902616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5810].first = 3;
        (*_glb_hdl_sc_channel_map)[5810].second.push_front(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5814].first = 3;
        (*_glb_hdl_sc_channel_map)[5814].second.push_front(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5816].first = 1;
        (*_glb_hdl_sc_channel_map)[5816].second.push_front(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6902840);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6902896);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5796].first = 1;
        (*_glb_hdl_sc_channel_map)[5796].second.push_front(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6903008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5784].first = 3;
        (*_glb_hdl_sc_channel_map)[5784].second.push_front(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5788].first = 1;
        (*_glb_hdl_sc_channel_map)[5788].second.push_front(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6903176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6903232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6903288);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6903344);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5804].first = 1;
        (*_glb_hdl_sc_channel_map)[5804].second.push_front(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5766].first = 1;
        (*_glb_hdl_sc_channel_map)[5766].second.push_front(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5764].first = 1;
        (*_glb_hdl_sc_channel_map)[5764].second.push_front(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5762].first = 3;
        (*_glb_hdl_sc_channel_map)[5762].second.push_front(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1596].first = 3;
        (*_glb_hdl_sc_channel_map)[1596].second.push_front(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5763].first = 3;
        (*_glb_hdl_sc_channel_map)[5763].second.push_front(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5765].first = 3;
        (*_glb_hdl_sc_channel_map)[5765].second.push_front(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1597].first = 3;
        (*_glb_hdl_sc_channel_map)[1597].second.push_front(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5781].first = 1;
        (*_glb_hdl_sc_channel_map)[5781].second.push_front(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5779].first = 1;
        (*_glb_hdl_sc_channel_map)[5779].second.push_front(p_4_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5777].first = 3;
        (*_glb_hdl_sc_channel_map)[5777].second.push_front(p_4_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5780].first = 3;
        (*_glb_hdl_sc_channel_map)[5780].second.push_front(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5778].first = 1;
        (*_glb_hdl_sc_channel_map)[5778].second.push_front(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5761].first = 1;
        (*_glb_hdl_sc_channel_map)[5761].second.push_front(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5759].first = 1;
        (*_glb_hdl_sc_channel_map)[5759].second.push_front(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5757].first = 3;
        (*_glb_hdl_sc_channel_map)[5757].second.push_front(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1598].first = 3;
        (*_glb_hdl_sc_channel_map)[1598].second.push_front(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5758].first = 3;
        (*_glb_hdl_sc_channel_map)[5758].second.push_front(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5760].first = 3;
        (*_glb_hdl_sc_channel_map)[5760].second.push_front(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1599].first = 3;
        (*_glb_hdl_sc_channel_map)[1599].second.push_front(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5776].first = 1;
        (*_glb_hdl_sc_channel_map)[5776].second.push_front(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5774].first = 1;
        (*_glb_hdl_sc_channel_map)[5774].second.push_front(p_4_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5771].first = 3;
        (*_glb_hdl_sc_channel_map)[5771].second.push_front(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5773].first = 1;
        (*_glb_hdl_sc_channel_map)[5773].second.push_front(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map)[5772].first = 3;
        (*_glb_hdl_sc_channel_map)[5772].second.push_front(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5775].first = 3;
        (*_glb_hdl_sc_channel_map)[5775].second.push_front(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5770].first = 1;
        (*_glb_hdl_sc_channel_map)[5770].second.push_front(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5768].first = 1;
        (*_glb_hdl_sc_channel_map)[5768].second.push_front(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5769].first = 3;
        (*_glb_hdl_sc_channel_map)[5769].second.push_front(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map)[5767].first = 3;
        (*_glb_hdl_sc_channel_map)[5767].second.push_front(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5749].first = 1;
        (*_glb_hdl_sc_channel_map)[5749].second.push_front(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6905136);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6905192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(6905248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6905304);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5755].first = 1;
        (*_glb_hdl_sc_channel_map)[5755].second.push_front(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6905416);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6905472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(6905528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6905584);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6905640);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6905696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1594].first = 3;
        (*_glb_hdl_sc_channel_map)[1594].second.push_front(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5791].first = 3;
        (*_glb_hdl_sc_channel_map)[5791].second.push_front(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5795].first = 1;
        (*_glb_hdl_sc_channel_map)[5795].second.push_front(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5793].first = 1;
        (*_glb_hdl_sc_channel_map)[5793].second.push_front(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5811].first = 3;
        (*_glb_hdl_sc_channel_map)[5811].second.push_front(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5815].first = 3;
        (*_glb_hdl_sc_channel_map)[5815].second.push_front(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5817].first = 1;
        (*_glb_hdl_sc_channel_map)[5817].second.push_front(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5813].first = 1;
        (*_glb_hdl_sc_channel_map)[5813].second.push_front(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5799].first = 3;
        (*_glb_hdl_sc_channel_map)[5799].second.push_front(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5801].first = 1;
        (*_glb_hdl_sc_channel_map)[5801].second.push_front(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5797].first = 1;
        (*_glb_hdl_sc_channel_map)[5797].second.push_front(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1595].first = 3;
        (*_glb_hdl_sc_channel_map)[1595].second.push_front(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5785].first = 3;
        (*_glb_hdl_sc_channel_map)[5785].second.push_front(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5789].first = 1;
        (*_glb_hdl_sc_channel_map)[5789].second.push_front(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5787].first = 1;
        (*_glb_hdl_sc_channel_map)[5787].second.push_front(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5803].first = 3;
        (*_glb_hdl_sc_channel_map)[5803].second.push_front(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5807].first = 3;
        (*_glb_hdl_sc_channel_map)[5807].second.push_front(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5809].first = 1;
        (*_glb_hdl_sc_channel_map)[5809].second.push_front(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5805].first = 1;
        (*_glb_hdl_sc_channel_map)[5805].second.push_front(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_dpa_mon3_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon3");
        sc_inst_5->xsim_set_dbg_index(536);
        xsim_sc_channel<0, bool > *p_5_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_clk.bind(*p_5_mon_clk);
        (*_glb_hdl_sc_channel_map)[5857].first = 1;
        (*_glb_hdl_sc_channel_map)[5857].second.push_front(p_5_mon_clk);
        xsim_sc_channel<0, bool > *p_5_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_resetn.bind(*p_5_mon_resetn);
        (*_glb_hdl_sc_channel_map)[5858].first = 1;
        (*_glb_hdl_sc_channel_map)[5858].second.push_front(p_5_mon_resetn);
        xsim_sc_channel<0, bool > *p_5_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_clk.bind(*p_5_trace_clk);
        (*_glb_hdl_sc_channel_map)[5893].first = 1;
        (*_glb_hdl_sc_channel_map)[5893].second.push_front(p_5_trace_clk);
        xsim_sc_channel<0, bool > *p_5_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_5->trace_rst.bind(*p_5_trace_rst);
        (*_glb_hdl_sc_channel_map)[5894].first = 1;
        (*_glb_hdl_sc_channel_map)[5894].second.push_front(p_5_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5865].first = 3;
        (*_glb_hdl_sc_channel_map)[5865].second.push_front(p_5_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5869].first = 1;
        (*_glb_hdl_sc_channel_map)[5869].second.push_front(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(6907200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5885].first = 3;
        (*_glb_hdl_sc_channel_map)[5885].second.push_front(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5889].first = 3;
        (*_glb_hdl_sc_channel_map)[5889].second.push_front(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5891].first = 1;
        (*_glb_hdl_sc_channel_map)[5891].second.push_front(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(6907424);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(6907480);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[5871].first = 1;
        (*_glb_hdl_sc_channel_map)[5871].second.push_front(p_5_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(6907592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5859].first = 3;
        (*_glb_hdl_sc_channel_map)[5859].second.push_front(p_5_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5863].first = 1;
        (*_glb_hdl_sc_channel_map)[5863].second.push_front(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(6907760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(6907816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(6907872);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(6907928);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[5879].first = 1;
        (*_glb_hdl_sc_channel_map)[5879].second.push_front(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWVALID.bind(*p_5_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[5841].first = 1;
        (*_glb_hdl_sc_channel_map)[5841].second.push_front(p_5_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_5_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_AWREADY.bind(*p_5_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[5839].first = 1;
        (*_glb_hdl_sc_channel_map)[5839].second.push_front(p_5_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_AWADDR.bind(*p_5_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[5837].first = 3;
        (*_glb_hdl_sc_channel_map)[5837].second.push_front(p_5_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_AWID.bind(*p_5_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1590].first = 3;
        (*_glb_hdl_sc_channel_map)[1590].second.push_front(p_5_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_AWLEN.bind(*p_5_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[5838].first = 3;
        (*_glb_hdl_sc_channel_map)[5838].second.push_front(p_5_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_AWSIZE.bind(*p_5_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[5840].first = 3;
        (*_glb_hdl_sc_channel_map)[5840].second.push_front(p_5_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_AWBURST.bind(*p_5_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1591].first = 3;
        (*_glb_hdl_sc_channel_map)[1591].second.push_front(p_5_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_5_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WVALID.bind(*p_5_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[5856].first = 1;
        (*_glb_hdl_sc_channel_map)[5856].second.push_front(p_5_mon_WVALID);
        xsim_sc_channel<0, bool > *p_5_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WREADY.bind(*p_5_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[5854].first = 1;
        (*_glb_hdl_sc_channel_map)[5854].second.push_front(p_5_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_WDATA.bind(*p_5_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[5852].first = 3;
        (*_glb_hdl_sc_channel_map)[5852].second.push_front(p_5_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_WSTRB.bind(*p_5_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[5855].first = 3;
        (*_glb_hdl_sc_channel_map)[5855].second.push_front(p_5_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_5_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_WLAST.bind(*p_5_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[5853].first = 1;
        (*_glb_hdl_sc_channel_map)[5853].second.push_front(p_5_mon_WLAST);
        xsim_sc_channel<0, bool > *p_5_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARVALID.bind(*p_5_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[5836].first = 1;
        (*_glb_hdl_sc_channel_map)[5836].second.push_front(p_5_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_5_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_ARREADY.bind(*p_5_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[5834].first = 1;
        (*_glb_hdl_sc_channel_map)[5834].second.push_front(p_5_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->mon_ARADDR.bind(*p_5_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[5832].first = 3;
        (*_glb_hdl_sc_channel_map)[5832].second.push_front(p_5_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_ARID.bind(*p_5_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1592].first = 3;
        (*_glb_hdl_sc_channel_map)[1592].second.push_front(p_5_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->mon_ARLEN.bind(*p_5_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[5833].first = 3;
        (*_glb_hdl_sc_channel_map)[5833].second.push_front(p_5_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->mon_ARSIZE.bind(*p_5_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[5835].first = 3;
        (*_glb_hdl_sc_channel_map)[5835].second.push_front(p_5_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_ARBURST.bind(*p_5_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1593].first = 3;
        (*_glb_hdl_sc_channel_map)[1593].second.push_front(p_5_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_5_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RVALID.bind(*p_5_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[5851].first = 1;
        (*_glb_hdl_sc_channel_map)[5851].second.push_front(p_5_mon_RVALID);
        xsim_sc_channel<0, bool > *p_5_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RREADY.bind(*p_5_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[5849].first = 1;
        (*_glb_hdl_sc_channel_map)[5849].second.push_front(p_5_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->mon_RDATA.bind(*p_5_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[5846].first = 3;
        (*_glb_hdl_sc_channel_map)[5846].second.push_front(p_5_mon_RDATA);
        xsim_sc_channel<0, bool > *p_5_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_RLAST.bind(*p_5_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[5848].first = 1;
        (*_glb_hdl_sc_channel_map)[5848].second.push_front(p_5_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_RID.bind(*p_5_mon_RID);
        (*_glb_hdl_sc_channel_map)[5847].first = 3;
        (*_glb_hdl_sc_channel_map)[5847].second.push_front(p_5_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_RRESP.bind(*p_5_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[5850].first = 3;
        (*_glb_hdl_sc_channel_map)[5850].second.push_front(p_5_mon_RRESP);
        xsim_sc_channel<0, bool > *p_5_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BVALID.bind(*p_5_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[5845].first = 1;
        (*_glb_hdl_sc_channel_map)[5845].second.push_front(p_5_mon_BVALID);
        xsim_sc_channel<0, bool > *p_5_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_5->mon_BREADY.bind(*p_5_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[5843].first = 1;
        (*_glb_hdl_sc_channel_map)[5843].second.push_front(p_5_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->mon_BRESP.bind(*p_5_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[5844].first = 3;
        (*_glb_hdl_sc_channel_map)[5844].second.push_front(p_5_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->mon_BID.bind(*p_5_mon_BID);
        (*_glb_hdl_sc_channel_map)[5842].first = 3;
        (*_glb_hdl_sc_channel_map)[5842].second.push_front(p_5_mon_BID);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tready.bind(*p_5_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[5824].first = 1;
        (*_glb_hdl_sc_channel_map)[5824].second.push_front(p_5_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_rd_tdata.bind(*p_5_m_axis_rd_tdata);
        p_5_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6909720);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tlast.bind(*p_5_m_axis_rd_tlast);
        p_5_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6909776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tid.bind(*p_5_m_axis_rd_tid);
        p_5_m_axis_rd_tid->set_sv_netview_offsetfromdp(6909832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_rd_tdest.bind(*p_5_m_axis_rd_tdest);
        p_5_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6909888);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tready.bind(*p_5_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[5830].first = 1;
        (*_glb_hdl_sc_channel_map)[5830].second.push_front(p_5_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->m_axis_wr_tdata.bind(*p_5_m_axis_wr_tdata);
        p_5_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6910000);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tlast.bind(*p_5_m_axis_wr_tlast);
        p_5_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6910056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tid.bind(*p_5_m_axis_wr_tid);
        p_5_m_axis_wr_tid->set_sv_netview_offsetfromdp(6910112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axis_wr_tdest.bind(*p_5_m_axis_wr_tdest);
        p_5_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6910168);
        xsim_sc_channel<0, bool > *p_5_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_wr_tvalid.bind(*p_5_m_axis_wr_tvalid);
        p_5_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6910224);
        xsim_sc_channel<0, bool > *p_5_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axis_rd_tvalid.bind(*p_5_m_axis_rd_tvalid);
        p_5_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6910280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr_mon.bind(*p_5_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1588].first = 3;
        (*_glb_hdl_sc_channel_map)[1588].second.push_front(p_5_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot_mon.bind(*p_5_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[5866].first = 3;
        (*_glb_hdl_sc_channel_map)[5866].second.push_front(p_5_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid_mon.bind(*p_5_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[5870].first = 1;
        (*_glb_hdl_sc_channel_map)[5870].second.push_front(p_5_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready_mon.bind(*p_5_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[5868].first = 1;
        (*_glb_hdl_sc_channel_map)[5868].second.push_front(p_5_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata_mon.bind(*p_5_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[5886].first = 3;
        (*_glb_hdl_sc_channel_map)[5886].second.push_front(p_5_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb_mon.bind(*p_5_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[5890].first = 3;
        (*_glb_hdl_sc_channel_map)[5890].second.push_front(p_5_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid_mon.bind(*p_5_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[5892].first = 1;
        (*_glb_hdl_sc_channel_map)[5892].second.push_front(p_5_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready_mon.bind(*p_5_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[5888].first = 1;
        (*_glb_hdl_sc_channel_map)[5888].second.push_front(p_5_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp_mon.bind(*p_5_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[5874].first = 3;
        (*_glb_hdl_sc_channel_map)[5874].second.push_front(p_5_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid_mon.bind(*p_5_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[5876].first = 1;
        (*_glb_hdl_sc_channel_map)[5876].second.push_front(p_5_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready_mon.bind(*p_5_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[5872].first = 1;
        (*_glb_hdl_sc_channel_map)[5872].second.push_front(p_5_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr_mon.bind(*p_5_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1589].first = 3;
        (*_glb_hdl_sc_channel_map)[1589].second.push_front(p_5_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot_mon.bind(*p_5_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[5860].first = 3;
        (*_glb_hdl_sc_channel_map)[5860].second.push_front(p_5_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid_mon.bind(*p_5_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[5864].first = 1;
        (*_glb_hdl_sc_channel_map)[5864].second.push_front(p_5_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready_mon.bind(*p_5_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[5862].first = 1;
        (*_glb_hdl_sc_channel_map)[5862].second.push_front(p_5_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata_mon.bind(*p_5_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[5878].first = 3;
        (*_glb_hdl_sc_channel_map)[5878].second.push_front(p_5_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp_mon.bind(*p_5_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[5882].first = 3;
        (*_glb_hdl_sc_channel_map)[5882].second.push_front(p_5_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid_mon.bind(*p_5_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[5884].first = 1;
        (*_glb_hdl_sc_channel_map)[5884].second.push_front(p_5_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready_mon.bind(*p_5_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[5880].first = 1;
        (*_glb_hdl_sc_channel_map)[5880].second.push_front(p_5_s_axi_rready_mon);
        sc_inst_6 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_6->xsim_set_dbg_index(29);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map)[6355].first = 1;
        (*_glb_hdl_sc_channel_map)[6355].second.push_front(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk1.bind(*p_6_aclk1);
        (*_glb_hdl_sc_channel_map)[6356].first = 1;
        (*_glb_hdl_sc_channel_map)[6356].second.push_front(p_6_aclk1);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map)[6357].first = 1;
        (*_glb_hdl_sc_channel_map)[6357].second.push_front(p_6_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awid.bind(*p_6_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[6109].first = 3;
        (*_glb_hdl_sc_channel_map)[6109].second.push_front(p_6_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_awaddr.bind(*p_6_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6106].first = 3;
        (*_glb_hdl_sc_channel_map)[6106].second.push_front(p_6_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_awlen.bind(*p_6_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6110].first = 3;
        (*_glb_hdl_sc_channel_map)[6110].second.push_front(p_6_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awsize.bind(*p_6_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6115].first = 3;
        (*_glb_hdl_sc_channel_map)[6115].second.push_front(p_6_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_awburst.bind(*p_6_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[6107].first = 3;
        (*_glb_hdl_sc_channel_map)[6107].second.push_front(p_6_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_awlock.bind(*p_6_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[6111].first = 1;
        (*_glb_hdl_sc_channel_map)[6111].second.push_front(p_6_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awcache.bind(*p_6_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6108].first = 3;
        (*_glb_hdl_sc_channel_map)[6108].second.push_front(p_6_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_awprot.bind(*p_6_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6112].first = 3;
        (*_glb_hdl_sc_channel_map)[6112].second.push_front(p_6_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_awqos.bind(*p_6_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6113].first = 3;
        (*_glb_hdl_sc_channel_map)[6113].second.push_front(p_6_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awuser.bind(*p_6_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[6116].first = 3;
        (*_glb_hdl_sc_channel_map)[6116].second.push_front(p_6_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awvalid.bind(*p_6_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6117].first = 3;
        (*_glb_hdl_sc_channel_map)[6117].second.push_front(p_6_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_awready.bind(*p_6_S00_AXI_awready);
        p_6_S00_AXI_awready->set_sv_netview_offsetfromdp(6944000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_wdata.bind(*p_6_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6130].first = 3;
        (*_glb_hdl_sc_channel_map)[6130].second.push_front(p_6_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_wstrb.bind(*p_6_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6133].first = 3;
        (*_glb_hdl_sc_channel_map)[6133].second.push_front(p_6_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wlast.bind(*p_6_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6131].first = 3;
        (*_glb_hdl_sc_channel_map)[6131].second.push_front(p_6_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wuser.bind(*p_6_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[6134].first = 3;
        (*_glb_hdl_sc_channel_map)[6134].second.push_front(p_6_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wvalid.bind(*p_6_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6135].first = 3;
        (*_glb_hdl_sc_channel_map)[6135].second.push_front(p_6_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_wready.bind(*p_6_S00_AXI_wready);
        p_6_S00_AXI_wready->set_sv_netview_offsetfromdp(6944336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bid.bind(*p_6_S00_AXI_bid);
        p_6_S00_AXI_bid->set_sv_netview_offsetfromdp(6944392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_bresp.bind(*p_6_S00_AXI_bresp);
        p_6_S00_AXI_bresp->set_sv_netview_offsetfromdp(6944448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_buser.bind(*p_6_S00_AXI_buser);
        p_6_S00_AXI_buser->set_sv_netview_offsetfromdp(6944504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bvalid.bind(*p_6_S00_AXI_bvalid);
        p_6_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6944560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_bready.bind(*p_6_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6119].first = 3;
        (*_glb_hdl_sc_channel_map)[6119].second.push_front(p_6_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arid.bind(*p_6_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[6097].first = 3;
        (*_glb_hdl_sc_channel_map)[6097].second.push_front(p_6_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S00_AXI_araddr.bind(*p_6_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6094].first = 3;
        (*_glb_hdl_sc_channel_map)[6094].second.push_front(p_6_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S00_AXI_arlen.bind(*p_6_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6098].first = 3;
        (*_glb_hdl_sc_channel_map)[6098].second.push_front(p_6_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arsize.bind(*p_6_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6103].first = 3;
        (*_glb_hdl_sc_channel_map)[6103].second.push_front(p_6_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_arburst.bind(*p_6_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[6095].first = 3;
        (*_glb_hdl_sc_channel_map)[6095].second.push_front(p_6_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S00_AXI_arlock.bind(*p_6_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[6099].first = 1;
        (*_glb_hdl_sc_channel_map)[6099].second.push_front(p_6_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arcache.bind(*p_6_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6096].first = 3;
        (*_glb_hdl_sc_channel_map)[6096].second.push_front(p_6_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S00_AXI_arprot.bind(*p_6_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6100].first = 3;
        (*_glb_hdl_sc_channel_map)[6100].second.push_front(p_6_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S00_AXI_arqos.bind(*p_6_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6101].first = 3;
        (*_glb_hdl_sc_channel_map)[6101].second.push_front(p_6_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_aruser.bind(*p_6_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[6104].first = 3;
        (*_glb_hdl_sc_channel_map)[6104].second.push_front(p_6_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arvalid.bind(*p_6_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6105].first = 3;
        (*_glb_hdl_sc_channel_map)[6105].second.push_front(p_6_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_arready.bind(*p_6_S00_AXI_arready);
        p_6_S00_AXI_arready->set_sv_netview_offsetfromdp(6945288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rid.bind(*p_6_S00_AXI_rid);
        p_6_S00_AXI_rid->set_sv_netview_offsetfromdp(6945344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S00_AXI_rdata.bind(*p_6_S00_AXI_rdata);
        p_6_S00_AXI_rdata->set_sv_netview_offsetfromdp(6945400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S00_AXI_rresp.bind(*p_6_S00_AXI_rresp);
        p_6_S00_AXI_rresp->set_sv_netview_offsetfromdp(6945456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rlast.bind(*p_6_S00_AXI_rlast);
        p_6_S00_AXI_rlast->set_sv_netview_offsetfromdp(6945512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_ruser.bind(*p_6_S00_AXI_ruser);
        p_6_S00_AXI_ruser->set_sv_netview_offsetfromdp(6945568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rvalid.bind(*p_6_S00_AXI_rvalid);
        p_6_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6945624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S00_AXI_rready.bind(*p_6_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6126].first = 3;
        (*_glb_hdl_sc_channel_map)[6126].second.push_front(p_6_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awid.bind(*p_6_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[6151].first = 3;
        (*_glb_hdl_sc_channel_map)[6151].second.push_front(p_6_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_awaddr.bind(*p_6_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6148].first = 3;
        (*_glb_hdl_sc_channel_map)[6148].second.push_front(p_6_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_awlen.bind(*p_6_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6152].first = 3;
        (*_glb_hdl_sc_channel_map)[6152].second.push_front(p_6_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awsize.bind(*p_6_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6157].first = 3;
        (*_glb_hdl_sc_channel_map)[6157].second.push_front(p_6_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_awburst.bind(*p_6_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[6149].first = 3;
        (*_glb_hdl_sc_channel_map)[6149].second.push_front(p_6_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_awlock.bind(*p_6_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[6153].first = 1;
        (*_glb_hdl_sc_channel_map)[6153].second.push_front(p_6_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awcache.bind(*p_6_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6150].first = 3;
        (*_glb_hdl_sc_channel_map)[6150].second.push_front(p_6_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_awprot.bind(*p_6_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6154].first = 3;
        (*_glb_hdl_sc_channel_map)[6154].second.push_front(p_6_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_awqos.bind(*p_6_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6155].first = 3;
        (*_glb_hdl_sc_channel_map)[6155].second.push_front(p_6_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awuser.bind(*p_6_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[6158].first = 3;
        (*_glb_hdl_sc_channel_map)[6158].second.push_front(p_6_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awvalid.bind(*p_6_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6159].first = 3;
        (*_glb_hdl_sc_channel_map)[6159].second.push_front(p_6_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_awready.bind(*p_6_S01_AXI_awready);
        p_6_S01_AXI_awready->set_sv_netview_offsetfromdp(6946352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_wdata.bind(*p_6_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6172].first = 3;
        (*_glb_hdl_sc_channel_map)[6172].second.push_front(p_6_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_wstrb.bind(*p_6_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6175].first = 3;
        (*_glb_hdl_sc_channel_map)[6175].second.push_front(p_6_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wlast.bind(*p_6_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6173].first = 3;
        (*_glb_hdl_sc_channel_map)[6173].second.push_front(p_6_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wuser.bind(*p_6_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[6176].first = 3;
        (*_glb_hdl_sc_channel_map)[6176].second.push_front(p_6_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wvalid.bind(*p_6_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6177].first = 3;
        (*_glb_hdl_sc_channel_map)[6177].second.push_front(p_6_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_wready.bind(*p_6_S01_AXI_wready);
        p_6_S01_AXI_wready->set_sv_netview_offsetfromdp(6946688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bid.bind(*p_6_S01_AXI_bid);
        p_6_S01_AXI_bid->set_sv_netview_offsetfromdp(6946744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_bresp.bind(*p_6_S01_AXI_bresp);
        p_6_S01_AXI_bresp->set_sv_netview_offsetfromdp(6946800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_buser.bind(*p_6_S01_AXI_buser);
        p_6_S01_AXI_buser->set_sv_netview_offsetfromdp(6946856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bvalid.bind(*p_6_S01_AXI_bvalid);
        p_6_S01_AXI_bvalid->set_sv_netview_offsetfromdp(6946912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_bready.bind(*p_6_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6161].first = 3;
        (*_glb_hdl_sc_channel_map)[6161].second.push_front(p_6_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arid.bind(*p_6_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[6139].first = 3;
        (*_glb_hdl_sc_channel_map)[6139].second.push_front(p_6_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S01_AXI_araddr.bind(*p_6_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6136].first = 3;
        (*_glb_hdl_sc_channel_map)[6136].second.push_front(p_6_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S01_AXI_arlen.bind(*p_6_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6140].first = 3;
        (*_glb_hdl_sc_channel_map)[6140].second.push_front(p_6_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arsize.bind(*p_6_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6145].first = 3;
        (*_glb_hdl_sc_channel_map)[6145].second.push_front(p_6_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_arburst.bind(*p_6_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[6137].first = 3;
        (*_glb_hdl_sc_channel_map)[6137].second.push_front(p_6_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S01_AXI_arlock.bind(*p_6_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[6141].first = 1;
        (*_glb_hdl_sc_channel_map)[6141].second.push_front(p_6_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arcache.bind(*p_6_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6138].first = 3;
        (*_glb_hdl_sc_channel_map)[6138].second.push_front(p_6_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S01_AXI_arprot.bind(*p_6_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6142].first = 3;
        (*_glb_hdl_sc_channel_map)[6142].second.push_front(p_6_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S01_AXI_arqos.bind(*p_6_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6143].first = 3;
        (*_glb_hdl_sc_channel_map)[6143].second.push_front(p_6_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_aruser.bind(*p_6_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[6146].first = 3;
        (*_glb_hdl_sc_channel_map)[6146].second.push_front(p_6_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arvalid.bind(*p_6_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6147].first = 3;
        (*_glb_hdl_sc_channel_map)[6147].second.push_front(p_6_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_arready.bind(*p_6_S01_AXI_arready);
        p_6_S01_AXI_arready->set_sv_netview_offsetfromdp(6947640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rid.bind(*p_6_S01_AXI_rid);
        p_6_S01_AXI_rid->set_sv_netview_offsetfromdp(6947696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S01_AXI_rdata.bind(*p_6_S01_AXI_rdata);
        p_6_S01_AXI_rdata->set_sv_netview_offsetfromdp(6947752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S01_AXI_rresp.bind(*p_6_S01_AXI_rresp);
        p_6_S01_AXI_rresp->set_sv_netview_offsetfromdp(6947808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rlast.bind(*p_6_S01_AXI_rlast);
        p_6_S01_AXI_rlast->set_sv_netview_offsetfromdp(6947864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_ruser.bind(*p_6_S01_AXI_ruser);
        p_6_S01_AXI_ruser->set_sv_netview_offsetfromdp(6947920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rvalid.bind(*p_6_S01_AXI_rvalid);
        p_6_S01_AXI_rvalid->set_sv_netview_offsetfromdp(6947976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S01_AXI_rready.bind(*p_6_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6168].first = 3;
        (*_glb_hdl_sc_channel_map)[6168].second.push_front(p_6_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awid.bind(*p_6_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[6193].first = 3;
        (*_glb_hdl_sc_channel_map)[6193].second.push_front(p_6_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_awaddr.bind(*p_6_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6190].first = 3;
        (*_glb_hdl_sc_channel_map)[6190].second.push_front(p_6_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_awlen.bind(*p_6_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6194].first = 3;
        (*_glb_hdl_sc_channel_map)[6194].second.push_front(p_6_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awsize.bind(*p_6_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6199].first = 3;
        (*_glb_hdl_sc_channel_map)[6199].second.push_front(p_6_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_awburst.bind(*p_6_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[6191].first = 3;
        (*_glb_hdl_sc_channel_map)[6191].second.push_front(p_6_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_awlock.bind(*p_6_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[6195].first = 1;
        (*_glb_hdl_sc_channel_map)[6195].second.push_front(p_6_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awcache.bind(*p_6_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6192].first = 3;
        (*_glb_hdl_sc_channel_map)[6192].second.push_front(p_6_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_awprot.bind(*p_6_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6196].first = 3;
        (*_glb_hdl_sc_channel_map)[6196].second.push_front(p_6_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_awqos.bind(*p_6_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6197].first = 3;
        (*_glb_hdl_sc_channel_map)[6197].second.push_front(p_6_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awuser.bind(*p_6_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[6200].first = 3;
        (*_glb_hdl_sc_channel_map)[6200].second.push_front(p_6_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awvalid.bind(*p_6_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6201].first = 3;
        (*_glb_hdl_sc_channel_map)[6201].second.push_front(p_6_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_awready.bind(*p_6_S02_AXI_awready);
        p_6_S02_AXI_awready->set_sv_netview_offsetfromdp(6948704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_wdata.bind(*p_6_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6214].first = 3;
        (*_glb_hdl_sc_channel_map)[6214].second.push_front(p_6_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_wstrb.bind(*p_6_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6217].first = 3;
        (*_glb_hdl_sc_channel_map)[6217].second.push_front(p_6_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wlast.bind(*p_6_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6215].first = 3;
        (*_glb_hdl_sc_channel_map)[6215].second.push_front(p_6_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wuser.bind(*p_6_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[6218].first = 3;
        (*_glb_hdl_sc_channel_map)[6218].second.push_front(p_6_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wvalid.bind(*p_6_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6219].first = 3;
        (*_glb_hdl_sc_channel_map)[6219].second.push_front(p_6_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_wready.bind(*p_6_S02_AXI_wready);
        p_6_S02_AXI_wready->set_sv_netview_offsetfromdp(6949040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bid.bind(*p_6_S02_AXI_bid);
        p_6_S02_AXI_bid->set_sv_netview_offsetfromdp(6949096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_bresp.bind(*p_6_S02_AXI_bresp);
        p_6_S02_AXI_bresp->set_sv_netview_offsetfromdp(6949152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_buser.bind(*p_6_S02_AXI_buser);
        p_6_S02_AXI_buser->set_sv_netview_offsetfromdp(6949208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bvalid.bind(*p_6_S02_AXI_bvalid);
        p_6_S02_AXI_bvalid->set_sv_netview_offsetfromdp(6949264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_bready.bind(*p_6_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6203].first = 3;
        (*_glb_hdl_sc_channel_map)[6203].second.push_front(p_6_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arid.bind(*p_6_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[6181].first = 3;
        (*_glb_hdl_sc_channel_map)[6181].second.push_front(p_6_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S02_AXI_araddr.bind(*p_6_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6178].first = 3;
        (*_glb_hdl_sc_channel_map)[6178].second.push_front(p_6_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S02_AXI_arlen.bind(*p_6_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6182].first = 3;
        (*_glb_hdl_sc_channel_map)[6182].second.push_front(p_6_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arsize.bind(*p_6_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6187].first = 3;
        (*_glb_hdl_sc_channel_map)[6187].second.push_front(p_6_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_arburst.bind(*p_6_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[6179].first = 3;
        (*_glb_hdl_sc_channel_map)[6179].second.push_front(p_6_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S02_AXI_arlock.bind(*p_6_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[6183].first = 1;
        (*_glb_hdl_sc_channel_map)[6183].second.push_front(p_6_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arcache.bind(*p_6_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6180].first = 3;
        (*_glb_hdl_sc_channel_map)[6180].second.push_front(p_6_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S02_AXI_arprot.bind(*p_6_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6184].first = 3;
        (*_glb_hdl_sc_channel_map)[6184].second.push_front(p_6_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S02_AXI_arqos.bind(*p_6_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6185].first = 3;
        (*_glb_hdl_sc_channel_map)[6185].second.push_front(p_6_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_aruser.bind(*p_6_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[6188].first = 3;
        (*_glb_hdl_sc_channel_map)[6188].second.push_front(p_6_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arvalid.bind(*p_6_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6189].first = 3;
        (*_glb_hdl_sc_channel_map)[6189].second.push_front(p_6_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_arready.bind(*p_6_S02_AXI_arready);
        p_6_S02_AXI_arready->set_sv_netview_offsetfromdp(6949992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rid.bind(*p_6_S02_AXI_rid);
        p_6_S02_AXI_rid->set_sv_netview_offsetfromdp(6950048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S02_AXI_rdata.bind(*p_6_S02_AXI_rdata);
        p_6_S02_AXI_rdata->set_sv_netview_offsetfromdp(6950104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S02_AXI_rresp.bind(*p_6_S02_AXI_rresp);
        p_6_S02_AXI_rresp->set_sv_netview_offsetfromdp(6950160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rlast.bind(*p_6_S02_AXI_rlast);
        p_6_S02_AXI_rlast->set_sv_netview_offsetfromdp(6950216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_ruser.bind(*p_6_S02_AXI_ruser);
        p_6_S02_AXI_ruser->set_sv_netview_offsetfromdp(6950272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rvalid.bind(*p_6_S02_AXI_rvalid);
        p_6_S02_AXI_rvalid->set_sv_netview_offsetfromdp(6950328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S02_AXI_rready.bind(*p_6_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6210].first = 3;
        (*_glb_hdl_sc_channel_map)[6210].second.push_front(p_6_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awid.bind(*p_6_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[6235].first = 3;
        (*_glb_hdl_sc_channel_map)[6235].second.push_front(p_6_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_awaddr.bind(*p_6_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6232].first = 3;
        (*_glb_hdl_sc_channel_map)[6232].second.push_front(p_6_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_awlen.bind(*p_6_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6236].first = 3;
        (*_glb_hdl_sc_channel_map)[6236].second.push_front(p_6_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awsize.bind(*p_6_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6241].first = 3;
        (*_glb_hdl_sc_channel_map)[6241].second.push_front(p_6_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_awburst.bind(*p_6_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[6233].first = 3;
        (*_glb_hdl_sc_channel_map)[6233].second.push_front(p_6_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_awlock.bind(*p_6_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[6237].first = 1;
        (*_glb_hdl_sc_channel_map)[6237].second.push_front(p_6_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awcache.bind(*p_6_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6234].first = 3;
        (*_glb_hdl_sc_channel_map)[6234].second.push_front(p_6_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_awprot.bind(*p_6_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6238].first = 3;
        (*_glb_hdl_sc_channel_map)[6238].second.push_front(p_6_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_awqos.bind(*p_6_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6239].first = 3;
        (*_glb_hdl_sc_channel_map)[6239].second.push_front(p_6_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awuser.bind(*p_6_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[6242].first = 3;
        (*_glb_hdl_sc_channel_map)[6242].second.push_front(p_6_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awvalid.bind(*p_6_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6243].first = 3;
        (*_glb_hdl_sc_channel_map)[6243].second.push_front(p_6_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_awready.bind(*p_6_S03_AXI_awready);
        p_6_S03_AXI_awready->set_sv_netview_offsetfromdp(6951056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_wdata.bind(*p_6_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6256].first = 3;
        (*_glb_hdl_sc_channel_map)[6256].second.push_front(p_6_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_wstrb.bind(*p_6_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6259].first = 3;
        (*_glb_hdl_sc_channel_map)[6259].second.push_front(p_6_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wlast.bind(*p_6_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6257].first = 3;
        (*_glb_hdl_sc_channel_map)[6257].second.push_front(p_6_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wuser.bind(*p_6_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[6260].first = 3;
        (*_glb_hdl_sc_channel_map)[6260].second.push_front(p_6_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wvalid.bind(*p_6_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6261].first = 3;
        (*_glb_hdl_sc_channel_map)[6261].second.push_front(p_6_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_wready.bind(*p_6_S03_AXI_wready);
        p_6_S03_AXI_wready->set_sv_netview_offsetfromdp(6951392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bid.bind(*p_6_S03_AXI_bid);
        p_6_S03_AXI_bid->set_sv_netview_offsetfromdp(6951448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_bresp.bind(*p_6_S03_AXI_bresp);
        p_6_S03_AXI_bresp->set_sv_netview_offsetfromdp(6951504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_buser.bind(*p_6_S03_AXI_buser);
        p_6_S03_AXI_buser->set_sv_netview_offsetfromdp(6951560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bvalid.bind(*p_6_S03_AXI_bvalid);
        p_6_S03_AXI_bvalid->set_sv_netview_offsetfromdp(6951616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_bready.bind(*p_6_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6245].first = 3;
        (*_glb_hdl_sc_channel_map)[6245].second.push_front(p_6_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arid.bind(*p_6_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[6223].first = 3;
        (*_glb_hdl_sc_channel_map)[6223].second.push_front(p_6_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S03_AXI_araddr.bind(*p_6_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6220].first = 3;
        (*_glb_hdl_sc_channel_map)[6220].second.push_front(p_6_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S03_AXI_arlen.bind(*p_6_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6224].first = 3;
        (*_glb_hdl_sc_channel_map)[6224].second.push_front(p_6_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arsize.bind(*p_6_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6229].first = 3;
        (*_glb_hdl_sc_channel_map)[6229].second.push_front(p_6_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_arburst.bind(*p_6_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[6221].first = 3;
        (*_glb_hdl_sc_channel_map)[6221].second.push_front(p_6_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_6_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S03_AXI_arlock.bind(*p_6_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[6225].first = 1;
        (*_glb_hdl_sc_channel_map)[6225].second.push_front(p_6_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arcache.bind(*p_6_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6222].first = 3;
        (*_glb_hdl_sc_channel_map)[6222].second.push_front(p_6_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S03_AXI_arprot.bind(*p_6_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6226].first = 3;
        (*_glb_hdl_sc_channel_map)[6226].second.push_front(p_6_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S03_AXI_arqos.bind(*p_6_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6227].first = 3;
        (*_glb_hdl_sc_channel_map)[6227].second.push_front(p_6_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_aruser.bind(*p_6_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[6230].first = 3;
        (*_glb_hdl_sc_channel_map)[6230].second.push_front(p_6_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arvalid.bind(*p_6_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6231].first = 3;
        (*_glb_hdl_sc_channel_map)[6231].second.push_front(p_6_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_arready.bind(*p_6_S03_AXI_arready);
        p_6_S03_AXI_arready->set_sv_netview_offsetfromdp(6952344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rid.bind(*p_6_S03_AXI_rid);
        p_6_S03_AXI_rid->set_sv_netview_offsetfromdp(6952400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->S03_AXI_rdata.bind(*p_6_S03_AXI_rdata);
        p_6_S03_AXI_rdata->set_sv_netview_offsetfromdp(6952456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S03_AXI_rresp.bind(*p_6_S03_AXI_rresp);
        p_6_S03_AXI_rresp->set_sv_netview_offsetfromdp(6952512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rlast.bind(*p_6_S03_AXI_rlast);
        p_6_S03_AXI_rlast->set_sv_netview_offsetfromdp(6952568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_ruser.bind(*p_6_S03_AXI_ruser);
        p_6_S03_AXI_ruser->set_sv_netview_offsetfromdp(6952624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rvalid.bind(*p_6_S03_AXI_rvalid);
        p_6_S03_AXI_rvalid->set_sv_netview_offsetfromdp(6952680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S03_AXI_rready.bind(*p_6_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6252].first = 3;
        (*_glb_hdl_sc_channel_map)[6252].second.push_front(p_6_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_awaddr.bind(*p_6_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6271].first = 3;
        (*_glb_hdl_sc_channel_map)[6271].second.push_front(p_6_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_awlen.bind(*p_6_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6273].first = 3;
        (*_glb_hdl_sc_channel_map)[6273].second.push_front(p_6_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awsize.bind(*p_6_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6278].first = 3;
        (*_glb_hdl_sc_channel_map)[6278].second.push_front(p_6_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_awlock.bind(*p_6_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1288].first = 1;
        (*_glb_hdl_sc_channel_map)[1288].second.push_front(p_6_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awcache.bind(*p_6_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6272].first = 3;
        (*_glb_hdl_sc_channel_map)[6272].second.push_front(p_6_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_awprot.bind(*p_6_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6274].first = 3;
        (*_glb_hdl_sc_channel_map)[6274].second.push_front(p_6_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awregion.bind(*p_6_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[6277].first = 3;
        (*_glb_hdl_sc_channel_map)[6277].second.push_front(p_6_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_awqos.bind(*p_6_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6275].first = 3;
        (*_glb_hdl_sc_channel_map)[6275].second.push_front(p_6_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awvalid.bind(*p_6_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6279].first = 3;
        (*_glb_hdl_sc_channel_map)[6279].second.push_front(p_6_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_awready.bind(*p_6_S04_AXI_awready);
        p_6_S04_AXI_awready->set_sv_netview_offsetfromdp(6953296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S04_AXI_wdata.bind(*p_6_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6288].first = 3;
        (*_glb_hdl_sc_channel_map)[6288].second.push_front(p_6_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_wstrb.bind(*p_6_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6291].first = 3;
        (*_glb_hdl_sc_channel_map)[6291].second.push_front(p_6_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wlast.bind(*p_6_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6289].first = 3;
        (*_glb_hdl_sc_channel_map)[6289].second.push_front(p_6_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wvalid.bind(*p_6_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6292].first = 3;
        (*_glb_hdl_sc_channel_map)[6292].second.push_front(p_6_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_wready.bind(*p_6_S04_AXI_wready);
        p_6_S04_AXI_wready->set_sv_netview_offsetfromdp(6953576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_bresp.bind(*p_6_S04_AXI_bresp);
        p_6_S04_AXI_bresp->set_sv_netview_offsetfromdp(6953632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bvalid.bind(*p_6_S04_AXI_bvalid);
        p_6_S04_AXI_bvalid->set_sv_netview_offsetfromdp(6953688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_bready.bind(*p_6_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6280].first = 3;
        (*_glb_hdl_sc_channel_map)[6280].second.push_front(p_6_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S04_AXI_araddr.bind(*p_6_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6262].first = 3;
        (*_glb_hdl_sc_channel_map)[6262].second.push_front(p_6_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S04_AXI_arlen.bind(*p_6_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6264].first = 3;
        (*_glb_hdl_sc_channel_map)[6264].second.push_front(p_6_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arsize.bind(*p_6_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6269].first = 3;
        (*_glb_hdl_sc_channel_map)[6269].second.push_front(p_6_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S04_AXI_arlock.bind(*p_6_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1289].first = 1;
        (*_glb_hdl_sc_channel_map)[1289].second.push_front(p_6_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arcache.bind(*p_6_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6263].first = 3;
        (*_glb_hdl_sc_channel_map)[6263].second.push_front(p_6_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S04_AXI_arprot.bind(*p_6_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6265].first = 3;
        (*_glb_hdl_sc_channel_map)[6265].second.push_front(p_6_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arregion.bind(*p_6_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[6268].first = 3;
        (*_glb_hdl_sc_channel_map)[6268].second.push_front(p_6_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S04_AXI_arqos.bind(*p_6_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6266].first = 3;
        (*_glb_hdl_sc_channel_map)[6266].second.push_front(p_6_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arvalid.bind(*p_6_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6270].first = 3;
        (*_glb_hdl_sc_channel_map)[6270].second.push_front(p_6_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_arready.bind(*p_6_S04_AXI_arready);
        p_6_S04_AXI_arready->set_sv_netview_offsetfromdp(6954304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S04_AXI_rdata.bind(*p_6_S04_AXI_rdata);
        p_6_S04_AXI_rdata->set_sv_netview_offsetfromdp(6954360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S04_AXI_rresp.bind(*p_6_S04_AXI_rresp);
        p_6_S04_AXI_rresp->set_sv_netview_offsetfromdp(6954416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rlast.bind(*p_6_S04_AXI_rlast);
        p_6_S04_AXI_rlast->set_sv_netview_offsetfromdp(6954472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rvalid.bind(*p_6_S04_AXI_rvalid);
        p_6_S04_AXI_rvalid->set_sv_netview_offsetfromdp(6954528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S04_AXI_rready.bind(*p_6_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6285].first = 3;
        (*_glb_hdl_sc_channel_map)[6285].second.push_front(p_6_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_awaddr.bind(*p_6_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6302].first = 3;
        (*_glb_hdl_sc_channel_map)[6302].second.push_front(p_6_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_awlen.bind(*p_6_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6304].first = 3;
        (*_glb_hdl_sc_channel_map)[6304].second.push_front(p_6_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awsize.bind(*p_6_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6309].first = 3;
        (*_glb_hdl_sc_channel_map)[6309].second.push_front(p_6_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_awlock.bind(*p_6_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1286].first = 1;
        (*_glb_hdl_sc_channel_map)[1286].second.push_front(p_6_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awcache.bind(*p_6_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6303].first = 3;
        (*_glb_hdl_sc_channel_map)[6303].second.push_front(p_6_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_awprot.bind(*p_6_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6305].first = 3;
        (*_glb_hdl_sc_channel_map)[6305].second.push_front(p_6_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awregion.bind(*p_6_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[6308].first = 3;
        (*_glb_hdl_sc_channel_map)[6308].second.push_front(p_6_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_awqos.bind(*p_6_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6306].first = 3;
        (*_glb_hdl_sc_channel_map)[6306].second.push_front(p_6_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awvalid.bind(*p_6_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6310].first = 3;
        (*_glb_hdl_sc_channel_map)[6310].second.push_front(p_6_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_awready.bind(*p_6_S05_AXI_awready);
        p_6_S05_AXI_awready->set_sv_netview_offsetfromdp(6955144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S05_AXI_wdata.bind(*p_6_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6319].first = 3;
        (*_glb_hdl_sc_channel_map)[6319].second.push_front(p_6_S05_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_wstrb.bind(*p_6_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6322].first = 3;
        (*_glb_hdl_sc_channel_map)[6322].second.push_front(p_6_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wlast.bind(*p_6_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6320].first = 3;
        (*_glb_hdl_sc_channel_map)[6320].second.push_front(p_6_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wvalid.bind(*p_6_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6323].first = 3;
        (*_glb_hdl_sc_channel_map)[6323].second.push_front(p_6_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_wready.bind(*p_6_S05_AXI_wready);
        p_6_S05_AXI_wready->set_sv_netview_offsetfromdp(6955424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_bresp.bind(*p_6_S05_AXI_bresp);
        p_6_S05_AXI_bresp->set_sv_netview_offsetfromdp(6955480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bvalid.bind(*p_6_S05_AXI_bvalid);
        p_6_S05_AXI_bvalid->set_sv_netview_offsetfromdp(6955536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_bready.bind(*p_6_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6311].first = 3;
        (*_glb_hdl_sc_channel_map)[6311].second.push_front(p_6_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S05_AXI_araddr.bind(*p_6_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6293].first = 3;
        (*_glb_hdl_sc_channel_map)[6293].second.push_front(p_6_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S05_AXI_arlen.bind(*p_6_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6295].first = 3;
        (*_glb_hdl_sc_channel_map)[6295].second.push_front(p_6_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arsize.bind(*p_6_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6300].first = 3;
        (*_glb_hdl_sc_channel_map)[6300].second.push_front(p_6_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S05_AXI_arlock.bind(*p_6_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1287].first = 1;
        (*_glb_hdl_sc_channel_map)[1287].second.push_front(p_6_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arcache.bind(*p_6_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6294].first = 3;
        (*_glb_hdl_sc_channel_map)[6294].second.push_front(p_6_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S05_AXI_arprot.bind(*p_6_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6296].first = 3;
        (*_glb_hdl_sc_channel_map)[6296].second.push_front(p_6_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arregion.bind(*p_6_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[6299].first = 3;
        (*_glb_hdl_sc_channel_map)[6299].second.push_front(p_6_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S05_AXI_arqos.bind(*p_6_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6297].first = 3;
        (*_glb_hdl_sc_channel_map)[6297].second.push_front(p_6_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arvalid.bind(*p_6_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6301].first = 3;
        (*_glb_hdl_sc_channel_map)[6301].second.push_front(p_6_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_arready.bind(*p_6_S05_AXI_arready);
        p_6_S05_AXI_arready->set_sv_netview_offsetfromdp(6956152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S05_AXI_rdata.bind(*p_6_S05_AXI_rdata);
        p_6_S05_AXI_rdata->set_sv_netview_offsetfromdp(6956208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S05_AXI_rresp.bind(*p_6_S05_AXI_rresp);
        p_6_S05_AXI_rresp->set_sv_netview_offsetfromdp(6956264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rlast.bind(*p_6_S05_AXI_rlast);
        p_6_S05_AXI_rlast->set_sv_netview_offsetfromdp(6956320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rvalid.bind(*p_6_S05_AXI_rvalid);
        p_6_S05_AXI_rvalid->set_sv_netview_offsetfromdp(6956376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S05_AXI_rready.bind(*p_6_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6316].first = 3;
        (*_glb_hdl_sc_channel_map)[6316].second.push_front(p_6_S05_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_awaddr.bind(*p_6_S06_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[6333].first = 3;
        (*_glb_hdl_sc_channel_map)[6333].second.push_front(p_6_S06_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S06_AXI_awlen.bind(*p_6_S06_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[6335].first = 3;
        (*_glb_hdl_sc_channel_map)[6335].second.push_front(p_6_S06_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_awsize.bind(*p_6_S06_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[6340].first = 3;
        (*_glb_hdl_sc_channel_map)[6340].second.push_front(p_6_S06_AXI_awsize);
        xsim_sc_channel<0, bool > *p_6_S06_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S06_AXI_awlock.bind(*p_6_S06_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1284].first = 1;
        (*_glb_hdl_sc_channel_map)[1284].second.push_front(p_6_S06_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awcache.bind(*p_6_S06_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[6334].first = 3;
        (*_glb_hdl_sc_channel_map)[6334].second.push_front(p_6_S06_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_awprot.bind(*p_6_S06_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[6336].first = 3;
        (*_glb_hdl_sc_channel_map)[6336].second.push_front(p_6_S06_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awregion.bind(*p_6_S06_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[6339].first = 3;
        (*_glb_hdl_sc_channel_map)[6339].second.push_front(p_6_S06_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_awqos.bind(*p_6_S06_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[6337].first = 3;
        (*_glb_hdl_sc_channel_map)[6337].second.push_front(p_6_S06_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_awvalid.bind(*p_6_S06_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[6341].first = 3;
        (*_glb_hdl_sc_channel_map)[6341].second.push_front(p_6_S06_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_awready.bind(*p_6_S06_AXI_awready);
        p_6_S06_AXI_awready->set_sv_netview_offsetfromdp(6956992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S06_AXI_wdata.bind(*p_6_S06_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[6350].first = 3;
        (*_glb_hdl_sc_channel_map)[6350].second.push_front(p_6_S06_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_wstrb.bind(*p_6_S06_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[6353].first = 3;
        (*_glb_hdl_sc_channel_map)[6353].second.push_front(p_6_S06_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wlast.bind(*p_6_S06_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[6351].first = 3;
        (*_glb_hdl_sc_channel_map)[6351].second.push_front(p_6_S06_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wvalid.bind(*p_6_S06_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[6354].first = 3;
        (*_glb_hdl_sc_channel_map)[6354].second.push_front(p_6_S06_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_wready.bind(*p_6_S06_AXI_wready);
        p_6_S06_AXI_wready->set_sv_netview_offsetfromdp(6957272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S06_AXI_bresp.bind(*p_6_S06_AXI_bresp);
        p_6_S06_AXI_bresp->set_sv_netview_offsetfromdp(6957328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_bvalid.bind(*p_6_S06_AXI_bvalid);
        p_6_S06_AXI_bvalid->set_sv_netview_offsetfromdp(6957384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_bready.bind(*p_6_S06_AXI_bready);
        (*_glb_hdl_sc_channel_map)[6342].first = 3;
        (*_glb_hdl_sc_channel_map)[6342].second.push_front(p_6_S06_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_S06_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->S06_AXI_araddr.bind(*p_6_S06_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[6324].first = 3;
        (*_glb_hdl_sc_channel_map)[6324].second.push_front(p_6_S06_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_S06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->S06_AXI_arlen.bind(*p_6_S06_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[6326].first = 3;
        (*_glb_hdl_sc_channel_map)[6326].second.push_front(p_6_S06_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_arsize.bind(*p_6_S06_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[6331].first = 3;
        (*_glb_hdl_sc_channel_map)[6331].second.push_front(p_6_S06_AXI_arsize);
        xsim_sc_channel<0, bool > *p_6_S06_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->S06_AXI_arlock.bind(*p_6_S06_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1285].first = 1;
        (*_glb_hdl_sc_channel_map)[1285].second.push_front(p_6_S06_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arcache.bind(*p_6_S06_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[6325].first = 3;
        (*_glb_hdl_sc_channel_map)[6325].second.push_front(p_6_S06_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_S06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->S06_AXI_arprot.bind(*p_6_S06_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[6327].first = 3;
        (*_glb_hdl_sc_channel_map)[6327].second.push_front(p_6_S06_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arregion.bind(*p_6_S06_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[6330].first = 3;
        (*_glb_hdl_sc_channel_map)[6330].second.push_front(p_6_S06_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_S06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->S06_AXI_arqos.bind(*p_6_S06_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[6328].first = 3;
        (*_glb_hdl_sc_channel_map)[6328].second.push_front(p_6_S06_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_arvalid.bind(*p_6_S06_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[6332].first = 3;
        (*_glb_hdl_sc_channel_map)[6332].second.push_front(p_6_S06_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_arready.bind(*p_6_S06_AXI_arready);
        p_6_S06_AXI_arready->set_sv_netview_offsetfromdp(6958000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_S06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->S06_AXI_rdata.bind(*p_6_S06_AXI_rdata);
        p_6_S06_AXI_rdata->set_sv_netview_offsetfromdp(6958056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_S06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->S06_AXI_rresp.bind(*p_6_S06_AXI_rresp);
        p_6_S06_AXI_rresp->set_sv_netview_offsetfromdp(6958112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rlast.bind(*p_6_S06_AXI_rlast);
        p_6_S06_AXI_rlast->set_sv_netview_offsetfromdp(6958168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rvalid.bind(*p_6_S06_AXI_rvalid);
        p_6_S06_AXI_rvalid->set_sv_netview_offsetfromdp(6958224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_S06_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->S06_AXI_rready.bind(*p_6_S06_AXI_rready);
        (*_glb_hdl_sc_channel_map)[6347].first = 3;
        (*_glb_hdl_sc_channel_map)[6347].second.push_front(p_6_S06_AXI_rready);
        xsim_sc_channel<0, bool > *p_6_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_6->ddr4_mem_calib_complete.bind(*p_6_ddr4_mem_calib_complete);
        p_6_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(6958336);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_awid.bind(*p_6_M00_AXI_awid);
        p_6_M00_AXI_awid->set_sv_netview_offsetfromdp(6958392);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_awaddr.bind(*p_6_M00_AXI_awaddr);
        p_6_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6958448);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_awlen.bind(*p_6_M00_AXI_awlen);
        p_6_M00_AXI_awlen->set_sv_netview_offsetfromdp(6958504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awsize.bind(*p_6_M00_AXI_awsize);
        p_6_M00_AXI_awsize->set_sv_netview_offsetfromdp(6958560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_awburst.bind(*p_6_M00_AXI_awburst);
        p_6_M00_AXI_awburst->set_sv_netview_offsetfromdp(6958616);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_awlock.bind(*p_6_M00_AXI_awlock);
        p_6_M00_AXI_awlock->set_sv_netview_offsetfromdp(6958672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awcache.bind(*p_6_M00_AXI_awcache);
        p_6_M00_AXI_awcache->set_sv_netview_offsetfromdp(6958728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_awprot.bind(*p_6_M00_AXI_awprot);
        p_6_M00_AXI_awprot->set_sv_netview_offsetfromdp(6958784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_awqos.bind(*p_6_M00_AXI_awqos);
        p_6_M00_AXI_awqos->set_sv_netview_offsetfromdp(6958840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_awuser.bind(*p_6_M00_AXI_awuser);
        p_6_M00_AXI_awuser->set_sv_netview_offsetfromdp(6958896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awvalid.bind(*p_6_M00_AXI_awvalid);
        p_6_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6958952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_awready.bind(*p_6_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5961].first = 3;
        (*_glb_hdl_sc_channel_map)[5961].second.push_front(p_6_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_wdata.bind(*p_6_M00_AXI_wdata);
        p_6_M00_AXI_wdata->set_sv_netview_offsetfromdp(6959064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M00_AXI_wstrb.bind(*p_6_M00_AXI_wstrb);
        p_6_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6959120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wlast.bind(*p_6_M00_AXI_wlast);
        p_6_M00_AXI_wlast->set_sv_netview_offsetfromdp(6959176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wuser.bind(*p_6_M00_AXI_wuser);
        p_6_M00_AXI_wuser->set_sv_netview_offsetfromdp(6959232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wvalid.bind(*p_6_M00_AXI_wvalid);
        p_6_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6959288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_wready.bind(*p_6_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5979].first = 3;
        (*_glb_hdl_sc_channel_map)[5979].second.push_front(p_6_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_bid.bind(*p_6_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5965].first = 3;
        (*_glb_hdl_sc_channel_map)[5965].second.push_front(p_6_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_bresp.bind(*p_6_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5967].first = 3;
        (*_glb_hdl_sc_channel_map)[5967].second.push_front(p_6_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_buser.bind(*p_6_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5968].first = 3;
        (*_glb_hdl_sc_channel_map)[5968].second.push_front(p_6_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bvalid.bind(*p_6_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5969].first = 3;
        (*_glb_hdl_sc_channel_map)[5969].second.push_front(p_6_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_bready.bind(*p_6_M00_AXI_bready);
        p_6_M00_AXI_bready->set_sv_netview_offsetfromdp(6959624);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_arid.bind(*p_6_M00_AXI_arid);
        p_6_M00_AXI_arid->set_sv_netview_offsetfromdp(6959680);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M00_AXI_araddr.bind(*p_6_M00_AXI_araddr);
        p_6_M00_AXI_araddr->set_sv_netview_offsetfromdp(6959736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M00_AXI_arlen.bind(*p_6_M00_AXI_arlen);
        p_6_M00_AXI_arlen->set_sv_netview_offsetfromdp(6959792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arsize.bind(*p_6_M00_AXI_arsize);
        p_6_M00_AXI_arsize->set_sv_netview_offsetfromdp(6959848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_arburst.bind(*p_6_M00_AXI_arburst);
        p_6_M00_AXI_arburst->set_sv_netview_offsetfromdp(6959904);
        xsim_sc_channel<0, bool > *p_6_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M00_AXI_arlock.bind(*p_6_M00_AXI_arlock);
        p_6_M00_AXI_arlock->set_sv_netview_offsetfromdp(6959960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arcache.bind(*p_6_M00_AXI_arcache);
        p_6_M00_AXI_arcache->set_sv_netview_offsetfromdp(6960016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M00_AXI_arprot.bind(*p_6_M00_AXI_arprot);
        p_6_M00_AXI_arprot->set_sv_netview_offsetfromdp(6960072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M00_AXI_arqos.bind(*p_6_M00_AXI_arqos);
        p_6_M00_AXI_arqos->set_sv_netview_offsetfromdp(6960128);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M00_AXI_aruser.bind(*p_6_M00_AXI_aruser);
        p_6_M00_AXI_aruser->set_sv_netview_offsetfromdp(6960184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arvalid.bind(*p_6_M00_AXI_arvalid);
        p_6_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6960240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_arready.bind(*p_6_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5949].first = 3;
        (*_glb_hdl_sc_channel_map)[5949].second.push_front(p_6_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M00_AXI_rid.bind(*p_6_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5971].first = 3;
        (*_glb_hdl_sc_channel_map)[5971].second.push_front(p_6_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M00_AXI_rdata.bind(*p_6_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5970].first = 3;
        (*_glb_hdl_sc_channel_map)[5970].second.push_front(p_6_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M00_AXI_rresp.bind(*p_6_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5974].first = 3;
        (*_glb_hdl_sc_channel_map)[5974].second.push_front(p_6_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rlast.bind(*p_6_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5972].first = 3;
        (*_glb_hdl_sc_channel_map)[5972].second.push_front(p_6_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_ruser.bind(*p_6_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5975].first = 3;
        (*_glb_hdl_sc_channel_map)[5975].second.push_front(p_6_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rvalid.bind(*p_6_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5976].first = 3;
        (*_glb_hdl_sc_channel_map)[5976].second.push_front(p_6_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M00_AXI_rready.bind(*p_6_M00_AXI_rready);
        p_6_M00_AXI_rready->set_sv_netview_offsetfromdp(6960688);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_awaddr.bind(*p_6_M01_AXI_awaddr);
        p_6_M01_AXI_awaddr->set_sv_netview_offsetfromdp(6960744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_awlen.bind(*p_6_M01_AXI_awlen);
        p_6_M01_AXI_awlen->set_sv_netview_offsetfromdp(6960800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awsize.bind(*p_6_M01_AXI_awsize);
        p_6_M01_AXI_awsize->set_sv_netview_offsetfromdp(6960856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_awburst.bind(*p_6_M01_AXI_awburst);
        p_6_M01_AXI_awburst->set_sv_netview_offsetfromdp(6960912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_awprot.bind(*p_6_M01_AXI_awprot);
        p_6_M01_AXI_awprot->set_sv_netview_offsetfromdp(6960968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awvalid.bind(*p_6_M01_AXI_awvalid);
        p_6_M01_AXI_awvalid->set_sv_netview_offsetfromdp(6961024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_awready.bind(*p_6_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5994].first = 3;
        (*_glb_hdl_sc_channel_map)[5994].second.push_front(p_6_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_wdata.bind(*p_6_M01_AXI_wdata);
        p_6_M01_AXI_wdata->set_sv_netview_offsetfromdp(6961136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M01_AXI_wstrb.bind(*p_6_M01_AXI_wstrb);
        p_6_M01_AXI_wstrb->set_sv_netview_offsetfromdp(6961192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wlast.bind(*p_6_M01_AXI_wlast);
        p_6_M01_AXI_wlast->set_sv_netview_offsetfromdp(6961248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wvalid.bind(*p_6_M01_AXI_wvalid);
        p_6_M01_AXI_wvalid->set_sv_netview_offsetfromdp(6961304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_wready.bind(*p_6_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[6007].first = 3;
        (*_glb_hdl_sc_channel_map)[6007].second.push_front(p_6_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_bresp.bind(*p_6_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5998].first = 3;
        (*_glb_hdl_sc_channel_map)[5998].second.push_front(p_6_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bvalid.bind(*p_6_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5999].first = 3;
        (*_glb_hdl_sc_channel_map)[5999].second.push_front(p_6_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_bready.bind(*p_6_M01_AXI_bready);
        p_6_M01_AXI_bready->set_sv_netview_offsetfromdp(6961528);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_6_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_6->M01_AXI_araddr.bind(*p_6_M01_AXI_araddr);
        p_6_M01_AXI_araddr->set_sv_netview_offsetfromdp(6961584);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M01_AXI_arlen.bind(*p_6_M01_AXI_arlen);
        p_6_M01_AXI_arlen->set_sv_netview_offsetfromdp(6961640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arsize.bind(*p_6_M01_AXI_arsize);
        p_6_M01_AXI_arsize->set_sv_netview_offsetfromdp(6961696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_arburst.bind(*p_6_M01_AXI_arburst);
        p_6_M01_AXI_arburst->set_sv_netview_offsetfromdp(6961752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M01_AXI_arprot.bind(*p_6_M01_AXI_arprot);
        p_6_M01_AXI_arprot->set_sv_netview_offsetfromdp(6961808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arvalid.bind(*p_6_M01_AXI_arvalid);
        p_6_M01_AXI_arvalid->set_sv_netview_offsetfromdp(6961864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_arready.bind(*p_6_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5987].first = 3;
        (*_glb_hdl_sc_channel_map)[5987].second.push_front(p_6_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M01_AXI_rdata.bind(*p_6_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[6000].first = 3;
        (*_glb_hdl_sc_channel_map)[6000].second.push_front(p_6_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M01_AXI_rresp.bind(*p_6_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[6003].first = 3;
        (*_glb_hdl_sc_channel_map)[6003].second.push_front(p_6_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rlast.bind(*p_6_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[6001].first = 3;
        (*_glb_hdl_sc_channel_map)[6001].second.push_front(p_6_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rvalid.bind(*p_6_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[6004].first = 3;
        (*_glb_hdl_sc_channel_map)[6004].second.push_front(p_6_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M01_AXI_rready.bind(*p_6_M01_AXI_rready);
        p_6_M01_AXI_rready->set_sv_netview_offsetfromdp(6962200);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_awid.bind(*p_6_M02_AXI_awid);
        p_6_M02_AXI_awid->set_sv_netview_offsetfromdp(6962256);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_awaddr.bind(*p_6_M02_AXI_awaddr);
        p_6_M02_AXI_awaddr->set_sv_netview_offsetfromdp(6962312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_awlen.bind(*p_6_M02_AXI_awlen);
        p_6_M02_AXI_awlen->set_sv_netview_offsetfromdp(6962368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awsize.bind(*p_6_M02_AXI_awsize);
        p_6_M02_AXI_awsize->set_sv_netview_offsetfromdp(6962424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_awburst.bind(*p_6_M02_AXI_awburst);
        p_6_M02_AXI_awburst->set_sv_netview_offsetfromdp(6962480);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_awlock.bind(*p_6_M02_AXI_awlock);
        p_6_M02_AXI_awlock->set_sv_netview_offsetfromdp(6962536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awcache.bind(*p_6_M02_AXI_awcache);
        p_6_M02_AXI_awcache->set_sv_netview_offsetfromdp(6962592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_awprot.bind(*p_6_M02_AXI_awprot);
        p_6_M02_AXI_awprot->set_sv_netview_offsetfromdp(6962648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_awqos.bind(*p_6_M02_AXI_awqos);
        p_6_M02_AXI_awqos->set_sv_netview_offsetfromdp(6962704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_awuser.bind(*p_6_M02_AXI_awuser);
        p_6_M02_AXI_awuser->set_sv_netview_offsetfromdp(6962760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awvalid.bind(*p_6_M02_AXI_awvalid);
        p_6_M02_AXI_awvalid->set_sv_netview_offsetfromdp(6962816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_awready.bind(*p_6_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[6030].first = 3;
        (*_glb_hdl_sc_channel_map)[6030].second.push_front(p_6_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_wdata.bind(*p_6_M02_AXI_wdata);
        p_6_M02_AXI_wdata->set_sv_netview_offsetfromdp(6962928);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M02_AXI_wstrb.bind(*p_6_M02_AXI_wstrb);
        p_6_M02_AXI_wstrb->set_sv_netview_offsetfromdp(6962984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wlast.bind(*p_6_M02_AXI_wlast);
        p_6_M02_AXI_wlast->set_sv_netview_offsetfromdp(6963040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wuser.bind(*p_6_M02_AXI_wuser);
        p_6_M02_AXI_wuser->set_sv_netview_offsetfromdp(6963096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wvalid.bind(*p_6_M02_AXI_wvalid);
        p_6_M02_AXI_wvalid->set_sv_netview_offsetfromdp(6963152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_wready.bind(*p_6_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[6048].first = 3;
        (*_glb_hdl_sc_channel_map)[6048].second.push_front(p_6_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_bid.bind(*p_6_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[6034].first = 3;
        (*_glb_hdl_sc_channel_map)[6034].second.push_front(p_6_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_bresp.bind(*p_6_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[6036].first = 3;
        (*_glb_hdl_sc_channel_map)[6036].second.push_front(p_6_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_buser.bind(*p_6_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[6037].first = 3;
        (*_glb_hdl_sc_channel_map)[6037].second.push_front(p_6_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bvalid.bind(*p_6_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[6038].first = 3;
        (*_glb_hdl_sc_channel_map)[6038].second.push_front(p_6_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_bready.bind(*p_6_M02_AXI_bready);
        p_6_M02_AXI_bready->set_sv_netview_offsetfromdp(6963488);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_arid.bind(*p_6_M02_AXI_arid);
        p_6_M02_AXI_arid->set_sv_netview_offsetfromdp(6963544);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M02_AXI_araddr.bind(*p_6_M02_AXI_araddr);
        p_6_M02_AXI_araddr->set_sv_netview_offsetfromdp(6963600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M02_AXI_arlen.bind(*p_6_M02_AXI_arlen);
        p_6_M02_AXI_arlen->set_sv_netview_offsetfromdp(6963656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arsize.bind(*p_6_M02_AXI_arsize);
        p_6_M02_AXI_arsize->set_sv_netview_offsetfromdp(6963712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_arburst.bind(*p_6_M02_AXI_arburst);
        p_6_M02_AXI_arburst->set_sv_netview_offsetfromdp(6963768);
        xsim_sc_channel<0, bool > *p_6_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M02_AXI_arlock.bind(*p_6_M02_AXI_arlock);
        p_6_M02_AXI_arlock->set_sv_netview_offsetfromdp(6963824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arcache.bind(*p_6_M02_AXI_arcache);
        p_6_M02_AXI_arcache->set_sv_netview_offsetfromdp(6963880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M02_AXI_arprot.bind(*p_6_M02_AXI_arprot);
        p_6_M02_AXI_arprot->set_sv_netview_offsetfromdp(6963936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M02_AXI_arqos.bind(*p_6_M02_AXI_arqos);
        p_6_M02_AXI_arqos->set_sv_netview_offsetfromdp(6963992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M02_AXI_aruser.bind(*p_6_M02_AXI_aruser);
        p_6_M02_AXI_aruser->set_sv_netview_offsetfromdp(6964048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arvalid.bind(*p_6_M02_AXI_arvalid);
        p_6_M02_AXI_arvalid->set_sv_netview_offsetfromdp(6964104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_arready.bind(*p_6_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[6018].first = 3;
        (*_glb_hdl_sc_channel_map)[6018].second.push_front(p_6_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M02_AXI_rid.bind(*p_6_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[6040].first = 3;
        (*_glb_hdl_sc_channel_map)[6040].second.push_front(p_6_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M02_AXI_rdata.bind(*p_6_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[6039].first = 3;
        (*_glb_hdl_sc_channel_map)[6039].second.push_front(p_6_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M02_AXI_rresp.bind(*p_6_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[6043].first = 3;
        (*_glb_hdl_sc_channel_map)[6043].second.push_front(p_6_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rlast.bind(*p_6_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[6041].first = 3;
        (*_glb_hdl_sc_channel_map)[6041].second.push_front(p_6_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_ruser.bind(*p_6_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[6044].first = 3;
        (*_glb_hdl_sc_channel_map)[6044].second.push_front(p_6_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rvalid.bind(*p_6_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[6045].first = 3;
        (*_glb_hdl_sc_channel_map)[6045].second.push_front(p_6_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M02_AXI_rready.bind(*p_6_M02_AXI_rready);
        p_6_M02_AXI_rready->set_sv_netview_offsetfromdp(6964552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_awid.bind(*p_6_M03_AXI_awid);
        p_6_M03_AXI_awid->set_sv_netview_offsetfromdp(6964608);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_awaddr.bind(*p_6_M03_AXI_awaddr);
        p_6_M03_AXI_awaddr->set_sv_netview_offsetfromdp(6964664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_awlen.bind(*p_6_M03_AXI_awlen);
        p_6_M03_AXI_awlen->set_sv_netview_offsetfromdp(6964720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awsize.bind(*p_6_M03_AXI_awsize);
        p_6_M03_AXI_awsize->set_sv_netview_offsetfromdp(6964776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_awburst.bind(*p_6_M03_AXI_awburst);
        p_6_M03_AXI_awburst->set_sv_netview_offsetfromdp(6964832);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_awlock.bind(*p_6_M03_AXI_awlock);
        p_6_M03_AXI_awlock->set_sv_netview_offsetfromdp(6964888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awcache.bind(*p_6_M03_AXI_awcache);
        p_6_M03_AXI_awcache->set_sv_netview_offsetfromdp(6964944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_awprot.bind(*p_6_M03_AXI_awprot);
        p_6_M03_AXI_awprot->set_sv_netview_offsetfromdp(6965000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_awqos.bind(*p_6_M03_AXI_awqos);
        p_6_M03_AXI_awqos->set_sv_netview_offsetfromdp(6965056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_awuser.bind(*p_6_M03_AXI_awuser);
        p_6_M03_AXI_awuser->set_sv_netview_offsetfromdp(6965112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awvalid.bind(*p_6_M03_AXI_awvalid);
        p_6_M03_AXI_awvalid->set_sv_netview_offsetfromdp(6965168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_awready.bind(*p_6_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[6072].first = 3;
        (*_glb_hdl_sc_channel_map)[6072].second.push_front(p_6_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_wdata.bind(*p_6_M03_AXI_wdata);
        p_6_M03_AXI_wdata->set_sv_netview_offsetfromdp(6965280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->M03_AXI_wstrb.bind(*p_6_M03_AXI_wstrb);
        p_6_M03_AXI_wstrb->set_sv_netview_offsetfromdp(6965336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wlast.bind(*p_6_M03_AXI_wlast);
        p_6_M03_AXI_wlast->set_sv_netview_offsetfromdp(6965392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wuser.bind(*p_6_M03_AXI_wuser);
        p_6_M03_AXI_wuser->set_sv_netview_offsetfromdp(6965448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wvalid.bind(*p_6_M03_AXI_wvalid);
        p_6_M03_AXI_wvalid->set_sv_netview_offsetfromdp(6965504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_wready.bind(*p_6_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[6090].first = 3;
        (*_glb_hdl_sc_channel_map)[6090].second.push_front(p_6_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_bid.bind(*p_6_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[6076].first = 3;
        (*_glb_hdl_sc_channel_map)[6076].second.push_front(p_6_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_bresp.bind(*p_6_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[6078].first = 3;
        (*_glb_hdl_sc_channel_map)[6078].second.push_front(p_6_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_buser.bind(*p_6_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[6079].first = 3;
        (*_glb_hdl_sc_channel_map)[6079].second.push_front(p_6_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bvalid.bind(*p_6_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[6080].first = 3;
        (*_glb_hdl_sc_channel_map)[6080].second.push_front(p_6_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_bready.bind(*p_6_M03_AXI_bready);
        p_6_M03_AXI_bready->set_sv_netview_offsetfromdp(6965840);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_arid.bind(*p_6_M03_AXI_arid);
        p_6_M03_AXI_arid->set_sv_netview_offsetfromdp(6965896);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->M03_AXI_araddr.bind(*p_6_M03_AXI_araddr);
        p_6_M03_AXI_araddr->set_sv_netview_offsetfromdp(6965952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->M03_AXI_arlen.bind(*p_6_M03_AXI_arlen);
        p_6_M03_AXI_arlen->set_sv_netview_offsetfromdp(6966008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arsize.bind(*p_6_M03_AXI_arsize);
        p_6_M03_AXI_arsize->set_sv_netview_offsetfromdp(6966064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_arburst.bind(*p_6_M03_AXI_arburst);
        p_6_M03_AXI_arburst->set_sv_netview_offsetfromdp(6966120);
        xsim_sc_channel<0, bool > *p_6_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->M03_AXI_arlock.bind(*p_6_M03_AXI_arlock);
        p_6_M03_AXI_arlock->set_sv_netview_offsetfromdp(6966176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arcache.bind(*p_6_M03_AXI_arcache);
        p_6_M03_AXI_arcache->set_sv_netview_offsetfromdp(6966232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->M03_AXI_arprot.bind(*p_6_M03_AXI_arprot);
        p_6_M03_AXI_arprot->set_sv_netview_offsetfromdp(6966288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->M03_AXI_arqos.bind(*p_6_M03_AXI_arqos);
        p_6_M03_AXI_arqos->set_sv_netview_offsetfromdp(6966344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->M03_AXI_aruser.bind(*p_6_M03_AXI_aruser);
        p_6_M03_AXI_aruser->set_sv_netview_offsetfromdp(6966400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arvalid.bind(*p_6_M03_AXI_arvalid);
        p_6_M03_AXI_arvalid->set_sv_netview_offsetfromdp(6966456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_arready.bind(*p_6_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[6060].first = 3;
        (*_glb_hdl_sc_channel_map)[6060].second.push_front(p_6_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->M03_AXI_rid.bind(*p_6_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[6082].first = 3;
        (*_glb_hdl_sc_channel_map)[6082].second.push_front(p_6_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->M03_AXI_rdata.bind(*p_6_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[6081].first = 3;
        (*_glb_hdl_sc_channel_map)[6081].second.push_front(p_6_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->M03_AXI_rresp.bind(*p_6_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[6085].first = 3;
        (*_glb_hdl_sc_channel_map)[6085].second.push_front(p_6_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rlast.bind(*p_6_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[6083].first = 3;
        (*_glb_hdl_sc_channel_map)[6083].second.push_front(p_6_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_ruser.bind(*p_6_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[6086].first = 3;
        (*_glb_hdl_sc_channel_map)[6086].second.push_front(p_6_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rvalid.bind(*p_6_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[6087].first = 3;
        (*_glb_hdl_sc_channel_map)[6087].second.push_front(p_6_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->M03_AXI_rready.bind(*p_6_M03_AXI_rready);
        p_6_M03_AXI_rready->set_sv_netview_offsetfromdp(6966904);
        sc_inst_7 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_7->xsim_set_dbg_index(30);
        sc_inst_8 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_8->xsim_set_dbg_index(31);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[6403].first = 1;
        (*_glb_hdl_sc_channel_map)[6403].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[6376].first = 3;
        (*_glb_hdl_sc_channel_map)[6376].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[6373].first = 3;
        (*_glb_hdl_sc_channel_map)[6373].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[6377].first = 3;
        (*_glb_hdl_sc_channel_map)[6377].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[6382].first = 3;
        (*_glb_hdl_sc_channel_map)[6382].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[6374].first = 3;
        (*_glb_hdl_sc_channel_map)[6374].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[6378].first = 1;
        (*_glb_hdl_sc_channel_map)[6378].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[6375].first = 3;
        (*_glb_hdl_sc_channel_map)[6375].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[6379].first = 3;
        (*_glb_hdl_sc_channel_map)[6379].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1282].first = 3;
        (*_glb_hdl_sc_channel_map)[1282].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[6380].first = 3;
        (*_glb_hdl_sc_channel_map)[6380].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[6383].first = 3;
        (*_glb_hdl_sc_channel_map)[6383].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[6384].first = 1;
        (*_glb_hdl_sc_channel_map)[6384].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6967784);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[6397].first = 3;
        (*_glb_hdl_sc_channel_map)[6397].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[6400].first = 3;
        (*_glb_hdl_sc_channel_map)[6400].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[6398].first = 1;
        (*_glb_hdl_sc_channel_map)[6398].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[6401].first = 3;
        (*_glb_hdl_sc_channel_map)[6401].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[6402].first = 1;
        (*_glb_hdl_sc_channel_map)[6402].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6968120);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6968176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6968232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6968288);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6968344);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[6386].first = 1;
        (*_glb_hdl_sc_channel_map)[6386].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[6364].first = 3;
        (*_glb_hdl_sc_channel_map)[6364].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[6360].first = 3;
        (*_glb_hdl_sc_channel_map)[6360].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[6365].first = 3;
        (*_glb_hdl_sc_channel_map)[6365].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[6370].first = 3;
        (*_glb_hdl_sc_channel_map)[6370].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[6361].first = 3;
        (*_glb_hdl_sc_channel_map)[6361].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[6366].first = 1;
        (*_glb_hdl_sc_channel_map)[6366].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[6362].first = 3;
        (*_glb_hdl_sc_channel_map)[6362].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[6367].first = 3;
        (*_glb_hdl_sc_channel_map)[6367].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1283].first = 3;
        (*_glb_hdl_sc_channel_map)[1283].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[6368].first = 3;
        (*_glb_hdl_sc_channel_map)[6368].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[6371].first = 3;
        (*_glb_hdl_sc_channel_map)[6371].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[6372].first = 1;
        (*_glb_hdl_sc_channel_map)[6372].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6969128);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6969184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6969240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6969296);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6969352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6969408);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6969464);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[6393].first = 1;
        (*_glb_hdl_sc_channel_map)[6393].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[6359].first = 1;
        (*_glb_hdl_sc_channel_map)[6359].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[6363].first = 1;
        (*_glb_hdl_sc_channel_map)[6363].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1266].first = 3;
        (*_glb_hdl_sc_channel_map)[1266].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1269].first = 3;
        (*_glb_hdl_sc_channel_map)[1269].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1265].first = 3;
        (*_glb_hdl_sc_channel_map)[1265].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1260].first = 3;
        (*_glb_hdl_sc_channel_map)[1260].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1268].first = 3;
        (*_glb_hdl_sc_channel_map)[1268].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1264].first = 1;
        (*_glb_hdl_sc_channel_map)[1264].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1267].first = 3;
        (*_glb_hdl_sc_channel_map)[1267].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1263].first = 3;
        (*_glb_hdl_sc_channel_map)[1263].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1261].first = 3;
        (*_glb_hdl_sc_channel_map)[1261].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1262].first = 3;
        (*_glb_hdl_sc_channel_map)[1262].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1259].first = 3;
        (*_glb_hdl_sc_channel_map)[1259].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1258].first = 1;
        (*_glb_hdl_sc_channel_map)[1258].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6970360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1255].first = 3;
        (*_glb_hdl_sc_channel_map)[1255].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1253].first = 3;
        (*_glb_hdl_sc_channel_map)[1253].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1254].first = 1;
        (*_glb_hdl_sc_channel_map)[1254].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1252].first = 3;
        (*_glb_hdl_sc_channel_map)[1252].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1251].first = 1;
        (*_glb_hdl_sc_channel_map)[1251].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6970696);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6970752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6970808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6970864);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6970920);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1257].first = 1;
        (*_glb_hdl_sc_channel_map)[1257].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1278].first = 3;
        (*_glb_hdl_sc_channel_map)[1278].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1281].first = 3;
        (*_glb_hdl_sc_channel_map)[1281].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1277].first = 3;
        (*_glb_hdl_sc_channel_map)[1277].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1272].first = 3;
        (*_glb_hdl_sc_channel_map)[1272].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1280].first = 3;
        (*_glb_hdl_sc_channel_map)[1280].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1276].first = 1;
        (*_glb_hdl_sc_channel_map)[1276].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1279].first = 3;
        (*_glb_hdl_sc_channel_map)[1279].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1275].first = 3;
        (*_glb_hdl_sc_channel_map)[1275].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1273].first = 3;
        (*_glb_hdl_sc_channel_map)[1273].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1274].first = 3;
        (*_glb_hdl_sc_channel_map)[1274].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1271].first = 3;
        (*_glb_hdl_sc_channel_map)[1271].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1270].first = 1;
        (*_glb_hdl_sc_channel_map)[1270].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6971704);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6971760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6971816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6971872);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6971928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6971984);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6972040);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1256].first = 1;
        (*_glb_hdl_sc_channel_map)[1256].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[6404].first = 1;
        (*_glb_hdl_sc_channel_map)[6404].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[6405].first = 1;
        (*_glb_hdl_sc_channel_map)[6405].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_9->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[6463].first = 1;
        (*_glb_hdl_sc_channel_map)[6463].second.push_front(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[6436].first = 3;
        (*_glb_hdl_sc_channel_map)[6436].second.push_front(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[6433].first = 3;
        (*_glb_hdl_sc_channel_map)[6433].second.push_front(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[6437].first = 3;
        (*_glb_hdl_sc_channel_map)[6437].second.push_front(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[6442].first = 3;
        (*_glb_hdl_sc_channel_map)[6442].second.push_front(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[6434].first = 3;
        (*_glb_hdl_sc_channel_map)[6434].second.push_front(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[6438].first = 1;
        (*_glb_hdl_sc_channel_map)[6438].second.push_front(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[6435].first = 3;
        (*_glb_hdl_sc_channel_map)[6435].second.push_front(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[6439].first = 3;
        (*_glb_hdl_sc_channel_map)[6439].second.push_front(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1249].first = 3;
        (*_glb_hdl_sc_channel_map)[1249].second.push_front(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[6440].first = 3;
        (*_glb_hdl_sc_channel_map)[6440].second.push_front(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[6443].first = 3;
        (*_glb_hdl_sc_channel_map)[6443].second.push_front(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[6444].first = 1;
        (*_glb_hdl_sc_channel_map)[6444].second.push_front(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6973040);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[6457].first = 3;
        (*_glb_hdl_sc_channel_map)[6457].second.push_front(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[6460].first = 3;
        (*_glb_hdl_sc_channel_map)[6460].second.push_front(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[6458].first = 1;
        (*_glb_hdl_sc_channel_map)[6458].second.push_front(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[6461].first = 3;
        (*_glb_hdl_sc_channel_map)[6461].second.push_front(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[6462].first = 1;
        (*_glb_hdl_sc_channel_map)[6462].second.push_front(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6973376);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6973432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6973488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6973544);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6973600);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[6446].first = 1;
        (*_glb_hdl_sc_channel_map)[6446].second.push_front(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[6424].first = 3;
        (*_glb_hdl_sc_channel_map)[6424].second.push_front(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[6420].first = 3;
        (*_glb_hdl_sc_channel_map)[6420].second.push_front(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[6425].first = 3;
        (*_glb_hdl_sc_channel_map)[6425].second.push_front(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[6430].first = 3;
        (*_glb_hdl_sc_channel_map)[6430].second.push_front(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[6421].first = 3;
        (*_glb_hdl_sc_channel_map)[6421].second.push_front(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[6426].first = 1;
        (*_glb_hdl_sc_channel_map)[6426].second.push_front(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[6422].first = 3;
        (*_glb_hdl_sc_channel_map)[6422].second.push_front(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[6427].first = 3;
        (*_glb_hdl_sc_channel_map)[6427].second.push_front(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1250].first = 3;
        (*_glb_hdl_sc_channel_map)[1250].second.push_front(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[6428].first = 3;
        (*_glb_hdl_sc_channel_map)[6428].second.push_front(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[6431].first = 3;
        (*_glb_hdl_sc_channel_map)[6431].second.push_front(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[6432].first = 1;
        (*_glb_hdl_sc_channel_map)[6432].second.push_front(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6974384);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6974440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6974496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6974552);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6974608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6974664);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6974720);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[6453].first = 1;
        (*_glb_hdl_sc_channel_map)[6453].second.push_front(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[6419].first = 1;
        (*_glb_hdl_sc_channel_map)[6419].second.push_front(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[6423].first = 1;
        (*_glb_hdl_sc_channel_map)[6423].second.push_front(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1233].first = 3;
        (*_glb_hdl_sc_channel_map)[1233].second.push_front(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1236].first = 3;
        (*_glb_hdl_sc_channel_map)[1236].second.push_front(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1232].first = 3;
        (*_glb_hdl_sc_channel_map)[1232].second.push_front(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1227].first = 3;
        (*_glb_hdl_sc_channel_map)[1227].second.push_front(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1235].first = 3;
        (*_glb_hdl_sc_channel_map)[1235].second.push_front(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1231].first = 1;
        (*_glb_hdl_sc_channel_map)[1231].second.push_front(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1234].first = 3;
        (*_glb_hdl_sc_channel_map)[1234].second.push_front(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1230].first = 3;
        (*_glb_hdl_sc_channel_map)[1230].second.push_front(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1228].first = 3;
        (*_glb_hdl_sc_channel_map)[1228].second.push_front(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1229].first = 3;
        (*_glb_hdl_sc_channel_map)[1229].second.push_front(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1226].first = 3;
        (*_glb_hdl_sc_channel_map)[1226].second.push_front(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1225].first = 1;
        (*_glb_hdl_sc_channel_map)[1225].second.push_front(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6975616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1222].first = 3;
        (*_glb_hdl_sc_channel_map)[1222].second.push_front(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1220].first = 3;
        (*_glb_hdl_sc_channel_map)[1220].second.push_front(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1221].first = 1;
        (*_glb_hdl_sc_channel_map)[1221].second.push_front(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1219].first = 3;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6975952);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6976008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6976064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6976120);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6976176);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1224].first = 1;
        (*_glb_hdl_sc_channel_map)[1224].second.push_front(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1245].first = 3;
        (*_glb_hdl_sc_channel_map)[1245].second.push_front(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1248].first = 3;
        (*_glb_hdl_sc_channel_map)[1248].second.push_front(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1244].first = 3;
        (*_glb_hdl_sc_channel_map)[1244].second.push_front(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1239].first = 3;
        (*_glb_hdl_sc_channel_map)[1239].second.push_front(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1247].first = 3;
        (*_glb_hdl_sc_channel_map)[1247].second.push_front(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1243].first = 1;
        (*_glb_hdl_sc_channel_map)[1243].second.push_front(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1246].first = 3;
        (*_glb_hdl_sc_channel_map)[1246].second.push_front(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1242].first = 3;
        (*_glb_hdl_sc_channel_map)[1242].second.push_front(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1240].first = 3;
        (*_glb_hdl_sc_channel_map)[1240].second.push_front(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1241].first = 3;
        (*_glb_hdl_sc_channel_map)[1241].second.push_front(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1238].first = 3;
        (*_glb_hdl_sc_channel_map)[1238].second.push_front(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1237].first = 1;
        (*_glb_hdl_sc_channel_map)[1237].second.push_front(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6976960);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6977016);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6977072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6977128);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6977184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6977240);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6977296);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1223].first = 1;
        (*_glb_hdl_sc_channel_map)[1223].second.push_front(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[6464].first = 1;
        (*_glb_hdl_sc_channel_map)[6464].second.push_front(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[6465].first = 1;
        (*_glb_hdl_sc_channel_map)[6465].second.push_front(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_10->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_10_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ui_clk.bind(*p_10_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[6523].first = 1;
        (*_glb_hdl_sc_channel_map)[6523].second.push_front(p_10_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_awid.bind(*p_10_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[6496].first = 3;
        (*_glb_hdl_sc_channel_map)[6496].second.push_front(p_10_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_awaddr.bind(*p_10_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[6493].first = 3;
        (*_glb_hdl_sc_channel_map)[6493].second.push_front(p_10_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_awlen.bind(*p_10_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[6497].first = 3;
        (*_glb_hdl_sc_channel_map)[6497].second.push_front(p_10_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awsize.bind(*p_10_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[6502].first = 3;
        (*_glb_hdl_sc_channel_map)[6502].second.push_front(p_10_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_awburst.bind(*p_10_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[6494].first = 3;
        (*_glb_hdl_sc_channel_map)[6494].second.push_front(p_10_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awlock.bind(*p_10_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[6498].first = 1;
        (*_glb_hdl_sc_channel_map)[6498].second.push_front(p_10_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awcache.bind(*p_10_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[6495].first = 3;
        (*_glb_hdl_sc_channel_map)[6495].second.push_front(p_10_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_awprot.bind(*p_10_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[6499].first = 3;
        (*_glb_hdl_sc_channel_map)[6499].second.push_front(p_10_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awregion.bind(*p_10_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_10_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_awqos.bind(*p_10_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[6500].first = 3;
        (*_glb_hdl_sc_channel_map)[6500].second.push_front(p_10_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_awuser.bind(*p_10_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[6503].first = 3;
        (*_glb_hdl_sc_channel_map)[6503].second.push_front(p_10_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awvalid.bind(*p_10_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[6504].first = 1;
        (*_glb_hdl_sc_channel_map)[6504].second.push_front(p_10_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_awready.bind(*p_10_c0_ddr_saxi_awready);
        p_10_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(6978296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_wdata.bind(*p_10_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[6517].first = 3;
        (*_glb_hdl_sc_channel_map)[6517].second.push_front(p_10_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->c0_ddr_saxi_wstrb.bind(*p_10_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[6520].first = 3;
        (*_glb_hdl_sc_channel_map)[6520].second.push_front(p_10_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wlast.bind(*p_10_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[6518].first = 1;
        (*_glb_hdl_sc_channel_map)[6518].second.push_front(p_10_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_wuser.bind(*p_10_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[6521].first = 3;
        (*_glb_hdl_sc_channel_map)[6521].second.push_front(p_10_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wvalid.bind(*p_10_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[6522].first = 1;
        (*_glb_hdl_sc_channel_map)[6522].second.push_front(p_10_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_wready.bind(*p_10_c0_ddr_saxi_wready);
        p_10_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(6978632);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_bid.bind(*p_10_c0_ddr_saxi_bid);
        p_10_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(6978688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_bresp.bind(*p_10_c0_ddr_saxi_bresp);
        p_10_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(6978744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_buser.bind(*p_10_c0_ddr_saxi_buser);
        p_10_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(6978800);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bvalid.bind(*p_10_c0_ddr_saxi_bvalid);
        p_10_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(6978856);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_bready.bind(*p_10_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[6506].first = 1;
        (*_glb_hdl_sc_channel_map)[6506].second.push_front(p_10_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_arid.bind(*p_10_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[6484].first = 3;
        (*_glb_hdl_sc_channel_map)[6484].second.push_front(p_10_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_10_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_10->c0_ddr_saxi_araddr.bind(*p_10_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[6480].first = 3;
        (*_glb_hdl_sc_channel_map)[6480].second.push_front(p_10_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->c0_ddr_saxi_arlen.bind(*p_10_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[6485].first = 3;
        (*_glb_hdl_sc_channel_map)[6485].second.push_front(p_10_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arsize.bind(*p_10_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[6490].first = 3;
        (*_glb_hdl_sc_channel_map)[6490].second.push_front(p_10_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_arburst.bind(*p_10_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[6481].first = 3;
        (*_glb_hdl_sc_channel_map)[6481].second.push_front(p_10_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arlock.bind(*p_10_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[6486].first = 1;
        (*_glb_hdl_sc_channel_map)[6486].second.push_front(p_10_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arcache.bind(*p_10_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[6482].first = 3;
        (*_glb_hdl_sc_channel_map)[6482].second.push_front(p_10_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->c0_ddr_saxi_arprot.bind(*p_10_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[6487].first = 3;
        (*_glb_hdl_sc_channel_map)[6487].second.push_front(p_10_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arregion.bind(*p_10_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_10_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->c0_ddr_saxi_arqos.bind(*p_10_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[6488].first = 3;
        (*_glb_hdl_sc_channel_map)[6488].second.push_front(p_10_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->c0_ddr_saxi_aruser.bind(*p_10_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[6491].first = 3;
        (*_glb_hdl_sc_channel_map)[6491].second.push_front(p_10_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arvalid.bind(*p_10_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[6492].first = 1;
        (*_glb_hdl_sc_channel_map)[6492].second.push_front(p_10_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_arready.bind(*p_10_c0_ddr_saxi_arready);
        p_10_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(6979640);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->c0_ddr_saxi_rid.bind(*p_10_c0_ddr_saxi_rid);
        p_10_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(6979696);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_10_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_10->c0_ddr_saxi_rdata.bind(*p_10_c0_ddr_saxi_rdata);
        p_10_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(6979752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->c0_ddr_saxi_rresp.bind(*p_10_c0_ddr_saxi_rresp);
        p_10_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(6979808);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rlast.bind(*p_10_c0_ddr_saxi_rlast);
        p_10_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(6979864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->c0_ddr_saxi_ruser.bind(*p_10_c0_ddr_saxi_ruser);
        p_10_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(6979920);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rvalid.bind(*p_10_c0_ddr_saxi_rvalid);
        p_10_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(6979976);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_rready.bind(*p_10_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[6513].first = 1;
        (*_glb_hdl_sc_channel_map)[6513].second.push_front(p_10_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aclk.bind(*p_10_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[6479].first = 1;
        (*_glb_hdl_sc_channel_map)[6479].second.push_front(p_10_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_10_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->c0_ddr_saxi_aresetn.bind(*p_10_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[6483].first = 1;
        (*_glb_hdl_sc_channel_map)[6483].second.push_front(p_10_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_awid.bind(*p_10_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_10_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awaddr.bind(*p_10_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_10_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_awlen.bind(*p_10_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_10_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awsize.bind(*p_10_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_10_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_awburst.bind(*p_10_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_10_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awlock.bind(*p_10_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1198].first = 1;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_10_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awcache.bind(*p_10_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_10_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_awprot.bind(*p_10_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1197].first = 3;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_10_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awregion.bind(*p_10_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_10_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_awqos.bind(*p_10_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_10_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_awuser.bind(*p_10_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_10_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awvalid.bind(*p_10_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1192].first = 1;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_10_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_awready.bind(*p_10_s_xdma_axi_awready);
        p_10_s_xdma_axi_awready->set_sv_netview_offsetfromdp(6980872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_wdata.bind(*p_10_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_10_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_wstrb.bind(*p_10_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_10_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wlast.bind(*p_10_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1188].first = 1;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_10_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_wuser.bind(*p_10_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_10_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wvalid.bind(*p_10_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_10_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_wready.bind(*p_10_s_xdma_axi_wready);
        p_10_s_xdma_axi_wready->set_sv_netview_offsetfromdp(6981208);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_bid.bind(*p_10_s_xdma_axi_bid);
        p_10_s_xdma_axi_bid->set_sv_netview_offsetfromdp(6981264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_bresp.bind(*p_10_s_xdma_axi_bresp);
        p_10_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(6981320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_buser.bind(*p_10_s_xdma_axi_buser);
        p_10_s_xdma_axi_buser->set_sv_netview_offsetfromdp(6981376);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bvalid.bind(*p_10_s_xdma_axi_bvalid);
        p_10_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(6981432);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_bready.bind(*p_10_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_10_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_arid.bind(*p_10_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1212].first = 3;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_10_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_araddr.bind(*p_10_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_10_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_xdma_axi_arlen.bind(*p_10_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1211].first = 3;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_10_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arsize.bind(*p_10_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_10_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_arburst.bind(*p_10_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_10_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arlock.bind(*p_10_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_10_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arcache.bind(*p_10_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_10_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_xdma_axi_arprot.bind(*p_10_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_10_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arregion.bind(*p_10_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_10_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_xdma_axi_arqos.bind(*p_10_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1208].first = 3;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_10_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_aruser.bind(*p_10_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1205].first = 3;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_10_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arvalid.bind(*p_10_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1204].first = 1;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_10_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_arready.bind(*p_10_s_xdma_axi_arready);
        p_10_s_xdma_axi_arready->set_sv_netview_offsetfromdp(6982216);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_10_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_10->s_xdma_axi_rid.bind(*p_10_s_xdma_axi_rid);
        p_10_s_xdma_axi_rid->set_sv_netview_offsetfromdp(6982272);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_xdma_axi_rdata.bind(*p_10_s_xdma_axi_rdata);
        p_10_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(6982328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_xdma_axi_rresp.bind(*p_10_s_xdma_axi_rresp);
        p_10_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(6982384);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rlast.bind(*p_10_s_xdma_axi_rlast);
        p_10_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(6982440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s_xdma_axi_ruser.bind(*p_10_s_xdma_axi_ruser);
        p_10_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(6982496);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rvalid.bind(*p_10_s_xdma_axi_rvalid);
        p_10_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(6982552);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_rready.bind(*p_10_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1190].first = 1;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_10_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aclk.bind(*p_10_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[6524].first = 1;
        (*_glb_hdl_sc_channel_map)[6524].second.push_front(p_10_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_xdma_axi_aresetn.bind(*p_10_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[6525].first = 1;
        (*_glb_hdl_sc_channel_map)[6525].second.push_front(p_10_s_xdma_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_11->xsim_set_dbg_index(692);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[6735].first = 3;
        (*_glb_hdl_sc_channel_map)[6735].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[6673].first = 3;
        (*_glb_hdl_sc_channel_map)[6673].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[6736].first = 3;
        (*_glb_hdl_sc_channel_map)[6736].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[6741].first = 3;
        (*_glb_hdl_sc_channel_map)[6741].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[6733].first = 3;
        (*_glb_hdl_sc_channel_map)[6733].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[6737].first = 1;
        (*_glb_hdl_sc_channel_map)[6737].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[6734].first = 3;
        (*_glb_hdl_sc_channel_map)[6734].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[6738].first = 3;
        (*_glb_hdl_sc_channel_map)[6738].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[6672].first = 3;
        (*_glb_hdl_sc_channel_map)[6672].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[6739].first = 3;
        (*_glb_hdl_sc_channel_map)[6739].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[6742].first = 3;
        (*_glb_hdl_sc_channel_map)[6742].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[6743].first = 1;
        (*_glb_hdl_sc_channel_map)[6743].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(7043248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[6756].first = 3;
        (*_glb_hdl_sc_channel_map)[6756].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[6759].first = 3;
        (*_glb_hdl_sc_channel_map)[6759].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[6757].first = 1;
        (*_glb_hdl_sc_channel_map)[6757].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[6760].first = 3;
        (*_glb_hdl_sc_channel_map)[6760].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[6761].first = 1;
        (*_glb_hdl_sc_channel_map)[6761].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(7043584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(7043640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(7043696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(7043752);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(7043808);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[6745].first = 1;
        (*_glb_hdl_sc_channel_map)[6745].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[6724].first = 3;
        (*_glb_hdl_sc_channel_map)[6724].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[6675].first = 3;
        (*_glb_hdl_sc_channel_map)[6675].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[6725].first = 3;
        (*_glb_hdl_sc_channel_map)[6725].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[6730].first = 3;
        (*_glb_hdl_sc_channel_map)[6730].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[6721].first = 3;
        (*_glb_hdl_sc_channel_map)[6721].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[6726].first = 1;
        (*_glb_hdl_sc_channel_map)[6726].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[6722].first = 3;
        (*_glb_hdl_sc_channel_map)[6722].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[6727].first = 3;
        (*_glb_hdl_sc_channel_map)[6727].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[6674].first = 3;
        (*_glb_hdl_sc_channel_map)[6674].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[6728].first = 3;
        (*_glb_hdl_sc_channel_map)[6728].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[6731].first = 3;
        (*_glb_hdl_sc_channel_map)[6731].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[6732].first = 1;
        (*_glb_hdl_sc_channel_map)[6732].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(7044592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(7044648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(7044704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(7044760);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(7044816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(7044872);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(7044928);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[6752].first = 1;
        (*_glb_hdl_sc_channel_map)[6752].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[6720].first = 1;
        (*_glb_hdl_sc_channel_map)[6720].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[6723].first = 1;
        (*_glb_hdl_sc_channel_map)[6723].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(7045152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(7045208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(7045264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(7045320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(7045376);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(7045432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(7045488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(7045544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(7045600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(7045656);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(7045712);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[6698].first = 1;
        (*_glb_hdl_sc_channel_map)[6698].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(7045824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(7045880);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(7045936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(7045992);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(7046048);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[6716].first = 1;
        (*_glb_hdl_sc_channel_map)[6716].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[6702].first = 3;
        (*_glb_hdl_sc_channel_map)[6702].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[6704].first = 3;
        (*_glb_hdl_sc_channel_map)[6704].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[6705].first = 3;
        (*_glb_hdl_sc_channel_map)[6705].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[6706].first = 1;
        (*_glb_hdl_sc_channel_map)[6706].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(7046384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(7046440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(7046496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(7046552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(7046608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(7046664);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(7046720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(7046776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(7046832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(7046888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(7046944);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(7047000);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[6686].first = 1;
        (*_glb_hdl_sc_channel_map)[6686].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[6708].first = 3;
        (*_glb_hdl_sc_channel_map)[6708].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[6707].first = 3;
        (*_glb_hdl_sc_channel_map)[6707].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[6711].first = 3;
        (*_glb_hdl_sc_channel_map)[6711].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[6709].first = 1;
        (*_glb_hdl_sc_channel_map)[6709].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[6712].first = 3;
        (*_glb_hdl_sc_channel_map)[6712].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[6713].first = 1;
        (*_glb_hdl_sc_channel_map)[6713].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(7047448);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[6676].first = 1;
        (*_glb_hdl_sc_channel_map)[6676].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[6680].first = 1;
        (*_glb_hdl_sc_channel_map)[6680].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_12->xsim_set_dbg_index(806);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[9311].first = 3;
        (*_glb_hdl_sc_channel_map)[9311].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9249].first = 3;
        (*_glb_hdl_sc_channel_map)[9249].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[9312].first = 3;
        (*_glb_hdl_sc_channel_map)[9312].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[9317].first = 3;
        (*_glb_hdl_sc_channel_map)[9317].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[9309].first = 3;
        (*_glb_hdl_sc_channel_map)[9309].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[9313].first = 1;
        (*_glb_hdl_sc_channel_map)[9313].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[9310].first = 3;
        (*_glb_hdl_sc_channel_map)[9310].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[9314].first = 3;
        (*_glb_hdl_sc_channel_map)[9314].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[9248].first = 3;
        (*_glb_hdl_sc_channel_map)[9248].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[9315].first = 3;
        (*_glb_hdl_sc_channel_map)[9315].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[9318].first = 3;
        (*_glb_hdl_sc_channel_map)[9318].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9319].first = 1;
        (*_glb_hdl_sc_channel_map)[9319].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(7671264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9332].first = 3;
        (*_glb_hdl_sc_channel_map)[9332].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9335].first = 3;
        (*_glb_hdl_sc_channel_map)[9335].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[9333].first = 1;
        (*_glb_hdl_sc_channel_map)[9333].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[9336].first = 3;
        (*_glb_hdl_sc_channel_map)[9336].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9337].first = 1;
        (*_glb_hdl_sc_channel_map)[9337].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(7671600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(7671656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(7671712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(7671768);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(7671824);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[9321].first = 1;
        (*_glb_hdl_sc_channel_map)[9321].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[9300].first = 3;
        (*_glb_hdl_sc_channel_map)[9300].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9251].first = 3;
        (*_glb_hdl_sc_channel_map)[9251].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[9301].first = 3;
        (*_glb_hdl_sc_channel_map)[9301].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[9306].first = 3;
        (*_glb_hdl_sc_channel_map)[9306].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[9297].first = 3;
        (*_glb_hdl_sc_channel_map)[9297].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[9302].first = 1;
        (*_glb_hdl_sc_channel_map)[9302].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[9298].first = 3;
        (*_glb_hdl_sc_channel_map)[9298].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[9303].first = 3;
        (*_glb_hdl_sc_channel_map)[9303].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[9250].first = 3;
        (*_glb_hdl_sc_channel_map)[9250].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[9304].first = 3;
        (*_glb_hdl_sc_channel_map)[9304].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[9307].first = 3;
        (*_glb_hdl_sc_channel_map)[9307].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9308].first = 1;
        (*_glb_hdl_sc_channel_map)[9308].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(7672608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(7672664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(7672720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(7672776);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(7672832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(7672888);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(7672944);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[9328].first = 1;
        (*_glb_hdl_sc_channel_map)[9328].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[9296].first = 1;
        (*_glb_hdl_sc_channel_map)[9296].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[9299].first = 1;
        (*_glb_hdl_sc_channel_map)[9299].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(7673168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(7673224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(7673280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(7673336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(7673392);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(7673448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(7673504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(7673560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(7673616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(7673672);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(7673728);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[9274].first = 1;
        (*_glb_hdl_sc_channel_map)[9274].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(7673840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(7673896);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(7673952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(7674008);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(7674064);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[9292].first = 1;
        (*_glb_hdl_sc_channel_map)[9292].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[9278].first = 3;
        (*_glb_hdl_sc_channel_map)[9278].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[9280].first = 3;
        (*_glb_hdl_sc_channel_map)[9280].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[9281].first = 3;
        (*_glb_hdl_sc_channel_map)[9281].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[9282].first = 1;
        (*_glb_hdl_sc_channel_map)[9282].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(7674400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(7674456);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(7674512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(7674568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(7674624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(7674680);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(7674736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(7674792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(7674848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(7674904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(7674960);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(7675016);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[9262].first = 1;
        (*_glb_hdl_sc_channel_map)[9262].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[9284].first = 3;
        (*_glb_hdl_sc_channel_map)[9284].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[9283].first = 3;
        (*_glb_hdl_sc_channel_map)[9283].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[9287].first = 3;
        (*_glb_hdl_sc_channel_map)[9287].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[9285].first = 1;
        (*_glb_hdl_sc_channel_map)[9285].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[9288].first = 3;
        (*_glb_hdl_sc_channel_map)[9288].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[9289].first = 1;
        (*_glb_hdl_sc_channel_map)[9289].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(7675464);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[9252].first = 1;
        (*_glb_hdl_sc_channel_map)[9252].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[9256].first = 1;
        (*_glb_hdl_sc_channel_map)[9256].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_13->xsim_set_dbg_index(807);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[9397].first = 3;
        (*_glb_hdl_sc_channel_map)[9397].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[9245].first = 3;
        (*_glb_hdl_sc_channel_map)[9245].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[9398].first = 3;
        (*_glb_hdl_sc_channel_map)[9398].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[9403].first = 3;
        (*_glb_hdl_sc_channel_map)[9403].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[9395].first = 3;
        (*_glb_hdl_sc_channel_map)[9395].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[9399].first = 1;
        (*_glb_hdl_sc_channel_map)[9399].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[9396].first = 3;
        (*_glb_hdl_sc_channel_map)[9396].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[9400].first = 3;
        (*_glb_hdl_sc_channel_map)[9400].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[9244].first = 3;
        (*_glb_hdl_sc_channel_map)[9244].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[9401].first = 3;
        (*_glb_hdl_sc_channel_map)[9401].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[9404].first = 3;
        (*_glb_hdl_sc_channel_map)[9404].second.push_front(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[9405].first = 1;
        (*_glb_hdl_sc_channel_map)[9405].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(7676352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[9418].first = 3;
        (*_glb_hdl_sc_channel_map)[9418].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[9421].first = 3;
        (*_glb_hdl_sc_channel_map)[9421].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[9419].first = 1;
        (*_glb_hdl_sc_channel_map)[9419].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[9422].first = 3;
        (*_glb_hdl_sc_channel_map)[9422].second.push_front(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[9423].first = 1;
        (*_glb_hdl_sc_channel_map)[9423].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(7676688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(7676744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(7676800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(7676856);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(7676912);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[9407].first = 1;
        (*_glb_hdl_sc_channel_map)[9407].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[9386].first = 3;
        (*_glb_hdl_sc_channel_map)[9386].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[9247].first = 3;
        (*_glb_hdl_sc_channel_map)[9247].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[9387].first = 3;
        (*_glb_hdl_sc_channel_map)[9387].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[9392].first = 3;
        (*_glb_hdl_sc_channel_map)[9392].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[9383].first = 3;
        (*_glb_hdl_sc_channel_map)[9383].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[9388].first = 1;
        (*_glb_hdl_sc_channel_map)[9388].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[9384].first = 3;
        (*_glb_hdl_sc_channel_map)[9384].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[9389].first = 3;
        (*_glb_hdl_sc_channel_map)[9389].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[9246].first = 3;
        (*_glb_hdl_sc_channel_map)[9246].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[9390].first = 3;
        (*_glb_hdl_sc_channel_map)[9390].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[9393].first = 3;
        (*_glb_hdl_sc_channel_map)[9393].second.push_front(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[9394].first = 1;
        (*_glb_hdl_sc_channel_map)[9394].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(7677696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(7677752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(7677808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(7677864);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(7677920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(7677976);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(7678032);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[9414].first = 1;
        (*_glb_hdl_sc_channel_map)[9414].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[9382].first = 1;
        (*_glb_hdl_sc_channel_map)[9382].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[9385].first = 1;
        (*_glb_hdl_sc_channel_map)[9385].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(7678256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(7678312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(7678368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(7678424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(7678480);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(7678536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(7678592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(7678648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(7678704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(7678760);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(7678816);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[9360].first = 1;
        (*_glb_hdl_sc_channel_map)[9360].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(7678928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(7678984);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(7679040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(7679096);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(7679152);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[9378].first = 1;
        (*_glb_hdl_sc_channel_map)[9378].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[9364].first = 3;
        (*_glb_hdl_sc_channel_map)[9364].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[9366].first = 3;
        (*_glb_hdl_sc_channel_map)[9366].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[9367].first = 3;
        (*_glb_hdl_sc_channel_map)[9367].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[9368].first = 1;
        (*_glb_hdl_sc_channel_map)[9368].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(7679488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(7679544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(7679600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(7679656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(7679712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(7679768);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(7679824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(7679880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(7679936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(7679992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(7680048);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(7680104);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[9348].first = 1;
        (*_glb_hdl_sc_channel_map)[9348].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[9370].first = 3;
        (*_glb_hdl_sc_channel_map)[9370].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[9369].first = 3;
        (*_glb_hdl_sc_channel_map)[9369].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[9373].first = 3;
        (*_glb_hdl_sc_channel_map)[9373].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[9371].first = 1;
        (*_glb_hdl_sc_channel_map)[9371].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[9374].first = 3;
        (*_glb_hdl_sc_channel_map)[9374].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[9375].first = 1;
        (*_glb_hdl_sc_channel_map)[9375].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(7680552);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[9338].first = 1;
        (*_glb_hdl_sc_channel_map)[9338].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[9342].first = 1;
        (*_glb_hdl_sc_channel_map)[9342].second.push_front(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_14->xsim_set_dbg_index(1005);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[11880].first = 3;
        (*_glb_hdl_sc_channel_map)[11880].second.push_front(p_14_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[11818].first = 3;
        (*_glb_hdl_sc_channel_map)[11818].second.push_front(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[11881].first = 3;
        (*_glb_hdl_sc_channel_map)[11881].second.push_front(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[11886].first = 3;
        (*_glb_hdl_sc_channel_map)[11886].second.push_front(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[11878].first = 3;
        (*_glb_hdl_sc_channel_map)[11878].second.push_front(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[11882].first = 1;
        (*_glb_hdl_sc_channel_map)[11882].second.push_front(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[11879].first = 3;
        (*_glb_hdl_sc_channel_map)[11879].second.push_front(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[11883].first = 3;
        (*_glb_hdl_sc_channel_map)[11883].second.push_front(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[11817].first = 3;
        (*_glb_hdl_sc_channel_map)[11817].second.push_front(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[11884].first = 3;
        (*_glb_hdl_sc_channel_map)[11884].second.push_front(p_14_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awuser.bind(*p_14_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[11887].first = 3;
        (*_glb_hdl_sc_channel_map)[11887].second.push_front(p_14_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[11888].first = 1;
        (*_glb_hdl_sc_channel_map)[11888].second.push_front(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(8265112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[11901].first = 3;
        (*_glb_hdl_sc_channel_map)[11901].second.push_front(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[11904].first = 3;
        (*_glb_hdl_sc_channel_map)[11904].second.push_front(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[11902].first = 1;
        (*_glb_hdl_sc_channel_map)[11902].second.push_front(p_14_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_wuser.bind(*p_14_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[11905].first = 3;
        (*_glb_hdl_sc_channel_map)[11905].second.push_front(p_14_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[11906].first = 1;
        (*_glb_hdl_sc_channel_map)[11906].second.push_front(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(8265448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(8265504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(8265560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_buser.bind(*p_14_s00_axi_buser);
        p_14_s00_axi_buser->set_sv_netview_offsetfromdp(8265616);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(8265672);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[11890].first = 1;
        (*_glb_hdl_sc_channel_map)[11890].second.push_front(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[11869].first = 3;
        (*_glb_hdl_sc_channel_map)[11869].second.push_front(p_14_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_14_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[11820].first = 3;
        (*_glb_hdl_sc_channel_map)[11820].second.push_front(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[11870].first = 3;
        (*_glb_hdl_sc_channel_map)[11870].second.push_front(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[11875].first = 3;
        (*_glb_hdl_sc_channel_map)[11875].second.push_front(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[11866].first = 3;
        (*_glb_hdl_sc_channel_map)[11866].second.push_front(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[11871].first = 1;
        (*_glb_hdl_sc_channel_map)[11871].second.push_front(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[11867].first = 3;
        (*_glb_hdl_sc_channel_map)[11867].second.push_front(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[11872].first = 3;
        (*_glb_hdl_sc_channel_map)[11872].second.push_front(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[11819].first = 3;
        (*_glb_hdl_sc_channel_map)[11819].second.push_front(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[11873].first = 3;
        (*_glb_hdl_sc_channel_map)[11873].second.push_front(p_14_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_aruser.bind(*p_14_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[11876].first = 3;
        (*_glb_hdl_sc_channel_map)[11876].second.push_front(p_14_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[11877].first = 1;
        (*_glb_hdl_sc_channel_map)[11877].second.push_front(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(8266456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(8266512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(8266568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(8266624);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(8266680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_ruser.bind(*p_14_s00_axi_ruser);
        p_14_s00_axi_ruser->set_sv_netview_offsetfromdp(8266736);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(8266792);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[11897].first = 1;
        (*_glb_hdl_sc_channel_map)[11897].second.push_front(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11865].first = 1;
        (*_glb_hdl_sc_channel_map)[11865].second.push_front(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11868].first = 1;
        (*_glb_hdl_sc_channel_map)[11868].second.push_front(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(8267016);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(8267072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(8267128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(8267184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(8267240);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(8267296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(8267352);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(8267408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(8267464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(8267520);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(8267576);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[11843].first = 1;
        (*_glb_hdl_sc_channel_map)[11843].second.push_front(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(8267688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(8267744);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(8267800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(8267856);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(8267912);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[11861].first = 1;
        (*_glb_hdl_sc_channel_map)[11861].second.push_front(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[11847].first = 3;
        (*_glb_hdl_sc_channel_map)[11847].second.push_front(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[11849].first = 3;
        (*_glb_hdl_sc_channel_map)[11849].second.push_front(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[11850].first = 3;
        (*_glb_hdl_sc_channel_map)[11850].second.push_front(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[11851].first = 1;
        (*_glb_hdl_sc_channel_map)[11851].second.push_front(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(8268248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(8268304);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(8268360);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(8268416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(8268472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(8268528);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(8268584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(8268640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(8268696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(8268752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(8268808);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(8268864);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[11831].first = 1;
        (*_glb_hdl_sc_channel_map)[11831].second.push_front(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[11853].first = 3;
        (*_glb_hdl_sc_channel_map)[11853].second.push_front(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[11852].first = 3;
        (*_glb_hdl_sc_channel_map)[11852].second.push_front(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[11856].first = 3;
        (*_glb_hdl_sc_channel_map)[11856].second.push_front(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[11854].first = 1;
        (*_glb_hdl_sc_channel_map)[11854].second.push_front(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[11857].first = 3;
        (*_glb_hdl_sc_channel_map)[11857].second.push_front(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[11858].first = 1;
        (*_glb_hdl_sc_channel_map)[11858].second.push_front(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(8269312);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[11821].first = 1;
        (*_glb_hdl_sc_channel_map)[11821].second.push_front(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[11825].first = 1;
        (*_glb_hdl_sc_channel_map)[11825].second.push_front(p_14_m00_axi_aresetn);
        sc_inst_15 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_15->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_awid.bind(*p_15_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[16220].first = 3;
        (*_glb_hdl_sc_channel_map)[16220].second.push_front(p_15_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_awaddr.bind(*p_15_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16217].first = 3;
        (*_glb_hdl_sc_channel_map)[16217].second.push_front(p_15_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_awlen.bind(*p_15_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16221].first = 3;
        (*_glb_hdl_sc_channel_map)[16221].second.push_front(p_15_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awsize.bind(*p_15_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16227].first = 3;
        (*_glb_hdl_sc_channel_map)[16227].second.push_front(p_15_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_awburst.bind(*p_15_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16218].first = 3;
        (*_glb_hdl_sc_channel_map)[16218].second.push_front(p_15_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awlock.bind(*p_15_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16222].first = 1;
        (*_glb_hdl_sc_channel_map)[16222].second.push_front(p_15_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awcache.bind(*p_15_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16219].first = 3;
        (*_glb_hdl_sc_channel_map)[16219].second.push_front(p_15_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_awprot.bind(*p_15_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16223].first = 3;
        (*_glb_hdl_sc_channel_map)[16223].second.push_front(p_15_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awregion.bind(*p_15_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16226].first = 3;
        (*_glb_hdl_sc_channel_map)[16226].second.push_front(p_15_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_awqos.bind(*p_15_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16224].first = 3;
        (*_glb_hdl_sc_channel_map)[16224].second.push_front(p_15_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awvalid.bind(*p_15_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16228].first = 1;
        (*_glb_hdl_sc_channel_map)[16228].second.push_front(p_15_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_awready.bind(*p_15_s00_axi_awready);
        p_15_s00_axi_awready->set_sv_netview_offsetfromdp(9566240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_wdata.bind(*p_15_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16239].first = 3;
        (*_glb_hdl_sc_channel_map)[16239].second.push_front(p_15_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_wstrb.bind(*p_15_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16242].first = 3;
        (*_glb_hdl_sc_channel_map)[16242].second.push_front(p_15_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wlast.bind(*p_15_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16240].first = 1;
        (*_glb_hdl_sc_channel_map)[16240].second.push_front(p_15_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wvalid.bind(*p_15_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16243].first = 1;
        (*_glb_hdl_sc_channel_map)[16243].second.push_front(p_15_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_wready.bind(*p_15_s00_axi_wready);
        p_15_s00_axi_wready->set_sv_netview_offsetfromdp(9566520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_bid.bind(*p_15_s00_axi_bid);
        p_15_s00_axi_bid->set_sv_netview_offsetfromdp(9566576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_bresp.bind(*p_15_s00_axi_bresp);
        p_15_s00_axi_bresp->set_sv_netview_offsetfromdp(9566632);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bvalid.bind(*p_15_s00_axi_bvalid);
        p_15_s00_axi_bvalid->set_sv_netview_offsetfromdp(9566688);
        xsim_sc_channel<0, bool > *p_15_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_bready.bind(*p_15_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[16230].first = 1;
        (*_glb_hdl_sc_channel_map)[16230].second.push_front(p_15_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_arid.bind(*p_15_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[16208].first = 3;
        (*_glb_hdl_sc_channel_map)[16208].second.push_front(p_15_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s00_axi_araddr.bind(*p_15_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16204].first = 3;
        (*_glb_hdl_sc_channel_map)[16204].second.push_front(p_15_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s00_axi_arlen.bind(*p_15_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16209].first = 3;
        (*_glb_hdl_sc_channel_map)[16209].second.push_front(p_15_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arsize.bind(*p_15_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16215].first = 3;
        (*_glb_hdl_sc_channel_map)[16215].second.push_front(p_15_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_arburst.bind(*p_15_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16205].first = 3;
        (*_glb_hdl_sc_channel_map)[16205].second.push_front(p_15_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arlock.bind(*p_15_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16210].first = 1;
        (*_glb_hdl_sc_channel_map)[16210].second.push_front(p_15_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arcache.bind(*p_15_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16206].first = 3;
        (*_glb_hdl_sc_channel_map)[16206].second.push_front(p_15_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s00_axi_arprot.bind(*p_15_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16211].first = 3;
        (*_glb_hdl_sc_channel_map)[16211].second.push_front(p_15_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arregion.bind(*p_15_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16214].first = 3;
        (*_glb_hdl_sc_channel_map)[16214].second.push_front(p_15_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s00_axi_arqos.bind(*p_15_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16212].first = 3;
        (*_glb_hdl_sc_channel_map)[16212].second.push_front(p_15_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arvalid.bind(*p_15_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16216].first = 1;
        (*_glb_hdl_sc_channel_map)[16216].second.push_front(p_15_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_arready.bind(*p_15_s00_axi_arready);
        p_15_s00_axi_arready->set_sv_netview_offsetfromdp(9567416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s00_axi_rid.bind(*p_15_s00_axi_rid);
        p_15_s00_axi_rid->set_sv_netview_offsetfromdp(9567472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s00_axi_rdata.bind(*p_15_s00_axi_rdata);
        p_15_s00_axi_rdata->set_sv_netview_offsetfromdp(9567528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s00_axi_rresp.bind(*p_15_s00_axi_rresp);
        p_15_s00_axi_rresp->set_sv_netview_offsetfromdp(9567584);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rlast.bind(*p_15_s00_axi_rlast);
        p_15_s00_axi_rlast->set_sv_netview_offsetfromdp(9567640);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rvalid.bind(*p_15_s00_axi_rvalid);
        p_15_s00_axi_rvalid->set_sv_netview_offsetfromdp(9567696);
        xsim_sc_channel<0, bool > *p_15_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_rready.bind(*p_15_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[16236].first = 1;
        (*_glb_hdl_sc_channel_map)[16236].second.push_front(p_15_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aclk.bind(*p_15_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16203].first = 1;
        (*_glb_hdl_sc_channel_map)[16203].second.push_front(p_15_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s00_axi_aresetn.bind(*p_15_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16207].first = 1;
        (*_glb_hdl_sc_channel_map)[16207].second.push_front(p_15_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awid.bind(*p_15_m00_axi_awid);
        p_15_m00_axi_awid->set_sv_netview_offsetfromdp(9567920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_awaddr.bind(*p_15_m00_axi_awaddr);
        p_15_m00_axi_awaddr->set_sv_netview_offsetfromdp(9567976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_awlen.bind(*p_15_m00_axi_awlen);
        p_15_m00_axi_awlen->set_sv_netview_offsetfromdp(9568032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awsize.bind(*p_15_m00_axi_awsize);
        p_15_m00_axi_awsize->set_sv_netview_offsetfromdp(9568088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_awburst.bind(*p_15_m00_axi_awburst);
        p_15_m00_axi_awburst->set_sv_netview_offsetfromdp(9568144);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awlock.bind(*p_15_m00_axi_awlock);
        p_15_m00_axi_awlock->set_sv_netview_offsetfromdp(9568200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awcache.bind(*p_15_m00_axi_awcache);
        p_15_m00_axi_awcache->set_sv_netview_offsetfromdp(9568256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_awprot.bind(*p_15_m00_axi_awprot);
        p_15_m00_axi_awprot->set_sv_netview_offsetfromdp(9568312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_awqos.bind(*p_15_m00_axi_awqos);
        p_15_m00_axi_awqos->set_sv_netview_offsetfromdp(9568368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_awuser.bind(*p_15_m00_axi_awuser);
        p_15_m00_axi_awuser->set_sv_netview_offsetfromdp(9568424);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awvalid.bind(*p_15_m00_axi_awvalid);
        p_15_m00_axi_awvalid->set_sv_netview_offsetfromdp(9568480);
        xsim_sc_channel<0, bool > *p_15_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_awready.bind(*p_15_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[16018].first = 1;
        (*_glb_hdl_sc_channel_map)[16018].second.push_front(p_15_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_wdata.bind(*p_15_m00_axi_wdata);
        p_15_m00_axi_wdata->set_sv_netview_offsetfromdp(9568592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_wstrb.bind(*p_15_m00_axi_wstrb);
        p_15_m00_axi_wstrb->set_sv_netview_offsetfromdp(9568648);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wlast.bind(*p_15_m00_axi_wlast);
        p_15_m00_axi_wlast->set_sv_netview_offsetfromdp(9568704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_wuser.bind(*p_15_m00_axi_wuser);
        p_15_m00_axi_wuser->set_sv_netview_offsetfromdp(9568760);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wvalid.bind(*p_15_m00_axi_wvalid);
        p_15_m00_axi_wvalid->set_sv_netview_offsetfromdp(9568816);
        xsim_sc_channel<0, bool > *p_15_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_wready.bind(*p_15_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[16036].first = 1;
        (*_glb_hdl_sc_channel_map)[16036].second.push_front(p_15_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_bid.bind(*p_15_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[16022].first = 3;
        (*_glb_hdl_sc_channel_map)[16022].second.push_front(p_15_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_bresp.bind(*p_15_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16024].first = 3;
        (*_glb_hdl_sc_channel_map)[16024].second.push_front(p_15_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_buser.bind(*p_15_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[16025].first = 3;
        (*_glb_hdl_sc_channel_map)[16025].second.push_front(p_15_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bvalid.bind(*p_15_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16026].first = 1;
        (*_glb_hdl_sc_channel_map)[16026].second.push_front(p_15_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_bready.bind(*p_15_m00_axi_bready);
        p_15_m00_axi_bready->set_sv_netview_offsetfromdp(9569152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_arid.bind(*p_15_m00_axi_arid);
        p_15_m00_axi_arid->set_sv_netview_offsetfromdp(9569208);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m00_axi_araddr.bind(*p_15_m00_axi_araddr);
        p_15_m00_axi_araddr->set_sv_netview_offsetfromdp(9569264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m00_axi_arlen.bind(*p_15_m00_axi_arlen);
        p_15_m00_axi_arlen->set_sv_netview_offsetfromdp(9569320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arsize.bind(*p_15_m00_axi_arsize);
        p_15_m00_axi_arsize->set_sv_netview_offsetfromdp(9569376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_arburst.bind(*p_15_m00_axi_arburst);
        p_15_m00_axi_arburst->set_sv_netview_offsetfromdp(9569432);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arlock.bind(*p_15_m00_axi_arlock);
        p_15_m00_axi_arlock->set_sv_netview_offsetfromdp(9569488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arcache.bind(*p_15_m00_axi_arcache);
        p_15_m00_axi_arcache->set_sv_netview_offsetfromdp(9569544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m00_axi_arprot.bind(*p_15_m00_axi_arprot);
        p_15_m00_axi_arprot->set_sv_netview_offsetfromdp(9569600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m00_axi_arqos.bind(*p_15_m00_axi_arqos);
        p_15_m00_axi_arqos->set_sv_netview_offsetfromdp(9569656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_aruser.bind(*p_15_m00_axi_aruser);
        p_15_m00_axi_aruser->set_sv_netview_offsetfromdp(9569712);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arvalid.bind(*p_15_m00_axi_arvalid);
        p_15_m00_axi_arvalid->set_sv_netview_offsetfromdp(9569768);
        xsim_sc_channel<0, bool > *p_15_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_arready.bind(*p_15_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[16006].first = 1;
        (*_glb_hdl_sc_channel_map)[16006].second.push_front(p_15_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_rid.bind(*p_15_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[16028].first = 3;
        (*_glb_hdl_sc_channel_map)[16028].second.push_front(p_15_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m00_axi_rdata.bind(*p_15_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16027].first = 3;
        (*_glb_hdl_sc_channel_map)[16027].second.push_front(p_15_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m00_axi_rresp.bind(*p_15_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16031].first = 3;
        (*_glb_hdl_sc_channel_map)[16031].second.push_front(p_15_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rlast.bind(*p_15_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16029].first = 1;
        (*_glb_hdl_sc_channel_map)[16029].second.push_front(p_15_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m00_axi_ruser.bind(*p_15_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16032].first = 3;
        (*_glb_hdl_sc_channel_map)[16032].second.push_front(p_15_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rvalid.bind(*p_15_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16033].first = 1;
        (*_glb_hdl_sc_channel_map)[16033].second.push_front(p_15_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_rready.bind(*p_15_m00_axi_rready);
        p_15_m00_axi_rready->set_sv_netview_offsetfromdp(9570216);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aclk.bind(*p_15_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[15996].first = 1;
        (*_glb_hdl_sc_channel_map)[15996].second.push_front(p_15_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m00_axi_aresetn.bind(*p_15_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16000].first = 1;
        (*_glb_hdl_sc_channel_map)[16000].second.push_front(p_15_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awid.bind(*p_15_m02_axi_awid);
        p_15_m02_axi_awid->set_sv_netview_offsetfromdp(9570384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_awaddr.bind(*p_15_m02_axi_awaddr);
        p_15_m02_axi_awaddr->set_sv_netview_offsetfromdp(9570440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_awlen.bind(*p_15_m02_axi_awlen);
        p_15_m02_axi_awlen->set_sv_netview_offsetfromdp(9570496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awsize.bind(*p_15_m02_axi_awsize);
        p_15_m02_axi_awsize->set_sv_netview_offsetfromdp(9570552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_awburst.bind(*p_15_m02_axi_awburst);
        p_15_m02_axi_awburst->set_sv_netview_offsetfromdp(9570608);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awlock.bind(*p_15_m02_axi_awlock);
        p_15_m02_axi_awlock->set_sv_netview_offsetfromdp(9570664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awcache.bind(*p_15_m02_axi_awcache);
        p_15_m02_axi_awcache->set_sv_netview_offsetfromdp(9570720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_awprot.bind(*p_15_m02_axi_awprot);
        p_15_m02_axi_awprot->set_sv_netview_offsetfromdp(9570776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_awqos.bind(*p_15_m02_axi_awqos);
        p_15_m02_axi_awqos->set_sv_netview_offsetfromdp(9570832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_awuser.bind(*p_15_m02_axi_awuser);
        p_15_m02_axi_awuser->set_sv_netview_offsetfromdp(9570888);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awvalid.bind(*p_15_m02_axi_awvalid);
        p_15_m02_axi_awvalid->set_sv_netview_offsetfromdp(9570944);
        xsim_sc_channel<0, bool > *p_15_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_awready.bind(*p_15_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[16106].first = 1;
        (*_glb_hdl_sc_channel_map)[16106].second.push_front(p_15_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_wdata.bind(*p_15_m02_axi_wdata);
        p_15_m02_axi_wdata->set_sv_netview_offsetfromdp(9571056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_wstrb.bind(*p_15_m02_axi_wstrb);
        p_15_m02_axi_wstrb->set_sv_netview_offsetfromdp(9571112);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wlast.bind(*p_15_m02_axi_wlast);
        p_15_m02_axi_wlast->set_sv_netview_offsetfromdp(9571168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_wuser.bind(*p_15_m02_axi_wuser);
        p_15_m02_axi_wuser->set_sv_netview_offsetfromdp(9571224);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wvalid.bind(*p_15_m02_axi_wvalid);
        p_15_m02_axi_wvalid->set_sv_netview_offsetfromdp(9571280);
        xsim_sc_channel<0, bool > *p_15_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_wready.bind(*p_15_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[16124].first = 1;
        (*_glb_hdl_sc_channel_map)[16124].second.push_front(p_15_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_bid.bind(*p_15_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[16110].first = 3;
        (*_glb_hdl_sc_channel_map)[16110].second.push_front(p_15_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_bresp.bind(*p_15_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16112].first = 3;
        (*_glb_hdl_sc_channel_map)[16112].second.push_front(p_15_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_buser.bind(*p_15_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[16113].first = 3;
        (*_glb_hdl_sc_channel_map)[16113].second.push_front(p_15_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bvalid.bind(*p_15_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16114].first = 1;
        (*_glb_hdl_sc_channel_map)[16114].second.push_front(p_15_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_bready.bind(*p_15_m02_axi_bready);
        p_15_m02_axi_bready->set_sv_netview_offsetfromdp(9571616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_arid.bind(*p_15_m02_axi_arid);
        p_15_m02_axi_arid->set_sv_netview_offsetfromdp(9571672);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m02_axi_araddr.bind(*p_15_m02_axi_araddr);
        p_15_m02_axi_araddr->set_sv_netview_offsetfromdp(9571728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m02_axi_arlen.bind(*p_15_m02_axi_arlen);
        p_15_m02_axi_arlen->set_sv_netview_offsetfromdp(9571784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arsize.bind(*p_15_m02_axi_arsize);
        p_15_m02_axi_arsize->set_sv_netview_offsetfromdp(9571840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_arburst.bind(*p_15_m02_axi_arburst);
        p_15_m02_axi_arburst->set_sv_netview_offsetfromdp(9571896);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arlock.bind(*p_15_m02_axi_arlock);
        p_15_m02_axi_arlock->set_sv_netview_offsetfromdp(9571952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arcache.bind(*p_15_m02_axi_arcache);
        p_15_m02_axi_arcache->set_sv_netview_offsetfromdp(9572008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m02_axi_arprot.bind(*p_15_m02_axi_arprot);
        p_15_m02_axi_arprot->set_sv_netview_offsetfromdp(9572064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m02_axi_arqos.bind(*p_15_m02_axi_arqos);
        p_15_m02_axi_arqos->set_sv_netview_offsetfromdp(9572120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_aruser.bind(*p_15_m02_axi_aruser);
        p_15_m02_axi_aruser->set_sv_netview_offsetfromdp(9572176);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arvalid.bind(*p_15_m02_axi_arvalid);
        p_15_m02_axi_arvalid->set_sv_netview_offsetfromdp(9572232);
        xsim_sc_channel<0, bool > *p_15_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_arready.bind(*p_15_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[16094].first = 1;
        (*_glb_hdl_sc_channel_map)[16094].second.push_front(p_15_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_rid.bind(*p_15_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[16116].first = 3;
        (*_glb_hdl_sc_channel_map)[16116].second.push_front(p_15_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m02_axi_rdata.bind(*p_15_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16115].first = 3;
        (*_glb_hdl_sc_channel_map)[16115].second.push_front(p_15_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m02_axi_rresp.bind(*p_15_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16119].first = 3;
        (*_glb_hdl_sc_channel_map)[16119].second.push_front(p_15_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rlast.bind(*p_15_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16117].first = 1;
        (*_glb_hdl_sc_channel_map)[16117].second.push_front(p_15_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m02_axi_ruser.bind(*p_15_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16120].first = 3;
        (*_glb_hdl_sc_channel_map)[16120].second.push_front(p_15_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rvalid.bind(*p_15_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16121].first = 1;
        (*_glb_hdl_sc_channel_map)[16121].second.push_front(p_15_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_rready.bind(*p_15_m02_axi_rready);
        p_15_m02_axi_rready->set_sv_netview_offsetfromdp(9572680);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aclk.bind(*p_15_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16084].first = 1;
        (*_glb_hdl_sc_channel_map)[16084].second.push_front(p_15_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m02_axi_aresetn.bind(*p_15_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16088].first = 1;
        (*_glb_hdl_sc_channel_map)[16088].second.push_front(p_15_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awid.bind(*p_15_m03_axi_awid);
        p_15_m03_axi_awid->set_sv_netview_offsetfromdp(9572848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_awaddr.bind(*p_15_m03_axi_awaddr);
        p_15_m03_axi_awaddr->set_sv_netview_offsetfromdp(9572904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_awlen.bind(*p_15_m03_axi_awlen);
        p_15_m03_axi_awlen->set_sv_netview_offsetfromdp(9572960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awsize.bind(*p_15_m03_axi_awsize);
        p_15_m03_axi_awsize->set_sv_netview_offsetfromdp(9573016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_awburst.bind(*p_15_m03_axi_awburst);
        p_15_m03_axi_awburst->set_sv_netview_offsetfromdp(9573072);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awlock.bind(*p_15_m03_axi_awlock);
        p_15_m03_axi_awlock->set_sv_netview_offsetfromdp(9573128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awcache.bind(*p_15_m03_axi_awcache);
        p_15_m03_axi_awcache->set_sv_netview_offsetfromdp(9573184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_awprot.bind(*p_15_m03_axi_awprot);
        p_15_m03_axi_awprot->set_sv_netview_offsetfromdp(9573240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_awqos.bind(*p_15_m03_axi_awqos);
        p_15_m03_axi_awqos->set_sv_netview_offsetfromdp(9573296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_awuser.bind(*p_15_m03_axi_awuser);
        p_15_m03_axi_awuser->set_sv_netview_offsetfromdp(9573352);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awvalid.bind(*p_15_m03_axi_awvalid);
        p_15_m03_axi_awvalid->set_sv_netview_offsetfromdp(9573408);
        xsim_sc_channel<0, bool > *p_15_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_awready.bind(*p_15_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[16150].first = 1;
        (*_glb_hdl_sc_channel_map)[16150].second.push_front(p_15_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_wdata.bind(*p_15_m03_axi_wdata);
        p_15_m03_axi_wdata->set_sv_netview_offsetfromdp(9573520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_wstrb.bind(*p_15_m03_axi_wstrb);
        p_15_m03_axi_wstrb->set_sv_netview_offsetfromdp(9573576);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wlast.bind(*p_15_m03_axi_wlast);
        p_15_m03_axi_wlast->set_sv_netview_offsetfromdp(9573632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_wuser.bind(*p_15_m03_axi_wuser);
        p_15_m03_axi_wuser->set_sv_netview_offsetfromdp(9573688);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wvalid.bind(*p_15_m03_axi_wvalid);
        p_15_m03_axi_wvalid->set_sv_netview_offsetfromdp(9573744);
        xsim_sc_channel<0, bool > *p_15_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_wready.bind(*p_15_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[16168].first = 1;
        (*_glb_hdl_sc_channel_map)[16168].second.push_front(p_15_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_bid.bind(*p_15_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[16154].first = 3;
        (*_glb_hdl_sc_channel_map)[16154].second.push_front(p_15_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_bresp.bind(*p_15_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16156].first = 3;
        (*_glb_hdl_sc_channel_map)[16156].second.push_front(p_15_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_buser.bind(*p_15_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[16157].first = 3;
        (*_glb_hdl_sc_channel_map)[16157].second.push_front(p_15_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bvalid.bind(*p_15_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16158].first = 1;
        (*_glb_hdl_sc_channel_map)[16158].second.push_front(p_15_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_bready.bind(*p_15_m03_axi_bready);
        p_15_m03_axi_bready->set_sv_netview_offsetfromdp(9574080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_arid.bind(*p_15_m03_axi_arid);
        p_15_m03_axi_arid->set_sv_netview_offsetfromdp(9574136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m03_axi_araddr.bind(*p_15_m03_axi_araddr);
        p_15_m03_axi_araddr->set_sv_netview_offsetfromdp(9574192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m03_axi_arlen.bind(*p_15_m03_axi_arlen);
        p_15_m03_axi_arlen->set_sv_netview_offsetfromdp(9574248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arsize.bind(*p_15_m03_axi_arsize);
        p_15_m03_axi_arsize->set_sv_netview_offsetfromdp(9574304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_arburst.bind(*p_15_m03_axi_arburst);
        p_15_m03_axi_arburst->set_sv_netview_offsetfromdp(9574360);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arlock.bind(*p_15_m03_axi_arlock);
        p_15_m03_axi_arlock->set_sv_netview_offsetfromdp(9574416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arcache.bind(*p_15_m03_axi_arcache);
        p_15_m03_axi_arcache->set_sv_netview_offsetfromdp(9574472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m03_axi_arprot.bind(*p_15_m03_axi_arprot);
        p_15_m03_axi_arprot->set_sv_netview_offsetfromdp(9574528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m03_axi_arqos.bind(*p_15_m03_axi_arqos);
        p_15_m03_axi_arqos->set_sv_netview_offsetfromdp(9574584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_aruser.bind(*p_15_m03_axi_aruser);
        p_15_m03_axi_aruser->set_sv_netview_offsetfromdp(9574640);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arvalid.bind(*p_15_m03_axi_arvalid);
        p_15_m03_axi_arvalid->set_sv_netview_offsetfromdp(9574696);
        xsim_sc_channel<0, bool > *p_15_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_arready.bind(*p_15_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[16138].first = 1;
        (*_glb_hdl_sc_channel_map)[16138].second.push_front(p_15_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_rid.bind(*p_15_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[16160].first = 3;
        (*_glb_hdl_sc_channel_map)[16160].second.push_front(p_15_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m03_axi_rdata.bind(*p_15_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16159].first = 3;
        (*_glb_hdl_sc_channel_map)[16159].second.push_front(p_15_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m03_axi_rresp.bind(*p_15_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16163].first = 3;
        (*_glb_hdl_sc_channel_map)[16163].second.push_front(p_15_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rlast.bind(*p_15_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16161].first = 1;
        (*_glb_hdl_sc_channel_map)[16161].second.push_front(p_15_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m03_axi_ruser.bind(*p_15_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16164].first = 3;
        (*_glb_hdl_sc_channel_map)[16164].second.push_front(p_15_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rvalid.bind(*p_15_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16165].first = 1;
        (*_glb_hdl_sc_channel_map)[16165].second.push_front(p_15_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_rready.bind(*p_15_m03_axi_rready);
        p_15_m03_axi_rready->set_sv_netview_offsetfromdp(9575144);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aclk.bind(*p_15_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16128].first = 1;
        (*_glb_hdl_sc_channel_map)[16128].second.push_front(p_15_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m03_axi_aresetn.bind(*p_15_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16132].first = 1;
        (*_glb_hdl_sc_channel_map)[16132].second.push_front(p_15_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awid.bind(*p_15_m04_axi_awid);
        p_15_m04_axi_awid->set_sv_netview_offsetfromdp(9575312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_awaddr.bind(*p_15_m04_axi_awaddr);
        p_15_m04_axi_awaddr->set_sv_netview_offsetfromdp(9575368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_awlen.bind(*p_15_m04_axi_awlen);
        p_15_m04_axi_awlen->set_sv_netview_offsetfromdp(9575424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awsize.bind(*p_15_m04_axi_awsize);
        p_15_m04_axi_awsize->set_sv_netview_offsetfromdp(9575480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_awburst.bind(*p_15_m04_axi_awburst);
        p_15_m04_axi_awburst->set_sv_netview_offsetfromdp(9575536);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awlock.bind(*p_15_m04_axi_awlock);
        p_15_m04_axi_awlock->set_sv_netview_offsetfromdp(9575592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awcache.bind(*p_15_m04_axi_awcache);
        p_15_m04_axi_awcache->set_sv_netview_offsetfromdp(9575648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_awprot.bind(*p_15_m04_axi_awprot);
        p_15_m04_axi_awprot->set_sv_netview_offsetfromdp(9575704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_awqos.bind(*p_15_m04_axi_awqos);
        p_15_m04_axi_awqos->set_sv_netview_offsetfromdp(9575760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_awuser.bind(*p_15_m04_axi_awuser);
        p_15_m04_axi_awuser->set_sv_netview_offsetfromdp(9575816);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awvalid.bind(*p_15_m04_axi_awvalid);
        p_15_m04_axi_awvalid->set_sv_netview_offsetfromdp(9575872);
        xsim_sc_channel<0, bool > *p_15_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_awready.bind(*p_15_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[16185].first = 1;
        (*_glb_hdl_sc_channel_map)[16185].second.push_front(p_15_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_wdata.bind(*p_15_m04_axi_wdata);
        p_15_m04_axi_wdata->set_sv_netview_offsetfromdp(9575984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_wstrb.bind(*p_15_m04_axi_wstrb);
        p_15_m04_axi_wstrb->set_sv_netview_offsetfromdp(9576040);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wlast.bind(*p_15_m04_axi_wlast);
        p_15_m04_axi_wlast->set_sv_netview_offsetfromdp(9576096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_wuser.bind(*p_15_m04_axi_wuser);
        p_15_m04_axi_wuser->set_sv_netview_offsetfromdp(9576152);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wvalid.bind(*p_15_m04_axi_wvalid);
        p_15_m04_axi_wvalid->set_sv_netview_offsetfromdp(9576208);
        xsim_sc_channel<0, bool > *p_15_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_wready.bind(*p_15_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[16200].first = 1;
        (*_glb_hdl_sc_channel_map)[16200].second.push_front(p_15_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_bid.bind(*p_15_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[16188].first = 3;
        (*_glb_hdl_sc_channel_map)[16188].second.push_front(p_15_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_bresp.bind(*p_15_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16190].first = 3;
        (*_glb_hdl_sc_channel_map)[16190].second.push_front(p_15_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_buser.bind(*p_15_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_15_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bvalid.bind(*p_15_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16191].first = 1;
        (*_glb_hdl_sc_channel_map)[16191].second.push_front(p_15_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_bready.bind(*p_15_m04_axi_bready);
        p_15_m04_axi_bready->set_sv_netview_offsetfromdp(9576544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_arid.bind(*p_15_m04_axi_arid);
        p_15_m04_axi_arid->set_sv_netview_offsetfromdp(9576600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m04_axi_araddr.bind(*p_15_m04_axi_araddr);
        p_15_m04_axi_araddr->set_sv_netview_offsetfromdp(9576656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m04_axi_arlen.bind(*p_15_m04_axi_arlen);
        p_15_m04_axi_arlen->set_sv_netview_offsetfromdp(9576712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arsize.bind(*p_15_m04_axi_arsize);
        p_15_m04_axi_arsize->set_sv_netview_offsetfromdp(9576768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_arburst.bind(*p_15_m04_axi_arburst);
        p_15_m04_axi_arburst->set_sv_netview_offsetfromdp(9576824);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arlock.bind(*p_15_m04_axi_arlock);
        p_15_m04_axi_arlock->set_sv_netview_offsetfromdp(9576880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arcache.bind(*p_15_m04_axi_arcache);
        p_15_m04_axi_arcache->set_sv_netview_offsetfromdp(9576936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m04_axi_arprot.bind(*p_15_m04_axi_arprot);
        p_15_m04_axi_arprot->set_sv_netview_offsetfromdp(9576992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m04_axi_arqos.bind(*p_15_m04_axi_arqos);
        p_15_m04_axi_arqos->set_sv_netview_offsetfromdp(9577048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_aruser.bind(*p_15_m04_axi_aruser);
        p_15_m04_axi_aruser->set_sv_netview_offsetfromdp(9577104);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arvalid.bind(*p_15_m04_axi_arvalid);
        p_15_m04_axi_arvalid->set_sv_netview_offsetfromdp(9577160);
        xsim_sc_channel<0, bool > *p_15_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_arready.bind(*p_15_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[16178].first = 1;
        (*_glb_hdl_sc_channel_map)[16178].second.push_front(p_15_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_rid.bind(*p_15_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[16193].first = 3;
        (*_glb_hdl_sc_channel_map)[16193].second.push_front(p_15_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m04_axi_rdata.bind(*p_15_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16192].first = 3;
        (*_glb_hdl_sc_channel_map)[16192].second.push_front(p_15_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m04_axi_rresp.bind(*p_15_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16196].first = 3;
        (*_glb_hdl_sc_channel_map)[16196].second.push_front(p_15_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rlast.bind(*p_15_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16194].first = 1;
        (*_glb_hdl_sc_channel_map)[16194].second.push_front(p_15_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m04_axi_ruser.bind(*p_15_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_15_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rvalid.bind(*p_15_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16197].first = 1;
        (*_glb_hdl_sc_channel_map)[16197].second.push_front(p_15_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_rready.bind(*p_15_m04_axi_rready);
        p_15_m04_axi_rready->set_sv_netview_offsetfromdp(9577608);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aclk.bind(*p_15_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16172].first = 1;
        (*_glb_hdl_sc_channel_map)[16172].second.push_front(p_15_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m04_axi_aresetn.bind(*p_15_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16175].first = 1;
        (*_glb_hdl_sc_channel_map)[16175].second.push_front(p_15_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awid.bind(*p_15_m01_axi_awid);
        p_15_m01_axi_awid->set_sv_netview_offsetfromdp(9577776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_awaddr.bind(*p_15_m01_axi_awaddr);
        p_15_m01_axi_awaddr->set_sv_netview_offsetfromdp(9577832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_awlen.bind(*p_15_m01_axi_awlen);
        p_15_m01_axi_awlen->set_sv_netview_offsetfromdp(9577888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awsize.bind(*p_15_m01_axi_awsize);
        p_15_m01_axi_awsize->set_sv_netview_offsetfromdp(9577944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_awburst.bind(*p_15_m01_axi_awburst);
        p_15_m01_axi_awburst->set_sv_netview_offsetfromdp(9578000);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awlock.bind(*p_15_m01_axi_awlock);
        p_15_m01_axi_awlock->set_sv_netview_offsetfromdp(9578056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awcache.bind(*p_15_m01_axi_awcache);
        p_15_m01_axi_awcache->set_sv_netview_offsetfromdp(9578112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_awprot.bind(*p_15_m01_axi_awprot);
        p_15_m01_axi_awprot->set_sv_netview_offsetfromdp(9578168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_awqos.bind(*p_15_m01_axi_awqos);
        p_15_m01_axi_awqos->set_sv_netview_offsetfromdp(9578224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_awuser.bind(*p_15_m01_axi_awuser);
        p_15_m01_axi_awuser->set_sv_netview_offsetfromdp(9578280);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awvalid.bind(*p_15_m01_axi_awvalid);
        p_15_m01_axi_awvalid->set_sv_netview_offsetfromdp(9578336);
        xsim_sc_channel<0, bool > *p_15_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_awready.bind(*p_15_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[16062].first = 1;
        (*_glb_hdl_sc_channel_map)[16062].second.push_front(p_15_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_wdata.bind(*p_15_m01_axi_wdata);
        p_15_m01_axi_wdata->set_sv_netview_offsetfromdp(9578448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_wstrb.bind(*p_15_m01_axi_wstrb);
        p_15_m01_axi_wstrb->set_sv_netview_offsetfromdp(9578504);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wlast.bind(*p_15_m01_axi_wlast);
        p_15_m01_axi_wlast->set_sv_netview_offsetfromdp(9578560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_wuser.bind(*p_15_m01_axi_wuser);
        p_15_m01_axi_wuser->set_sv_netview_offsetfromdp(9578616);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wvalid.bind(*p_15_m01_axi_wvalid);
        p_15_m01_axi_wvalid->set_sv_netview_offsetfromdp(9578672);
        xsim_sc_channel<0, bool > *p_15_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_wready.bind(*p_15_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[16080].first = 1;
        (*_glb_hdl_sc_channel_map)[16080].second.push_front(p_15_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_bid.bind(*p_15_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[16066].first = 3;
        (*_glb_hdl_sc_channel_map)[16066].second.push_front(p_15_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_bresp.bind(*p_15_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[16068].first = 3;
        (*_glb_hdl_sc_channel_map)[16068].second.push_front(p_15_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_buser.bind(*p_15_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[16069].first = 3;
        (*_glb_hdl_sc_channel_map)[16069].second.push_front(p_15_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bvalid.bind(*p_15_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[16070].first = 1;
        (*_glb_hdl_sc_channel_map)[16070].second.push_front(p_15_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_bready.bind(*p_15_m01_axi_bready);
        p_15_m01_axi_bready->set_sv_netview_offsetfromdp(9579008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_arid.bind(*p_15_m01_axi_arid);
        p_15_m01_axi_arid->set_sv_netview_offsetfromdp(9579064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->m01_axi_araddr.bind(*p_15_m01_axi_araddr);
        p_15_m01_axi_araddr->set_sv_netview_offsetfromdp(9579120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m01_axi_arlen.bind(*p_15_m01_axi_arlen);
        p_15_m01_axi_arlen->set_sv_netview_offsetfromdp(9579176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arsize.bind(*p_15_m01_axi_arsize);
        p_15_m01_axi_arsize->set_sv_netview_offsetfromdp(9579232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_arburst.bind(*p_15_m01_axi_arburst);
        p_15_m01_axi_arburst->set_sv_netview_offsetfromdp(9579288);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arlock.bind(*p_15_m01_axi_arlock);
        p_15_m01_axi_arlock->set_sv_netview_offsetfromdp(9579344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arcache.bind(*p_15_m01_axi_arcache);
        p_15_m01_axi_arcache->set_sv_netview_offsetfromdp(9579400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m01_axi_arprot.bind(*p_15_m01_axi_arprot);
        p_15_m01_axi_arprot->set_sv_netview_offsetfromdp(9579456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m01_axi_arqos.bind(*p_15_m01_axi_arqos);
        p_15_m01_axi_arqos->set_sv_netview_offsetfromdp(9579512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_aruser.bind(*p_15_m01_axi_aruser);
        p_15_m01_axi_aruser->set_sv_netview_offsetfromdp(9579568);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arvalid.bind(*p_15_m01_axi_arvalid);
        p_15_m01_axi_arvalid->set_sv_netview_offsetfromdp(9579624);
        xsim_sc_channel<0, bool > *p_15_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_arready.bind(*p_15_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[16050].first = 1;
        (*_glb_hdl_sc_channel_map)[16050].second.push_front(p_15_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_rid.bind(*p_15_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[16072].first = 3;
        (*_glb_hdl_sc_channel_map)[16072].second.push_front(p_15_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m01_axi_rdata.bind(*p_15_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[16071].first = 3;
        (*_glb_hdl_sc_channel_map)[16071].second.push_front(p_15_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m01_axi_rresp.bind(*p_15_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[16075].first = 3;
        (*_glb_hdl_sc_channel_map)[16075].second.push_front(p_15_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rlast.bind(*p_15_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[16073].first = 1;
        (*_glb_hdl_sc_channel_map)[16073].second.push_front(p_15_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->m01_axi_ruser.bind(*p_15_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[16076].first = 3;
        (*_glb_hdl_sc_channel_map)[16076].second.push_front(p_15_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rvalid.bind(*p_15_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[16077].first = 1;
        (*_glb_hdl_sc_channel_map)[16077].second.push_front(p_15_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_rready.bind(*p_15_m01_axi_rready);
        p_15_m01_axi_rready->set_sv_netview_offsetfromdp(9580072);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aclk.bind(*p_15_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16040].first = 1;
        (*_glb_hdl_sc_channel_map)[16040].second.push_front(p_15_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m01_axi_aresetn.bind(*p_15_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16044].first = 1;
        (*_glb_hdl_sc_channel_map)[16044].second.push_front(p_15_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_awid.bind(*p_15_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[16343].first = 3;
        (*_glb_hdl_sc_channel_map)[16343].second.push_front(p_15_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_awaddr.bind(*p_15_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16340].first = 3;
        (*_glb_hdl_sc_channel_map)[16340].second.push_front(p_15_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_awlen.bind(*p_15_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16344].first = 3;
        (*_glb_hdl_sc_channel_map)[16344].second.push_front(p_15_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awsize.bind(*p_15_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16350].first = 3;
        (*_glb_hdl_sc_channel_map)[16350].second.push_front(p_15_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_awburst.bind(*p_15_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16341].first = 3;
        (*_glb_hdl_sc_channel_map)[16341].second.push_front(p_15_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awlock.bind(*p_15_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16345].first = 1;
        (*_glb_hdl_sc_channel_map)[16345].second.push_front(p_15_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awcache.bind(*p_15_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16342].first = 3;
        (*_glb_hdl_sc_channel_map)[16342].second.push_front(p_15_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_awprot.bind(*p_15_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16346].first = 3;
        (*_glb_hdl_sc_channel_map)[16346].second.push_front(p_15_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awregion.bind(*p_15_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16349].first = 3;
        (*_glb_hdl_sc_channel_map)[16349].second.push_front(p_15_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_awqos.bind(*p_15_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16347].first = 3;
        (*_glb_hdl_sc_channel_map)[16347].second.push_front(p_15_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awvalid.bind(*p_15_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16351].first = 1;
        (*_glb_hdl_sc_channel_map)[16351].second.push_front(p_15_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_awready.bind(*p_15_s03_axi_awready);
        p_15_s03_axi_awready->set_sv_netview_offsetfromdp(9580856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_wdata.bind(*p_15_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16362].first = 3;
        (*_glb_hdl_sc_channel_map)[16362].second.push_front(p_15_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_wstrb.bind(*p_15_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16365].first = 3;
        (*_glb_hdl_sc_channel_map)[16365].second.push_front(p_15_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wlast.bind(*p_15_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16363].first = 1;
        (*_glb_hdl_sc_channel_map)[16363].second.push_front(p_15_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wvalid.bind(*p_15_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16366].first = 1;
        (*_glb_hdl_sc_channel_map)[16366].second.push_front(p_15_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_wready.bind(*p_15_s03_axi_wready);
        p_15_s03_axi_wready->set_sv_netview_offsetfromdp(9581136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_bid.bind(*p_15_s03_axi_bid);
        p_15_s03_axi_bid->set_sv_netview_offsetfromdp(9581192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_bresp.bind(*p_15_s03_axi_bresp);
        p_15_s03_axi_bresp->set_sv_netview_offsetfromdp(9581248);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bvalid.bind(*p_15_s03_axi_bvalid);
        p_15_s03_axi_bvalid->set_sv_netview_offsetfromdp(9581304);
        xsim_sc_channel<0, bool > *p_15_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_bready.bind(*p_15_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[16353].first = 1;
        (*_glb_hdl_sc_channel_map)[16353].second.push_front(p_15_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_arid.bind(*p_15_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[16331].first = 3;
        (*_glb_hdl_sc_channel_map)[16331].second.push_front(p_15_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s03_axi_araddr.bind(*p_15_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16327].first = 3;
        (*_glb_hdl_sc_channel_map)[16327].second.push_front(p_15_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s03_axi_arlen.bind(*p_15_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16332].first = 3;
        (*_glb_hdl_sc_channel_map)[16332].second.push_front(p_15_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arsize.bind(*p_15_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16338].first = 3;
        (*_glb_hdl_sc_channel_map)[16338].second.push_front(p_15_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_arburst.bind(*p_15_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16328].first = 3;
        (*_glb_hdl_sc_channel_map)[16328].second.push_front(p_15_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arlock.bind(*p_15_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16333].first = 1;
        (*_glb_hdl_sc_channel_map)[16333].second.push_front(p_15_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arcache.bind(*p_15_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16329].first = 3;
        (*_glb_hdl_sc_channel_map)[16329].second.push_front(p_15_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s03_axi_arprot.bind(*p_15_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16334].first = 3;
        (*_glb_hdl_sc_channel_map)[16334].second.push_front(p_15_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arregion.bind(*p_15_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16337].first = 3;
        (*_glb_hdl_sc_channel_map)[16337].second.push_front(p_15_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s03_axi_arqos.bind(*p_15_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16335].first = 3;
        (*_glb_hdl_sc_channel_map)[16335].second.push_front(p_15_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arvalid.bind(*p_15_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16339].first = 1;
        (*_glb_hdl_sc_channel_map)[16339].second.push_front(p_15_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_arready.bind(*p_15_s03_axi_arready);
        p_15_s03_axi_arready->set_sv_netview_offsetfromdp(9582032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s03_axi_rid.bind(*p_15_s03_axi_rid);
        p_15_s03_axi_rid->set_sv_netview_offsetfromdp(9582088);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s03_axi_rdata.bind(*p_15_s03_axi_rdata);
        p_15_s03_axi_rdata->set_sv_netview_offsetfromdp(9582144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s03_axi_rresp.bind(*p_15_s03_axi_rresp);
        p_15_s03_axi_rresp->set_sv_netview_offsetfromdp(9582200);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rlast.bind(*p_15_s03_axi_rlast);
        p_15_s03_axi_rlast->set_sv_netview_offsetfromdp(9582256);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rvalid.bind(*p_15_s03_axi_rvalid);
        p_15_s03_axi_rvalid->set_sv_netview_offsetfromdp(9582312);
        xsim_sc_channel<0, bool > *p_15_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_rready.bind(*p_15_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[16359].first = 1;
        (*_glb_hdl_sc_channel_map)[16359].second.push_front(p_15_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aclk.bind(*p_15_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16326].first = 1;
        (*_glb_hdl_sc_channel_map)[16326].second.push_front(p_15_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s03_axi_aresetn.bind(*p_15_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16330].first = 1;
        (*_glb_hdl_sc_channel_map)[16330].second.push_front(p_15_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_awid.bind(*p_15_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[16261].first = 3;
        (*_glb_hdl_sc_channel_map)[16261].second.push_front(p_15_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_awaddr.bind(*p_15_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16258].first = 3;
        (*_glb_hdl_sc_channel_map)[16258].second.push_front(p_15_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_awlen.bind(*p_15_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16262].first = 3;
        (*_glb_hdl_sc_channel_map)[16262].second.push_front(p_15_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awsize.bind(*p_15_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16268].first = 3;
        (*_glb_hdl_sc_channel_map)[16268].second.push_front(p_15_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_awburst.bind(*p_15_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16259].first = 3;
        (*_glb_hdl_sc_channel_map)[16259].second.push_front(p_15_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awlock.bind(*p_15_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16263].first = 1;
        (*_glb_hdl_sc_channel_map)[16263].second.push_front(p_15_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awcache.bind(*p_15_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16260].first = 3;
        (*_glb_hdl_sc_channel_map)[16260].second.push_front(p_15_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_awprot.bind(*p_15_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16264].first = 3;
        (*_glb_hdl_sc_channel_map)[16264].second.push_front(p_15_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awregion.bind(*p_15_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16267].first = 3;
        (*_glb_hdl_sc_channel_map)[16267].second.push_front(p_15_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_awqos.bind(*p_15_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16265].first = 3;
        (*_glb_hdl_sc_channel_map)[16265].second.push_front(p_15_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awvalid.bind(*p_15_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16269].first = 1;
        (*_glb_hdl_sc_channel_map)[16269].second.push_front(p_15_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_awready.bind(*p_15_s01_axi_awready);
        p_15_s01_axi_awready->set_sv_netview_offsetfromdp(9583152);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_wdata.bind(*p_15_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16280].first = 3;
        (*_glb_hdl_sc_channel_map)[16280].second.push_front(p_15_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_wstrb.bind(*p_15_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16283].first = 3;
        (*_glb_hdl_sc_channel_map)[16283].second.push_front(p_15_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wlast.bind(*p_15_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16281].first = 1;
        (*_glb_hdl_sc_channel_map)[16281].second.push_front(p_15_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wvalid.bind(*p_15_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16284].first = 1;
        (*_glb_hdl_sc_channel_map)[16284].second.push_front(p_15_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_wready.bind(*p_15_s01_axi_wready);
        p_15_s01_axi_wready->set_sv_netview_offsetfromdp(9583432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_bid.bind(*p_15_s01_axi_bid);
        p_15_s01_axi_bid->set_sv_netview_offsetfromdp(9583488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_bresp.bind(*p_15_s01_axi_bresp);
        p_15_s01_axi_bresp->set_sv_netview_offsetfromdp(9583544);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bvalid.bind(*p_15_s01_axi_bvalid);
        p_15_s01_axi_bvalid->set_sv_netview_offsetfromdp(9583600);
        xsim_sc_channel<0, bool > *p_15_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_bready.bind(*p_15_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[16271].first = 1;
        (*_glb_hdl_sc_channel_map)[16271].second.push_front(p_15_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_arid.bind(*p_15_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[16249].first = 3;
        (*_glb_hdl_sc_channel_map)[16249].second.push_front(p_15_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s01_axi_araddr.bind(*p_15_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16245].first = 3;
        (*_glb_hdl_sc_channel_map)[16245].second.push_front(p_15_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s01_axi_arlen.bind(*p_15_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16250].first = 3;
        (*_glb_hdl_sc_channel_map)[16250].second.push_front(p_15_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arsize.bind(*p_15_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16256].first = 3;
        (*_glb_hdl_sc_channel_map)[16256].second.push_front(p_15_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_arburst.bind(*p_15_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16246].first = 3;
        (*_glb_hdl_sc_channel_map)[16246].second.push_front(p_15_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arlock.bind(*p_15_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16251].first = 1;
        (*_glb_hdl_sc_channel_map)[16251].second.push_front(p_15_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arcache.bind(*p_15_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16247].first = 3;
        (*_glb_hdl_sc_channel_map)[16247].second.push_front(p_15_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s01_axi_arprot.bind(*p_15_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16252].first = 3;
        (*_glb_hdl_sc_channel_map)[16252].second.push_front(p_15_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arregion.bind(*p_15_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16255].first = 3;
        (*_glb_hdl_sc_channel_map)[16255].second.push_front(p_15_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s01_axi_arqos.bind(*p_15_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16253].first = 3;
        (*_glb_hdl_sc_channel_map)[16253].second.push_front(p_15_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arvalid.bind(*p_15_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16257].first = 1;
        (*_glb_hdl_sc_channel_map)[16257].second.push_front(p_15_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_arready.bind(*p_15_s01_axi_arready);
        p_15_s01_axi_arready->set_sv_netview_offsetfromdp(9584328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s01_axi_rid.bind(*p_15_s01_axi_rid);
        p_15_s01_axi_rid->set_sv_netview_offsetfromdp(9584384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s01_axi_rdata.bind(*p_15_s01_axi_rdata);
        p_15_s01_axi_rdata->set_sv_netview_offsetfromdp(9584440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s01_axi_rresp.bind(*p_15_s01_axi_rresp);
        p_15_s01_axi_rresp->set_sv_netview_offsetfromdp(9584496);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rlast.bind(*p_15_s01_axi_rlast);
        p_15_s01_axi_rlast->set_sv_netview_offsetfromdp(9584552);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rvalid.bind(*p_15_s01_axi_rvalid);
        p_15_s01_axi_rvalid->set_sv_netview_offsetfromdp(9584608);
        xsim_sc_channel<0, bool > *p_15_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_rready.bind(*p_15_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[16277].first = 1;
        (*_glb_hdl_sc_channel_map)[16277].second.push_front(p_15_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aclk.bind(*p_15_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16244].first = 1;
        (*_glb_hdl_sc_channel_map)[16244].second.push_front(p_15_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s01_axi_aresetn.bind(*p_15_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16248].first = 1;
        (*_glb_hdl_sc_channel_map)[16248].second.push_front(p_15_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_awid.bind(*p_15_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[16302].first = 3;
        (*_glb_hdl_sc_channel_map)[16302].second.push_front(p_15_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_awaddr.bind(*p_15_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16299].first = 3;
        (*_glb_hdl_sc_channel_map)[16299].second.push_front(p_15_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_awlen.bind(*p_15_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16303].first = 3;
        (*_glb_hdl_sc_channel_map)[16303].second.push_front(p_15_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awsize.bind(*p_15_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16309].first = 3;
        (*_glb_hdl_sc_channel_map)[16309].second.push_front(p_15_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_awburst.bind(*p_15_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16300].first = 3;
        (*_glb_hdl_sc_channel_map)[16300].second.push_front(p_15_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awlock.bind(*p_15_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16304].first = 1;
        (*_glb_hdl_sc_channel_map)[16304].second.push_front(p_15_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awcache.bind(*p_15_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16301].first = 3;
        (*_glb_hdl_sc_channel_map)[16301].second.push_front(p_15_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_awprot.bind(*p_15_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16305].first = 3;
        (*_glb_hdl_sc_channel_map)[16305].second.push_front(p_15_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awregion.bind(*p_15_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16308].first = 3;
        (*_glb_hdl_sc_channel_map)[16308].second.push_front(p_15_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_awqos.bind(*p_15_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16306].first = 3;
        (*_glb_hdl_sc_channel_map)[16306].second.push_front(p_15_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awvalid.bind(*p_15_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16310].first = 1;
        (*_glb_hdl_sc_channel_map)[16310].second.push_front(p_15_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_awready.bind(*p_15_s02_axi_awready);
        p_15_s02_axi_awready->set_sv_netview_offsetfromdp(9585448);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_wdata.bind(*p_15_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16321].first = 3;
        (*_glb_hdl_sc_channel_map)[16321].second.push_front(p_15_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_wstrb.bind(*p_15_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16324].first = 3;
        (*_glb_hdl_sc_channel_map)[16324].second.push_front(p_15_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wlast.bind(*p_15_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16322].first = 1;
        (*_glb_hdl_sc_channel_map)[16322].second.push_front(p_15_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wvalid.bind(*p_15_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16325].first = 1;
        (*_glb_hdl_sc_channel_map)[16325].second.push_front(p_15_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_wready.bind(*p_15_s02_axi_wready);
        p_15_s02_axi_wready->set_sv_netview_offsetfromdp(9585728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_bid.bind(*p_15_s02_axi_bid);
        p_15_s02_axi_bid->set_sv_netview_offsetfromdp(9585784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_bresp.bind(*p_15_s02_axi_bresp);
        p_15_s02_axi_bresp->set_sv_netview_offsetfromdp(9585840);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bvalid.bind(*p_15_s02_axi_bvalid);
        p_15_s02_axi_bvalid->set_sv_netview_offsetfromdp(9585896);
        xsim_sc_channel<0, bool > *p_15_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_bready.bind(*p_15_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[16312].first = 1;
        (*_glb_hdl_sc_channel_map)[16312].second.push_front(p_15_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_arid.bind(*p_15_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[16290].first = 3;
        (*_glb_hdl_sc_channel_map)[16290].second.push_front(p_15_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s02_axi_araddr.bind(*p_15_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16286].first = 3;
        (*_glb_hdl_sc_channel_map)[16286].second.push_front(p_15_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s02_axi_arlen.bind(*p_15_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16291].first = 3;
        (*_glb_hdl_sc_channel_map)[16291].second.push_front(p_15_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arsize.bind(*p_15_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16297].first = 3;
        (*_glb_hdl_sc_channel_map)[16297].second.push_front(p_15_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_arburst.bind(*p_15_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16287].first = 3;
        (*_glb_hdl_sc_channel_map)[16287].second.push_front(p_15_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arlock.bind(*p_15_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16292].first = 1;
        (*_glb_hdl_sc_channel_map)[16292].second.push_front(p_15_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arcache.bind(*p_15_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16288].first = 3;
        (*_glb_hdl_sc_channel_map)[16288].second.push_front(p_15_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s02_axi_arprot.bind(*p_15_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16293].first = 3;
        (*_glb_hdl_sc_channel_map)[16293].second.push_front(p_15_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arregion.bind(*p_15_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16296].first = 3;
        (*_glb_hdl_sc_channel_map)[16296].second.push_front(p_15_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s02_axi_arqos.bind(*p_15_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16294].first = 3;
        (*_glb_hdl_sc_channel_map)[16294].second.push_front(p_15_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arvalid.bind(*p_15_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16298].first = 1;
        (*_glb_hdl_sc_channel_map)[16298].second.push_front(p_15_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_arready.bind(*p_15_s02_axi_arready);
        p_15_s02_axi_arready->set_sv_netview_offsetfromdp(9586624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s02_axi_rid.bind(*p_15_s02_axi_rid);
        p_15_s02_axi_rid->set_sv_netview_offsetfromdp(9586680);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s02_axi_rdata.bind(*p_15_s02_axi_rdata);
        p_15_s02_axi_rdata->set_sv_netview_offsetfromdp(9586736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s02_axi_rresp.bind(*p_15_s02_axi_rresp);
        p_15_s02_axi_rresp->set_sv_netview_offsetfromdp(9586792);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rlast.bind(*p_15_s02_axi_rlast);
        p_15_s02_axi_rlast->set_sv_netview_offsetfromdp(9586848);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rvalid.bind(*p_15_s02_axi_rvalid);
        p_15_s02_axi_rvalid->set_sv_netview_offsetfromdp(9586904);
        xsim_sc_channel<0, bool > *p_15_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_rready.bind(*p_15_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[16318].first = 1;
        (*_glb_hdl_sc_channel_map)[16318].second.push_front(p_15_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aclk.bind(*p_15_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16285].first = 1;
        (*_glb_hdl_sc_channel_map)[16285].second.push_front(p_15_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s02_axi_aresetn.bind(*p_15_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16289].first = 1;
        (*_glb_hdl_sc_channel_map)[16289].second.push_front(p_15_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_awid.bind(*p_15_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[16384].first = 3;
        (*_glb_hdl_sc_channel_map)[16384].second.push_front(p_15_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_awaddr.bind(*p_15_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16381].first = 3;
        (*_glb_hdl_sc_channel_map)[16381].second.push_front(p_15_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_awlen.bind(*p_15_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16385].first = 3;
        (*_glb_hdl_sc_channel_map)[16385].second.push_front(p_15_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awsize.bind(*p_15_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16391].first = 3;
        (*_glb_hdl_sc_channel_map)[16391].second.push_front(p_15_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_awburst.bind(*p_15_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16382].first = 3;
        (*_glb_hdl_sc_channel_map)[16382].second.push_front(p_15_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awlock.bind(*p_15_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16386].first = 1;
        (*_glb_hdl_sc_channel_map)[16386].second.push_front(p_15_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awcache.bind(*p_15_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16383].first = 3;
        (*_glb_hdl_sc_channel_map)[16383].second.push_front(p_15_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_awprot.bind(*p_15_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16387].first = 3;
        (*_glb_hdl_sc_channel_map)[16387].second.push_front(p_15_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awregion.bind(*p_15_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16390].first = 3;
        (*_glb_hdl_sc_channel_map)[16390].second.push_front(p_15_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_awqos.bind(*p_15_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16388].first = 3;
        (*_glb_hdl_sc_channel_map)[16388].second.push_front(p_15_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awvalid.bind(*p_15_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16392].first = 1;
        (*_glb_hdl_sc_channel_map)[16392].second.push_front(p_15_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_awready.bind(*p_15_s04_axi_awready);
        p_15_s04_axi_awready->set_sv_netview_offsetfromdp(9587744);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_wdata.bind(*p_15_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16403].first = 3;
        (*_glb_hdl_sc_channel_map)[16403].second.push_front(p_15_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_wstrb.bind(*p_15_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16406].first = 3;
        (*_glb_hdl_sc_channel_map)[16406].second.push_front(p_15_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wlast.bind(*p_15_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16404].first = 1;
        (*_glb_hdl_sc_channel_map)[16404].second.push_front(p_15_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wvalid.bind(*p_15_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16407].first = 1;
        (*_glb_hdl_sc_channel_map)[16407].second.push_front(p_15_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_wready.bind(*p_15_s04_axi_wready);
        p_15_s04_axi_wready->set_sv_netview_offsetfromdp(9588024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_bid.bind(*p_15_s04_axi_bid);
        p_15_s04_axi_bid->set_sv_netview_offsetfromdp(9588080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_bresp.bind(*p_15_s04_axi_bresp);
        p_15_s04_axi_bresp->set_sv_netview_offsetfromdp(9588136);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bvalid.bind(*p_15_s04_axi_bvalid);
        p_15_s04_axi_bvalid->set_sv_netview_offsetfromdp(9588192);
        xsim_sc_channel<0, bool > *p_15_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_bready.bind(*p_15_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[16394].first = 1;
        (*_glb_hdl_sc_channel_map)[16394].second.push_front(p_15_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_arid.bind(*p_15_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[16372].first = 3;
        (*_glb_hdl_sc_channel_map)[16372].second.push_front(p_15_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->s04_axi_araddr.bind(*p_15_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[16368].first = 3;
        (*_glb_hdl_sc_channel_map)[16368].second.push_front(p_15_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s04_axi_arlen.bind(*p_15_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[16373].first = 3;
        (*_glb_hdl_sc_channel_map)[16373].second.push_front(p_15_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arsize.bind(*p_15_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16379].first = 3;
        (*_glb_hdl_sc_channel_map)[16379].second.push_front(p_15_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_arburst.bind(*p_15_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[16369].first = 3;
        (*_glb_hdl_sc_channel_map)[16369].second.push_front(p_15_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arlock.bind(*p_15_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[16374].first = 1;
        (*_glb_hdl_sc_channel_map)[16374].second.push_front(p_15_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arcache.bind(*p_15_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[16370].first = 3;
        (*_glb_hdl_sc_channel_map)[16370].second.push_front(p_15_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s04_axi_arprot.bind(*p_15_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[16375].first = 3;
        (*_glb_hdl_sc_channel_map)[16375].second.push_front(p_15_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arregion.bind(*p_15_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[16378].first = 3;
        (*_glb_hdl_sc_channel_map)[16378].second.push_front(p_15_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s04_axi_arqos.bind(*p_15_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[16376].first = 3;
        (*_glb_hdl_sc_channel_map)[16376].second.push_front(p_15_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arvalid.bind(*p_15_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16380].first = 1;
        (*_glb_hdl_sc_channel_map)[16380].second.push_front(p_15_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_arready.bind(*p_15_s04_axi_arready);
        p_15_s04_axi_arready->set_sv_netview_offsetfromdp(9588920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_15_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_15->s04_axi_rid.bind(*p_15_s04_axi_rid);
        p_15_s04_axi_rid->set_sv_netview_offsetfromdp(9588976);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_15_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_15->s04_axi_rdata.bind(*p_15_s04_axi_rdata);
        p_15_s04_axi_rdata->set_sv_netview_offsetfromdp(9589032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s04_axi_rresp.bind(*p_15_s04_axi_rresp);
        p_15_s04_axi_rresp->set_sv_netview_offsetfromdp(9589088);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rlast.bind(*p_15_s04_axi_rlast);
        p_15_s04_axi_rlast->set_sv_netview_offsetfromdp(9589144);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rvalid.bind(*p_15_s04_axi_rvalid);
        p_15_s04_axi_rvalid->set_sv_netview_offsetfromdp(9589200);
        xsim_sc_channel<0, bool > *p_15_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_rready.bind(*p_15_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[16400].first = 1;
        (*_glb_hdl_sc_channel_map)[16400].second.push_front(p_15_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aclk.bind(*p_15_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[16367].first = 1;
        (*_glb_hdl_sc_channel_map)[16367].second.push_front(p_15_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s04_axi_aresetn.bind(*p_15_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[16371].first = 1;
        (*_glb_hdl_sc_channel_map)[16371].second.push_front(p_15_s04_axi_aresetn);
        sc_inst_16 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_16->xsim_set_dbg_index(23);
        sc_inst_17 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_17->xsim_set_dbg_index(1597);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_awaddr.bind(*p_17_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[22552].first = 3;
        (*_glb_hdl_sc_channel_map)[22552].second.push_front(p_17_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_awprot.bind(*p_17_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[22553].first = 3;
        (*_glb_hdl_sc_channel_map)[22553].second.push_front(p_17_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awvalid.bind(*p_17_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[22555].first = 1;
        (*_glb_hdl_sc_channel_map)[22555].second.push_front(p_17_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_awready.bind(*p_17_saxi_lite_cq_awready);
        p_17_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(11754616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_wdata.bind(*p_17_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[22563].first = 3;
        (*_glb_hdl_sc_channel_map)[22563].second.push_front(p_17_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->saxi_lite_cq_wstrb.bind(*p_17_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[22565].first = 3;
        (*_glb_hdl_sc_channel_map)[22565].second.push_front(p_17_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wvalid.bind(*p_17_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[22566].first = 1;
        (*_glb_hdl_sc_channel_map)[22566].second.push_front(p_17_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_wready.bind(*p_17_saxi_lite_cq_wready);
        p_17_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(11754840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_bresp.bind(*p_17_saxi_lite_cq_bresp);
        p_17_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(11754896);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bvalid.bind(*p_17_saxi_lite_cq_bvalid);
        p_17_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(11754952);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_bready.bind(*p_17_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[22556].first = 1;
        (*_glb_hdl_sc_channel_map)[22556].second.push_front(p_17_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->saxi_lite_cq_araddr.bind(*p_17_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[22547].first = 3;
        (*_glb_hdl_sc_channel_map)[22547].second.push_front(p_17_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->saxi_lite_cq_arprot.bind(*p_17_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[22549].first = 3;
        (*_glb_hdl_sc_channel_map)[22549].second.push_front(p_17_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arvalid.bind(*p_17_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[22551].first = 1;
        (*_glb_hdl_sc_channel_map)[22551].second.push_front(p_17_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_arready.bind(*p_17_saxi_lite_cq_arready);
        p_17_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(11755232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->saxi_lite_cq_rdata.bind(*p_17_saxi_lite_cq_rdata);
        p_17_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(11755288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->saxi_lite_cq_rresp.bind(*p_17_saxi_lite_cq_rresp);
        p_17_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(11755344);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rvalid.bind(*p_17_saxi_lite_cq_rvalid);
        p_17_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(11755400);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_rready.bind(*p_17_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[22560].first = 1;
        (*_glb_hdl_sc_channel_map)[22560].second.push_front(p_17_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aclk.bind(*p_17_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[22546].first = 1;
        (*_glb_hdl_sc_channel_map)[22546].second.push_front(p_17_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_17_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->saxi_lite_cq_aresetn.bind(*p_17_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[22548].first = 1;
        (*_glb_hdl_sc_channel_map)[22548].second.push_front(p_17_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_awaddr.bind(*p_17_maxi_lite_mb_awaddr);
        p_17_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(11755624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_awprot.bind(*p_17_maxi_lite_mb_awprot);
        p_17_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(11755680);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awvalid.bind(*p_17_maxi_lite_mb_awvalid);
        p_17_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(11755736);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_awready.bind(*p_17_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[22533].first = 1;
        (*_glb_hdl_sc_channel_map)[22533].second.push_front(p_17_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_wdata.bind(*p_17_maxi_lite_mb_wdata);
        p_17_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(11755848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->maxi_lite_mb_wstrb.bind(*p_17_maxi_lite_mb_wstrb);
        p_17_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(11755904);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wvalid.bind(*p_17_maxi_lite_mb_wvalid);
        p_17_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(11755960);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_wready.bind(*p_17_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[22543].first = 1;
        (*_glb_hdl_sc_channel_map)[22543].second.push_front(p_17_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_bresp.bind(*p_17_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[22536].first = 3;
        (*_glb_hdl_sc_channel_map)[22536].second.push_front(p_17_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bvalid.bind(*p_17_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[22537].first = 1;
        (*_glb_hdl_sc_channel_map)[22537].second.push_front(p_17_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_bready.bind(*p_17_maxi_lite_mb_bready);
        p_17_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(11756184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->maxi_lite_mb_araddr.bind(*p_17_maxi_lite_mb_araddr);
        p_17_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(11756240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->maxi_lite_mb_arprot.bind(*p_17_maxi_lite_mb_arprot);
        p_17_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(11756296);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arvalid.bind(*p_17_maxi_lite_mb_arvalid);
        p_17_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(11756352);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_arready.bind(*p_17_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[22529].first = 1;
        (*_glb_hdl_sc_channel_map)[22529].second.push_front(p_17_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->maxi_lite_mb_rdata.bind(*p_17_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[22538].first = 3;
        (*_glb_hdl_sc_channel_map)[22538].second.push_front(p_17_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->maxi_lite_mb_rresp.bind(*p_17_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[22540].first = 3;
        (*_glb_hdl_sc_channel_map)[22540].second.push_front(p_17_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rvalid.bind(*p_17_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[22541].first = 1;
        (*_glb_hdl_sc_channel_map)[22541].second.push_front(p_17_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_rready.bind(*p_17_maxi_lite_mb_rready);
        p_17_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(11756632);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aclk.bind(*p_17_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[22525].first = 1;
        (*_glb_hdl_sc_channel_map)[22525].second.push_front(p_17_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_17_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->maxi_lite_mb_aresetn.bind(*p_17_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[22527].first = 1;
        (*_glb_hdl_sc_channel_map)[22527].second.push_front(p_17_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_17_irq = new xsim_sc_channel<0, bool >();
        sc_inst_17->irq.bind(*p_17_irq);
        (*_glb_hdl_sc_channel_map)[22524].first = 1;
        (*_glb_hdl_sc_channel_map)[22524].second.push_front(p_17_irq);
        sc_inst_18 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_18->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_awaddr.bind(*p_18_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[17026].first = 3;
        (*_glb_hdl_sc_channel_map)[17026].second.push_front(p_18_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_awlen.bind(*p_18_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[22649].first = 3;
        (*_glb_hdl_sc_channel_map)[22649].second.push_front(p_18_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awsize.bind(*p_18_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[22652].first = 3;
        (*_glb_hdl_sc_channel_map)[22652].second.push_front(p_18_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_awburst.bind(*p_18_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[22648].first = 3;
        (*_glb_hdl_sc_channel_map)[22648].second.push_front(p_18_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awlock.bind(*p_18_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[17024].first = 1;
        (*_glb_hdl_sc_channel_map)[17024].second.push_front(p_18_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awcache.bind(*p_18_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[17025].first = 3;
        (*_glb_hdl_sc_channel_map)[17025].second.push_front(p_18_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_awprot.bind(*p_18_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[22650].first = 3;
        (*_glb_hdl_sc_channel_map)[22650].second.push_front(p_18_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awregion.bind(*p_18_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[17022].first = 3;
        (*_glb_hdl_sc_channel_map)[17022].second.push_front(p_18_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_awqos.bind(*p_18_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[17023].first = 3;
        (*_glb_hdl_sc_channel_map)[17023].second.push_front(p_18_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awvalid.bind(*p_18_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[22653].first = 1;
        (*_glb_hdl_sc_channel_map)[22653].second.push_front(p_18_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_awready.bind(*p_18_s00_axi_awready);
        p_18_s00_axi_awready->set_sv_netview_offsetfromdp(11767184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_wdata.bind(*p_18_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[22662].first = 3;
        (*_glb_hdl_sc_channel_map)[22662].second.push_front(p_18_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_wstrb.bind(*p_18_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[22665].first = 3;
        (*_glb_hdl_sc_channel_map)[22665].second.push_front(p_18_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wlast.bind(*p_18_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[22663].first = 1;
        (*_glb_hdl_sc_channel_map)[22663].second.push_front(p_18_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wvalid.bind(*p_18_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[22666].first = 1;
        (*_glb_hdl_sc_channel_map)[22666].second.push_front(p_18_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_wready.bind(*p_18_s00_axi_wready);
        p_18_s00_axi_wready->set_sv_netview_offsetfromdp(11767464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_bresp.bind(*p_18_s00_axi_bresp);
        p_18_s00_axi_bresp->set_sv_netview_offsetfromdp(11767520);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bvalid.bind(*p_18_s00_axi_bvalid);
        p_18_s00_axi_bvalid->set_sv_netview_offsetfromdp(11767576);
        xsim_sc_channel<0, bool > *p_18_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_bready.bind(*p_18_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[22654].first = 1;
        (*_glb_hdl_sc_channel_map)[22654].second.push_front(p_18_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->s00_axi_araddr.bind(*p_18_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17031].first = 3;
        (*_glb_hdl_sc_channel_map)[17031].second.push_front(p_18_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s00_axi_arlen.bind(*p_18_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[22643].first = 3;
        (*_glb_hdl_sc_channel_map)[22643].second.push_front(p_18_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arsize.bind(*p_18_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[22646].first = 3;
        (*_glb_hdl_sc_channel_map)[22646].second.push_front(p_18_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_arburst.bind(*p_18_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[22641].first = 3;
        (*_glb_hdl_sc_channel_map)[22641].second.push_front(p_18_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arlock.bind(*p_18_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17029].first = 1;
        (*_glb_hdl_sc_channel_map)[17029].second.push_front(p_18_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arcache.bind(*p_18_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17030].first = 3;
        (*_glb_hdl_sc_channel_map)[17030].second.push_front(p_18_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s00_axi_arprot.bind(*p_18_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[22644].first = 3;
        (*_glb_hdl_sc_channel_map)[22644].second.push_front(p_18_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arregion.bind(*p_18_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17027].first = 3;
        (*_glb_hdl_sc_channel_map)[17027].second.push_front(p_18_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s00_axi_arqos.bind(*p_18_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17028].first = 3;
        (*_glb_hdl_sc_channel_map)[17028].second.push_front(p_18_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arvalid.bind(*p_18_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[22647].first = 1;
        (*_glb_hdl_sc_channel_map)[22647].second.push_front(p_18_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_arready.bind(*p_18_s00_axi_arready);
        p_18_s00_axi_arready->set_sv_netview_offsetfromdp(11768248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->s00_axi_rdata.bind(*p_18_s00_axi_rdata);
        p_18_s00_axi_rdata->set_sv_netview_offsetfromdp(11768304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s00_axi_rresp.bind(*p_18_s00_axi_rresp);
        p_18_s00_axi_rresp->set_sv_netview_offsetfromdp(11768360);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rlast.bind(*p_18_s00_axi_rlast);
        p_18_s00_axi_rlast->set_sv_netview_offsetfromdp(11768416);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rvalid.bind(*p_18_s00_axi_rvalid);
        p_18_s00_axi_rvalid->set_sv_netview_offsetfromdp(11768472);
        xsim_sc_channel<0, bool > *p_18_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_rready.bind(*p_18_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[22659].first = 1;
        (*_glb_hdl_sc_channel_map)[22659].second.push_front(p_18_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aclk.bind(*p_18_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[22640].first = 1;
        (*_glb_hdl_sc_channel_map)[22640].second.push_front(p_18_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->s00_axi_aresetn.bind(*p_18_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[22642].first = 1;
        (*_glb_hdl_sc_channel_map)[22642].second.push_front(p_18_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awid.bind(*p_18_m00_axi_awid);
        p_18_m00_axi_awid->set_sv_netview_offsetfromdp(11768696);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_awaddr.bind(*p_18_m00_axi_awaddr);
        p_18_m00_axi_awaddr->set_sv_netview_offsetfromdp(11768752);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_awlen.bind(*p_18_m00_axi_awlen);
        p_18_m00_axi_awlen->set_sv_netview_offsetfromdp(11768808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awsize.bind(*p_18_m00_axi_awsize);
        p_18_m00_axi_awsize->set_sv_netview_offsetfromdp(11768864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_awburst.bind(*p_18_m00_axi_awburst);
        p_18_m00_axi_awburst->set_sv_netview_offsetfromdp(11768920);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awlock.bind(*p_18_m00_axi_awlock);
        p_18_m00_axi_awlock->set_sv_netview_offsetfromdp(11768976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awcache.bind(*p_18_m00_axi_awcache);
        p_18_m00_axi_awcache->set_sv_netview_offsetfromdp(11769032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_awprot.bind(*p_18_m00_axi_awprot);
        p_18_m00_axi_awprot->set_sv_netview_offsetfromdp(11769088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_awqos.bind(*p_18_m00_axi_awqos);
        p_18_m00_axi_awqos->set_sv_netview_offsetfromdp(11769144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_awuser.bind(*p_18_m00_axi_awuser);
        p_18_m00_axi_awuser->set_sv_netview_offsetfromdp(11769200);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awvalid.bind(*p_18_m00_axi_awvalid);
        p_18_m00_axi_awvalid->set_sv_netview_offsetfromdp(11769256);
        xsim_sc_channel<0, bool > *p_18_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_awready.bind(*p_18_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[22618].first = 1;
        (*_glb_hdl_sc_channel_map)[22618].second.push_front(p_18_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_wdata.bind(*p_18_m00_axi_wdata);
        p_18_m00_axi_wdata->set_sv_netview_offsetfromdp(11769368);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m00_axi_wstrb.bind(*p_18_m00_axi_wstrb);
        p_18_m00_axi_wstrb->set_sv_netview_offsetfromdp(11769424);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wlast.bind(*p_18_m00_axi_wlast);
        p_18_m00_axi_wlast->set_sv_netview_offsetfromdp(11769480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_wuser.bind(*p_18_m00_axi_wuser);
        p_18_m00_axi_wuser->set_sv_netview_offsetfromdp(11769536);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wvalid.bind(*p_18_m00_axi_wvalid);
        p_18_m00_axi_wvalid->set_sv_netview_offsetfromdp(11769592);
        xsim_sc_channel<0, bool > *p_18_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_wready.bind(*p_18_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[22636].first = 1;
        (*_glb_hdl_sc_channel_map)[22636].second.push_front(p_18_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_bid.bind(*p_18_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[22622].first = 3;
        (*_glb_hdl_sc_channel_map)[22622].second.push_front(p_18_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_bresp.bind(*p_18_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[22624].first = 3;
        (*_glb_hdl_sc_channel_map)[22624].second.push_front(p_18_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_buser.bind(*p_18_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[22625].first = 3;
        (*_glb_hdl_sc_channel_map)[22625].second.push_front(p_18_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bvalid.bind(*p_18_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[22626].first = 1;
        (*_glb_hdl_sc_channel_map)[22626].second.push_front(p_18_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_bready.bind(*p_18_m00_axi_bready);
        p_18_m00_axi_bready->set_sv_netview_offsetfromdp(11769928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_arid.bind(*p_18_m00_axi_arid);
        p_18_m00_axi_arid->set_sv_netview_offsetfromdp(11769984);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_18_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_18->m00_axi_araddr.bind(*p_18_m00_axi_araddr);
        p_18_m00_axi_araddr->set_sv_netview_offsetfromdp(11770040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m00_axi_arlen.bind(*p_18_m00_axi_arlen);
        p_18_m00_axi_arlen->set_sv_netview_offsetfromdp(11770096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arsize.bind(*p_18_m00_axi_arsize);
        p_18_m00_axi_arsize->set_sv_netview_offsetfromdp(11770152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_arburst.bind(*p_18_m00_axi_arburst);
        p_18_m00_axi_arburst->set_sv_netview_offsetfromdp(11770208);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arlock.bind(*p_18_m00_axi_arlock);
        p_18_m00_axi_arlock->set_sv_netview_offsetfromdp(11770264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arcache.bind(*p_18_m00_axi_arcache);
        p_18_m00_axi_arcache->set_sv_netview_offsetfromdp(11770320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m00_axi_arprot.bind(*p_18_m00_axi_arprot);
        p_18_m00_axi_arprot->set_sv_netview_offsetfromdp(11770376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m00_axi_arqos.bind(*p_18_m00_axi_arqos);
        p_18_m00_axi_arqos->set_sv_netview_offsetfromdp(11770432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_aruser.bind(*p_18_m00_axi_aruser);
        p_18_m00_axi_aruser->set_sv_netview_offsetfromdp(11770488);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arvalid.bind(*p_18_m00_axi_arvalid);
        p_18_m00_axi_arvalid->set_sv_netview_offsetfromdp(11770544);
        xsim_sc_channel<0, bool > *p_18_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_arready.bind(*p_18_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[22606].first = 1;
        (*_glb_hdl_sc_channel_map)[22606].second.push_front(p_18_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_rid.bind(*p_18_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[22628].first = 3;
        (*_glb_hdl_sc_channel_map)[22628].second.push_front(p_18_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m00_axi_rdata.bind(*p_18_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[22627].first = 3;
        (*_glb_hdl_sc_channel_map)[22627].second.push_front(p_18_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m00_axi_rresp.bind(*p_18_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[22631].first = 3;
        (*_glb_hdl_sc_channel_map)[22631].second.push_front(p_18_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rlast.bind(*p_18_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[22629].first = 1;
        (*_glb_hdl_sc_channel_map)[22629].second.push_front(p_18_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m00_axi_ruser.bind(*p_18_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[22632].first = 3;
        (*_glb_hdl_sc_channel_map)[22632].second.push_front(p_18_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rvalid.bind(*p_18_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[22633].first = 1;
        (*_glb_hdl_sc_channel_map)[22633].second.push_front(p_18_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_rready.bind(*p_18_m00_axi_rready);
        p_18_m00_axi_rready->set_sv_netview_offsetfromdp(11770992);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aclk.bind(*p_18_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[22596].first = 1;
        (*_glb_hdl_sc_channel_map)[22596].second.push_front(p_18_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_18_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->m00_axi_aresetn.bind(*p_18_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[22600].first = 1;
        (*_glb_hdl_sc_channel_map)[22600].second.push_front(p_18_m00_axi_aresetn);
        sc_inst_19 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_19->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17017].first = 3;
        (*_glb_hdl_sc_channel_map)[17017].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[22954].first = 1;
        (*_glb_hdl_sc_channel_map)[22954].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11817496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[22962].first = 3;
        (*_glb_hdl_sc_channel_map)[22962].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[22964].first = 3;
        (*_glb_hdl_sc_channel_map)[22964].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[22965].first = 1;
        (*_glb_hdl_sc_channel_map)[22965].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11817720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11817776);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11817832);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[22955].first = 1;
        (*_glb_hdl_sc_channel_map)[22955].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17018].first = 3;
        (*_glb_hdl_sc_channel_map)[17018].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[22952].first = 1;
        (*_glb_hdl_sc_channel_map)[22952].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11818056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11818112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11818168);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11818224);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[22959].first = 1;
        (*_glb_hdl_sc_channel_map)[22959].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[22913].first = 1;
        (*_glb_hdl_sc_channel_map)[22913].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[22914].first = 1;
        (*_glb_hdl_sc_channel_map)[22914].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(11818448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11818504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11818560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11818616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11818672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11818728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11818784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11818840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11818896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11818952);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11819008);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[22934].first = 1;
        (*_glb_hdl_sc_channel_map)[22934].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11819120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11819176);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11819232);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11819288);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[22948].first = 1;
        (*_glb_hdl_sc_channel_map)[22948].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[22939].first = 3;
        (*_glb_hdl_sc_channel_map)[22939].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[22940].first = 1;
        (*_glb_hdl_sc_channel_map)[22940].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11819512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11819568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11819624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11819680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11819736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11819792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11819848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11819904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11819960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11820016);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11820072);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[22923].first = 1;
        (*_glb_hdl_sc_channel_map)[22923].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[22941].first = 3;
        (*_glb_hdl_sc_channel_map)[22941].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[22944].first = 3;
        (*_glb_hdl_sc_channel_map)[22944].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[22942].first = 1;
        (*_glb_hdl_sc_channel_map)[22942].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[22945].first = 1;
        (*_glb_hdl_sc_channel_map)[22945].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11820408);
        sc_inst_20 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_20->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17015].first = 3;
        (*_glb_hdl_sc_channel_map)[17015].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23006].first = 1;
        (*_glb_hdl_sc_channel_map)[23006].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11820624);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23014].first = 3;
        (*_glb_hdl_sc_channel_map)[23014].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23016].first = 3;
        (*_glb_hdl_sc_channel_map)[23016].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23017].first = 1;
        (*_glb_hdl_sc_channel_map)[23017].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11820848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11820904);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11820960);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23007].first = 1;
        (*_glb_hdl_sc_channel_map)[23007].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17016].first = 3;
        (*_glb_hdl_sc_channel_map)[17016].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23004].first = 1;
        (*_glb_hdl_sc_channel_map)[23004].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11821184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11821240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11821296);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11821352);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23011].first = 1;
        (*_glb_hdl_sc_channel_map)[23011].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[22966].first = 1;
        (*_glb_hdl_sc_channel_map)[22966].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[22967].first = 1;
        (*_glb_hdl_sc_channel_map)[22967].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(11821576);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11821632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11821688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11821744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11821800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11821856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11821912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11821968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11822024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11822080);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11822136);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[22986].first = 1;
        (*_glb_hdl_sc_channel_map)[22986].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11822248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11822304);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11822360);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11822416);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23000].first = 1;
        (*_glb_hdl_sc_channel_map)[23000].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[22991].first = 3;
        (*_glb_hdl_sc_channel_map)[22991].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[22992].first = 1;
        (*_glb_hdl_sc_channel_map)[22992].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11822640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11822696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11822752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11822808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11822864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11822920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11822976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11823032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11823088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11823144);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11823200);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[22975].first = 1;
        (*_glb_hdl_sc_channel_map)[22975].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[22993].first = 3;
        (*_glb_hdl_sc_channel_map)[22993].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[22996].first = 3;
        (*_glb_hdl_sc_channel_map)[22996].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[22994].first = 1;
        (*_glb_hdl_sc_channel_map)[22994].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[22997].first = 1;
        (*_glb_hdl_sc_channel_map)[22997].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11823536);
        sc_inst_21 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_21->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17013].first = 3;
        (*_glb_hdl_sc_channel_map)[17013].second.push_front(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23059].first = 1;
        (*_glb_hdl_sc_channel_map)[23059].second.push_front(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11823752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23067].first = 3;
        (*_glb_hdl_sc_channel_map)[23067].second.push_front(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23069].first = 3;
        (*_glb_hdl_sc_channel_map)[23069].second.push_front(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23070].first = 1;
        (*_glb_hdl_sc_channel_map)[23070].second.push_front(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11823976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11824032);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11824088);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23060].first = 1;
        (*_glb_hdl_sc_channel_map)[23060].second.push_front(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17014].first = 3;
        (*_glb_hdl_sc_channel_map)[17014].second.push_front(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23057].first = 1;
        (*_glb_hdl_sc_channel_map)[23057].second.push_front(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11824312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11824368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11824424);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11824480);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23064].first = 1;
        (*_glb_hdl_sc_channel_map)[23064].second.push_front(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map)[23019].first = 1;
        (*_glb_hdl_sc_channel_map)[23019].second.push_front(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23020].first = 1;
        (*_glb_hdl_sc_channel_map)[23020].second.push_front(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(11824704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11824760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11824816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11824872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11824928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11824984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11825040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11825096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11825152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11825208);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11825264);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23039].first = 1;
        (*_glb_hdl_sc_channel_map)[23039].second.push_front(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11825376);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11825432);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11825488);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11825544);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23053].first = 1;
        (*_glb_hdl_sc_channel_map)[23053].second.push_front(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23044].first = 3;
        (*_glb_hdl_sc_channel_map)[23044].second.push_front(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23045].first = 1;
        (*_glb_hdl_sc_channel_map)[23045].second.push_front(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11825768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11825824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11825880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11825936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11825992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11826048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11826104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11826160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11826216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11826272);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11826328);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23028].first = 1;
        (*_glb_hdl_sc_channel_map)[23028].second.push_front(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23046].first = 3;
        (*_glb_hdl_sc_channel_map)[23046].second.push_front(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23049].first = 3;
        (*_glb_hdl_sc_channel_map)[23049].second.push_front(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23047].first = 1;
        (*_glb_hdl_sc_channel_map)[23047].second.push_front(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23050].first = 1;
        (*_glb_hdl_sc_channel_map)[23050].second.push_front(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11826664);
        sc_inst_22 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_22->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_AWADDR.bind(*p_22_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[17011].first = 3;
        (*_glb_hdl_sc_channel_map)[17011].second.push_front(p_22_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWVALID.bind(*p_22_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[23112].first = 1;
        (*_glb_hdl_sc_channel_map)[23112].second.push_front(p_22_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_AWREADY.bind(*p_22_s_axi_control_AWREADY);
        p_22_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11826880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_WDATA.bind(*p_22_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[23120].first = 3;
        (*_glb_hdl_sc_channel_map)[23120].second.push_front(p_22_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_control_WSTRB.bind(*p_22_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[23122].first = 3;
        (*_glb_hdl_sc_channel_map)[23122].second.push_front(p_22_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WVALID.bind(*p_22_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[23123].first = 1;
        (*_glb_hdl_sc_channel_map)[23123].second.push_front(p_22_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_WREADY.bind(*p_22_s_axi_control_WREADY);
        p_22_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11827104);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_BRESP.bind(*p_22_s_axi_control_BRESP);
        p_22_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11827160);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BVALID.bind(*p_22_s_axi_control_BVALID);
        p_22_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11827216);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_BREADY.bind(*p_22_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[23113].first = 1;
        (*_glb_hdl_sc_channel_map)[23113].second.push_front(p_22_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_22_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_22->s_axi_control_ARADDR.bind(*p_22_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[17012].first = 3;
        (*_glb_hdl_sc_channel_map)[17012].second.push_front(p_22_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARVALID.bind(*p_22_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[23110].first = 1;
        (*_glb_hdl_sc_channel_map)[23110].second.push_front(p_22_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_ARREADY.bind(*p_22_s_axi_control_ARREADY);
        p_22_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11827440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_control_RDATA.bind(*p_22_s_axi_control_RDATA);
        p_22_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11827496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_control_RRESP.bind(*p_22_s_axi_control_RRESP);
        p_22_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11827552);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RVALID.bind(*p_22_s_axi_control_RVALID);
        p_22_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11827608);
        xsim_sc_channel<0, bool > *p_22_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_control_RREADY.bind(*p_22_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[23117].first = 1;
        (*_glb_hdl_sc_channel_map)[23117].second.push_front(p_22_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_22_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_clk.bind(*p_22_ap_clk);
        (*_glb_hdl_sc_channel_map)[23072].first = 1;
        (*_glb_hdl_sc_channel_map)[23072].second.push_front(p_22_ap_clk);
        xsim_sc_channel<0, bool > *p_22_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_22->ap_rst_n.bind(*p_22_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[23073].first = 1;
        (*_glb_hdl_sc_channel_map)[23073].second.push_front(p_22_ap_rst_n);
        xsim_sc_channel<0, bool > *p_22_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_22->interrupt.bind(*p_22_interrupt);
        p_22_interrupt->set_sv_netview_offsetfromdp(11827832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_AWADDR.bind(*p_22_m_axi_gmem_AWADDR);
        p_22_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11827888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_AWLEN.bind(*p_22_m_axi_gmem_AWLEN);
        p_22_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11827944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWSIZE.bind(*p_22_m_axi_gmem_AWSIZE);
        p_22_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11828000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_AWBURST.bind(*p_22_m_axi_gmem_AWBURST);
        p_22_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11828056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_AWLOCK.bind(*p_22_m_axi_gmem_AWLOCK);
        p_22_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11828112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWREGION.bind(*p_22_m_axi_gmem_AWREGION);
        p_22_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11828168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWCACHE.bind(*p_22_m_axi_gmem_AWCACHE);
        p_22_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11828224);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_AWPROT.bind(*p_22_m_axi_gmem_AWPROT);
        p_22_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11828280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_AWQOS.bind(*p_22_m_axi_gmem_AWQOS);
        p_22_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11828336);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWVALID.bind(*p_22_m_axi_gmem_AWVALID);
        p_22_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11828392);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_AWREADY.bind(*p_22_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[23092].first = 1;
        (*_glb_hdl_sc_channel_map)[23092].second.push_front(p_22_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_WDATA.bind(*p_22_m_axi_gmem_WDATA);
        p_22_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11828504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_WSTRB.bind(*p_22_m_axi_gmem_WSTRB);
        p_22_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11828560);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WLAST.bind(*p_22_m_axi_gmem_WLAST);
        p_22_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11828616);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WVALID.bind(*p_22_m_axi_gmem_WVALID);
        p_22_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11828672);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_WREADY.bind(*p_22_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[23106].first = 1;
        (*_glb_hdl_sc_channel_map)[23106].second.push_front(p_22_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_BRESP.bind(*p_22_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[23097].first = 3;
        (*_glb_hdl_sc_channel_map)[23097].second.push_front(p_22_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BVALID.bind(*p_22_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[23098].first = 1;
        (*_glb_hdl_sc_channel_map)[23098].second.push_front(p_22_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_BREADY.bind(*p_22_m_axi_gmem_BREADY);
        p_22_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11828896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axi_gmem_ARADDR.bind(*p_22_m_axi_gmem_ARADDR);
        p_22_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11828952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_gmem_ARLEN.bind(*p_22_m_axi_gmem_ARLEN);
        p_22_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11829008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARSIZE.bind(*p_22_m_axi_gmem_ARSIZE);
        p_22_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11829064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_ARBURST.bind(*p_22_m_axi_gmem_ARBURST);
        p_22_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11829120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_axi_gmem_ARLOCK.bind(*p_22_m_axi_gmem_ARLOCK);
        p_22_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11829176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARREGION.bind(*p_22_m_axi_gmem_ARREGION);
        p_22_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11829232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARCACHE.bind(*p_22_m_axi_gmem_ARCACHE);
        p_22_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11829288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_gmem_ARPROT.bind(*p_22_m_axi_gmem_ARPROT);
        p_22_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11829344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_gmem_ARQOS.bind(*p_22_m_axi_gmem_ARQOS);
        p_22_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11829400);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARVALID.bind(*p_22_m_axi_gmem_ARVALID);
        p_22_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11829456);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_ARREADY.bind(*p_22_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[23081].first = 1;
        (*_glb_hdl_sc_channel_map)[23081].second.push_front(p_22_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->m_axi_gmem_RDATA.bind(*p_22_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[23099].first = 3;
        (*_glb_hdl_sc_channel_map)[23099].second.push_front(p_22_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_gmem_RRESP.bind(*p_22_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[23102].first = 3;
        (*_glb_hdl_sc_channel_map)[23102].second.push_front(p_22_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RLAST.bind(*p_22_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[23100].first = 1;
        (*_glb_hdl_sc_channel_map)[23100].second.push_front(p_22_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RVALID.bind(*p_22_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[23103].first = 1;
        (*_glb_hdl_sc_channel_map)[23103].second.push_front(p_22_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_22_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_gmem_RREADY.bind(*p_22_m_axi_gmem_RREADY);
        p_22_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11829792);
        sc_inst_23 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_23->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_23_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ui_clk.bind(*p_23_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[23169].first = 1;
        (*_glb_hdl_sc_channel_map)[23169].second.push_front(p_23_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awid.bind(*p_23_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[23142].first = 3;
        (*_glb_hdl_sc_channel_map)[23142].second.push_front(p_23_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_awaddr.bind(*p_23_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[23139].first = 3;
        (*_glb_hdl_sc_channel_map)[23139].second.push_front(p_23_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_awlen.bind(*p_23_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[23143].first = 3;
        (*_glb_hdl_sc_channel_map)[23143].second.push_front(p_23_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awsize.bind(*p_23_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[23148].first = 3;
        (*_glb_hdl_sc_channel_map)[23148].second.push_front(p_23_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_awburst.bind(*p_23_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[23140].first = 3;
        (*_glb_hdl_sc_channel_map)[23140].second.push_front(p_23_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awlock.bind(*p_23_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[23144].first = 1;
        (*_glb_hdl_sc_channel_map)[23144].second.push_front(p_23_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awcache.bind(*p_23_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[23141].first = 3;
        (*_glb_hdl_sc_channel_map)[23141].second.push_front(p_23_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_awprot.bind(*p_23_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[23145].first = 3;
        (*_glb_hdl_sc_channel_map)[23145].second.push_front(p_23_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awregion.bind(*p_23_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[17009].first = 3;
        (*_glb_hdl_sc_channel_map)[17009].second.push_front(p_23_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_awqos.bind(*p_23_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[23146].first = 3;
        (*_glb_hdl_sc_channel_map)[23146].second.push_front(p_23_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_awuser.bind(*p_23_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[23149].first = 3;
        (*_glb_hdl_sc_channel_map)[23149].second.push_front(p_23_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awvalid.bind(*p_23_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[23150].first = 1;
        (*_glb_hdl_sc_channel_map)[23150].second.push_front(p_23_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_awready.bind(*p_23_c0_ddr_saxi_awready);
        p_23_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11830624);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_wdata.bind(*p_23_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[23163].first = 3;
        (*_glb_hdl_sc_channel_map)[23163].second.push_front(p_23_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->c0_ddr_saxi_wstrb.bind(*p_23_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[23166].first = 3;
        (*_glb_hdl_sc_channel_map)[23166].second.push_front(p_23_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wlast.bind(*p_23_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[23164].first = 1;
        (*_glb_hdl_sc_channel_map)[23164].second.push_front(p_23_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_wuser.bind(*p_23_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[23167].first = 3;
        (*_glb_hdl_sc_channel_map)[23167].second.push_front(p_23_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wvalid.bind(*p_23_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[23168].first = 1;
        (*_glb_hdl_sc_channel_map)[23168].second.push_front(p_23_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_wready.bind(*p_23_c0_ddr_saxi_wready);
        p_23_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11830960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_bid.bind(*p_23_c0_ddr_saxi_bid);
        p_23_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11831016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_bresp.bind(*p_23_c0_ddr_saxi_bresp);
        p_23_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11831072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_buser.bind(*p_23_c0_ddr_saxi_buser);
        p_23_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11831128);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bvalid.bind(*p_23_c0_ddr_saxi_bvalid);
        p_23_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11831184);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_bready.bind(*p_23_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[23152].first = 1;
        (*_glb_hdl_sc_channel_map)[23152].second.push_front(p_23_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_arid.bind(*p_23_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[23130].first = 3;
        (*_glb_hdl_sc_channel_map)[23130].second.push_front(p_23_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_23_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_23->c0_ddr_saxi_araddr.bind(*p_23_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[23126].first = 3;
        (*_glb_hdl_sc_channel_map)[23126].second.push_front(p_23_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->c0_ddr_saxi_arlen.bind(*p_23_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[23131].first = 3;
        (*_glb_hdl_sc_channel_map)[23131].second.push_front(p_23_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arsize.bind(*p_23_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[23136].first = 3;
        (*_glb_hdl_sc_channel_map)[23136].second.push_front(p_23_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_arburst.bind(*p_23_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[23127].first = 3;
        (*_glb_hdl_sc_channel_map)[23127].second.push_front(p_23_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arlock.bind(*p_23_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[23132].first = 1;
        (*_glb_hdl_sc_channel_map)[23132].second.push_front(p_23_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arcache.bind(*p_23_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[23128].first = 3;
        (*_glb_hdl_sc_channel_map)[23128].second.push_front(p_23_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->c0_ddr_saxi_arprot.bind(*p_23_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[23133].first = 3;
        (*_glb_hdl_sc_channel_map)[23133].second.push_front(p_23_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arregion.bind(*p_23_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[17010].first = 3;
        (*_glb_hdl_sc_channel_map)[17010].second.push_front(p_23_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->c0_ddr_saxi_arqos.bind(*p_23_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[23134].first = 3;
        (*_glb_hdl_sc_channel_map)[23134].second.push_front(p_23_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_aruser.bind(*p_23_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[23137].first = 3;
        (*_glb_hdl_sc_channel_map)[23137].second.push_front(p_23_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arvalid.bind(*p_23_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[23138].first = 1;
        (*_glb_hdl_sc_channel_map)[23138].second.push_front(p_23_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_arready.bind(*p_23_c0_ddr_saxi_arready);
        p_23_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11831968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_rid.bind(*p_23_c0_ddr_saxi_rid);
        p_23_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11832024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_23_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_23->c0_ddr_saxi_rdata.bind(*p_23_c0_ddr_saxi_rdata);
        p_23_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11832080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->c0_ddr_saxi_rresp.bind(*p_23_c0_ddr_saxi_rresp);
        p_23_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11832136);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rlast.bind(*p_23_c0_ddr_saxi_rlast);
        p_23_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11832192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->c0_ddr_saxi_ruser.bind(*p_23_c0_ddr_saxi_ruser);
        p_23_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11832248);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rvalid.bind(*p_23_c0_ddr_saxi_rvalid);
        p_23_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11832304);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_rready.bind(*p_23_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[23159].first = 1;
        (*_glb_hdl_sc_channel_map)[23159].second.push_front(p_23_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aclk.bind(*p_23_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[23125].first = 1;
        (*_glb_hdl_sc_channel_map)[23125].second.push_front(p_23_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_23_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->c0_ddr_saxi_aresetn.bind(*p_23_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[23129].first = 1;
        (*_glb_hdl_sc_channel_map)[23129].second.push_front(p_23_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_awid.bind(*p_23_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[16993].first = 3;
        (*_glb_hdl_sc_channel_map)[16993].second.push_front(p_23_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awaddr.bind(*p_23_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[16996].first = 3;
        (*_glb_hdl_sc_channel_map)[16996].second.push_front(p_23_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_awlen.bind(*p_23_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[16992].first = 3;
        (*_glb_hdl_sc_channel_map)[16992].second.push_front(p_23_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awsize.bind(*p_23_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[16987].first = 3;
        (*_glb_hdl_sc_channel_map)[16987].second.push_front(p_23_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_awburst.bind(*p_23_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[16995].first = 3;
        (*_glb_hdl_sc_channel_map)[16995].second.push_front(p_23_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awlock.bind(*p_23_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[16991].first = 1;
        (*_glb_hdl_sc_channel_map)[16991].second.push_front(p_23_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awcache.bind(*p_23_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[16994].first = 3;
        (*_glb_hdl_sc_channel_map)[16994].second.push_front(p_23_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_awprot.bind(*p_23_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[16990].first = 3;
        (*_glb_hdl_sc_channel_map)[16990].second.push_front(p_23_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awregion.bind(*p_23_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[16988].first = 3;
        (*_glb_hdl_sc_channel_map)[16988].second.push_front(p_23_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_awqos.bind(*p_23_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[16989].first = 3;
        (*_glb_hdl_sc_channel_map)[16989].second.push_front(p_23_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_awuser.bind(*p_23_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[16986].first = 3;
        (*_glb_hdl_sc_channel_map)[16986].second.push_front(p_23_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awvalid.bind(*p_23_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[16985].first = 1;
        (*_glb_hdl_sc_channel_map)[16985].second.push_front(p_23_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_awready.bind(*p_23_s_xdma_axi_awready);
        p_23_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11833200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_wdata.bind(*p_23_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[16982].first = 3;
        (*_glb_hdl_sc_channel_map)[16982].second.push_front(p_23_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_wstrb.bind(*p_23_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[16980].first = 3;
        (*_glb_hdl_sc_channel_map)[16980].second.push_front(p_23_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wlast.bind(*p_23_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[16981].first = 1;
        (*_glb_hdl_sc_channel_map)[16981].second.push_front(p_23_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_wuser.bind(*p_23_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[16979].first = 3;
        (*_glb_hdl_sc_channel_map)[16979].second.push_front(p_23_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wvalid.bind(*p_23_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[16978].first = 1;
        (*_glb_hdl_sc_channel_map)[16978].second.push_front(p_23_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_wready.bind(*p_23_s_xdma_axi_wready);
        p_23_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11833536);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_bid.bind(*p_23_s_xdma_axi_bid);
        p_23_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11833592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_bresp.bind(*p_23_s_xdma_axi_bresp);
        p_23_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11833648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_buser.bind(*p_23_s_xdma_axi_buser);
        p_23_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11833704);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bvalid.bind(*p_23_s_xdma_axi_bvalid);
        p_23_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11833760);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_bready.bind(*p_23_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[16984].first = 1;
        (*_glb_hdl_sc_channel_map)[16984].second.push_front(p_23_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_arid.bind(*p_23_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[17005].first = 3;
        (*_glb_hdl_sc_channel_map)[17005].second.push_front(p_23_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_araddr.bind(*p_23_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[17008].first = 3;
        (*_glb_hdl_sc_channel_map)[17008].second.push_front(p_23_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->s_xdma_axi_arlen.bind(*p_23_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[17004].first = 3;
        (*_glb_hdl_sc_channel_map)[17004].second.push_front(p_23_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arsize.bind(*p_23_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[16999].first = 3;
        (*_glb_hdl_sc_channel_map)[16999].second.push_front(p_23_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_arburst.bind(*p_23_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[17007].first = 3;
        (*_glb_hdl_sc_channel_map)[17007].second.push_front(p_23_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arlock.bind(*p_23_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[17003].first = 1;
        (*_glb_hdl_sc_channel_map)[17003].second.push_front(p_23_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arcache.bind(*p_23_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[17006].first = 3;
        (*_glb_hdl_sc_channel_map)[17006].second.push_front(p_23_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_xdma_axi_arprot.bind(*p_23_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[17002].first = 3;
        (*_glb_hdl_sc_channel_map)[17002].second.push_front(p_23_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arregion.bind(*p_23_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[17000].first = 3;
        (*_glb_hdl_sc_channel_map)[17000].second.push_front(p_23_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_xdma_axi_arqos.bind(*p_23_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[17001].first = 3;
        (*_glb_hdl_sc_channel_map)[17001].second.push_front(p_23_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_aruser.bind(*p_23_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[16998].first = 3;
        (*_glb_hdl_sc_channel_map)[16998].second.push_front(p_23_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arvalid.bind(*p_23_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[16997].first = 1;
        (*_glb_hdl_sc_channel_map)[16997].second.push_front(p_23_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_arready.bind(*p_23_s_xdma_axi_arready);
        p_23_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11834544);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_23_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_23->s_xdma_axi_rid.bind(*p_23_s_xdma_axi_rid);
        p_23_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11834600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_xdma_axi_rdata.bind(*p_23_s_xdma_axi_rdata);
        p_23_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11834656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_xdma_axi_rresp.bind(*p_23_s_xdma_axi_rresp);
        p_23_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11834712);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rlast.bind(*p_23_s_xdma_axi_rlast);
        p_23_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11834768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->s_xdma_axi_ruser.bind(*p_23_s_xdma_axi_ruser);
        p_23_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11834824);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rvalid.bind(*p_23_s_xdma_axi_rvalid);
        p_23_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11834880);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_rready.bind(*p_23_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[16983].first = 1;
        (*_glb_hdl_sc_channel_map)[16983].second.push_front(p_23_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aclk.bind(*p_23_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[23170].first = 1;
        (*_glb_hdl_sc_channel_map)[23170].second.push_front(p_23_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_23_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_xdma_axi_aresetn.bind(*p_23_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[23171].first = 1;
        (*_glb_hdl_sc_channel_map)[23171].second.push_front(p_23_s_xdma_axi_aresetn);
        sc_inst_24 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_24->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_awid.bind(*p_24_m_aximm_awid);
        p_24_m_aximm_awid->set_sv_netview_offsetfromdp(11835152);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_awaddr.bind(*p_24_m_aximm_awaddr);
        p_24_m_aximm_awaddr->set_sv_netview_offsetfromdp(11835208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_awlen.bind(*p_24_m_aximm_awlen);
        p_24_m_aximm_awlen->set_sv_netview_offsetfromdp(11835264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awsize.bind(*p_24_m_aximm_awsize);
        p_24_m_aximm_awsize->set_sv_netview_offsetfromdp(11835320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_awburst.bind(*p_24_m_aximm_awburst);
        p_24_m_aximm_awburst->set_sv_netview_offsetfromdp(11835376);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awlock.bind(*p_24_m_aximm_awlock);
        p_24_m_aximm_awlock->set_sv_netview_offsetfromdp(11835432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awcache.bind(*p_24_m_aximm_awcache);
        p_24_m_aximm_awcache->set_sv_netview_offsetfromdp(11835488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_awprot.bind(*p_24_m_aximm_awprot);
        p_24_m_aximm_awprot->set_sv_netview_offsetfromdp(11835544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_awqos.bind(*p_24_m_aximm_awqos);
        p_24_m_aximm_awqos->set_sv_netview_offsetfromdp(11835600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_awuser.bind(*p_24_m_aximm_awuser);
        p_24_m_aximm_awuser->set_sv_netview_offsetfromdp(11835656);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awvalid.bind(*p_24_m_aximm_awvalid);
        p_24_m_aximm_awvalid->set_sv_netview_offsetfromdp(11835712);
        xsim_sc_channel<0, bool > *p_24_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_awready.bind(*p_24_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[23227].first = 1;
        (*_glb_hdl_sc_channel_map)[23227].second.push_front(p_24_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_wdata.bind(*p_24_m_aximm_wdata);
        p_24_m_aximm_wdata->set_sv_netview_offsetfromdp(11835824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_wstrb.bind(*p_24_m_aximm_wstrb);
        p_24_m_aximm_wstrb->set_sv_netview_offsetfromdp(11835880);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wlast.bind(*p_24_m_aximm_wlast);
        p_24_m_aximm_wlast->set_sv_netview_offsetfromdp(11835936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_wuser.bind(*p_24_m_aximm_wuser);
        p_24_m_aximm_wuser->set_sv_netview_offsetfromdp(11835992);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wvalid.bind(*p_24_m_aximm_wvalid);
        p_24_m_aximm_wvalid->set_sv_netview_offsetfromdp(11836048);
        xsim_sc_channel<0, bool > *p_24_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_wready.bind(*p_24_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[23242].first = 1;
        (*_glb_hdl_sc_channel_map)[23242].second.push_front(p_24_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_bid.bind(*p_24_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[23230].first = 3;
        (*_glb_hdl_sc_channel_map)[23230].second.push_front(p_24_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_bresp.bind(*p_24_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[23232].first = 3;
        (*_glb_hdl_sc_channel_map)[23232].second.push_front(p_24_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_buser.bind(*p_24_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[16977].first = 3;
        (*_glb_hdl_sc_channel_map)[16977].second.push_front(p_24_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bvalid.bind(*p_24_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[23233].first = 1;
        (*_glb_hdl_sc_channel_map)[23233].second.push_front(p_24_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_bready.bind(*p_24_m_aximm_bready);
        p_24_m_aximm_bready->set_sv_netview_offsetfromdp(11836384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_arid.bind(*p_24_m_aximm_arid);
        p_24_m_aximm_arid->set_sv_netview_offsetfromdp(11836440);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_aximm_araddr.bind(*p_24_m_aximm_araddr);
        p_24_m_aximm_araddr->set_sv_netview_offsetfromdp(11836496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_24_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_24->m_aximm_arlen.bind(*p_24_m_aximm_arlen);
        p_24_m_aximm_arlen->set_sv_netview_offsetfromdp(11836552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arsize.bind(*p_24_m_aximm_arsize);
        p_24_m_aximm_arsize->set_sv_netview_offsetfromdp(11836608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_arburst.bind(*p_24_m_aximm_arburst);
        p_24_m_aximm_arburst->set_sv_netview_offsetfromdp(11836664);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arlock.bind(*p_24_m_aximm_arlock);
        p_24_m_aximm_arlock->set_sv_netview_offsetfromdp(11836720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arcache.bind(*p_24_m_aximm_arcache);
        p_24_m_aximm_arcache->set_sv_netview_offsetfromdp(11836776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_aximm_arprot.bind(*p_24_m_aximm_arprot);
        p_24_m_aximm_arprot->set_sv_netview_offsetfromdp(11836832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_aximm_arqos.bind(*p_24_m_aximm_arqos);
        p_24_m_aximm_arqos->set_sv_netview_offsetfromdp(11836888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_aruser.bind(*p_24_m_aximm_aruser);
        p_24_m_aximm_aruser->set_sv_netview_offsetfromdp(11836944);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arvalid.bind(*p_24_m_aximm_arvalid);
        p_24_m_aximm_arvalid->set_sv_netview_offsetfromdp(11837000);
        xsim_sc_channel<0, bool > *p_24_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_arready.bind(*p_24_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[23216].first = 1;
        (*_glb_hdl_sc_channel_map)[23216].second.push_front(p_24_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_rid.bind(*p_24_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[23235].first = 3;
        (*_glb_hdl_sc_channel_map)[23235].second.push_front(p_24_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_aximm_rdata.bind(*p_24_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[23234].first = 3;
        (*_glb_hdl_sc_channel_map)[23234].second.push_front(p_24_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_aximm_rresp.bind(*p_24_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[23238].first = 3;
        (*_glb_hdl_sc_channel_map)[23238].second.push_front(p_24_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rlast.bind(*p_24_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[23236].first = 1;
        (*_glb_hdl_sc_channel_map)[23236].second.push_front(p_24_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->m_aximm_ruser.bind(*p_24_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[16976].first = 3;
        (*_glb_hdl_sc_channel_map)[16976].second.push_front(p_24_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rvalid.bind(*p_24_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[23239].first = 1;
        (*_glb_hdl_sc_channel_map)[23239].second.push_front(p_24_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_rready.bind(*p_24_m_aximm_rready);
        p_24_m_aximm_rready->set_sv_netview_offsetfromdp(11837448);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aclk.bind(*p_24_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[23206].first = 1;
        (*_glb_hdl_sc_channel_map)[23206].second.push_front(p_24_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_24_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_aximm_aresetn.bind(*p_24_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[23210].first = 1;
        (*_glb_hdl_sc_channel_map)[23210].second.push_front(p_24_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_awaddr.bind(*p_24_m_axictrl_awaddr);
        p_24_m_axictrl_awaddr->set_sv_netview_offsetfromdp(11837616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_awprot.bind(*p_24_m_axictrl_awprot);
        p_24_m_axictrl_awprot->set_sv_netview_offsetfromdp(11837672);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awvalid.bind(*p_24_m_axictrl_awvalid);
        p_24_m_axictrl_awvalid->set_sv_netview_offsetfromdp(11837728);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_awready.bind(*p_24_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[23193].first = 1;
        (*_glb_hdl_sc_channel_map)[23193].second.push_front(p_24_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_wdata.bind(*p_24_m_axictrl_wdata);
        p_24_m_axictrl_wdata->set_sv_netview_offsetfromdp(11837840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->m_axictrl_wstrb.bind(*p_24_m_axictrl_wstrb);
        p_24_m_axictrl_wstrb->set_sv_netview_offsetfromdp(11837896);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wvalid.bind(*p_24_m_axictrl_wvalid);
        p_24_m_axictrl_wvalid->set_sv_netview_offsetfromdp(11837952);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_wready.bind(*p_24_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[23203].first = 1;
        (*_glb_hdl_sc_channel_map)[23203].second.push_front(p_24_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_bresp.bind(*p_24_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[23196].first = 3;
        (*_glb_hdl_sc_channel_map)[23196].second.push_front(p_24_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bvalid.bind(*p_24_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[23197].first = 1;
        (*_glb_hdl_sc_channel_map)[23197].second.push_front(p_24_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_bready.bind(*p_24_m_axictrl_bready);
        p_24_m_axictrl_bready->set_sv_netview_offsetfromdp(11838176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->m_axictrl_araddr.bind(*p_24_m_axictrl_araddr);
        p_24_m_axictrl_araddr->set_sv_netview_offsetfromdp(11838232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->m_axictrl_arprot.bind(*p_24_m_axictrl_arprot);
        p_24_m_axictrl_arprot->set_sv_netview_offsetfromdp(11838288);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arvalid.bind(*p_24_m_axictrl_arvalid);
        p_24_m_axictrl_arvalid->set_sv_netview_offsetfromdp(11838344);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_arready.bind(*p_24_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[23189].first = 1;
        (*_glb_hdl_sc_channel_map)[23189].second.push_front(p_24_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->m_axictrl_rdata.bind(*p_24_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[23198].first = 3;
        (*_glb_hdl_sc_channel_map)[23198].second.push_front(p_24_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->m_axictrl_rresp.bind(*p_24_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[23200].first = 3;
        (*_glb_hdl_sc_channel_map)[23200].second.push_front(p_24_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rvalid.bind(*p_24_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[23201].first = 1;
        (*_glb_hdl_sc_channel_map)[23201].second.push_front(p_24_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_rready.bind(*p_24_m_axictrl_rready);
        p_24_m_axictrl_rready->set_sv_netview_offsetfromdp(11838624);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aclk.bind(*p_24_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[23185].first = 1;
        (*_glb_hdl_sc_channel_map)[23185].second.push_front(p_24_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_24_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->m_axictrl_aresetn.bind(*p_24_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[23187].first = 1;
        (*_glb_hdl_sc_channel_map)[23187].second.push_front(p_24_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
    }
