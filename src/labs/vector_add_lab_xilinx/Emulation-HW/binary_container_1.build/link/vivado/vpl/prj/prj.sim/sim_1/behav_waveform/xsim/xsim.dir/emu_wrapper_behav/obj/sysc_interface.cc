#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::map<unsigned int, std::pair<unsigned int, std::list < void*> > > *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE(unsigned int netid, int len, char* pval)
    {
        unsigned int data_type = (*_glb_hdl_sc_channel_map)[netid].first;
        std::list<void*> list_of_ch = (*_glb_hdl_sc_channel_map)[netid].second;
        switch (data_type) {
            case 0 /*int*/ : { 
                int val = *((int*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,int>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 1 /*bool*/ : { 
                bool val = *((bool*)(pval));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0,bool>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 2 /*sc_logic*/ : { 
                sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*it))->update_from_hdl(val);
                break;
            } 
            case 3 /*sc_bv*/ : { 
                switch (len) { 
                    case 1 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 2 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 3 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 4 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 5 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 6 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 8 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 32 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 34 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 35 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 64 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                    case 512 : { 
                        for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                            ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*it))->update_from_hdl(pval);
                        break;
                    }
                        default: 
                            std::cout << "Error, unknown bitvector length: " << len << " NOT supported " << std::endl;
                            assert(0);
                }; 
                break;
            } 
            case 5 /*bit*/ : { 
                sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
                for ( std::list<void*>::iterator it = list_of_ch.begin(); it != list_of_ch.end(); ++it)
                    ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*it))->update_from_hdl(val);
                break;
            } 
            default: 
                std::cout << "Error, unknown type: " << data_type << " NOT supported " << std::endl;
                assert(0);
        };
    }


extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::map <unsigned int, std::pair<unsigned int, std::list<void*> > > ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map)[4254].first = 1;
        (*_glb_hdl_sc_channel_map)[4254].second.push_front(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[4237].first = 1;
        (*_glb_hdl_sc_channel_map)[4237].second.push_front(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map)[4267].first = 1;
        (*_glb_hdl_sc_channel_map)[4267].second.push_front(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map)[4266].first = 1;
        (*_glb_hdl_sc_channel_map)[4266].second.push_front(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map)[4200].first = 1;
        (*_glb_hdl_sc_channel_map)[4200].second.push_front(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map)[4199].first = 1;
        (*_glb_hdl_sc_channel_map)[4199].second.push_front(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(5513176);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map)[4268].first = 3;
        (*_glb_hdl_sc_channel_map)[4268].second.push_front(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map)[4277].first = 1;
        (*_glb_hdl_sc_channel_map)[4277].second.push_front(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map)[4274].first = 3;
        (*_glb_hdl_sc_channel_map)[4274].second.push_front(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map)[4271].first = 3;
        (*_glb_hdl_sc_channel_map)[4271].second.push_front(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map)[4283].first = 1;
        (*_glb_hdl_sc_channel_map)[4283].second.push_front(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(5513512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(5513568);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map)[4278].first = 1;
        (*_glb_hdl_sc_channel_map)[4278].second.push_front(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map)[4275].first = 3;
        (*_glb_hdl_sc_channel_map)[4275].second.push_front(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map)[4272].first = 3;
        (*_glb_hdl_sc_channel_map)[4272].second.push_front(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map)[4284].first = 1;
        (*_glb_hdl_sc_channel_map)[4284].second.push_front(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map)[4270].first = 3;
        (*_glb_hdl_sc_channel_map)[4270].second.push_front(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(5513904);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map)[4279].first = 1;
        (*_glb_hdl_sc_channel_map)[4279].second.push_front(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map)[4276].first = 3;
        (*_glb_hdl_sc_channel_map)[4276].second.push_front(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map)[4273].first = 3;
        (*_glb_hdl_sc_channel_map)[4273].second.push_front(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map)[4285].first = 1;
        (*_glb_hdl_sc_channel_map)[4285].second.push_front(p_1_trace_tvalid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[4204].first = 3;
        (*_glb_hdl_sc_channel_map)[4204].second.push_front(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[4206].first = 1;
        (*_glb_hdl_sc_channel_map)[4206].second.push_front(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(5514296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[4214].first = 3;
        (*_glb_hdl_sc_channel_map)[4214].second.push_front(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[4216].first = 3;
        (*_glb_hdl_sc_channel_map)[4216].second.push_front(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[4217].first = 1;
        (*_glb_hdl_sc_channel_map)[4217].second.push_front(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(5514520);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(5514576);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[4207].first = 1;
        (*_glb_hdl_sc_channel_map)[4207].second.push_front(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(5514688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[4201].first = 3;
        (*_glb_hdl_sc_channel_map)[4201].second.push_front(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[4203].first = 1;
        (*_glb_hdl_sc_channel_map)[4203].second.push_front(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(5514856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(5514912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(5514968);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(5515024);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[4211].first = 1;
        (*_glb_hdl_sc_channel_map)[4211].second.push_front(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map)[4221].first = 3;
        (*_glb_hdl_sc_channel_map)[4221].second.push_front(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map)[4223].first = 1;
        (*_glb_hdl_sc_channel_map)[4223].second.push_front(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(5515248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map)[4231].first = 3;
        (*_glb_hdl_sc_channel_map)[4231].second.push_front(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map)[4233].first = 3;
        (*_glb_hdl_sc_channel_map)[4233].second.push_front(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map)[4234].first = 1;
        (*_glb_hdl_sc_channel_map)[4234].second.push_front(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(5515472);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(5515528);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map)[4224].first = 1;
        (*_glb_hdl_sc_channel_map)[4224].second.push_front(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(5515640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map)[4218].first = 3;
        (*_glb_hdl_sc_channel_map)[4218].second.push_front(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map)[4220].first = 1;
        (*_glb_hdl_sc_channel_map)[4220].second.push_front(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(5515808);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(5515864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(5515920);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(5515976);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map)[4228].first = 1;
        (*_glb_hdl_sc_channel_map)[4228].second.push_front(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map)[4243].first = 3;
        (*_glb_hdl_sc_channel_map)[4243].second.push_front(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map)[4249].first = 1;
        (*_glb_hdl_sc_channel_map)[4249].second.push_front(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(5516200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map)[4246].first = 3;
        (*_glb_hdl_sc_channel_map)[4246].second.push_front(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map)[4248].first = 3;
        (*_glb_hdl_sc_channel_map)[4248].second.push_front(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map)[4244].first = 3;
        (*_glb_hdl_sc_channel_map)[4244].second.push_front(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map)[4245].first = 3;
        (*_glb_hdl_sc_channel_map)[4245].second.push_front(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map)[4261].first = 3;
        (*_glb_hdl_sc_channel_map)[4261].second.push_front(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map)[4264].first = 3;
        (*_glb_hdl_sc_channel_map)[4264].second.push_front(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map)[4265].first = 1;
        (*_glb_hdl_sc_channel_map)[4265].second.push_front(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(5516648);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(5516704);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map)[4251].first = 1;
        (*_glb_hdl_sc_channel_map)[4251].second.push_front(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map)[4262].first = 1;
        (*_glb_hdl_sc_channel_map)[4262].second.push_front(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(5516872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(5516928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(5516984);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map)[4235].first = 3;
        (*_glb_hdl_sc_channel_map)[4235].second.push_front(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map)[4242].first = 1;
        (*_glb_hdl_sc_channel_map)[4242].second.push_front(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(5517152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map)[4239].first = 3;
        (*_glb_hdl_sc_channel_map)[4239].second.push_front(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map)[4241].first = 3;
        (*_glb_hdl_sc_channel_map)[4241].second.push_front(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map)[4236].first = 3;
        (*_glb_hdl_sc_channel_map)[4236].second.push_front(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map)[4238].first = 3;
        (*_glb_hdl_sc_channel_map)[4238].second.push_front(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(5517432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(5517488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(5517544);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(5517600);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map)[4258].first = 1;
        (*_glb_hdl_sc_channel_map)[4258].second.push_front(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map)[4307].first = 1;
        (*_glb_hdl_sc_channel_map)[4307].second.push_front(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map)[4308].first = 1;
        (*_glb_hdl_sc_channel_map)[4308].second.push_front(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map)[4328].first = 1;
        (*_glb_hdl_sc_channel_map)[4328].second.push_front(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map)[4329].first = 1;
        (*_glb_hdl_sc_channel_map)[4329].second.push_front(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[4313].first = 3;
        (*_glb_hdl_sc_channel_map)[4313].second.push_front(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map)[4314].first = 3;
        (*_glb_hdl_sc_channel_map)[4314].second.push_front(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[4316].first = 1;
        (*_glb_hdl_sc_channel_map)[4316].second.push_front(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(5518152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[4324].first = 3;
        (*_glb_hdl_sc_channel_map)[4324].second.push_front(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[4326].first = 3;
        (*_glb_hdl_sc_channel_map)[4326].second.push_front(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[4327].first = 1;
        (*_glb_hdl_sc_channel_map)[4327].second.push_front(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(5518376);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(5518432);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[4317].first = 1;
        (*_glb_hdl_sc_channel_map)[4317].second.push_front(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(5518544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[4309].first = 3;
        (*_glb_hdl_sc_channel_map)[4309].second.push_front(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map)[4310].first = 3;
        (*_glb_hdl_sc_channel_map)[4310].second.push_front(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[4312].first = 1;
        (*_glb_hdl_sc_channel_map)[4312].second.push_front(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(5518768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(5518824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(5518880);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(5518936);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[4321].first = 1;
        (*_glb_hdl_sc_channel_map)[4321].second.push_front(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[4295].first = 1;
        (*_glb_hdl_sc_channel_map)[4295].second.push_front(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[4294].first = 1;
        (*_glb_hdl_sc_channel_map)[4294].second.push_front(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[1412].first = 3;
        (*_glb_hdl_sc_channel_map)[1412].second.push_front(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[4306].first = 1;
        (*_glb_hdl_sc_channel_map)[4306].second.push_front(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[4304].first = 1;
        (*_glb_hdl_sc_channel_map)[4304].second.push_front(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[4303].first = 3;
        (*_glb_hdl_sc_channel_map)[4303].second.push_front(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[4305].first = 3;
        (*_glb_hdl_sc_channel_map)[4305].second.push_front(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[4293].first = 1;
        (*_glb_hdl_sc_channel_map)[4293].second.push_front(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[4292].first = 1;
        (*_glb_hdl_sc_channel_map)[4292].second.push_front(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[1413].first = 3;
        (*_glb_hdl_sc_channel_map)[1413].second.push_front(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[4302].first = 1;
        (*_glb_hdl_sc_channel_map)[4302].second.push_front(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[4300].first = 1;
        (*_glb_hdl_sc_channel_map)[4300].second.push_front(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[4299].first = 3;
        (*_glb_hdl_sc_channel_map)[4299].second.push_front(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[4301].first = 3;
        (*_glb_hdl_sc_channel_map)[4301].second.push_front(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[4298].first = 1;
        (*_glb_hdl_sc_channel_map)[4298].second.push_front(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[4296].first = 1;
        (*_glb_hdl_sc_channel_map)[4296].second.push_front(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[4297].first = 3;
        (*_glb_hdl_sc_channel_map)[4297].second.push_front(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map)[4290].first = 3;
        (*_glb_hdl_sc_channel_map)[4290].second.push_front(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(5520056);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(5520112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(5520168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(5520224);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(5520280);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map)[4367].first = 1;
        (*_glb_hdl_sc_channel_map)[4367].second.push_front(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map)[4368].first = 1;
        (*_glb_hdl_sc_channel_map)[4368].second.push_front(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map)[4403].first = 1;
        (*_glb_hdl_sc_channel_map)[4403].second.push_front(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map)[4404].first = 1;
        (*_glb_hdl_sc_channel_map)[4404].second.push_front(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[4375].first = 3;
        (*_glb_hdl_sc_channel_map)[4375].second.push_front(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[4379].first = 1;
        (*_glb_hdl_sc_channel_map)[4379].second.push_front(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(5520720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map)[4395].first = 3;
        (*_glb_hdl_sc_channel_map)[4395].second.push_front(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[4399].first = 3;
        (*_glb_hdl_sc_channel_map)[4399].second.push_front(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[4401].first = 1;
        (*_glb_hdl_sc_channel_map)[4401].second.push_front(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(5520944);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(5521000);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map)[4381].first = 1;
        (*_glb_hdl_sc_channel_map)[4381].second.push_front(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(5521112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map)[4369].first = 3;
        (*_glb_hdl_sc_channel_map)[4369].second.push_front(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[4373].first = 1;
        (*_glb_hdl_sc_channel_map)[4373].second.push_front(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(5521280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(5521336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(5521392);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(5521448);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map)[4389].first = 1;
        (*_glb_hdl_sc_channel_map)[4389].second.push_front(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map)[4351].first = 1;
        (*_glb_hdl_sc_channel_map)[4351].second.push_front(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map)[4349].first = 1;
        (*_glb_hdl_sc_channel_map)[4349].second.push_front(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map)[4347].first = 3;
        (*_glb_hdl_sc_channel_map)[4347].second.push_front(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map)[1408].first = 3;
        (*_glb_hdl_sc_channel_map)[1408].second.push_front(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map)[4348].first = 3;
        (*_glb_hdl_sc_channel_map)[4348].second.push_front(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map)[4350].first = 3;
        (*_glb_hdl_sc_channel_map)[4350].second.push_front(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map)[1409].first = 3;
        (*_glb_hdl_sc_channel_map)[1409].second.push_front(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map)[4366].first = 1;
        (*_glb_hdl_sc_channel_map)[4366].second.push_front(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map)[4364].first = 1;
        (*_glb_hdl_sc_channel_map)[4364].second.push_front(p_3_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map)[4362].first = 3;
        (*_glb_hdl_sc_channel_map)[4362].second.push_front(p_3_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map)[4365].first = 3;
        (*_glb_hdl_sc_channel_map)[4365].second.push_front(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map)[4363].first = 1;
        (*_glb_hdl_sc_channel_map)[4363].second.push_front(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map)[4346].first = 1;
        (*_glb_hdl_sc_channel_map)[4346].second.push_front(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map)[4344].first = 1;
        (*_glb_hdl_sc_channel_map)[4344].second.push_front(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map)[4342].first = 3;
        (*_glb_hdl_sc_channel_map)[4342].second.push_front(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map)[1410].first = 3;
        (*_glb_hdl_sc_channel_map)[1410].second.push_front(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map)[4343].first = 3;
        (*_glb_hdl_sc_channel_map)[4343].second.push_front(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map)[4345].first = 3;
        (*_glb_hdl_sc_channel_map)[4345].second.push_front(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map)[1411].first = 3;
        (*_glb_hdl_sc_channel_map)[1411].second.push_front(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map)[4361].first = 1;
        (*_glb_hdl_sc_channel_map)[4361].second.push_front(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map)[4359].first = 1;
        (*_glb_hdl_sc_channel_map)[4359].second.push_front(p_3_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map)[4356].first = 3;
        (*_glb_hdl_sc_channel_map)[4356].second.push_front(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map)[4358].first = 1;
        (*_glb_hdl_sc_channel_map)[4358].second.push_front(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map)[4357].first = 3;
        (*_glb_hdl_sc_channel_map)[4357].second.push_front(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map)[4360].first = 3;
        (*_glb_hdl_sc_channel_map)[4360].second.push_front(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map)[4355].first = 1;
        (*_glb_hdl_sc_channel_map)[4355].second.push_front(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map)[4353].first = 1;
        (*_glb_hdl_sc_channel_map)[4353].second.push_front(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map)[4354].first = 3;
        (*_glb_hdl_sc_channel_map)[4354].second.push_front(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map)[4352].first = 3;
        (*_glb_hdl_sc_channel_map)[4352].second.push_front(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map)[4334].first = 1;
        (*_glb_hdl_sc_channel_map)[4334].second.push_front(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(5523240);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(5523296);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(5523352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(5523408);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map)[4340].first = 1;
        (*_glb_hdl_sc_channel_map)[4340].second.push_front(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(5523520);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(5523576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(5523632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(5523688);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(5523744);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(5523800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map)[1406].first = 3;
        (*_glb_hdl_sc_channel_map)[1406].second.push_front(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map)[4376].first = 3;
        (*_glb_hdl_sc_channel_map)[4376].second.push_front(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map)[4380].first = 1;
        (*_glb_hdl_sc_channel_map)[4380].second.push_front(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map)[4378].first = 1;
        (*_glb_hdl_sc_channel_map)[4378].second.push_front(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map)[4396].first = 3;
        (*_glb_hdl_sc_channel_map)[4396].second.push_front(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map)[4400].first = 3;
        (*_glb_hdl_sc_channel_map)[4400].second.push_front(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map)[4402].first = 1;
        (*_glb_hdl_sc_channel_map)[4402].second.push_front(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map)[4398].first = 1;
        (*_glb_hdl_sc_channel_map)[4398].second.push_front(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map)[4384].first = 3;
        (*_glb_hdl_sc_channel_map)[4384].second.push_front(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map)[4386].first = 1;
        (*_glb_hdl_sc_channel_map)[4386].second.push_front(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map)[4382].first = 1;
        (*_glb_hdl_sc_channel_map)[4382].second.push_front(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map)[1407].first = 3;
        (*_glb_hdl_sc_channel_map)[1407].second.push_front(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map)[4370].first = 3;
        (*_glb_hdl_sc_channel_map)[4370].second.push_front(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map)[4374].first = 1;
        (*_glb_hdl_sc_channel_map)[4374].second.push_front(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map)[4372].first = 1;
        (*_glb_hdl_sc_channel_map)[4372].second.push_front(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map)[4388].first = 3;
        (*_glb_hdl_sc_channel_map)[4388].second.push_front(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map)[4392].first = 3;
        (*_glb_hdl_sc_channel_map)[4392].second.push_front(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map)[4394].first = 1;
        (*_glb_hdl_sc_channel_map)[4394].second.push_front(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map)[4390].first = 1;
        (*_glb_hdl_sc_channel_map)[4390].second.push_front(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_4->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map)[5382].first = 1;
        (*_glb_hdl_sc_channel_map)[5382].second.push_front(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk1.bind(*p_4_aclk1);
        (*_glb_hdl_sc_channel_map)[5383].first = 1;
        (*_glb_hdl_sc_channel_map)[5383].second.push_front(p_4_aclk1);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map)[5384].first = 1;
        (*_glb_hdl_sc_channel_map)[5384].second.push_front(p_4_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awid.bind(*p_4_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5198].first = 3;
        (*_glb_hdl_sc_channel_map)[5198].second.push_front(p_4_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_awaddr.bind(*p_4_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5195].first = 3;
        (*_glb_hdl_sc_channel_map)[5195].second.push_front(p_4_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_awlen.bind(*p_4_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5199].first = 3;
        (*_glb_hdl_sc_channel_map)[5199].second.push_front(p_4_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awsize.bind(*p_4_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5204].first = 3;
        (*_glb_hdl_sc_channel_map)[5204].second.push_front(p_4_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_awburst.bind(*p_4_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5196].first = 3;
        (*_glb_hdl_sc_channel_map)[5196].second.push_front(p_4_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_awlock.bind(*p_4_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5200].first = 1;
        (*_glb_hdl_sc_channel_map)[5200].second.push_front(p_4_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awcache.bind(*p_4_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5197].first = 3;
        (*_glb_hdl_sc_channel_map)[5197].second.push_front(p_4_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awprot.bind(*p_4_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5201].first = 3;
        (*_glb_hdl_sc_channel_map)[5201].second.push_front(p_4_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awqos.bind(*p_4_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5202].first = 3;
        (*_glb_hdl_sc_channel_map)[5202].second.push_front(p_4_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awuser.bind(*p_4_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5205].first = 3;
        (*_glb_hdl_sc_channel_map)[5205].second.push_front(p_4_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awvalid.bind(*p_4_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5206].first = 3;
        (*_glb_hdl_sc_channel_map)[5206].second.push_front(p_4_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awready.bind(*p_4_S00_AXI_awready);
        p_4_S00_AXI_awready->set_sv_netview_offsetfromdp(5761896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_wdata.bind(*p_4_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5219].first = 3;
        (*_glb_hdl_sc_channel_map)[5219].second.push_front(p_4_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_wstrb.bind(*p_4_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5222].first = 3;
        (*_glb_hdl_sc_channel_map)[5222].second.push_front(p_4_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wlast.bind(*p_4_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5220].first = 3;
        (*_glb_hdl_sc_channel_map)[5220].second.push_front(p_4_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wuser.bind(*p_4_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5223].first = 3;
        (*_glb_hdl_sc_channel_map)[5223].second.push_front(p_4_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wvalid.bind(*p_4_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5224].first = 3;
        (*_glb_hdl_sc_channel_map)[5224].second.push_front(p_4_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wready.bind(*p_4_S00_AXI_wready);
        p_4_S00_AXI_wready->set_sv_netview_offsetfromdp(5762232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bid.bind(*p_4_S00_AXI_bid);
        p_4_S00_AXI_bid->set_sv_netview_offsetfromdp(5762288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_bresp.bind(*p_4_S00_AXI_bresp);
        p_4_S00_AXI_bresp->set_sv_netview_offsetfromdp(5762344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_buser.bind(*p_4_S00_AXI_buser);
        p_4_S00_AXI_buser->set_sv_netview_offsetfromdp(5762400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bvalid.bind(*p_4_S00_AXI_bvalid);
        p_4_S00_AXI_bvalid->set_sv_netview_offsetfromdp(5762456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bready.bind(*p_4_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5208].first = 3;
        (*_glb_hdl_sc_channel_map)[5208].second.push_front(p_4_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arid.bind(*p_4_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5186].first = 3;
        (*_glb_hdl_sc_channel_map)[5186].second.push_front(p_4_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_araddr.bind(*p_4_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5183].first = 3;
        (*_glb_hdl_sc_channel_map)[5183].second.push_front(p_4_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_arlen.bind(*p_4_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5187].first = 3;
        (*_glb_hdl_sc_channel_map)[5187].second.push_front(p_4_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arsize.bind(*p_4_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5192].first = 3;
        (*_glb_hdl_sc_channel_map)[5192].second.push_front(p_4_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_arburst.bind(*p_4_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5184].first = 3;
        (*_glb_hdl_sc_channel_map)[5184].second.push_front(p_4_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_arlock.bind(*p_4_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5188].first = 1;
        (*_glb_hdl_sc_channel_map)[5188].second.push_front(p_4_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arcache.bind(*p_4_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5185].first = 3;
        (*_glb_hdl_sc_channel_map)[5185].second.push_front(p_4_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arprot.bind(*p_4_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5189].first = 3;
        (*_glb_hdl_sc_channel_map)[5189].second.push_front(p_4_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arqos.bind(*p_4_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5190].first = 3;
        (*_glb_hdl_sc_channel_map)[5190].second.push_front(p_4_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_aruser.bind(*p_4_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5193].first = 3;
        (*_glb_hdl_sc_channel_map)[5193].second.push_front(p_4_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arvalid.bind(*p_4_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5194].first = 3;
        (*_glb_hdl_sc_channel_map)[5194].second.push_front(p_4_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arready.bind(*p_4_S00_AXI_arready);
        p_4_S00_AXI_arready->set_sv_netview_offsetfromdp(5763184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rid.bind(*p_4_S00_AXI_rid);
        p_4_S00_AXI_rid->set_sv_netview_offsetfromdp(5763240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_rdata.bind(*p_4_S00_AXI_rdata);
        p_4_S00_AXI_rdata->set_sv_netview_offsetfromdp(5763296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_rresp.bind(*p_4_S00_AXI_rresp);
        p_4_S00_AXI_rresp->set_sv_netview_offsetfromdp(5763352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rlast.bind(*p_4_S00_AXI_rlast);
        p_4_S00_AXI_rlast->set_sv_netview_offsetfromdp(5763408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_ruser.bind(*p_4_S00_AXI_ruser);
        p_4_S00_AXI_ruser->set_sv_netview_offsetfromdp(5763464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rvalid.bind(*p_4_S00_AXI_rvalid);
        p_4_S00_AXI_rvalid->set_sv_netview_offsetfromdp(5763520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rready.bind(*p_4_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5215].first = 3;
        (*_glb_hdl_sc_channel_map)[5215].second.push_front(p_4_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awid.bind(*p_4_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5240].first = 3;
        (*_glb_hdl_sc_channel_map)[5240].second.push_front(p_4_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_awaddr.bind(*p_4_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5237].first = 3;
        (*_glb_hdl_sc_channel_map)[5237].second.push_front(p_4_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_awlen.bind(*p_4_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5241].first = 3;
        (*_glb_hdl_sc_channel_map)[5241].second.push_front(p_4_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awsize.bind(*p_4_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5246].first = 3;
        (*_glb_hdl_sc_channel_map)[5246].second.push_front(p_4_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_awburst.bind(*p_4_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5238].first = 3;
        (*_glb_hdl_sc_channel_map)[5238].second.push_front(p_4_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_awlock.bind(*p_4_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5242].first = 1;
        (*_glb_hdl_sc_channel_map)[5242].second.push_front(p_4_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awcache.bind(*p_4_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5239].first = 3;
        (*_glb_hdl_sc_channel_map)[5239].second.push_front(p_4_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awprot.bind(*p_4_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5243].first = 3;
        (*_glb_hdl_sc_channel_map)[5243].second.push_front(p_4_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awqos.bind(*p_4_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5244].first = 3;
        (*_glb_hdl_sc_channel_map)[5244].second.push_front(p_4_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awuser.bind(*p_4_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5247].first = 3;
        (*_glb_hdl_sc_channel_map)[5247].second.push_front(p_4_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awvalid.bind(*p_4_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5248].first = 3;
        (*_glb_hdl_sc_channel_map)[5248].second.push_front(p_4_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awready.bind(*p_4_S01_AXI_awready);
        p_4_S01_AXI_awready->set_sv_netview_offsetfromdp(5764248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S01_AXI_wdata.bind(*p_4_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5261].first = 3;
        (*_glb_hdl_sc_channel_map)[5261].second.push_front(p_4_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_wstrb.bind(*p_4_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5264].first = 3;
        (*_glb_hdl_sc_channel_map)[5264].second.push_front(p_4_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wlast.bind(*p_4_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5262].first = 3;
        (*_glb_hdl_sc_channel_map)[5262].second.push_front(p_4_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wuser.bind(*p_4_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5265].first = 3;
        (*_glb_hdl_sc_channel_map)[5265].second.push_front(p_4_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wvalid.bind(*p_4_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5266].first = 3;
        (*_glb_hdl_sc_channel_map)[5266].second.push_front(p_4_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wready.bind(*p_4_S01_AXI_wready);
        p_4_S01_AXI_wready->set_sv_netview_offsetfromdp(5764584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bid.bind(*p_4_S01_AXI_bid);
        p_4_S01_AXI_bid->set_sv_netview_offsetfromdp(5764640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_bresp.bind(*p_4_S01_AXI_bresp);
        p_4_S01_AXI_bresp->set_sv_netview_offsetfromdp(5764696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_buser.bind(*p_4_S01_AXI_buser);
        p_4_S01_AXI_buser->set_sv_netview_offsetfromdp(5764752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bvalid.bind(*p_4_S01_AXI_bvalid);
        p_4_S01_AXI_bvalid->set_sv_netview_offsetfromdp(5764808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bready.bind(*p_4_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5250].first = 3;
        (*_glb_hdl_sc_channel_map)[5250].second.push_front(p_4_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arid.bind(*p_4_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5228].first = 3;
        (*_glb_hdl_sc_channel_map)[5228].second.push_front(p_4_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_araddr.bind(*p_4_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5225].first = 3;
        (*_glb_hdl_sc_channel_map)[5225].second.push_front(p_4_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_arlen.bind(*p_4_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5229].first = 3;
        (*_glb_hdl_sc_channel_map)[5229].second.push_front(p_4_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arsize.bind(*p_4_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5234].first = 3;
        (*_glb_hdl_sc_channel_map)[5234].second.push_front(p_4_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_arburst.bind(*p_4_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5226].first = 3;
        (*_glb_hdl_sc_channel_map)[5226].second.push_front(p_4_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_arlock.bind(*p_4_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5230].first = 1;
        (*_glb_hdl_sc_channel_map)[5230].second.push_front(p_4_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arcache.bind(*p_4_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5227].first = 3;
        (*_glb_hdl_sc_channel_map)[5227].second.push_front(p_4_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arprot.bind(*p_4_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5231].first = 3;
        (*_glb_hdl_sc_channel_map)[5231].second.push_front(p_4_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arqos.bind(*p_4_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5232].first = 3;
        (*_glb_hdl_sc_channel_map)[5232].second.push_front(p_4_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_aruser.bind(*p_4_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5235].first = 3;
        (*_glb_hdl_sc_channel_map)[5235].second.push_front(p_4_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arvalid.bind(*p_4_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5236].first = 3;
        (*_glb_hdl_sc_channel_map)[5236].second.push_front(p_4_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arready.bind(*p_4_S01_AXI_arready);
        p_4_S01_AXI_arready->set_sv_netview_offsetfromdp(5765536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rid.bind(*p_4_S01_AXI_rid);
        p_4_S01_AXI_rid->set_sv_netview_offsetfromdp(5765592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S01_AXI_rdata.bind(*p_4_S01_AXI_rdata);
        p_4_S01_AXI_rdata->set_sv_netview_offsetfromdp(5765648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_rresp.bind(*p_4_S01_AXI_rresp);
        p_4_S01_AXI_rresp->set_sv_netview_offsetfromdp(5765704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rlast.bind(*p_4_S01_AXI_rlast);
        p_4_S01_AXI_rlast->set_sv_netview_offsetfromdp(5765760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_ruser.bind(*p_4_S01_AXI_ruser);
        p_4_S01_AXI_ruser->set_sv_netview_offsetfromdp(5765816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rvalid.bind(*p_4_S01_AXI_rvalid);
        p_4_S01_AXI_rvalid->set_sv_netview_offsetfromdp(5765872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rready.bind(*p_4_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5257].first = 3;
        (*_glb_hdl_sc_channel_map)[5257].second.push_front(p_4_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awid.bind(*p_4_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5282].first = 3;
        (*_glb_hdl_sc_channel_map)[5282].second.push_front(p_4_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S02_AXI_awaddr.bind(*p_4_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5279].first = 3;
        (*_glb_hdl_sc_channel_map)[5279].second.push_front(p_4_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S02_AXI_awlen.bind(*p_4_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5283].first = 3;
        (*_glb_hdl_sc_channel_map)[5283].second.push_front(p_4_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_awsize.bind(*p_4_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5288].first = 3;
        (*_glb_hdl_sc_channel_map)[5288].second.push_front(p_4_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_awburst.bind(*p_4_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5280].first = 3;
        (*_glb_hdl_sc_channel_map)[5280].second.push_front(p_4_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S02_AXI_awlock.bind(*p_4_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5284].first = 1;
        (*_glb_hdl_sc_channel_map)[5284].second.push_front(p_4_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_awcache.bind(*p_4_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5281].first = 3;
        (*_glb_hdl_sc_channel_map)[5281].second.push_front(p_4_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_awprot.bind(*p_4_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5285].first = 3;
        (*_glb_hdl_sc_channel_map)[5285].second.push_front(p_4_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_awqos.bind(*p_4_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5286].first = 3;
        (*_glb_hdl_sc_channel_map)[5286].second.push_front(p_4_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awuser.bind(*p_4_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5289].first = 3;
        (*_glb_hdl_sc_channel_map)[5289].second.push_front(p_4_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awvalid.bind(*p_4_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5290].first = 3;
        (*_glb_hdl_sc_channel_map)[5290].second.push_front(p_4_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awready.bind(*p_4_S02_AXI_awready);
        p_4_S02_AXI_awready->set_sv_netview_offsetfromdp(5766600);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S02_AXI_wdata.bind(*p_4_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5303].first = 3;
        (*_glb_hdl_sc_channel_map)[5303].second.push_front(p_4_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_wstrb.bind(*p_4_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5306].first = 3;
        (*_glb_hdl_sc_channel_map)[5306].second.push_front(p_4_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wlast.bind(*p_4_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5304].first = 3;
        (*_glb_hdl_sc_channel_map)[5304].second.push_front(p_4_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wuser.bind(*p_4_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5307].first = 3;
        (*_glb_hdl_sc_channel_map)[5307].second.push_front(p_4_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wvalid.bind(*p_4_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5308].first = 3;
        (*_glb_hdl_sc_channel_map)[5308].second.push_front(p_4_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wready.bind(*p_4_S02_AXI_wready);
        p_4_S02_AXI_wready->set_sv_netview_offsetfromdp(5766936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bid.bind(*p_4_S02_AXI_bid);
        p_4_S02_AXI_bid->set_sv_netview_offsetfromdp(5766992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_bresp.bind(*p_4_S02_AXI_bresp);
        p_4_S02_AXI_bresp->set_sv_netview_offsetfromdp(5767048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_buser.bind(*p_4_S02_AXI_buser);
        p_4_S02_AXI_buser->set_sv_netview_offsetfromdp(5767104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bvalid.bind(*p_4_S02_AXI_bvalid);
        p_4_S02_AXI_bvalid->set_sv_netview_offsetfromdp(5767160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bready.bind(*p_4_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5292].first = 3;
        (*_glb_hdl_sc_channel_map)[5292].second.push_front(p_4_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arid.bind(*p_4_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5270].first = 3;
        (*_glb_hdl_sc_channel_map)[5270].second.push_front(p_4_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S02_AXI_araddr.bind(*p_4_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5267].first = 3;
        (*_glb_hdl_sc_channel_map)[5267].second.push_front(p_4_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S02_AXI_arlen.bind(*p_4_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5271].first = 3;
        (*_glb_hdl_sc_channel_map)[5271].second.push_front(p_4_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_arsize.bind(*p_4_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5276].first = 3;
        (*_glb_hdl_sc_channel_map)[5276].second.push_front(p_4_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_arburst.bind(*p_4_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5268].first = 3;
        (*_glb_hdl_sc_channel_map)[5268].second.push_front(p_4_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S02_AXI_arlock.bind(*p_4_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5272].first = 1;
        (*_glb_hdl_sc_channel_map)[5272].second.push_front(p_4_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_arcache.bind(*p_4_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5269].first = 3;
        (*_glb_hdl_sc_channel_map)[5269].second.push_front(p_4_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_arprot.bind(*p_4_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5273].first = 3;
        (*_glb_hdl_sc_channel_map)[5273].second.push_front(p_4_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_arqos.bind(*p_4_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5274].first = 3;
        (*_glb_hdl_sc_channel_map)[5274].second.push_front(p_4_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_aruser.bind(*p_4_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5277].first = 3;
        (*_glb_hdl_sc_channel_map)[5277].second.push_front(p_4_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arvalid.bind(*p_4_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5278].first = 3;
        (*_glb_hdl_sc_channel_map)[5278].second.push_front(p_4_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arready.bind(*p_4_S02_AXI_arready);
        p_4_S02_AXI_arready->set_sv_netview_offsetfromdp(5767888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rid.bind(*p_4_S02_AXI_rid);
        p_4_S02_AXI_rid->set_sv_netview_offsetfromdp(5767944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S02_AXI_rdata.bind(*p_4_S02_AXI_rdata);
        p_4_S02_AXI_rdata->set_sv_netview_offsetfromdp(5768000);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_rresp.bind(*p_4_S02_AXI_rresp);
        p_4_S02_AXI_rresp->set_sv_netview_offsetfromdp(5768056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rlast.bind(*p_4_S02_AXI_rlast);
        p_4_S02_AXI_rlast->set_sv_netview_offsetfromdp(5768112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_ruser.bind(*p_4_S02_AXI_ruser);
        p_4_S02_AXI_ruser->set_sv_netview_offsetfromdp(5768168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rvalid.bind(*p_4_S02_AXI_rvalid);
        p_4_S02_AXI_rvalid->set_sv_netview_offsetfromdp(5768224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rready.bind(*p_4_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5299].first = 3;
        (*_glb_hdl_sc_channel_map)[5299].second.push_front(p_4_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awid.bind(*p_4_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map)[5324].first = 3;
        (*_glb_hdl_sc_channel_map)[5324].second.push_front(p_4_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S03_AXI_awaddr.bind(*p_4_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5321].first = 3;
        (*_glb_hdl_sc_channel_map)[5321].second.push_front(p_4_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S03_AXI_awlen.bind(*p_4_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5325].first = 3;
        (*_glb_hdl_sc_channel_map)[5325].second.push_front(p_4_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_awsize.bind(*p_4_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5330].first = 3;
        (*_glb_hdl_sc_channel_map)[5330].second.push_front(p_4_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_awburst.bind(*p_4_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map)[5322].first = 3;
        (*_glb_hdl_sc_channel_map)[5322].second.push_front(p_4_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S03_AXI_awlock.bind(*p_4_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[5326].first = 1;
        (*_glb_hdl_sc_channel_map)[5326].second.push_front(p_4_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_awcache.bind(*p_4_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5323].first = 3;
        (*_glb_hdl_sc_channel_map)[5323].second.push_front(p_4_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_awprot.bind(*p_4_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5327].first = 3;
        (*_glb_hdl_sc_channel_map)[5327].second.push_front(p_4_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_awqos.bind(*p_4_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5328].first = 3;
        (*_glb_hdl_sc_channel_map)[5328].second.push_front(p_4_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awuser.bind(*p_4_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map)[5331].first = 3;
        (*_glb_hdl_sc_channel_map)[5331].second.push_front(p_4_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awvalid.bind(*p_4_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5332].first = 3;
        (*_glb_hdl_sc_channel_map)[5332].second.push_front(p_4_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awready.bind(*p_4_S03_AXI_awready);
        p_4_S03_AXI_awready->set_sv_netview_offsetfromdp(5768952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S03_AXI_wdata.bind(*p_4_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5345].first = 3;
        (*_glb_hdl_sc_channel_map)[5345].second.push_front(p_4_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_wstrb.bind(*p_4_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5348].first = 3;
        (*_glb_hdl_sc_channel_map)[5348].second.push_front(p_4_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wlast.bind(*p_4_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5346].first = 3;
        (*_glb_hdl_sc_channel_map)[5346].second.push_front(p_4_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wuser.bind(*p_4_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map)[5349].first = 3;
        (*_glb_hdl_sc_channel_map)[5349].second.push_front(p_4_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wvalid.bind(*p_4_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5350].first = 3;
        (*_glb_hdl_sc_channel_map)[5350].second.push_front(p_4_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wready.bind(*p_4_S03_AXI_wready);
        p_4_S03_AXI_wready->set_sv_netview_offsetfromdp(5769288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bid.bind(*p_4_S03_AXI_bid);
        p_4_S03_AXI_bid->set_sv_netview_offsetfromdp(5769344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_bresp.bind(*p_4_S03_AXI_bresp);
        p_4_S03_AXI_bresp->set_sv_netview_offsetfromdp(5769400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_buser.bind(*p_4_S03_AXI_buser);
        p_4_S03_AXI_buser->set_sv_netview_offsetfromdp(5769456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bvalid.bind(*p_4_S03_AXI_bvalid);
        p_4_S03_AXI_bvalid->set_sv_netview_offsetfromdp(5769512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bready.bind(*p_4_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5334].first = 3;
        (*_glb_hdl_sc_channel_map)[5334].second.push_front(p_4_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arid.bind(*p_4_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map)[5312].first = 3;
        (*_glb_hdl_sc_channel_map)[5312].second.push_front(p_4_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S03_AXI_araddr.bind(*p_4_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5309].first = 3;
        (*_glb_hdl_sc_channel_map)[5309].second.push_front(p_4_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S03_AXI_arlen.bind(*p_4_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5313].first = 3;
        (*_glb_hdl_sc_channel_map)[5313].second.push_front(p_4_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_arsize.bind(*p_4_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5318].first = 3;
        (*_glb_hdl_sc_channel_map)[5318].second.push_front(p_4_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_arburst.bind(*p_4_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map)[5310].first = 3;
        (*_glb_hdl_sc_channel_map)[5310].second.push_front(p_4_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S03_AXI_arlock.bind(*p_4_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[5314].first = 1;
        (*_glb_hdl_sc_channel_map)[5314].second.push_front(p_4_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_arcache.bind(*p_4_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5311].first = 3;
        (*_glb_hdl_sc_channel_map)[5311].second.push_front(p_4_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_arprot.bind(*p_4_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5315].first = 3;
        (*_glb_hdl_sc_channel_map)[5315].second.push_front(p_4_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_arqos.bind(*p_4_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5316].first = 3;
        (*_glb_hdl_sc_channel_map)[5316].second.push_front(p_4_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_aruser.bind(*p_4_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map)[5319].first = 3;
        (*_glb_hdl_sc_channel_map)[5319].second.push_front(p_4_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arvalid.bind(*p_4_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5320].first = 3;
        (*_glb_hdl_sc_channel_map)[5320].second.push_front(p_4_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arready.bind(*p_4_S03_AXI_arready);
        p_4_S03_AXI_arready->set_sv_netview_offsetfromdp(5770240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rid.bind(*p_4_S03_AXI_rid);
        p_4_S03_AXI_rid->set_sv_netview_offsetfromdp(5770296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S03_AXI_rdata.bind(*p_4_S03_AXI_rdata);
        p_4_S03_AXI_rdata->set_sv_netview_offsetfromdp(5770352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_rresp.bind(*p_4_S03_AXI_rresp);
        p_4_S03_AXI_rresp->set_sv_netview_offsetfromdp(5770408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rlast.bind(*p_4_S03_AXI_rlast);
        p_4_S03_AXI_rlast->set_sv_netview_offsetfromdp(5770464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_ruser.bind(*p_4_S03_AXI_ruser);
        p_4_S03_AXI_ruser->set_sv_netview_offsetfromdp(5770520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rvalid.bind(*p_4_S03_AXI_rvalid);
        p_4_S03_AXI_rvalid->set_sv_netview_offsetfromdp(5770576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rready.bind(*p_4_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5341].first = 3;
        (*_glb_hdl_sc_channel_map)[5341].second.push_front(p_4_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S04_AXI_awaddr.bind(*p_4_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map)[5360].first = 3;
        (*_glb_hdl_sc_channel_map)[5360].second.push_front(p_4_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S04_AXI_awlen.bind(*p_4_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map)[5362].first = 3;
        (*_glb_hdl_sc_channel_map)[5362].second.push_front(p_4_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_awsize.bind(*p_4_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map)[5367].first = 3;
        (*_glb_hdl_sc_channel_map)[5367].second.push_front(p_4_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_4_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S04_AXI_awlock.bind(*p_4_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map)[1218].first = 1;
        (*_glb_hdl_sc_channel_map)[1218].second.push_front(p_4_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awcache.bind(*p_4_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map)[5361].first = 3;
        (*_glb_hdl_sc_channel_map)[5361].second.push_front(p_4_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_awprot.bind(*p_4_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map)[5363].first = 3;
        (*_glb_hdl_sc_channel_map)[5363].second.push_front(p_4_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awregion.bind(*p_4_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map)[5366].first = 3;
        (*_glb_hdl_sc_channel_map)[5366].second.push_front(p_4_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awqos.bind(*p_4_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map)[5364].first = 3;
        (*_glb_hdl_sc_channel_map)[5364].second.push_front(p_4_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_awvalid.bind(*p_4_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map)[5368].first = 3;
        (*_glb_hdl_sc_channel_map)[5368].second.push_front(p_4_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_awready.bind(*p_4_S04_AXI_awready);
        p_4_S04_AXI_awready->set_sv_netview_offsetfromdp(5771192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S04_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S04_AXI_wdata.bind(*p_4_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map)[5377].first = 3;
        (*_glb_hdl_sc_channel_map)[5377].second.push_front(p_4_S04_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_wstrb.bind(*p_4_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map)[5380].first = 3;
        (*_glb_hdl_sc_channel_map)[5380].second.push_front(p_4_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wlast.bind(*p_4_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map)[5378].first = 3;
        (*_glb_hdl_sc_channel_map)[5378].second.push_front(p_4_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wvalid.bind(*p_4_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map)[5381].first = 3;
        (*_glb_hdl_sc_channel_map)[5381].second.push_front(p_4_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wready.bind(*p_4_S04_AXI_wready);
        p_4_S04_AXI_wready->set_sv_netview_offsetfromdp(5771472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S04_AXI_bresp.bind(*p_4_S04_AXI_bresp);
        p_4_S04_AXI_bresp->set_sv_netview_offsetfromdp(5771528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_bvalid.bind(*p_4_S04_AXI_bvalid);
        p_4_S04_AXI_bvalid->set_sv_netview_offsetfromdp(5771584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_bready.bind(*p_4_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map)[5369].first = 3;
        (*_glb_hdl_sc_channel_map)[5369].second.push_front(p_4_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S04_AXI_araddr.bind(*p_4_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map)[5351].first = 3;
        (*_glb_hdl_sc_channel_map)[5351].second.push_front(p_4_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S04_AXI_arlen.bind(*p_4_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map)[5353].first = 3;
        (*_glb_hdl_sc_channel_map)[5353].second.push_front(p_4_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_arsize.bind(*p_4_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map)[5358].first = 3;
        (*_glb_hdl_sc_channel_map)[5358].second.push_front(p_4_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_4_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S04_AXI_arlock.bind(*p_4_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map)[1219].first = 1;
        (*_glb_hdl_sc_channel_map)[1219].second.push_front(p_4_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arcache.bind(*p_4_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map)[5352].first = 3;
        (*_glb_hdl_sc_channel_map)[5352].second.push_front(p_4_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_arprot.bind(*p_4_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map)[5354].first = 3;
        (*_glb_hdl_sc_channel_map)[5354].second.push_front(p_4_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arregion.bind(*p_4_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map)[5357].first = 3;
        (*_glb_hdl_sc_channel_map)[5357].second.push_front(p_4_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arqos.bind(*p_4_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map)[5355].first = 3;
        (*_glb_hdl_sc_channel_map)[5355].second.push_front(p_4_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_arvalid.bind(*p_4_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map)[5359].first = 3;
        (*_glb_hdl_sc_channel_map)[5359].second.push_front(p_4_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_arready.bind(*p_4_S04_AXI_arready);
        p_4_S04_AXI_arready->set_sv_netview_offsetfromdp(5772200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S04_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S04_AXI_rdata.bind(*p_4_S04_AXI_rdata);
        p_4_S04_AXI_rdata->set_sv_netview_offsetfromdp(5772256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S04_AXI_rresp.bind(*p_4_S04_AXI_rresp);
        p_4_S04_AXI_rresp->set_sv_netview_offsetfromdp(5772312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rlast.bind(*p_4_S04_AXI_rlast);
        p_4_S04_AXI_rlast->set_sv_netview_offsetfromdp(5772368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rvalid.bind(*p_4_S04_AXI_rvalid);
        p_4_S04_AXI_rvalid->set_sv_netview_offsetfromdp(5772424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rready.bind(*p_4_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map)[5374].first = 3;
        (*_glb_hdl_sc_channel_map)[5374].second.push_front(p_4_S04_AXI_rready);
        xsim_sc_channel<0, bool > *p_4_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_4->ddr4_mem_calib_complete.bind(*p_4_ddr4_mem_calib_complete);
        p_4_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(5772536);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_awid.bind(*p_4_M00_AXI_awid);
        p_4_M00_AXI_awid->set_sv_netview_offsetfromdp(5772592);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M00_AXI_awaddr.bind(*p_4_M00_AXI_awaddr);
        p_4_M00_AXI_awaddr->set_sv_netview_offsetfromdp(5772648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M00_AXI_awlen.bind(*p_4_M00_AXI_awlen);
        p_4_M00_AXI_awlen->set_sv_netview_offsetfromdp(5772704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_awsize.bind(*p_4_M00_AXI_awsize);
        p_4_M00_AXI_awsize->set_sv_netview_offsetfromdp(5772760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_awburst.bind(*p_4_M00_AXI_awburst);
        p_4_M00_AXI_awburst->set_sv_netview_offsetfromdp(5772816);
        xsim_sc_channel<0, bool > *p_4_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M00_AXI_awlock.bind(*p_4_M00_AXI_awlock);
        p_4_M00_AXI_awlock->set_sv_netview_offsetfromdp(5772872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_awcache.bind(*p_4_M00_AXI_awcache);
        p_4_M00_AXI_awcache->set_sv_netview_offsetfromdp(5772928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_awprot.bind(*p_4_M00_AXI_awprot);
        p_4_M00_AXI_awprot->set_sv_netview_offsetfromdp(5772984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_awqos.bind(*p_4_M00_AXI_awqos);
        p_4_M00_AXI_awqos->set_sv_netview_offsetfromdp(5773040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M00_AXI_awuser.bind(*p_4_M00_AXI_awuser);
        p_4_M00_AXI_awuser->set_sv_netview_offsetfromdp(5773096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_awvalid.bind(*p_4_M00_AXI_awvalid);
        p_4_M00_AXI_awvalid->set_sv_netview_offsetfromdp(5773152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_awready.bind(*p_4_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5050].first = 3;
        (*_glb_hdl_sc_channel_map)[5050].second.push_front(p_4_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M00_AXI_wdata.bind(*p_4_M00_AXI_wdata);
        p_4_M00_AXI_wdata->set_sv_netview_offsetfromdp(5773264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M00_AXI_wstrb.bind(*p_4_M00_AXI_wstrb);
        p_4_M00_AXI_wstrb->set_sv_netview_offsetfromdp(5773320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wlast.bind(*p_4_M00_AXI_wlast);
        p_4_M00_AXI_wlast->set_sv_netview_offsetfromdp(5773376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wuser.bind(*p_4_M00_AXI_wuser);
        p_4_M00_AXI_wuser->set_sv_netview_offsetfromdp(5773432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wvalid.bind(*p_4_M00_AXI_wvalid);
        p_4_M00_AXI_wvalid->set_sv_netview_offsetfromdp(5773488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wready.bind(*p_4_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5068].first = 3;
        (*_glb_hdl_sc_channel_map)[5068].second.push_front(p_4_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_bid.bind(*p_4_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5054].first = 3;
        (*_glb_hdl_sc_channel_map)[5054].second.push_front(p_4_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_bresp.bind(*p_4_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5056].first = 3;
        (*_glb_hdl_sc_channel_map)[5056].second.push_front(p_4_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_buser.bind(*p_4_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5057].first = 3;
        (*_glb_hdl_sc_channel_map)[5057].second.push_front(p_4_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_bvalid.bind(*p_4_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5058].first = 3;
        (*_glb_hdl_sc_channel_map)[5058].second.push_front(p_4_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_bready.bind(*p_4_M00_AXI_bready);
        p_4_M00_AXI_bready->set_sv_netview_offsetfromdp(5773824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_arid.bind(*p_4_M00_AXI_arid);
        p_4_M00_AXI_arid->set_sv_netview_offsetfromdp(5773880);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M00_AXI_araddr.bind(*p_4_M00_AXI_araddr);
        p_4_M00_AXI_araddr->set_sv_netview_offsetfromdp(5773936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M00_AXI_arlen.bind(*p_4_M00_AXI_arlen);
        p_4_M00_AXI_arlen->set_sv_netview_offsetfromdp(5773992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_arsize.bind(*p_4_M00_AXI_arsize);
        p_4_M00_AXI_arsize->set_sv_netview_offsetfromdp(5774048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_arburst.bind(*p_4_M00_AXI_arburst);
        p_4_M00_AXI_arburst->set_sv_netview_offsetfromdp(5774104);
        xsim_sc_channel<0, bool > *p_4_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M00_AXI_arlock.bind(*p_4_M00_AXI_arlock);
        p_4_M00_AXI_arlock->set_sv_netview_offsetfromdp(5774160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_arcache.bind(*p_4_M00_AXI_arcache);
        p_4_M00_AXI_arcache->set_sv_netview_offsetfromdp(5774216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_arprot.bind(*p_4_M00_AXI_arprot);
        p_4_M00_AXI_arprot->set_sv_netview_offsetfromdp(5774272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_arqos.bind(*p_4_M00_AXI_arqos);
        p_4_M00_AXI_arqos->set_sv_netview_offsetfromdp(5774328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M00_AXI_aruser.bind(*p_4_M00_AXI_aruser);
        p_4_M00_AXI_aruser->set_sv_netview_offsetfromdp(5774384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_arvalid.bind(*p_4_M00_AXI_arvalid);
        p_4_M00_AXI_arvalid->set_sv_netview_offsetfromdp(5774440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_arready.bind(*p_4_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5038].first = 3;
        (*_glb_hdl_sc_channel_map)[5038].second.push_front(p_4_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_rid.bind(*p_4_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5060].first = 3;
        (*_glb_hdl_sc_channel_map)[5060].second.push_front(p_4_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M00_AXI_rdata.bind(*p_4_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5059].first = 3;
        (*_glb_hdl_sc_channel_map)[5059].second.push_front(p_4_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_rresp.bind(*p_4_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5063].first = 3;
        (*_glb_hdl_sc_channel_map)[5063].second.push_front(p_4_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rlast.bind(*p_4_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5061].first = 3;
        (*_glb_hdl_sc_channel_map)[5061].second.push_front(p_4_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_ruser.bind(*p_4_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5064].first = 3;
        (*_glb_hdl_sc_channel_map)[5064].second.push_front(p_4_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rvalid.bind(*p_4_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5065].first = 3;
        (*_glb_hdl_sc_channel_map)[5065].second.push_front(p_4_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rready.bind(*p_4_M00_AXI_rready);
        p_4_M00_AXI_rready->set_sv_netview_offsetfromdp(5774888);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_4_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_4->M01_AXI_awaddr.bind(*p_4_M01_AXI_awaddr);
        p_4_M01_AXI_awaddr->set_sv_netview_offsetfromdp(5774944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M01_AXI_awlen.bind(*p_4_M01_AXI_awlen);
        p_4_M01_AXI_awlen->set_sv_netview_offsetfromdp(5775000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_awsize.bind(*p_4_M01_AXI_awsize);
        p_4_M01_AXI_awsize->set_sv_netview_offsetfromdp(5775056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_awburst.bind(*p_4_M01_AXI_awburst);
        p_4_M01_AXI_awburst->set_sv_netview_offsetfromdp(5775112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_awprot.bind(*p_4_M01_AXI_awprot);
        p_4_M01_AXI_awprot->set_sv_netview_offsetfromdp(5775168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_awvalid.bind(*p_4_M01_AXI_awvalid);
        p_4_M01_AXI_awvalid->set_sv_netview_offsetfromdp(5775224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_awready.bind(*p_4_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5083].first = 3;
        (*_glb_hdl_sc_channel_map)[5083].second.push_front(p_4_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M01_AXI_wdata.bind(*p_4_M01_AXI_wdata);
        p_4_M01_AXI_wdata->set_sv_netview_offsetfromdp(5775336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M01_AXI_wstrb.bind(*p_4_M01_AXI_wstrb);
        p_4_M01_AXI_wstrb->set_sv_netview_offsetfromdp(5775392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wlast.bind(*p_4_M01_AXI_wlast);
        p_4_M01_AXI_wlast->set_sv_netview_offsetfromdp(5775448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wvalid.bind(*p_4_M01_AXI_wvalid);
        p_4_M01_AXI_wvalid->set_sv_netview_offsetfromdp(5775504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wready.bind(*p_4_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5096].first = 3;
        (*_glb_hdl_sc_channel_map)[5096].second.push_front(p_4_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_bresp.bind(*p_4_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5087].first = 3;
        (*_glb_hdl_sc_channel_map)[5087].second.push_front(p_4_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_bvalid.bind(*p_4_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5088].first = 3;
        (*_glb_hdl_sc_channel_map)[5088].second.push_front(p_4_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_bready.bind(*p_4_M01_AXI_bready);
        p_4_M01_AXI_bready->set_sv_netview_offsetfromdp(5775728);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_4_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_4->M01_AXI_araddr.bind(*p_4_M01_AXI_araddr);
        p_4_M01_AXI_araddr->set_sv_netview_offsetfromdp(5775784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M01_AXI_arlen.bind(*p_4_M01_AXI_arlen);
        p_4_M01_AXI_arlen->set_sv_netview_offsetfromdp(5775840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_arsize.bind(*p_4_M01_AXI_arsize);
        p_4_M01_AXI_arsize->set_sv_netview_offsetfromdp(5775896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_arburst.bind(*p_4_M01_AXI_arburst);
        p_4_M01_AXI_arburst->set_sv_netview_offsetfromdp(5775952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_arprot.bind(*p_4_M01_AXI_arprot);
        p_4_M01_AXI_arprot->set_sv_netview_offsetfromdp(5776008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_arvalid.bind(*p_4_M01_AXI_arvalid);
        p_4_M01_AXI_arvalid->set_sv_netview_offsetfromdp(5776064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_arready.bind(*p_4_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5076].first = 3;
        (*_glb_hdl_sc_channel_map)[5076].second.push_front(p_4_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M01_AXI_rdata.bind(*p_4_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5089].first = 3;
        (*_glb_hdl_sc_channel_map)[5089].second.push_front(p_4_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_rresp.bind(*p_4_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5092].first = 3;
        (*_glb_hdl_sc_channel_map)[5092].second.push_front(p_4_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rlast.bind(*p_4_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5090].first = 3;
        (*_glb_hdl_sc_channel_map)[5090].second.push_front(p_4_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rvalid.bind(*p_4_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5093].first = 3;
        (*_glb_hdl_sc_channel_map)[5093].second.push_front(p_4_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rready.bind(*p_4_M01_AXI_rready);
        p_4_M01_AXI_rready->set_sv_netview_offsetfromdp(5776400);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_awid.bind(*p_4_M02_AXI_awid);
        p_4_M02_AXI_awid->set_sv_netview_offsetfromdp(5776456);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M02_AXI_awaddr.bind(*p_4_M02_AXI_awaddr);
        p_4_M02_AXI_awaddr->set_sv_netview_offsetfromdp(5776512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M02_AXI_awlen.bind(*p_4_M02_AXI_awlen);
        p_4_M02_AXI_awlen->set_sv_netview_offsetfromdp(5776568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_awsize.bind(*p_4_M02_AXI_awsize);
        p_4_M02_AXI_awsize->set_sv_netview_offsetfromdp(5776624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_awburst.bind(*p_4_M02_AXI_awburst);
        p_4_M02_AXI_awburst->set_sv_netview_offsetfromdp(5776680);
        xsim_sc_channel<0, bool > *p_4_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M02_AXI_awlock.bind(*p_4_M02_AXI_awlock);
        p_4_M02_AXI_awlock->set_sv_netview_offsetfromdp(5776736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_awcache.bind(*p_4_M02_AXI_awcache);
        p_4_M02_AXI_awcache->set_sv_netview_offsetfromdp(5776792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_awprot.bind(*p_4_M02_AXI_awprot);
        p_4_M02_AXI_awprot->set_sv_netview_offsetfromdp(5776848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_awqos.bind(*p_4_M02_AXI_awqos);
        p_4_M02_AXI_awqos->set_sv_netview_offsetfromdp(5776904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M02_AXI_awuser.bind(*p_4_M02_AXI_awuser);
        p_4_M02_AXI_awuser->set_sv_netview_offsetfromdp(5776960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_awvalid.bind(*p_4_M02_AXI_awvalid);
        p_4_M02_AXI_awvalid->set_sv_netview_offsetfromdp(5777016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_awready.bind(*p_4_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5119].first = 3;
        (*_glb_hdl_sc_channel_map)[5119].second.push_front(p_4_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M02_AXI_wdata.bind(*p_4_M02_AXI_wdata);
        p_4_M02_AXI_wdata->set_sv_netview_offsetfromdp(5777128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M02_AXI_wstrb.bind(*p_4_M02_AXI_wstrb);
        p_4_M02_AXI_wstrb->set_sv_netview_offsetfromdp(5777184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wlast.bind(*p_4_M02_AXI_wlast);
        p_4_M02_AXI_wlast->set_sv_netview_offsetfromdp(5777240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wuser.bind(*p_4_M02_AXI_wuser);
        p_4_M02_AXI_wuser->set_sv_netview_offsetfromdp(5777296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wvalid.bind(*p_4_M02_AXI_wvalid);
        p_4_M02_AXI_wvalid->set_sv_netview_offsetfromdp(5777352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wready.bind(*p_4_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5137].first = 3;
        (*_glb_hdl_sc_channel_map)[5137].second.push_front(p_4_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_bid.bind(*p_4_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5123].first = 3;
        (*_glb_hdl_sc_channel_map)[5123].second.push_front(p_4_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_bresp.bind(*p_4_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5125].first = 3;
        (*_glb_hdl_sc_channel_map)[5125].second.push_front(p_4_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_buser.bind(*p_4_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5126].first = 3;
        (*_glb_hdl_sc_channel_map)[5126].second.push_front(p_4_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_bvalid.bind(*p_4_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5127].first = 3;
        (*_glb_hdl_sc_channel_map)[5127].second.push_front(p_4_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_bready.bind(*p_4_M02_AXI_bready);
        p_4_M02_AXI_bready->set_sv_netview_offsetfromdp(5777688);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_arid.bind(*p_4_M02_AXI_arid);
        p_4_M02_AXI_arid->set_sv_netview_offsetfromdp(5777744);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M02_AXI_araddr.bind(*p_4_M02_AXI_araddr);
        p_4_M02_AXI_araddr->set_sv_netview_offsetfromdp(5777800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M02_AXI_arlen.bind(*p_4_M02_AXI_arlen);
        p_4_M02_AXI_arlen->set_sv_netview_offsetfromdp(5777856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_arsize.bind(*p_4_M02_AXI_arsize);
        p_4_M02_AXI_arsize->set_sv_netview_offsetfromdp(5777912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_arburst.bind(*p_4_M02_AXI_arburst);
        p_4_M02_AXI_arburst->set_sv_netview_offsetfromdp(5777968);
        xsim_sc_channel<0, bool > *p_4_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M02_AXI_arlock.bind(*p_4_M02_AXI_arlock);
        p_4_M02_AXI_arlock->set_sv_netview_offsetfromdp(5778024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_arcache.bind(*p_4_M02_AXI_arcache);
        p_4_M02_AXI_arcache->set_sv_netview_offsetfromdp(5778080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_arprot.bind(*p_4_M02_AXI_arprot);
        p_4_M02_AXI_arprot->set_sv_netview_offsetfromdp(5778136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_arqos.bind(*p_4_M02_AXI_arqos);
        p_4_M02_AXI_arqos->set_sv_netview_offsetfromdp(5778192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M02_AXI_aruser.bind(*p_4_M02_AXI_aruser);
        p_4_M02_AXI_aruser->set_sv_netview_offsetfromdp(5778248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_arvalid.bind(*p_4_M02_AXI_arvalid);
        p_4_M02_AXI_arvalid->set_sv_netview_offsetfromdp(5778304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_arready.bind(*p_4_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5107].first = 3;
        (*_glb_hdl_sc_channel_map)[5107].second.push_front(p_4_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_rid.bind(*p_4_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5129].first = 3;
        (*_glb_hdl_sc_channel_map)[5129].second.push_front(p_4_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M02_AXI_rdata.bind(*p_4_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5128].first = 3;
        (*_glb_hdl_sc_channel_map)[5128].second.push_front(p_4_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_rresp.bind(*p_4_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5132].first = 3;
        (*_glb_hdl_sc_channel_map)[5132].second.push_front(p_4_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rlast.bind(*p_4_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5130].first = 3;
        (*_glb_hdl_sc_channel_map)[5130].second.push_front(p_4_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_ruser.bind(*p_4_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5133].first = 3;
        (*_glb_hdl_sc_channel_map)[5133].second.push_front(p_4_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rvalid.bind(*p_4_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5134].first = 3;
        (*_glb_hdl_sc_channel_map)[5134].second.push_front(p_4_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rready.bind(*p_4_M02_AXI_rready);
        p_4_M02_AXI_rready->set_sv_netview_offsetfromdp(5778752);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_awid.bind(*p_4_M03_AXI_awid);
        p_4_M03_AXI_awid->set_sv_netview_offsetfromdp(5778808);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M03_AXI_awaddr.bind(*p_4_M03_AXI_awaddr);
        p_4_M03_AXI_awaddr->set_sv_netview_offsetfromdp(5778864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M03_AXI_awlen.bind(*p_4_M03_AXI_awlen);
        p_4_M03_AXI_awlen->set_sv_netview_offsetfromdp(5778920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_awsize.bind(*p_4_M03_AXI_awsize);
        p_4_M03_AXI_awsize->set_sv_netview_offsetfromdp(5778976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_awburst.bind(*p_4_M03_AXI_awburst);
        p_4_M03_AXI_awburst->set_sv_netview_offsetfromdp(5779032);
        xsim_sc_channel<0, bool > *p_4_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M03_AXI_awlock.bind(*p_4_M03_AXI_awlock);
        p_4_M03_AXI_awlock->set_sv_netview_offsetfromdp(5779088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_awcache.bind(*p_4_M03_AXI_awcache);
        p_4_M03_AXI_awcache->set_sv_netview_offsetfromdp(5779144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_awprot.bind(*p_4_M03_AXI_awprot);
        p_4_M03_AXI_awprot->set_sv_netview_offsetfromdp(5779200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_awqos.bind(*p_4_M03_AXI_awqos);
        p_4_M03_AXI_awqos->set_sv_netview_offsetfromdp(5779256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M03_AXI_awuser.bind(*p_4_M03_AXI_awuser);
        p_4_M03_AXI_awuser->set_sv_netview_offsetfromdp(5779312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_awvalid.bind(*p_4_M03_AXI_awvalid);
        p_4_M03_AXI_awvalid->set_sv_netview_offsetfromdp(5779368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_awready.bind(*p_4_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map)[5161].first = 3;
        (*_glb_hdl_sc_channel_map)[5161].second.push_front(p_4_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M03_AXI_wdata.bind(*p_4_M03_AXI_wdata);
        p_4_M03_AXI_wdata->set_sv_netview_offsetfromdp(5779480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M03_AXI_wstrb.bind(*p_4_M03_AXI_wstrb);
        p_4_M03_AXI_wstrb->set_sv_netview_offsetfromdp(5779536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wlast.bind(*p_4_M03_AXI_wlast);
        p_4_M03_AXI_wlast->set_sv_netview_offsetfromdp(5779592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wuser.bind(*p_4_M03_AXI_wuser);
        p_4_M03_AXI_wuser->set_sv_netview_offsetfromdp(5779648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wvalid.bind(*p_4_M03_AXI_wvalid);
        p_4_M03_AXI_wvalid->set_sv_netview_offsetfromdp(5779704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wready.bind(*p_4_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map)[5179].first = 3;
        (*_glb_hdl_sc_channel_map)[5179].second.push_front(p_4_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_bid.bind(*p_4_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map)[5165].first = 3;
        (*_glb_hdl_sc_channel_map)[5165].second.push_front(p_4_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_bresp.bind(*p_4_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map)[5167].first = 3;
        (*_glb_hdl_sc_channel_map)[5167].second.push_front(p_4_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_buser.bind(*p_4_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map)[5168].first = 3;
        (*_glb_hdl_sc_channel_map)[5168].second.push_front(p_4_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_bvalid.bind(*p_4_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map)[5169].first = 3;
        (*_glb_hdl_sc_channel_map)[5169].second.push_front(p_4_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_bready.bind(*p_4_M03_AXI_bready);
        p_4_M03_AXI_bready->set_sv_netview_offsetfromdp(5780040);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_arid.bind(*p_4_M03_AXI_arid);
        p_4_M03_AXI_arid->set_sv_netview_offsetfromdp(5780096);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M03_AXI_araddr.bind(*p_4_M03_AXI_araddr);
        p_4_M03_AXI_araddr->set_sv_netview_offsetfromdp(5780152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M03_AXI_arlen.bind(*p_4_M03_AXI_arlen);
        p_4_M03_AXI_arlen->set_sv_netview_offsetfromdp(5780208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_arsize.bind(*p_4_M03_AXI_arsize);
        p_4_M03_AXI_arsize->set_sv_netview_offsetfromdp(5780264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_arburst.bind(*p_4_M03_AXI_arburst);
        p_4_M03_AXI_arburst->set_sv_netview_offsetfromdp(5780320);
        xsim_sc_channel<0, bool > *p_4_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M03_AXI_arlock.bind(*p_4_M03_AXI_arlock);
        p_4_M03_AXI_arlock->set_sv_netview_offsetfromdp(5780376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_arcache.bind(*p_4_M03_AXI_arcache);
        p_4_M03_AXI_arcache->set_sv_netview_offsetfromdp(5780432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_arprot.bind(*p_4_M03_AXI_arprot);
        p_4_M03_AXI_arprot->set_sv_netview_offsetfromdp(5780488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_arqos.bind(*p_4_M03_AXI_arqos);
        p_4_M03_AXI_arqos->set_sv_netview_offsetfromdp(5780544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M03_AXI_aruser.bind(*p_4_M03_AXI_aruser);
        p_4_M03_AXI_aruser->set_sv_netview_offsetfromdp(5780600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_arvalid.bind(*p_4_M03_AXI_arvalid);
        p_4_M03_AXI_arvalid->set_sv_netview_offsetfromdp(5780656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_arready.bind(*p_4_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map)[5149].first = 3;
        (*_glb_hdl_sc_channel_map)[5149].second.push_front(p_4_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_rid.bind(*p_4_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map)[5171].first = 3;
        (*_glb_hdl_sc_channel_map)[5171].second.push_front(p_4_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M03_AXI_rdata.bind(*p_4_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map)[5170].first = 3;
        (*_glb_hdl_sc_channel_map)[5170].second.push_front(p_4_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_rresp.bind(*p_4_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map)[5174].first = 3;
        (*_glb_hdl_sc_channel_map)[5174].second.push_front(p_4_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rlast.bind(*p_4_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map)[5172].first = 3;
        (*_glb_hdl_sc_channel_map)[5172].second.push_front(p_4_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_ruser.bind(*p_4_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map)[5175].first = 3;
        (*_glb_hdl_sc_channel_map)[5175].second.push_front(p_4_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rvalid.bind(*p_4_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map)[5176].first = 3;
        (*_glb_hdl_sc_channel_map)[5176].second.push_front(p_4_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rready.bind(*p_4_M03_AXI_rready);
        p_4_M03_AXI_rready->set_sv_netview_offsetfromdp(5781104);
        sc_inst_5 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_5->xsim_set_dbg_index(31);
        sc_inst_6 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_6->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_6_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ui_clk.bind(*p_6_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[5430].first = 1;
        (*_glb_hdl_sc_channel_map)[5430].second.push_front(p_6_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_awid.bind(*p_6_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[5403].first = 3;
        (*_glb_hdl_sc_channel_map)[5403].second.push_front(p_6_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_awaddr.bind(*p_6_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[5400].first = 3;
        (*_glb_hdl_sc_channel_map)[5400].second.push_front(p_6_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_awlen.bind(*p_6_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[5404].first = 3;
        (*_glb_hdl_sc_channel_map)[5404].second.push_front(p_6_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awsize.bind(*p_6_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[5409].first = 3;
        (*_glb_hdl_sc_channel_map)[5409].second.push_front(p_6_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_awburst.bind(*p_6_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[5401].first = 3;
        (*_glb_hdl_sc_channel_map)[5401].second.push_front(p_6_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awlock.bind(*p_6_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[5405].first = 1;
        (*_glb_hdl_sc_channel_map)[5405].second.push_front(p_6_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awcache.bind(*p_6_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[5402].first = 3;
        (*_glb_hdl_sc_channel_map)[5402].second.push_front(p_6_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awprot.bind(*p_6_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[5406].first = 3;
        (*_glb_hdl_sc_channel_map)[5406].second.push_front(p_6_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awregion.bind(*p_6_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1216].first = 3;
        (*_glb_hdl_sc_channel_map)[1216].second.push_front(p_6_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awqos.bind(*p_6_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[5407].first = 3;
        (*_glb_hdl_sc_channel_map)[5407].second.push_front(p_6_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_awuser.bind(*p_6_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[5410].first = 3;
        (*_glb_hdl_sc_channel_map)[5410].second.push_front(p_6_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awvalid.bind(*p_6_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[5411].first = 1;
        (*_glb_hdl_sc_channel_map)[5411].second.push_front(p_6_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awready.bind(*p_6_c0_ddr_saxi_awready);
        p_6_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5781984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_wdata.bind(*p_6_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[5424].first = 3;
        (*_glb_hdl_sc_channel_map)[5424].second.push_front(p_6_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->c0_ddr_saxi_wstrb.bind(*p_6_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[5427].first = 3;
        (*_glb_hdl_sc_channel_map)[5427].second.push_front(p_6_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wlast.bind(*p_6_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[5425].first = 1;
        (*_glb_hdl_sc_channel_map)[5425].second.push_front(p_6_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_wuser.bind(*p_6_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[5428].first = 3;
        (*_glb_hdl_sc_channel_map)[5428].second.push_front(p_6_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wvalid.bind(*p_6_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[5429].first = 1;
        (*_glb_hdl_sc_channel_map)[5429].second.push_front(p_6_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wready.bind(*p_6_c0_ddr_saxi_wready);
        p_6_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5782320);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_bid.bind(*p_6_c0_ddr_saxi_bid);
        p_6_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5782376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_bresp.bind(*p_6_c0_ddr_saxi_bresp);
        p_6_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5782432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_buser.bind(*p_6_c0_ddr_saxi_buser);
        p_6_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5782488);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bvalid.bind(*p_6_c0_ddr_saxi_bvalid);
        p_6_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5782544);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bready.bind(*p_6_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[5413].first = 1;
        (*_glb_hdl_sc_channel_map)[5413].second.push_front(p_6_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_arid.bind(*p_6_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[5391].first = 3;
        (*_glb_hdl_sc_channel_map)[5391].second.push_front(p_6_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_araddr.bind(*p_6_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[5387].first = 3;
        (*_glb_hdl_sc_channel_map)[5387].second.push_front(p_6_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_arlen.bind(*p_6_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[5392].first = 3;
        (*_glb_hdl_sc_channel_map)[5392].second.push_front(p_6_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arsize.bind(*p_6_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[5397].first = 3;
        (*_glb_hdl_sc_channel_map)[5397].second.push_front(p_6_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_arburst.bind(*p_6_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[5388].first = 3;
        (*_glb_hdl_sc_channel_map)[5388].second.push_front(p_6_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arlock.bind(*p_6_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[5393].first = 1;
        (*_glb_hdl_sc_channel_map)[5393].second.push_front(p_6_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arcache.bind(*p_6_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[5389].first = 3;
        (*_glb_hdl_sc_channel_map)[5389].second.push_front(p_6_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arprot.bind(*p_6_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[5394].first = 3;
        (*_glb_hdl_sc_channel_map)[5394].second.push_front(p_6_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arregion.bind(*p_6_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1217].first = 3;
        (*_glb_hdl_sc_channel_map)[1217].second.push_front(p_6_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arqos.bind(*p_6_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[5395].first = 3;
        (*_glb_hdl_sc_channel_map)[5395].second.push_front(p_6_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_aruser.bind(*p_6_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[5398].first = 3;
        (*_glb_hdl_sc_channel_map)[5398].second.push_front(p_6_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arvalid.bind(*p_6_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[5399].first = 1;
        (*_glb_hdl_sc_channel_map)[5399].second.push_front(p_6_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arready.bind(*p_6_c0_ddr_saxi_arready);
        p_6_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5783328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_rid.bind(*p_6_c0_ddr_saxi_rid);
        p_6_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5783384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_rdata.bind(*p_6_c0_ddr_saxi_rdata);
        p_6_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5783440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_rresp.bind(*p_6_c0_ddr_saxi_rresp);
        p_6_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5783496);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rlast.bind(*p_6_c0_ddr_saxi_rlast);
        p_6_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5783552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_ruser.bind(*p_6_c0_ddr_saxi_ruser);
        p_6_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5783608);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rvalid.bind(*p_6_c0_ddr_saxi_rvalid);
        p_6_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5783664);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rready.bind(*p_6_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[5420].first = 1;
        (*_glb_hdl_sc_channel_map)[5420].second.push_front(p_6_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aclk.bind(*p_6_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[5386].first = 1;
        (*_glb_hdl_sc_channel_map)[5386].second.push_front(p_6_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aresetn.bind(*p_6_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[5390].first = 1;
        (*_glb_hdl_sc_channel_map)[5390].second.push_front(p_6_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_awid.bind(*p_6_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1200].first = 3;
        (*_glb_hdl_sc_channel_map)[1200].second.push_front(p_6_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awaddr.bind(*p_6_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1203].first = 3;
        (*_glb_hdl_sc_channel_map)[1203].second.push_front(p_6_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_awlen.bind(*p_6_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1199].first = 3;
        (*_glb_hdl_sc_channel_map)[1199].second.push_front(p_6_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awsize.bind(*p_6_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1194].first = 3;
        (*_glb_hdl_sc_channel_map)[1194].second.push_front(p_6_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_awburst.bind(*p_6_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1202].first = 3;
        (*_glb_hdl_sc_channel_map)[1202].second.push_front(p_6_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awlock.bind(*p_6_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1198].first = 1;
        (*_glb_hdl_sc_channel_map)[1198].second.push_front(p_6_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awcache.bind(*p_6_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1201].first = 3;
        (*_glb_hdl_sc_channel_map)[1201].second.push_front(p_6_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awprot.bind(*p_6_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1197].first = 3;
        (*_glb_hdl_sc_channel_map)[1197].second.push_front(p_6_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awregion.bind(*p_6_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1195].first = 3;
        (*_glb_hdl_sc_channel_map)[1195].second.push_front(p_6_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awqos.bind(*p_6_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1196].first = 3;
        (*_glb_hdl_sc_channel_map)[1196].second.push_front(p_6_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awuser.bind(*p_6_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1193].first = 3;
        (*_glb_hdl_sc_channel_map)[1193].second.push_front(p_6_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awvalid.bind(*p_6_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1192].first = 1;
        (*_glb_hdl_sc_channel_map)[1192].second.push_front(p_6_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awready.bind(*p_6_s_xdma_axi_awready);
        p_6_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5784560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_wdata.bind(*p_6_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1189].first = 3;
        (*_glb_hdl_sc_channel_map)[1189].second.push_front(p_6_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_wstrb.bind(*p_6_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1187].first = 3;
        (*_glb_hdl_sc_channel_map)[1187].second.push_front(p_6_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wlast.bind(*p_6_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1188].first = 1;
        (*_glb_hdl_sc_channel_map)[1188].second.push_front(p_6_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_wuser.bind(*p_6_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1186].first = 3;
        (*_glb_hdl_sc_channel_map)[1186].second.push_front(p_6_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wvalid.bind(*p_6_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1185].first = 1;
        (*_glb_hdl_sc_channel_map)[1185].second.push_front(p_6_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wready.bind(*p_6_s_xdma_axi_wready);
        p_6_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5784896);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_bid.bind(*p_6_s_xdma_axi_bid);
        p_6_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5784952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_bresp.bind(*p_6_s_xdma_axi_bresp);
        p_6_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5785008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_buser.bind(*p_6_s_xdma_axi_buser);
        p_6_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5785064);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bvalid.bind(*p_6_s_xdma_axi_bvalid);
        p_6_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5785120);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bready.bind(*p_6_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1191].first = 1;
        (*_glb_hdl_sc_channel_map)[1191].second.push_front(p_6_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_arid.bind(*p_6_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1212].first = 3;
        (*_glb_hdl_sc_channel_map)[1212].second.push_front(p_6_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_araddr.bind(*p_6_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1215].first = 3;
        (*_glb_hdl_sc_channel_map)[1215].second.push_front(p_6_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_arlen.bind(*p_6_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1211].first = 3;
        (*_glb_hdl_sc_channel_map)[1211].second.push_front(p_6_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arsize.bind(*p_6_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1206].first = 3;
        (*_glb_hdl_sc_channel_map)[1206].second.push_front(p_6_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_arburst.bind(*p_6_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1214].first = 3;
        (*_glb_hdl_sc_channel_map)[1214].second.push_front(p_6_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arlock.bind(*p_6_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1210].first = 1;
        (*_glb_hdl_sc_channel_map)[1210].second.push_front(p_6_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arcache.bind(*p_6_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1213].first = 3;
        (*_glb_hdl_sc_channel_map)[1213].second.push_front(p_6_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arprot.bind(*p_6_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1209].first = 3;
        (*_glb_hdl_sc_channel_map)[1209].second.push_front(p_6_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arregion.bind(*p_6_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1207].first = 3;
        (*_glb_hdl_sc_channel_map)[1207].second.push_front(p_6_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arqos.bind(*p_6_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1208].first = 3;
        (*_glb_hdl_sc_channel_map)[1208].second.push_front(p_6_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_aruser.bind(*p_6_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1205].first = 3;
        (*_glb_hdl_sc_channel_map)[1205].second.push_front(p_6_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arvalid.bind(*p_6_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1204].first = 1;
        (*_glb_hdl_sc_channel_map)[1204].second.push_front(p_6_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arready.bind(*p_6_s_xdma_axi_arready);
        p_6_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5785904);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_rid.bind(*p_6_s_xdma_axi_rid);
        p_6_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5785960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_rdata.bind(*p_6_s_xdma_axi_rdata);
        p_6_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5786016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_rresp.bind(*p_6_s_xdma_axi_rresp);
        p_6_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5786072);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rlast.bind(*p_6_s_xdma_axi_rlast);
        p_6_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5786128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_ruser.bind(*p_6_s_xdma_axi_ruser);
        p_6_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5786184);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rvalid.bind(*p_6_s_xdma_axi_rvalid);
        p_6_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5786240);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rready.bind(*p_6_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1190].first = 1;
        (*_glb_hdl_sc_channel_map)[1190].second.push_front(p_6_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aclk.bind(*p_6_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[5431].first = 1;
        (*_glb_hdl_sc_channel_map)[5431].second.push_front(p_6_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aresetn.bind(*p_6_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[5432].first = 1;
        (*_glb_hdl_sc_channel_map)[5432].second.push_front(p_6_s_xdma_axi_aresetn);
        sc_inst_7 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_7->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[5490].first = 1;
        (*_glb_hdl_sc_channel_map)[5490].second.push_front(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[5463].first = 3;
        (*_glb_hdl_sc_channel_map)[5463].second.push_front(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[5460].first = 3;
        (*_glb_hdl_sc_channel_map)[5460].second.push_front(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[5464].first = 3;
        (*_glb_hdl_sc_channel_map)[5464].second.push_front(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[5469].first = 3;
        (*_glb_hdl_sc_channel_map)[5469].second.push_front(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[5461].first = 3;
        (*_glb_hdl_sc_channel_map)[5461].second.push_front(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[5465].first = 1;
        (*_glb_hdl_sc_channel_map)[5465].second.push_front(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[5462].first = 3;
        (*_glb_hdl_sc_channel_map)[5462].second.push_front(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[5466].first = 3;
        (*_glb_hdl_sc_channel_map)[5466].second.push_front(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1183].first = 3;
        (*_glb_hdl_sc_channel_map)[1183].second.push_front(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[5467].first = 3;
        (*_glb_hdl_sc_channel_map)[5467].second.push_front(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[5470].first = 3;
        (*_glb_hdl_sc_channel_map)[5470].second.push_front(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[5471].first = 1;
        (*_glb_hdl_sc_channel_map)[5471].second.push_front(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5787240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[5484].first = 3;
        (*_glb_hdl_sc_channel_map)[5484].second.push_front(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[5487].first = 3;
        (*_glb_hdl_sc_channel_map)[5487].second.push_front(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[5485].first = 1;
        (*_glb_hdl_sc_channel_map)[5485].second.push_front(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[5488].first = 3;
        (*_glb_hdl_sc_channel_map)[5488].second.push_front(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[5489].first = 1;
        (*_glb_hdl_sc_channel_map)[5489].second.push_front(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5787576);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5787632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5787688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5787744);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5787800);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[5473].first = 1;
        (*_glb_hdl_sc_channel_map)[5473].second.push_front(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[5451].first = 3;
        (*_glb_hdl_sc_channel_map)[5451].second.push_front(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[5447].first = 3;
        (*_glb_hdl_sc_channel_map)[5447].second.push_front(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[5452].first = 3;
        (*_glb_hdl_sc_channel_map)[5452].second.push_front(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[5457].first = 3;
        (*_glb_hdl_sc_channel_map)[5457].second.push_front(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[5448].first = 3;
        (*_glb_hdl_sc_channel_map)[5448].second.push_front(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[5453].first = 1;
        (*_glb_hdl_sc_channel_map)[5453].second.push_front(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[5449].first = 3;
        (*_glb_hdl_sc_channel_map)[5449].second.push_front(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[5454].first = 3;
        (*_glb_hdl_sc_channel_map)[5454].second.push_front(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1184].first = 3;
        (*_glb_hdl_sc_channel_map)[1184].second.push_front(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[5455].first = 3;
        (*_glb_hdl_sc_channel_map)[5455].second.push_front(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[5458].first = 3;
        (*_glb_hdl_sc_channel_map)[5458].second.push_front(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[5459].first = 1;
        (*_glb_hdl_sc_channel_map)[5459].second.push_front(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5788584);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5788640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5788696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5788752);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5788808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5788864);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5788920);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[5480].first = 1;
        (*_glb_hdl_sc_channel_map)[5480].second.push_front(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[5446].first = 1;
        (*_glb_hdl_sc_channel_map)[5446].second.push_front(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[5450].first = 1;
        (*_glb_hdl_sc_channel_map)[5450].second.push_front(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1167].first = 3;
        (*_glb_hdl_sc_channel_map)[1167].second.push_front(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1170].first = 3;
        (*_glb_hdl_sc_channel_map)[1170].second.push_front(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1166].first = 3;
        (*_glb_hdl_sc_channel_map)[1166].second.push_front(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1161].first = 3;
        (*_glb_hdl_sc_channel_map)[1161].second.push_front(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1169].first = 3;
        (*_glb_hdl_sc_channel_map)[1169].second.push_front(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1165].first = 1;
        (*_glb_hdl_sc_channel_map)[1165].second.push_front(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1168].first = 3;
        (*_glb_hdl_sc_channel_map)[1168].second.push_front(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1164].first = 3;
        (*_glb_hdl_sc_channel_map)[1164].second.push_front(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1162].first = 3;
        (*_glb_hdl_sc_channel_map)[1162].second.push_front(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1163].first = 3;
        (*_glb_hdl_sc_channel_map)[1163].second.push_front(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1160].first = 3;
        (*_glb_hdl_sc_channel_map)[1160].second.push_front(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1159].first = 1;
        (*_glb_hdl_sc_channel_map)[1159].second.push_front(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5789816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1156].first = 3;
        (*_glb_hdl_sc_channel_map)[1156].second.push_front(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1154].first = 3;
        (*_glb_hdl_sc_channel_map)[1154].second.push_front(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1155].first = 1;
        (*_glb_hdl_sc_channel_map)[1155].second.push_front(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1153].first = 3;
        (*_glb_hdl_sc_channel_map)[1153].second.push_front(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1152].first = 1;
        (*_glb_hdl_sc_channel_map)[1152].second.push_front(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5790152);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5790208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5790264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5790320);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5790376);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1158].first = 1;
        (*_glb_hdl_sc_channel_map)[1158].second.push_front(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1179].first = 3;
        (*_glb_hdl_sc_channel_map)[1179].second.push_front(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1182].first = 3;
        (*_glb_hdl_sc_channel_map)[1182].second.push_front(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1178].first = 3;
        (*_glb_hdl_sc_channel_map)[1178].second.push_front(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1173].first = 3;
        (*_glb_hdl_sc_channel_map)[1173].second.push_front(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1181].first = 3;
        (*_glb_hdl_sc_channel_map)[1181].second.push_front(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1177].first = 1;
        (*_glb_hdl_sc_channel_map)[1177].second.push_front(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1180].first = 3;
        (*_glb_hdl_sc_channel_map)[1180].second.push_front(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1176].first = 3;
        (*_glb_hdl_sc_channel_map)[1176].second.push_front(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1174].first = 3;
        (*_glb_hdl_sc_channel_map)[1174].second.push_front(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1175].first = 3;
        (*_glb_hdl_sc_channel_map)[1175].second.push_front(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1172].first = 3;
        (*_glb_hdl_sc_channel_map)[1172].second.push_front(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1171].first = 1;
        (*_glb_hdl_sc_channel_map)[1171].second.push_front(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5791160);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5791216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5791272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5791328);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5791384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5791440);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5791496);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1157].first = 1;
        (*_glb_hdl_sc_channel_map)[1157].second.push_front(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[5491].first = 1;
        (*_glb_hdl_sc_channel_map)[5491].second.push_front(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[5492].first = 1;
        (*_glb_hdl_sc_channel_map)[5492].second.push_front(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_8->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[5550].first = 1;
        (*_glb_hdl_sc_channel_map)[5550].second.push_front(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[5523].first = 3;
        (*_glb_hdl_sc_channel_map)[5523].second.push_front(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[5520].first = 3;
        (*_glb_hdl_sc_channel_map)[5520].second.push_front(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[5524].first = 3;
        (*_glb_hdl_sc_channel_map)[5524].second.push_front(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[5529].first = 3;
        (*_glb_hdl_sc_channel_map)[5529].second.push_front(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[5521].first = 3;
        (*_glb_hdl_sc_channel_map)[5521].second.push_front(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[5525].first = 1;
        (*_glb_hdl_sc_channel_map)[5525].second.push_front(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[5522].first = 3;
        (*_glb_hdl_sc_channel_map)[5522].second.push_front(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[5526].first = 3;
        (*_glb_hdl_sc_channel_map)[5526].second.push_front(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[1150].first = 3;
        (*_glb_hdl_sc_channel_map)[1150].second.push_front(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[5527].first = 3;
        (*_glb_hdl_sc_channel_map)[5527].second.push_front(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[5530].first = 3;
        (*_glb_hdl_sc_channel_map)[5530].second.push_front(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[5531].first = 1;
        (*_glb_hdl_sc_channel_map)[5531].second.push_front(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(5792496);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[5544].first = 3;
        (*_glb_hdl_sc_channel_map)[5544].second.push_front(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[5547].first = 3;
        (*_glb_hdl_sc_channel_map)[5547].second.push_front(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[5545].first = 1;
        (*_glb_hdl_sc_channel_map)[5545].second.push_front(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[5548].first = 3;
        (*_glb_hdl_sc_channel_map)[5548].second.push_front(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[5549].first = 1;
        (*_glb_hdl_sc_channel_map)[5549].second.push_front(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(5792832);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(5792888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(5792944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(5793000);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(5793056);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[5533].first = 1;
        (*_glb_hdl_sc_channel_map)[5533].second.push_front(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[5511].first = 3;
        (*_glb_hdl_sc_channel_map)[5511].second.push_front(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[5507].first = 3;
        (*_glb_hdl_sc_channel_map)[5507].second.push_front(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[5512].first = 3;
        (*_glb_hdl_sc_channel_map)[5512].second.push_front(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[5517].first = 3;
        (*_glb_hdl_sc_channel_map)[5517].second.push_front(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[5508].first = 3;
        (*_glb_hdl_sc_channel_map)[5508].second.push_front(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[5513].first = 1;
        (*_glb_hdl_sc_channel_map)[5513].second.push_front(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[5509].first = 3;
        (*_glb_hdl_sc_channel_map)[5509].second.push_front(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[5514].first = 3;
        (*_glb_hdl_sc_channel_map)[5514].second.push_front(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[1151].first = 3;
        (*_glb_hdl_sc_channel_map)[1151].second.push_front(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[5515].first = 3;
        (*_glb_hdl_sc_channel_map)[5515].second.push_front(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[5518].first = 3;
        (*_glb_hdl_sc_channel_map)[5518].second.push_front(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[5519].first = 1;
        (*_glb_hdl_sc_channel_map)[5519].second.push_front(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(5793840);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(5793896);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(5793952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(5794008);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(5794064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(5794120);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(5794176);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[5540].first = 1;
        (*_glb_hdl_sc_channel_map)[5540].second.push_front(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[5506].first = 1;
        (*_glb_hdl_sc_channel_map)[5506].second.push_front(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[5510].first = 1;
        (*_glb_hdl_sc_channel_map)[5510].second.push_front(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[1134].first = 3;
        (*_glb_hdl_sc_channel_map)[1134].second.push_front(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[1137].first = 3;
        (*_glb_hdl_sc_channel_map)[1137].second.push_front(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[1133].first = 3;
        (*_glb_hdl_sc_channel_map)[1133].second.push_front(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[1128].first = 3;
        (*_glb_hdl_sc_channel_map)[1128].second.push_front(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[1136].first = 3;
        (*_glb_hdl_sc_channel_map)[1136].second.push_front(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[1132].first = 1;
        (*_glb_hdl_sc_channel_map)[1132].second.push_front(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[1135].first = 3;
        (*_glb_hdl_sc_channel_map)[1135].second.push_front(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[1131].first = 3;
        (*_glb_hdl_sc_channel_map)[1131].second.push_front(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[1129].first = 3;
        (*_glb_hdl_sc_channel_map)[1129].second.push_front(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[1130].first = 3;
        (*_glb_hdl_sc_channel_map)[1130].second.push_front(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[1127].first = 3;
        (*_glb_hdl_sc_channel_map)[1127].second.push_front(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[1126].first = 1;
        (*_glb_hdl_sc_channel_map)[1126].second.push_front(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(5795072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[1123].first = 3;
        (*_glb_hdl_sc_channel_map)[1123].second.push_front(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[1121].first = 3;
        (*_glb_hdl_sc_channel_map)[1121].second.push_front(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[1122].first = 1;
        (*_glb_hdl_sc_channel_map)[1122].second.push_front(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[1120].first = 3;
        (*_glb_hdl_sc_channel_map)[1120].second.push_front(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[1119].first = 1;
        (*_glb_hdl_sc_channel_map)[1119].second.push_front(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(5795408);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(5795464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(5795520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(5795576);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(5795632);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[1125].first = 1;
        (*_glb_hdl_sc_channel_map)[1125].second.push_front(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[1146].first = 3;
        (*_glb_hdl_sc_channel_map)[1146].second.push_front(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[1149].first = 3;
        (*_glb_hdl_sc_channel_map)[1149].second.push_front(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[1145].first = 3;
        (*_glb_hdl_sc_channel_map)[1145].second.push_front(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[1140].first = 3;
        (*_glb_hdl_sc_channel_map)[1140].second.push_front(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[1148].first = 3;
        (*_glb_hdl_sc_channel_map)[1148].second.push_front(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[1144].first = 1;
        (*_glb_hdl_sc_channel_map)[1144].second.push_front(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[1147].first = 3;
        (*_glb_hdl_sc_channel_map)[1147].second.push_front(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[1143].first = 3;
        (*_glb_hdl_sc_channel_map)[1143].second.push_front(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[1141].first = 3;
        (*_glb_hdl_sc_channel_map)[1141].second.push_front(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[1142].first = 3;
        (*_glb_hdl_sc_channel_map)[1142].second.push_front(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[1139].first = 3;
        (*_glb_hdl_sc_channel_map)[1139].second.push_front(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[1138].first = 1;
        (*_glb_hdl_sc_channel_map)[1138].second.push_front(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(5796416);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(5796472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(5796528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(5796584);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(5796640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(5796696);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(5796752);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[1124].first = 1;
        (*_glb_hdl_sc_channel_map)[1124].second.push_front(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[5551].first = 1;
        (*_glb_hdl_sc_channel_map)[5551].second.push_front(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[5552].first = 1;
        (*_glb_hdl_sc_channel_map)[5552].second.push_front(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_9->xsim_set_dbg_index(641);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awid.bind(*p_9_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[5762].first = 3;
        (*_glb_hdl_sc_channel_map)[5762].second.push_front(p_9_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_awaddr.bind(*p_9_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[5700].first = 3;
        (*_glb_hdl_sc_channel_map)[5700].second.push_front(p_9_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_awlen.bind(*p_9_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[5763].first = 3;
        (*_glb_hdl_sc_channel_map)[5763].second.push_front(p_9_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awsize.bind(*p_9_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[5768].first = 3;
        (*_glb_hdl_sc_channel_map)[5768].second.push_front(p_9_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_awburst.bind(*p_9_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[5760].first = 3;
        (*_glb_hdl_sc_channel_map)[5760].second.push_front(p_9_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awlock.bind(*p_9_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[5764].first = 1;
        (*_glb_hdl_sc_channel_map)[5764].second.push_front(p_9_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awcache.bind(*p_9_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[5761].first = 3;
        (*_glb_hdl_sc_channel_map)[5761].second.push_front(p_9_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awprot.bind(*p_9_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[5765].first = 3;
        (*_glb_hdl_sc_channel_map)[5765].second.push_front(p_9_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awregion.bind(*p_9_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[5699].first = 3;
        (*_glb_hdl_sc_channel_map)[5699].second.push_front(p_9_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awqos.bind(*p_9_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[5766].first = 3;
        (*_glb_hdl_sc_channel_map)[5766].second.push_front(p_9_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awuser.bind(*p_9_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[5769].first = 3;
        (*_glb_hdl_sc_channel_map)[5769].second.push_front(p_9_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awvalid.bind(*p_9_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[5770].first = 1;
        (*_glb_hdl_sc_channel_map)[5770].second.push_front(p_9_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awready.bind(*p_9_s00_axi_awready);
        p_9_s00_axi_awready->set_sv_netview_offsetfromdp(5857448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_wdata.bind(*p_9_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[5783].first = 3;
        (*_glb_hdl_sc_channel_map)[5783].second.push_front(p_9_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_wstrb.bind(*p_9_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[5786].first = 3;
        (*_glb_hdl_sc_channel_map)[5786].second.push_front(p_9_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wlast.bind(*p_9_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[5784].first = 1;
        (*_glb_hdl_sc_channel_map)[5784].second.push_front(p_9_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_wuser.bind(*p_9_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[5787].first = 3;
        (*_glb_hdl_sc_channel_map)[5787].second.push_front(p_9_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wvalid.bind(*p_9_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[5788].first = 1;
        (*_glb_hdl_sc_channel_map)[5788].second.push_front(p_9_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wready.bind(*p_9_s00_axi_wready);
        p_9_s00_axi_wready->set_sv_netview_offsetfromdp(5857784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_bid.bind(*p_9_s00_axi_bid);
        p_9_s00_axi_bid->set_sv_netview_offsetfromdp(5857840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_bresp.bind(*p_9_s00_axi_bresp);
        p_9_s00_axi_bresp->set_sv_netview_offsetfromdp(5857896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_buser.bind(*p_9_s00_axi_buser);
        p_9_s00_axi_buser->set_sv_netview_offsetfromdp(5857952);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bvalid.bind(*p_9_s00_axi_bvalid);
        p_9_s00_axi_bvalid->set_sv_netview_offsetfromdp(5858008);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bready.bind(*p_9_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[5772].first = 1;
        (*_glb_hdl_sc_channel_map)[5772].second.push_front(p_9_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_arid.bind(*p_9_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[5751].first = 3;
        (*_glb_hdl_sc_channel_map)[5751].second.push_front(p_9_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_araddr.bind(*p_9_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[5702].first = 3;
        (*_glb_hdl_sc_channel_map)[5702].second.push_front(p_9_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_arlen.bind(*p_9_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[5752].first = 3;
        (*_glb_hdl_sc_channel_map)[5752].second.push_front(p_9_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arsize.bind(*p_9_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[5757].first = 3;
        (*_glb_hdl_sc_channel_map)[5757].second.push_front(p_9_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_arburst.bind(*p_9_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[5748].first = 3;
        (*_glb_hdl_sc_channel_map)[5748].second.push_front(p_9_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arlock.bind(*p_9_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[5753].first = 1;
        (*_glb_hdl_sc_channel_map)[5753].second.push_front(p_9_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arcache.bind(*p_9_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[5749].first = 3;
        (*_glb_hdl_sc_channel_map)[5749].second.push_front(p_9_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arprot.bind(*p_9_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[5754].first = 3;
        (*_glb_hdl_sc_channel_map)[5754].second.push_front(p_9_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arregion.bind(*p_9_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[5701].first = 3;
        (*_glb_hdl_sc_channel_map)[5701].second.push_front(p_9_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arqos.bind(*p_9_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[5755].first = 3;
        (*_glb_hdl_sc_channel_map)[5755].second.push_front(p_9_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_aruser.bind(*p_9_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[5758].first = 3;
        (*_glb_hdl_sc_channel_map)[5758].second.push_front(p_9_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arvalid.bind(*p_9_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[5759].first = 1;
        (*_glb_hdl_sc_channel_map)[5759].second.push_front(p_9_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arready.bind(*p_9_s00_axi_arready);
        p_9_s00_axi_arready->set_sv_netview_offsetfromdp(5858792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_rid.bind(*p_9_s00_axi_rid);
        p_9_s00_axi_rid->set_sv_netview_offsetfromdp(5858848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_rdata.bind(*p_9_s00_axi_rdata);
        p_9_s00_axi_rdata->set_sv_netview_offsetfromdp(5858904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_rresp.bind(*p_9_s00_axi_rresp);
        p_9_s00_axi_rresp->set_sv_netview_offsetfromdp(5858960);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rlast.bind(*p_9_s00_axi_rlast);
        p_9_s00_axi_rlast->set_sv_netview_offsetfromdp(5859016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_ruser.bind(*p_9_s00_axi_ruser);
        p_9_s00_axi_ruser->set_sv_netview_offsetfromdp(5859072);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rvalid.bind(*p_9_s00_axi_rvalid);
        p_9_s00_axi_rvalid->set_sv_netview_offsetfromdp(5859128);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rready.bind(*p_9_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[5779].first = 1;
        (*_glb_hdl_sc_channel_map)[5779].second.push_front(p_9_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aclk.bind(*p_9_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[5747].first = 1;
        (*_glb_hdl_sc_channel_map)[5747].second.push_front(p_9_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aresetn.bind(*p_9_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[5750].first = 1;
        (*_glb_hdl_sc_channel_map)[5750].second.push_front(p_9_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awid.bind(*p_9_m00_axi_awid);
        p_9_m00_axi_awid->set_sv_netview_offsetfromdp(5859352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_awaddr.bind(*p_9_m00_axi_awaddr);
        p_9_m00_axi_awaddr->set_sv_netview_offsetfromdp(5859408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_awlen.bind(*p_9_m00_axi_awlen);
        p_9_m00_axi_awlen->set_sv_netview_offsetfromdp(5859464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awsize.bind(*p_9_m00_axi_awsize);
        p_9_m00_axi_awsize->set_sv_netview_offsetfromdp(5859520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_awburst.bind(*p_9_m00_axi_awburst);
        p_9_m00_axi_awburst->set_sv_netview_offsetfromdp(5859576);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awlock.bind(*p_9_m00_axi_awlock);
        p_9_m00_axi_awlock->set_sv_netview_offsetfromdp(5859632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awcache.bind(*p_9_m00_axi_awcache);
        p_9_m00_axi_awcache->set_sv_netview_offsetfromdp(5859688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awprot.bind(*p_9_m00_axi_awprot);
        p_9_m00_axi_awprot->set_sv_netview_offsetfromdp(5859744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awqos.bind(*p_9_m00_axi_awqos);
        p_9_m00_axi_awqos->set_sv_netview_offsetfromdp(5859800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awuser.bind(*p_9_m00_axi_awuser);
        p_9_m00_axi_awuser->set_sv_netview_offsetfromdp(5859856);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awvalid.bind(*p_9_m00_axi_awvalid);
        p_9_m00_axi_awvalid->set_sv_netview_offsetfromdp(5859912);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awready.bind(*p_9_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[5725].first = 1;
        (*_glb_hdl_sc_channel_map)[5725].second.push_front(p_9_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_wdata.bind(*p_9_m00_axi_wdata);
        p_9_m00_axi_wdata->set_sv_netview_offsetfromdp(5860024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_wstrb.bind(*p_9_m00_axi_wstrb);
        p_9_m00_axi_wstrb->set_sv_netview_offsetfromdp(5860080);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wlast.bind(*p_9_m00_axi_wlast);
        p_9_m00_axi_wlast->set_sv_netview_offsetfromdp(5860136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_wuser.bind(*p_9_m00_axi_wuser);
        p_9_m00_axi_wuser->set_sv_netview_offsetfromdp(5860192);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wvalid.bind(*p_9_m00_axi_wvalid);
        p_9_m00_axi_wvalid->set_sv_netview_offsetfromdp(5860248);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wready.bind(*p_9_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[5743].first = 1;
        (*_glb_hdl_sc_channel_map)[5743].second.push_front(p_9_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_bid.bind(*p_9_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[5729].first = 3;
        (*_glb_hdl_sc_channel_map)[5729].second.push_front(p_9_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_bresp.bind(*p_9_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[5731].first = 3;
        (*_glb_hdl_sc_channel_map)[5731].second.push_front(p_9_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_buser.bind(*p_9_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[5732].first = 3;
        (*_glb_hdl_sc_channel_map)[5732].second.push_front(p_9_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bvalid.bind(*p_9_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[5733].first = 1;
        (*_glb_hdl_sc_channel_map)[5733].second.push_front(p_9_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bready.bind(*p_9_m00_axi_bready);
        p_9_m00_axi_bready->set_sv_netview_offsetfromdp(5860584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_arid.bind(*p_9_m00_axi_arid);
        p_9_m00_axi_arid->set_sv_netview_offsetfromdp(5860640);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_araddr.bind(*p_9_m00_axi_araddr);
        p_9_m00_axi_araddr->set_sv_netview_offsetfromdp(5860696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_arlen.bind(*p_9_m00_axi_arlen);
        p_9_m00_axi_arlen->set_sv_netview_offsetfromdp(5860752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arsize.bind(*p_9_m00_axi_arsize);
        p_9_m00_axi_arsize->set_sv_netview_offsetfromdp(5860808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_arburst.bind(*p_9_m00_axi_arburst);
        p_9_m00_axi_arburst->set_sv_netview_offsetfromdp(5860864);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arlock.bind(*p_9_m00_axi_arlock);
        p_9_m00_axi_arlock->set_sv_netview_offsetfromdp(5860920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arcache.bind(*p_9_m00_axi_arcache);
        p_9_m00_axi_arcache->set_sv_netview_offsetfromdp(5860976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arprot.bind(*p_9_m00_axi_arprot);
        p_9_m00_axi_arprot->set_sv_netview_offsetfromdp(5861032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arqos.bind(*p_9_m00_axi_arqos);
        p_9_m00_axi_arqos->set_sv_netview_offsetfromdp(5861088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_aruser.bind(*p_9_m00_axi_aruser);
        p_9_m00_axi_aruser->set_sv_netview_offsetfromdp(5861144);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arvalid.bind(*p_9_m00_axi_arvalid);
        p_9_m00_axi_arvalid->set_sv_netview_offsetfromdp(5861200);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arready.bind(*p_9_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[5713].first = 1;
        (*_glb_hdl_sc_channel_map)[5713].second.push_front(p_9_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_rid.bind(*p_9_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[5735].first = 3;
        (*_glb_hdl_sc_channel_map)[5735].second.push_front(p_9_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_rdata.bind(*p_9_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[5734].first = 3;
        (*_glb_hdl_sc_channel_map)[5734].second.push_front(p_9_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_rresp.bind(*p_9_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[5738].first = 3;
        (*_glb_hdl_sc_channel_map)[5738].second.push_front(p_9_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rlast.bind(*p_9_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[5736].first = 1;
        (*_glb_hdl_sc_channel_map)[5736].second.push_front(p_9_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_ruser.bind(*p_9_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[5739].first = 3;
        (*_glb_hdl_sc_channel_map)[5739].second.push_front(p_9_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rvalid.bind(*p_9_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[5740].first = 1;
        (*_glb_hdl_sc_channel_map)[5740].second.push_front(p_9_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rready.bind(*p_9_m00_axi_rready);
        p_9_m00_axi_rready->set_sv_netview_offsetfromdp(5861648);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aclk.bind(*p_9_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[5703].first = 1;
        (*_glb_hdl_sc_channel_map)[5703].second.push_front(p_9_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aresetn.bind(*p_9_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[5707].first = 1;
        (*_glb_hdl_sc_channel_map)[5707].second.push_front(p_9_m00_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_10->xsim_set_dbg_index(755);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[8362].first = 3;
        (*_glb_hdl_sc_channel_map)[8362].second.push_front(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[8300].first = 3;
        (*_glb_hdl_sc_channel_map)[8300].second.push_front(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[8363].first = 3;
        (*_glb_hdl_sc_channel_map)[8363].second.push_front(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[8368].first = 3;
        (*_glb_hdl_sc_channel_map)[8368].second.push_front(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[8360].first = 3;
        (*_glb_hdl_sc_channel_map)[8360].second.push_front(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[8364].first = 1;
        (*_glb_hdl_sc_channel_map)[8364].second.push_front(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[8361].first = 3;
        (*_glb_hdl_sc_channel_map)[8361].second.push_front(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[8365].first = 3;
        (*_glb_hdl_sc_channel_map)[8365].second.push_front(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[8299].first = 3;
        (*_glb_hdl_sc_channel_map)[8299].second.push_front(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[8366].first = 3;
        (*_glb_hdl_sc_channel_map)[8366].second.push_front(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[8369].first = 3;
        (*_glb_hdl_sc_channel_map)[8369].second.push_front(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[8370].first = 1;
        (*_glb_hdl_sc_channel_map)[8370].second.push_front(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(6496144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[8383].first = 3;
        (*_glb_hdl_sc_channel_map)[8383].second.push_front(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[8386].first = 3;
        (*_glb_hdl_sc_channel_map)[8386].second.push_front(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[8384].first = 1;
        (*_glb_hdl_sc_channel_map)[8384].second.push_front(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[8387].first = 3;
        (*_glb_hdl_sc_channel_map)[8387].second.push_front(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[8388].first = 1;
        (*_glb_hdl_sc_channel_map)[8388].second.push_front(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(6496480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(6496536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(6496592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(6496648);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(6496704);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[8372].first = 1;
        (*_glb_hdl_sc_channel_map)[8372].second.push_front(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[8351].first = 3;
        (*_glb_hdl_sc_channel_map)[8351].second.push_front(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[8302].first = 3;
        (*_glb_hdl_sc_channel_map)[8302].second.push_front(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[8352].first = 3;
        (*_glb_hdl_sc_channel_map)[8352].second.push_front(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[8357].first = 3;
        (*_glb_hdl_sc_channel_map)[8357].second.push_front(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[8348].first = 3;
        (*_glb_hdl_sc_channel_map)[8348].second.push_front(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[8353].first = 1;
        (*_glb_hdl_sc_channel_map)[8353].second.push_front(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[8349].first = 3;
        (*_glb_hdl_sc_channel_map)[8349].second.push_front(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[8354].first = 3;
        (*_glb_hdl_sc_channel_map)[8354].second.push_front(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[8301].first = 3;
        (*_glb_hdl_sc_channel_map)[8301].second.push_front(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[8355].first = 3;
        (*_glb_hdl_sc_channel_map)[8355].second.push_front(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[8358].first = 3;
        (*_glb_hdl_sc_channel_map)[8358].second.push_front(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[8359].first = 1;
        (*_glb_hdl_sc_channel_map)[8359].second.push_front(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(6497488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(6497544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(6497600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(6497656);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(6497712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(6497768);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(6497824);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[8379].first = 1;
        (*_glb_hdl_sc_channel_map)[8379].second.push_front(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8347].first = 1;
        (*_glb_hdl_sc_channel_map)[8347].second.push_front(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8350].first = 1;
        (*_glb_hdl_sc_channel_map)[8350].second.push_front(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(6498048);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(6498104);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(6498160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(6498216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(6498272);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(6498328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(6498384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(6498440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(6498496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(6498552);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(6498608);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[8325].first = 1;
        (*_glb_hdl_sc_channel_map)[8325].second.push_front(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(6498720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(6498776);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(6498832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(6498888);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(6498944);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[8343].first = 1;
        (*_glb_hdl_sc_channel_map)[8343].second.push_front(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[8329].first = 3;
        (*_glb_hdl_sc_channel_map)[8329].second.push_front(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[8331].first = 3;
        (*_glb_hdl_sc_channel_map)[8331].second.push_front(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[8332].first = 3;
        (*_glb_hdl_sc_channel_map)[8332].second.push_front(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[8333].first = 1;
        (*_glb_hdl_sc_channel_map)[8333].second.push_front(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(6499280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(6499336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(6499392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(6499448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(6499504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(6499560);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(6499616);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(6499672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(6499728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(6499784);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(6499840);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(6499896);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[8313].first = 1;
        (*_glb_hdl_sc_channel_map)[8313].second.push_front(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[8335].first = 3;
        (*_glb_hdl_sc_channel_map)[8335].second.push_front(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[8334].first = 3;
        (*_glb_hdl_sc_channel_map)[8334].second.push_front(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[8338].first = 3;
        (*_glb_hdl_sc_channel_map)[8338].second.push_front(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[8336].first = 1;
        (*_glb_hdl_sc_channel_map)[8336].second.push_front(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[8339].first = 3;
        (*_glb_hdl_sc_channel_map)[8339].second.push_front(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[8340].first = 1;
        (*_glb_hdl_sc_channel_map)[8340].second.push_front(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(6500344);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8303].first = 1;
        (*_glb_hdl_sc_channel_map)[8303].second.push_front(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8307].first = 1;
        (*_glb_hdl_sc_channel_map)[8307].second.push_front(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_11->xsim_set_dbg_index(756);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[8448].first = 3;
        (*_glb_hdl_sc_channel_map)[8448].second.push_front(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[8296].first = 3;
        (*_glb_hdl_sc_channel_map)[8296].second.push_front(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[8449].first = 3;
        (*_glb_hdl_sc_channel_map)[8449].second.push_front(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[8454].first = 3;
        (*_glb_hdl_sc_channel_map)[8454].second.push_front(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[8446].first = 3;
        (*_glb_hdl_sc_channel_map)[8446].second.push_front(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[8450].first = 1;
        (*_glb_hdl_sc_channel_map)[8450].second.push_front(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[8447].first = 3;
        (*_glb_hdl_sc_channel_map)[8447].second.push_front(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[8451].first = 3;
        (*_glb_hdl_sc_channel_map)[8451].second.push_front(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[8295].first = 3;
        (*_glb_hdl_sc_channel_map)[8295].second.push_front(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[8452].first = 3;
        (*_glb_hdl_sc_channel_map)[8452].second.push_front(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[8455].first = 3;
        (*_glb_hdl_sc_channel_map)[8455].second.push_front(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[8456].first = 1;
        (*_glb_hdl_sc_channel_map)[8456].second.push_front(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(6501232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[8469].first = 3;
        (*_glb_hdl_sc_channel_map)[8469].second.push_front(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[8472].first = 3;
        (*_glb_hdl_sc_channel_map)[8472].second.push_front(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[8470].first = 1;
        (*_glb_hdl_sc_channel_map)[8470].second.push_front(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[8473].first = 3;
        (*_glb_hdl_sc_channel_map)[8473].second.push_front(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[8474].first = 1;
        (*_glb_hdl_sc_channel_map)[8474].second.push_front(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(6501568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(6501624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(6501680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(6501736);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(6501792);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[8458].first = 1;
        (*_glb_hdl_sc_channel_map)[8458].second.push_front(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[8437].first = 3;
        (*_glb_hdl_sc_channel_map)[8437].second.push_front(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[8298].first = 3;
        (*_glb_hdl_sc_channel_map)[8298].second.push_front(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[8438].first = 3;
        (*_glb_hdl_sc_channel_map)[8438].second.push_front(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[8443].first = 3;
        (*_glb_hdl_sc_channel_map)[8443].second.push_front(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[8434].first = 3;
        (*_glb_hdl_sc_channel_map)[8434].second.push_front(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[8439].first = 1;
        (*_glb_hdl_sc_channel_map)[8439].second.push_front(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[8435].first = 3;
        (*_glb_hdl_sc_channel_map)[8435].second.push_front(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[8440].first = 3;
        (*_glb_hdl_sc_channel_map)[8440].second.push_front(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[8297].first = 3;
        (*_glb_hdl_sc_channel_map)[8297].second.push_front(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[8441].first = 3;
        (*_glb_hdl_sc_channel_map)[8441].second.push_front(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[8444].first = 3;
        (*_glb_hdl_sc_channel_map)[8444].second.push_front(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[8445].first = 1;
        (*_glb_hdl_sc_channel_map)[8445].second.push_front(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(6502576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(6502632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(6502688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(6502744);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(6502800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(6502856);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(6502912);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[8465].first = 1;
        (*_glb_hdl_sc_channel_map)[8465].second.push_front(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8433].first = 1;
        (*_glb_hdl_sc_channel_map)[8433].second.push_front(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8436].first = 1;
        (*_glb_hdl_sc_channel_map)[8436].second.push_front(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(6503136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(6503192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(6503248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(6503304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(6503360);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(6503416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(6503472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(6503528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(6503584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(6503640);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(6503696);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[8411].first = 1;
        (*_glb_hdl_sc_channel_map)[8411].second.push_front(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(6503808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(6503864);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(6503920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(6503976);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(6504032);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[8429].first = 1;
        (*_glb_hdl_sc_channel_map)[8429].second.push_front(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[8415].first = 3;
        (*_glb_hdl_sc_channel_map)[8415].second.push_front(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[8417].first = 3;
        (*_glb_hdl_sc_channel_map)[8417].second.push_front(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[8418].first = 3;
        (*_glb_hdl_sc_channel_map)[8418].second.push_front(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[8419].first = 1;
        (*_glb_hdl_sc_channel_map)[8419].second.push_front(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(6504368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(6504424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(6504480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(6504536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(6504592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(6504648);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(6504704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(6504760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(6504816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(6504872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(6504928);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(6504984);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[8399].first = 1;
        (*_glb_hdl_sc_channel_map)[8399].second.push_front(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[8421].first = 3;
        (*_glb_hdl_sc_channel_map)[8421].second.push_front(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[8420].first = 3;
        (*_glb_hdl_sc_channel_map)[8420].second.push_front(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[8424].first = 3;
        (*_glb_hdl_sc_channel_map)[8424].second.push_front(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[8422].first = 1;
        (*_glb_hdl_sc_channel_map)[8422].second.push_front(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[8425].first = 3;
        (*_glb_hdl_sc_channel_map)[8425].second.push_front(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[8426].first = 1;
        (*_glb_hdl_sc_channel_map)[8426].second.push_front(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(6505432);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[8389].first = 1;
        (*_glb_hdl_sc_channel_map)[8389].second.push_front(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[8393].first = 1;
        (*_glb_hdl_sc_channel_map)[8393].second.push_front(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_12->xsim_set_dbg_index(994);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[10243].first = 3;
        (*_glb_hdl_sc_channel_map)[10243].second.push_front(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[10181].first = 3;
        (*_glb_hdl_sc_channel_map)[10181].second.push_front(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[10244].first = 3;
        (*_glb_hdl_sc_channel_map)[10244].second.push_front(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[10249].first = 3;
        (*_glb_hdl_sc_channel_map)[10249].second.push_front(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[10241].first = 3;
        (*_glb_hdl_sc_channel_map)[10241].second.push_front(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[10245].first = 1;
        (*_glb_hdl_sc_channel_map)[10245].second.push_front(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[10242].first = 3;
        (*_glb_hdl_sc_channel_map)[10242].second.push_front(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[10246].first = 3;
        (*_glb_hdl_sc_channel_map)[10246].second.push_front(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[10180].first = 3;
        (*_glb_hdl_sc_channel_map)[10180].second.push_front(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[10247].first = 3;
        (*_glb_hdl_sc_channel_map)[10247].second.push_front(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map)[10250].first = 3;
        (*_glb_hdl_sc_channel_map)[10250].second.push_front(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[10251].first = 1;
        (*_glb_hdl_sc_channel_map)[10251].second.push_front(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(7009992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[10264].first = 3;
        (*_glb_hdl_sc_channel_map)[10264].second.push_front(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[10267].first = 3;
        (*_glb_hdl_sc_channel_map)[10267].second.push_front(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[10265].first = 1;
        (*_glb_hdl_sc_channel_map)[10265].second.push_front(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map)[10268].first = 3;
        (*_glb_hdl_sc_channel_map)[10268].second.push_front(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[10269].first = 1;
        (*_glb_hdl_sc_channel_map)[10269].second.push_front(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(7010328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(7010384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(7010440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(7010496);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(7010552);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[10253].first = 1;
        (*_glb_hdl_sc_channel_map)[10253].second.push_front(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[10232].first = 3;
        (*_glb_hdl_sc_channel_map)[10232].second.push_front(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[10183].first = 3;
        (*_glb_hdl_sc_channel_map)[10183].second.push_front(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[10233].first = 3;
        (*_glb_hdl_sc_channel_map)[10233].second.push_front(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[10238].first = 3;
        (*_glb_hdl_sc_channel_map)[10238].second.push_front(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[10229].first = 3;
        (*_glb_hdl_sc_channel_map)[10229].second.push_front(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[10234].first = 1;
        (*_glb_hdl_sc_channel_map)[10234].second.push_front(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[10230].first = 3;
        (*_glb_hdl_sc_channel_map)[10230].second.push_front(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[10235].first = 3;
        (*_glb_hdl_sc_channel_map)[10235].second.push_front(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[10182].first = 3;
        (*_glb_hdl_sc_channel_map)[10182].second.push_front(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[10236].first = 3;
        (*_glb_hdl_sc_channel_map)[10236].second.push_front(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map)[10239].first = 3;
        (*_glb_hdl_sc_channel_map)[10239].second.push_front(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[10240].first = 1;
        (*_glb_hdl_sc_channel_map)[10240].second.push_front(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(7011336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(7011392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(7011448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(7011504);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(7011560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(7011616);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(7011672);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[10260].first = 1;
        (*_glb_hdl_sc_channel_map)[10260].second.push_front(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10228].first = 1;
        (*_glb_hdl_sc_channel_map)[10228].second.push_front(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10231].first = 1;
        (*_glb_hdl_sc_channel_map)[10231].second.push_front(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(7011896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(7011952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(7012008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(7012064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(7012120);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(7012176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(7012232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(7012288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(7012344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(7012400);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(7012456);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[10206].first = 1;
        (*_glb_hdl_sc_channel_map)[10206].second.push_front(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(7012568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(7012624);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(7012680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(7012736);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(7012792);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[10224].first = 1;
        (*_glb_hdl_sc_channel_map)[10224].second.push_front(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[10210].first = 3;
        (*_glb_hdl_sc_channel_map)[10210].second.push_front(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[10212].first = 3;
        (*_glb_hdl_sc_channel_map)[10212].second.push_front(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[10213].first = 3;
        (*_glb_hdl_sc_channel_map)[10213].second.push_front(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[10214].first = 1;
        (*_glb_hdl_sc_channel_map)[10214].second.push_front(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(7013128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(7013184);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(7013240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(7013296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(7013352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(7013408);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(7013464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(7013520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(7013576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(7013632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(7013688);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(7013744);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[10194].first = 1;
        (*_glb_hdl_sc_channel_map)[10194].second.push_front(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[10216].first = 3;
        (*_glb_hdl_sc_channel_map)[10216].second.push_front(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[10215].first = 3;
        (*_glb_hdl_sc_channel_map)[10215].second.push_front(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[10219].first = 3;
        (*_glb_hdl_sc_channel_map)[10219].second.push_front(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[10217].first = 1;
        (*_glb_hdl_sc_channel_map)[10217].second.push_front(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[10220].first = 3;
        (*_glb_hdl_sc_channel_map)[10220].second.push_front(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[10221].first = 1;
        (*_glb_hdl_sc_channel_map)[10221].second.push_front(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(7014192);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[10184].first = 1;
        (*_glb_hdl_sc_channel_map)[10184].second.push_front(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[10188].first = 1;
        (*_glb_hdl_sc_channel_map)[10188].second.push_front(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_13->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map)[13365].first = 3;
        (*_glb_hdl_sc_channel_map)[13365].second.push_front(p_13_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13362].first = 3;
        (*_glb_hdl_sc_channel_map)[13362].second.push_front(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13366].first = 3;
        (*_glb_hdl_sc_channel_map)[13366].second.push_front(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13372].first = 3;
        (*_glb_hdl_sc_channel_map)[13372].second.push_front(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13363].first = 3;
        (*_glb_hdl_sc_channel_map)[13363].second.push_front(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13367].first = 1;
        (*_glb_hdl_sc_channel_map)[13367].second.push_front(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13364].first = 3;
        (*_glb_hdl_sc_channel_map)[13364].second.push_front(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13368].first = 3;
        (*_glb_hdl_sc_channel_map)[13368].second.push_front(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13371].first = 3;
        (*_glb_hdl_sc_channel_map)[13371].second.push_front(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13369].first = 3;
        (*_glb_hdl_sc_channel_map)[13369].second.push_front(p_13_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13373].first = 1;
        (*_glb_hdl_sc_channel_map)[13373].second.push_front(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(7747824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13384].first = 3;
        (*_glb_hdl_sc_channel_map)[13384].second.push_front(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13387].first = 3;
        (*_glb_hdl_sc_channel_map)[13387].second.push_front(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13385].first = 1;
        (*_glb_hdl_sc_channel_map)[13385].second.push_front(p_13_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13388].first = 1;
        (*_glb_hdl_sc_channel_map)[13388].second.push_front(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(7748104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(7748160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(7748216);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(7748272);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[13375].first = 1;
        (*_glb_hdl_sc_channel_map)[13375].second.push_front(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map)[13353].first = 3;
        (*_glb_hdl_sc_channel_map)[13353].second.push_front(p_13_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13349].first = 3;
        (*_glb_hdl_sc_channel_map)[13349].second.push_front(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13354].first = 3;
        (*_glb_hdl_sc_channel_map)[13354].second.push_front(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13360].first = 3;
        (*_glb_hdl_sc_channel_map)[13360].second.push_front(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13350].first = 3;
        (*_glb_hdl_sc_channel_map)[13350].second.push_front(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13355].first = 1;
        (*_glb_hdl_sc_channel_map)[13355].second.push_front(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13351].first = 3;
        (*_glb_hdl_sc_channel_map)[13351].second.push_front(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13356].first = 3;
        (*_glb_hdl_sc_channel_map)[13356].second.push_front(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13359].first = 3;
        (*_glb_hdl_sc_channel_map)[13359].second.push_front(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13357].first = 3;
        (*_glb_hdl_sc_channel_map)[13357].second.push_front(p_13_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13361].first = 1;
        (*_glb_hdl_sc_channel_map)[13361].second.push_front(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(7749000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(7749056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(7749112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(7749168);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(7749224);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(7749280);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[13381].first = 1;
        (*_glb_hdl_sc_channel_map)[13381].second.push_front(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13348].first = 1;
        (*_glb_hdl_sc_channel_map)[13348].second.push_front(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13352].first = 1;
        (*_glb_hdl_sc_channel_map)[13352].second.push_front(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(7749504);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(7749560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(7749616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(7749672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(7749728);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(7749784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(7749840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(7749896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(7749952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(7750008);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(7750064);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[13163].first = 1;
        (*_glb_hdl_sc_channel_map)[13163].second.push_front(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(7750176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(7750232);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(7750288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(7750344);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(7750400);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[13181].first = 1;
        (*_glb_hdl_sc_channel_map)[13181].second.push_front(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[13167].first = 3;
        (*_glb_hdl_sc_channel_map)[13167].second.push_front(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13169].first = 3;
        (*_glb_hdl_sc_channel_map)[13169].second.push_front(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[13170].first = 3;
        (*_glb_hdl_sc_channel_map)[13170].second.push_front(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13171].first = 1;
        (*_glb_hdl_sc_channel_map)[13171].second.push_front(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(7750736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(7750792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(7750848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(7750904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(7750960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(7751016);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(7751072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(7751128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(7751184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(7751240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(7751296);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(7751352);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[13151].first = 1;
        (*_glb_hdl_sc_channel_map)[13151].second.push_front(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[13173].first = 3;
        (*_glb_hdl_sc_channel_map)[13173].second.push_front(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13172].first = 3;
        (*_glb_hdl_sc_channel_map)[13172].second.push_front(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13176].first = 3;
        (*_glb_hdl_sc_channel_map)[13176].second.push_front(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13174].first = 1;
        (*_glb_hdl_sc_channel_map)[13174].second.push_front(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[13177].first = 3;
        (*_glb_hdl_sc_channel_map)[13177].second.push_front(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13178].first = 1;
        (*_glb_hdl_sc_channel_map)[13178].second.push_front(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(7751800);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13141].first = 1;
        (*_glb_hdl_sc_channel_map)[13141].second.push_front(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13145].first = 1;
        (*_glb_hdl_sc_channel_map)[13145].second.push_front(p_13_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_awid.bind(*p_13_m02_axi_awid);
        p_13_m02_axi_awid->set_sv_netview_offsetfromdp(7751968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m02_axi_awaddr.bind(*p_13_m02_axi_awaddr);
        p_13_m02_axi_awaddr->set_sv_netview_offsetfromdp(7752024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m02_axi_awlen.bind(*p_13_m02_axi_awlen);
        p_13_m02_axi_awlen->set_sv_netview_offsetfromdp(7752080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_awsize.bind(*p_13_m02_axi_awsize);
        p_13_m02_axi_awsize->set_sv_netview_offsetfromdp(7752136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_awburst.bind(*p_13_m02_axi_awburst);
        p_13_m02_axi_awburst->set_sv_netview_offsetfromdp(7752192);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awlock.bind(*p_13_m02_axi_awlock);
        p_13_m02_axi_awlock->set_sv_netview_offsetfromdp(7752248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_awcache.bind(*p_13_m02_axi_awcache);
        p_13_m02_axi_awcache->set_sv_netview_offsetfromdp(7752304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_awprot.bind(*p_13_m02_axi_awprot);
        p_13_m02_axi_awprot->set_sv_netview_offsetfromdp(7752360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_awqos.bind(*p_13_m02_axi_awqos);
        p_13_m02_axi_awqos->set_sv_netview_offsetfromdp(7752416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_awuser.bind(*p_13_m02_axi_awuser);
        p_13_m02_axi_awuser->set_sv_netview_offsetfromdp(7752472);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awvalid.bind(*p_13_m02_axi_awvalid);
        p_13_m02_axi_awvalid->set_sv_netview_offsetfromdp(7752528);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awready.bind(*p_13_m02_axi_awready);
        (*_glb_hdl_sc_channel_map)[13251].first = 1;
        (*_glb_hdl_sc_channel_map)[13251].second.push_front(p_13_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m02_axi_wdata.bind(*p_13_m02_axi_wdata);
        p_13_m02_axi_wdata->set_sv_netview_offsetfromdp(7752640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_wstrb.bind(*p_13_m02_axi_wstrb);
        p_13_m02_axi_wstrb->set_sv_netview_offsetfromdp(7752696);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wlast.bind(*p_13_m02_axi_wlast);
        p_13_m02_axi_wlast->set_sv_netview_offsetfromdp(7752752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_wuser.bind(*p_13_m02_axi_wuser);
        p_13_m02_axi_wuser->set_sv_netview_offsetfromdp(7752808);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wvalid.bind(*p_13_m02_axi_wvalid);
        p_13_m02_axi_wvalid->set_sv_netview_offsetfromdp(7752864);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wready.bind(*p_13_m02_axi_wready);
        (*_glb_hdl_sc_channel_map)[13269].first = 1;
        (*_glb_hdl_sc_channel_map)[13269].second.push_front(p_13_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_bid.bind(*p_13_m02_axi_bid);
        (*_glb_hdl_sc_channel_map)[13255].first = 3;
        (*_glb_hdl_sc_channel_map)[13255].second.push_front(p_13_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_bresp.bind(*p_13_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13257].first = 3;
        (*_glb_hdl_sc_channel_map)[13257].second.push_front(p_13_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_buser.bind(*p_13_m02_axi_buser);
        (*_glb_hdl_sc_channel_map)[13258].first = 3;
        (*_glb_hdl_sc_channel_map)[13258].second.push_front(p_13_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_bvalid.bind(*p_13_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13259].first = 1;
        (*_glb_hdl_sc_channel_map)[13259].second.push_front(p_13_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_bready.bind(*p_13_m02_axi_bready);
        p_13_m02_axi_bready->set_sv_netview_offsetfromdp(7753200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_arid.bind(*p_13_m02_axi_arid);
        p_13_m02_axi_arid->set_sv_netview_offsetfromdp(7753256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m02_axi_araddr.bind(*p_13_m02_axi_araddr);
        p_13_m02_axi_araddr->set_sv_netview_offsetfromdp(7753312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m02_axi_arlen.bind(*p_13_m02_axi_arlen);
        p_13_m02_axi_arlen->set_sv_netview_offsetfromdp(7753368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_arsize.bind(*p_13_m02_axi_arsize);
        p_13_m02_axi_arsize->set_sv_netview_offsetfromdp(7753424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_arburst.bind(*p_13_m02_axi_arburst);
        p_13_m02_axi_arburst->set_sv_netview_offsetfromdp(7753480);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arlock.bind(*p_13_m02_axi_arlock);
        p_13_m02_axi_arlock->set_sv_netview_offsetfromdp(7753536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_arcache.bind(*p_13_m02_axi_arcache);
        p_13_m02_axi_arcache->set_sv_netview_offsetfromdp(7753592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_arprot.bind(*p_13_m02_axi_arprot);
        p_13_m02_axi_arprot->set_sv_netview_offsetfromdp(7753648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_arqos.bind(*p_13_m02_axi_arqos);
        p_13_m02_axi_arqos->set_sv_netview_offsetfromdp(7753704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_aruser.bind(*p_13_m02_axi_aruser);
        p_13_m02_axi_aruser->set_sv_netview_offsetfromdp(7753760);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arvalid.bind(*p_13_m02_axi_arvalid);
        p_13_m02_axi_arvalid->set_sv_netview_offsetfromdp(7753816);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arready.bind(*p_13_m02_axi_arready);
        (*_glb_hdl_sc_channel_map)[13239].first = 1;
        (*_glb_hdl_sc_channel_map)[13239].second.push_front(p_13_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_rid.bind(*p_13_m02_axi_rid);
        (*_glb_hdl_sc_channel_map)[13261].first = 3;
        (*_glb_hdl_sc_channel_map)[13261].second.push_front(p_13_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m02_axi_rdata.bind(*p_13_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13260].first = 3;
        (*_glb_hdl_sc_channel_map)[13260].second.push_front(p_13_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_rresp.bind(*p_13_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13264].first = 3;
        (*_glb_hdl_sc_channel_map)[13264].second.push_front(p_13_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rlast.bind(*p_13_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13262].first = 1;
        (*_glb_hdl_sc_channel_map)[13262].second.push_front(p_13_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_ruser.bind(*p_13_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map)[13265].first = 3;
        (*_glb_hdl_sc_channel_map)[13265].second.push_front(p_13_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rvalid.bind(*p_13_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13266].first = 1;
        (*_glb_hdl_sc_channel_map)[13266].second.push_front(p_13_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rready.bind(*p_13_m02_axi_rready);
        p_13_m02_axi_rready->set_sv_netview_offsetfromdp(7754264);
        xsim_sc_channel<0, bool > *p_13_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_aclk.bind(*p_13_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13229].first = 1;
        (*_glb_hdl_sc_channel_map)[13229].second.push_front(p_13_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_aresetn.bind(*p_13_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13233].first = 1;
        (*_glb_hdl_sc_channel_map)[13233].second.push_front(p_13_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_awid.bind(*p_13_m03_axi_awid);
        p_13_m03_axi_awid->set_sv_netview_offsetfromdp(7754432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m03_axi_awaddr.bind(*p_13_m03_axi_awaddr);
        p_13_m03_axi_awaddr->set_sv_netview_offsetfromdp(7754488);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m03_axi_awlen.bind(*p_13_m03_axi_awlen);
        p_13_m03_axi_awlen->set_sv_netview_offsetfromdp(7754544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_awsize.bind(*p_13_m03_axi_awsize);
        p_13_m03_axi_awsize->set_sv_netview_offsetfromdp(7754600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_awburst.bind(*p_13_m03_axi_awburst);
        p_13_m03_axi_awburst->set_sv_netview_offsetfromdp(7754656);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awlock.bind(*p_13_m03_axi_awlock);
        p_13_m03_axi_awlock->set_sv_netview_offsetfromdp(7754712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_awcache.bind(*p_13_m03_axi_awcache);
        p_13_m03_axi_awcache->set_sv_netview_offsetfromdp(7754768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_awprot.bind(*p_13_m03_axi_awprot);
        p_13_m03_axi_awprot->set_sv_netview_offsetfromdp(7754824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_awqos.bind(*p_13_m03_axi_awqos);
        p_13_m03_axi_awqos->set_sv_netview_offsetfromdp(7754880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_awuser.bind(*p_13_m03_axi_awuser);
        p_13_m03_axi_awuser->set_sv_netview_offsetfromdp(7754936);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awvalid.bind(*p_13_m03_axi_awvalid);
        p_13_m03_axi_awvalid->set_sv_netview_offsetfromdp(7754992);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awready.bind(*p_13_m03_axi_awready);
        (*_glb_hdl_sc_channel_map)[13295].first = 1;
        (*_glb_hdl_sc_channel_map)[13295].second.push_front(p_13_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m03_axi_wdata.bind(*p_13_m03_axi_wdata);
        p_13_m03_axi_wdata->set_sv_netview_offsetfromdp(7755104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_wstrb.bind(*p_13_m03_axi_wstrb);
        p_13_m03_axi_wstrb->set_sv_netview_offsetfromdp(7755160);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wlast.bind(*p_13_m03_axi_wlast);
        p_13_m03_axi_wlast->set_sv_netview_offsetfromdp(7755216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_wuser.bind(*p_13_m03_axi_wuser);
        p_13_m03_axi_wuser->set_sv_netview_offsetfromdp(7755272);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wvalid.bind(*p_13_m03_axi_wvalid);
        p_13_m03_axi_wvalid->set_sv_netview_offsetfromdp(7755328);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wready.bind(*p_13_m03_axi_wready);
        (*_glb_hdl_sc_channel_map)[13313].first = 1;
        (*_glb_hdl_sc_channel_map)[13313].second.push_front(p_13_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_bid.bind(*p_13_m03_axi_bid);
        (*_glb_hdl_sc_channel_map)[13299].first = 3;
        (*_glb_hdl_sc_channel_map)[13299].second.push_front(p_13_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_bresp.bind(*p_13_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13301].first = 3;
        (*_glb_hdl_sc_channel_map)[13301].second.push_front(p_13_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_buser.bind(*p_13_m03_axi_buser);
        (*_glb_hdl_sc_channel_map)[13302].first = 3;
        (*_glb_hdl_sc_channel_map)[13302].second.push_front(p_13_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_bvalid.bind(*p_13_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13303].first = 1;
        (*_glb_hdl_sc_channel_map)[13303].second.push_front(p_13_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_bready.bind(*p_13_m03_axi_bready);
        p_13_m03_axi_bready->set_sv_netview_offsetfromdp(7755664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_arid.bind(*p_13_m03_axi_arid);
        p_13_m03_axi_arid->set_sv_netview_offsetfromdp(7755720);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m03_axi_araddr.bind(*p_13_m03_axi_araddr);
        p_13_m03_axi_araddr->set_sv_netview_offsetfromdp(7755776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m03_axi_arlen.bind(*p_13_m03_axi_arlen);
        p_13_m03_axi_arlen->set_sv_netview_offsetfromdp(7755832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_arsize.bind(*p_13_m03_axi_arsize);
        p_13_m03_axi_arsize->set_sv_netview_offsetfromdp(7755888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_arburst.bind(*p_13_m03_axi_arburst);
        p_13_m03_axi_arburst->set_sv_netview_offsetfromdp(7755944);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arlock.bind(*p_13_m03_axi_arlock);
        p_13_m03_axi_arlock->set_sv_netview_offsetfromdp(7756000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_arcache.bind(*p_13_m03_axi_arcache);
        p_13_m03_axi_arcache->set_sv_netview_offsetfromdp(7756056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_arprot.bind(*p_13_m03_axi_arprot);
        p_13_m03_axi_arprot->set_sv_netview_offsetfromdp(7756112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_arqos.bind(*p_13_m03_axi_arqos);
        p_13_m03_axi_arqos->set_sv_netview_offsetfromdp(7756168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_aruser.bind(*p_13_m03_axi_aruser);
        p_13_m03_axi_aruser->set_sv_netview_offsetfromdp(7756224);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arvalid.bind(*p_13_m03_axi_arvalid);
        p_13_m03_axi_arvalid->set_sv_netview_offsetfromdp(7756280);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arready.bind(*p_13_m03_axi_arready);
        (*_glb_hdl_sc_channel_map)[13283].first = 1;
        (*_glb_hdl_sc_channel_map)[13283].second.push_front(p_13_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_rid.bind(*p_13_m03_axi_rid);
        (*_glb_hdl_sc_channel_map)[13305].first = 3;
        (*_glb_hdl_sc_channel_map)[13305].second.push_front(p_13_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m03_axi_rdata.bind(*p_13_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13304].first = 3;
        (*_glb_hdl_sc_channel_map)[13304].second.push_front(p_13_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_rresp.bind(*p_13_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13308].first = 3;
        (*_glb_hdl_sc_channel_map)[13308].second.push_front(p_13_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rlast.bind(*p_13_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13306].first = 1;
        (*_glb_hdl_sc_channel_map)[13306].second.push_front(p_13_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_ruser.bind(*p_13_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map)[13309].first = 3;
        (*_glb_hdl_sc_channel_map)[13309].second.push_front(p_13_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rvalid.bind(*p_13_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13310].first = 1;
        (*_glb_hdl_sc_channel_map)[13310].second.push_front(p_13_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rready.bind(*p_13_m03_axi_rready);
        p_13_m03_axi_rready->set_sv_netview_offsetfromdp(7756728);
        xsim_sc_channel<0, bool > *p_13_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_aclk.bind(*p_13_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13273].first = 1;
        (*_glb_hdl_sc_channel_map)[13273].second.push_front(p_13_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_aresetn.bind(*p_13_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13277].first = 1;
        (*_glb_hdl_sc_channel_map)[13277].second.push_front(p_13_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_awid.bind(*p_13_m04_axi_awid);
        p_13_m04_axi_awid->set_sv_netview_offsetfromdp(7756896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m04_axi_awaddr.bind(*p_13_m04_axi_awaddr);
        p_13_m04_axi_awaddr->set_sv_netview_offsetfromdp(7756952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_awlen.bind(*p_13_m04_axi_awlen);
        p_13_m04_axi_awlen->set_sv_netview_offsetfromdp(7757008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_awsize.bind(*p_13_m04_axi_awsize);
        p_13_m04_axi_awsize->set_sv_netview_offsetfromdp(7757064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_awburst.bind(*p_13_m04_axi_awburst);
        p_13_m04_axi_awburst->set_sv_netview_offsetfromdp(7757120);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awlock.bind(*p_13_m04_axi_awlock);
        p_13_m04_axi_awlock->set_sv_netview_offsetfromdp(7757176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_awcache.bind(*p_13_m04_axi_awcache);
        p_13_m04_axi_awcache->set_sv_netview_offsetfromdp(7757232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_awprot.bind(*p_13_m04_axi_awprot);
        p_13_m04_axi_awprot->set_sv_netview_offsetfromdp(7757288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_awqos.bind(*p_13_m04_axi_awqos);
        p_13_m04_axi_awqos->set_sv_netview_offsetfromdp(7757344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_awuser.bind(*p_13_m04_axi_awuser);
        p_13_m04_axi_awuser->set_sv_netview_offsetfromdp(7757400);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awvalid.bind(*p_13_m04_axi_awvalid);
        p_13_m04_axi_awvalid->set_sv_netview_offsetfromdp(7757456);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awready.bind(*p_13_m04_axi_awready);
        (*_glb_hdl_sc_channel_map)[13330].first = 1;
        (*_glb_hdl_sc_channel_map)[13330].second.push_front(p_13_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m04_axi_wdata.bind(*p_13_m04_axi_wdata);
        p_13_m04_axi_wdata->set_sv_netview_offsetfromdp(7757568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_wstrb.bind(*p_13_m04_axi_wstrb);
        p_13_m04_axi_wstrb->set_sv_netview_offsetfromdp(7757624);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wlast.bind(*p_13_m04_axi_wlast);
        p_13_m04_axi_wlast->set_sv_netview_offsetfromdp(7757680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_wuser.bind(*p_13_m04_axi_wuser);
        p_13_m04_axi_wuser->set_sv_netview_offsetfromdp(7757736);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wvalid.bind(*p_13_m04_axi_wvalid);
        p_13_m04_axi_wvalid->set_sv_netview_offsetfromdp(7757792);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wready.bind(*p_13_m04_axi_wready);
        (*_glb_hdl_sc_channel_map)[13345].first = 1;
        (*_glb_hdl_sc_channel_map)[13345].second.push_front(p_13_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_bid.bind(*p_13_m04_axi_bid);
        (*_glb_hdl_sc_channel_map)[13333].first = 3;
        (*_glb_hdl_sc_channel_map)[13333].second.push_front(p_13_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_bresp.bind(*p_13_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13335].first = 3;
        (*_glb_hdl_sc_channel_map)[13335].second.push_front(p_13_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_buser.bind(*p_13_m04_axi_buser);
        (*_glb_hdl_sc_channel_map)[1118].first = 3;
        (*_glb_hdl_sc_channel_map)[1118].second.push_front(p_13_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_bvalid.bind(*p_13_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13336].first = 1;
        (*_glb_hdl_sc_channel_map)[13336].second.push_front(p_13_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_bready.bind(*p_13_m04_axi_bready);
        p_13_m04_axi_bready->set_sv_netview_offsetfromdp(7758128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_arid.bind(*p_13_m04_axi_arid);
        p_13_m04_axi_arid->set_sv_netview_offsetfromdp(7758184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m04_axi_araddr.bind(*p_13_m04_axi_araddr);
        p_13_m04_axi_araddr->set_sv_netview_offsetfromdp(7758240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_arlen.bind(*p_13_m04_axi_arlen);
        p_13_m04_axi_arlen->set_sv_netview_offsetfromdp(7758296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_arsize.bind(*p_13_m04_axi_arsize);
        p_13_m04_axi_arsize->set_sv_netview_offsetfromdp(7758352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_arburst.bind(*p_13_m04_axi_arburst);
        p_13_m04_axi_arburst->set_sv_netview_offsetfromdp(7758408);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arlock.bind(*p_13_m04_axi_arlock);
        p_13_m04_axi_arlock->set_sv_netview_offsetfromdp(7758464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_arcache.bind(*p_13_m04_axi_arcache);
        p_13_m04_axi_arcache->set_sv_netview_offsetfromdp(7758520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_arprot.bind(*p_13_m04_axi_arprot);
        p_13_m04_axi_arprot->set_sv_netview_offsetfromdp(7758576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_arqos.bind(*p_13_m04_axi_arqos);
        p_13_m04_axi_arqos->set_sv_netview_offsetfromdp(7758632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_aruser.bind(*p_13_m04_axi_aruser);
        p_13_m04_axi_aruser->set_sv_netview_offsetfromdp(7758688);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arvalid.bind(*p_13_m04_axi_arvalid);
        p_13_m04_axi_arvalid->set_sv_netview_offsetfromdp(7758744);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arready.bind(*p_13_m04_axi_arready);
        (*_glb_hdl_sc_channel_map)[13323].first = 1;
        (*_glb_hdl_sc_channel_map)[13323].second.push_front(p_13_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_rid.bind(*p_13_m04_axi_rid);
        (*_glb_hdl_sc_channel_map)[13338].first = 3;
        (*_glb_hdl_sc_channel_map)[13338].second.push_front(p_13_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m04_axi_rdata.bind(*p_13_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13337].first = 3;
        (*_glb_hdl_sc_channel_map)[13337].second.push_front(p_13_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_rresp.bind(*p_13_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13341].first = 3;
        (*_glb_hdl_sc_channel_map)[13341].second.push_front(p_13_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rlast.bind(*p_13_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13339].first = 1;
        (*_glb_hdl_sc_channel_map)[13339].second.push_front(p_13_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_ruser.bind(*p_13_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map)[1117].first = 3;
        (*_glb_hdl_sc_channel_map)[1117].second.push_front(p_13_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rvalid.bind(*p_13_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13342].first = 1;
        (*_glb_hdl_sc_channel_map)[13342].second.push_front(p_13_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rready.bind(*p_13_m04_axi_rready);
        p_13_m04_axi_rready->set_sv_netview_offsetfromdp(7759192);
        xsim_sc_channel<0, bool > *p_13_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_aclk.bind(*p_13_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13317].first = 1;
        (*_glb_hdl_sc_channel_map)[13317].second.push_front(p_13_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_aresetn.bind(*p_13_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13320].first = 1;
        (*_glb_hdl_sc_channel_map)[13320].second.push_front(p_13_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_awid.bind(*p_13_m01_axi_awid);
        p_13_m01_axi_awid->set_sv_netview_offsetfromdp(7759360);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m01_axi_awaddr.bind(*p_13_m01_axi_awaddr);
        p_13_m01_axi_awaddr->set_sv_netview_offsetfromdp(7759416);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m01_axi_awlen.bind(*p_13_m01_axi_awlen);
        p_13_m01_axi_awlen->set_sv_netview_offsetfromdp(7759472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_awsize.bind(*p_13_m01_axi_awsize);
        p_13_m01_axi_awsize->set_sv_netview_offsetfromdp(7759528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_awburst.bind(*p_13_m01_axi_awburst);
        p_13_m01_axi_awburst->set_sv_netview_offsetfromdp(7759584);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awlock.bind(*p_13_m01_axi_awlock);
        p_13_m01_axi_awlock->set_sv_netview_offsetfromdp(7759640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_awcache.bind(*p_13_m01_axi_awcache);
        p_13_m01_axi_awcache->set_sv_netview_offsetfromdp(7759696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_awprot.bind(*p_13_m01_axi_awprot);
        p_13_m01_axi_awprot->set_sv_netview_offsetfromdp(7759752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_awqos.bind(*p_13_m01_axi_awqos);
        p_13_m01_axi_awqos->set_sv_netview_offsetfromdp(7759808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_awuser.bind(*p_13_m01_axi_awuser);
        p_13_m01_axi_awuser->set_sv_netview_offsetfromdp(7759864);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awvalid.bind(*p_13_m01_axi_awvalid);
        p_13_m01_axi_awvalid->set_sv_netview_offsetfromdp(7759920);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awready.bind(*p_13_m01_axi_awready);
        (*_glb_hdl_sc_channel_map)[13207].first = 1;
        (*_glb_hdl_sc_channel_map)[13207].second.push_front(p_13_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m01_axi_wdata.bind(*p_13_m01_axi_wdata);
        p_13_m01_axi_wdata->set_sv_netview_offsetfromdp(7760032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_wstrb.bind(*p_13_m01_axi_wstrb);
        p_13_m01_axi_wstrb->set_sv_netview_offsetfromdp(7760088);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wlast.bind(*p_13_m01_axi_wlast);
        p_13_m01_axi_wlast->set_sv_netview_offsetfromdp(7760144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_wuser.bind(*p_13_m01_axi_wuser);
        p_13_m01_axi_wuser->set_sv_netview_offsetfromdp(7760200);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wvalid.bind(*p_13_m01_axi_wvalid);
        p_13_m01_axi_wvalid->set_sv_netview_offsetfromdp(7760256);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wready.bind(*p_13_m01_axi_wready);
        (*_glb_hdl_sc_channel_map)[13225].first = 1;
        (*_glb_hdl_sc_channel_map)[13225].second.push_front(p_13_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_bid.bind(*p_13_m01_axi_bid);
        (*_glb_hdl_sc_channel_map)[13211].first = 3;
        (*_glb_hdl_sc_channel_map)[13211].second.push_front(p_13_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_bresp.bind(*p_13_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map)[13213].first = 3;
        (*_glb_hdl_sc_channel_map)[13213].second.push_front(p_13_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_buser.bind(*p_13_m01_axi_buser);
        (*_glb_hdl_sc_channel_map)[13214].first = 3;
        (*_glb_hdl_sc_channel_map)[13214].second.push_front(p_13_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_bvalid.bind(*p_13_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[13215].first = 1;
        (*_glb_hdl_sc_channel_map)[13215].second.push_front(p_13_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_bready.bind(*p_13_m01_axi_bready);
        p_13_m01_axi_bready->set_sv_netview_offsetfromdp(7760592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_arid.bind(*p_13_m01_axi_arid);
        p_13_m01_axi_arid->set_sv_netview_offsetfromdp(7760648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m01_axi_araddr.bind(*p_13_m01_axi_araddr);
        p_13_m01_axi_araddr->set_sv_netview_offsetfromdp(7760704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m01_axi_arlen.bind(*p_13_m01_axi_arlen);
        p_13_m01_axi_arlen->set_sv_netview_offsetfromdp(7760760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_arsize.bind(*p_13_m01_axi_arsize);
        p_13_m01_axi_arsize->set_sv_netview_offsetfromdp(7760816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_arburst.bind(*p_13_m01_axi_arburst);
        p_13_m01_axi_arburst->set_sv_netview_offsetfromdp(7760872);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arlock.bind(*p_13_m01_axi_arlock);
        p_13_m01_axi_arlock->set_sv_netview_offsetfromdp(7760928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_arcache.bind(*p_13_m01_axi_arcache);
        p_13_m01_axi_arcache->set_sv_netview_offsetfromdp(7760984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_arprot.bind(*p_13_m01_axi_arprot);
        p_13_m01_axi_arprot->set_sv_netview_offsetfromdp(7761040);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_arqos.bind(*p_13_m01_axi_arqos);
        p_13_m01_axi_arqos->set_sv_netview_offsetfromdp(7761096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_aruser.bind(*p_13_m01_axi_aruser);
        p_13_m01_axi_aruser->set_sv_netview_offsetfromdp(7761152);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arvalid.bind(*p_13_m01_axi_arvalid);
        p_13_m01_axi_arvalid->set_sv_netview_offsetfromdp(7761208);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arready.bind(*p_13_m01_axi_arready);
        (*_glb_hdl_sc_channel_map)[13195].first = 1;
        (*_glb_hdl_sc_channel_map)[13195].second.push_front(p_13_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_rid.bind(*p_13_m01_axi_rid);
        (*_glb_hdl_sc_channel_map)[13217].first = 3;
        (*_glb_hdl_sc_channel_map)[13217].second.push_front(p_13_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m01_axi_rdata.bind(*p_13_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map)[13216].first = 3;
        (*_glb_hdl_sc_channel_map)[13216].second.push_front(p_13_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_rresp.bind(*p_13_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map)[13220].first = 3;
        (*_glb_hdl_sc_channel_map)[13220].second.push_front(p_13_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rlast.bind(*p_13_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map)[13218].first = 1;
        (*_glb_hdl_sc_channel_map)[13218].second.push_front(p_13_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_ruser.bind(*p_13_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map)[13221].first = 3;
        (*_glb_hdl_sc_channel_map)[13221].second.push_front(p_13_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rvalid.bind(*p_13_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[13222].first = 1;
        (*_glb_hdl_sc_channel_map)[13222].second.push_front(p_13_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rready.bind(*p_13_m01_axi_rready);
        p_13_m01_axi_rready->set_sv_netview_offsetfromdp(7761656);
        xsim_sc_channel<0, bool > *p_13_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_aclk.bind(*p_13_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13185].first = 1;
        (*_glb_hdl_sc_channel_map)[13185].second.push_front(p_13_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_aresetn.bind(*p_13_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13189].first = 1;
        (*_glb_hdl_sc_channel_map)[13189].second.push_front(p_13_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_awid.bind(*p_13_s03_axi_awid);
        (*_glb_hdl_sc_channel_map)[13488].first = 3;
        (*_glb_hdl_sc_channel_map)[13488].second.push_front(p_13_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_awaddr.bind(*p_13_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13485].first = 3;
        (*_glb_hdl_sc_channel_map)[13485].second.push_front(p_13_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s03_axi_awlen.bind(*p_13_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13489].first = 3;
        (*_glb_hdl_sc_channel_map)[13489].second.push_front(p_13_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_awsize.bind(*p_13_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13495].first = 3;
        (*_glb_hdl_sc_channel_map)[13495].second.push_front(p_13_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_awburst.bind(*p_13_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13486].first = 3;
        (*_glb_hdl_sc_channel_map)[13486].second.push_front(p_13_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awlock.bind(*p_13_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13490].first = 1;
        (*_glb_hdl_sc_channel_map)[13490].second.push_front(p_13_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awcache.bind(*p_13_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13487].first = 3;
        (*_glb_hdl_sc_channel_map)[13487].second.push_front(p_13_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_awprot.bind(*p_13_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13491].first = 3;
        (*_glb_hdl_sc_channel_map)[13491].second.push_front(p_13_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awregion.bind(*p_13_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13494].first = 3;
        (*_glb_hdl_sc_channel_map)[13494].second.push_front(p_13_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awqos.bind(*p_13_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13492].first = 3;
        (*_glb_hdl_sc_channel_map)[13492].second.push_front(p_13_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awvalid.bind(*p_13_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13496].first = 1;
        (*_glb_hdl_sc_channel_map)[13496].second.push_front(p_13_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awready.bind(*p_13_s03_axi_awready);
        p_13_s03_axi_awready->set_sv_netview_offsetfromdp(7762440);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s03_axi_wdata.bind(*p_13_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13507].first = 3;
        (*_glb_hdl_sc_channel_map)[13507].second.push_front(p_13_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_wstrb.bind(*p_13_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13510].first = 3;
        (*_glb_hdl_sc_channel_map)[13510].second.push_front(p_13_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wlast.bind(*p_13_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13508].first = 1;
        (*_glb_hdl_sc_channel_map)[13508].second.push_front(p_13_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wvalid.bind(*p_13_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13511].first = 1;
        (*_glb_hdl_sc_channel_map)[13511].second.push_front(p_13_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wready.bind(*p_13_s03_axi_wready);
        p_13_s03_axi_wready->set_sv_netview_offsetfromdp(7762720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_bid.bind(*p_13_s03_axi_bid);
        p_13_s03_axi_bid->set_sv_netview_offsetfromdp(7762776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_bresp.bind(*p_13_s03_axi_bresp);
        p_13_s03_axi_bresp->set_sv_netview_offsetfromdp(7762832);
        xsim_sc_channel<0, bool > *p_13_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_bvalid.bind(*p_13_s03_axi_bvalid);
        p_13_s03_axi_bvalid->set_sv_netview_offsetfromdp(7762888);
        xsim_sc_channel<0, bool > *p_13_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_bready.bind(*p_13_s03_axi_bready);
        (*_glb_hdl_sc_channel_map)[13498].first = 1;
        (*_glb_hdl_sc_channel_map)[13498].second.push_front(p_13_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_arid.bind(*p_13_s03_axi_arid);
        (*_glb_hdl_sc_channel_map)[13476].first = 3;
        (*_glb_hdl_sc_channel_map)[13476].second.push_front(p_13_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_araddr.bind(*p_13_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13472].first = 3;
        (*_glb_hdl_sc_channel_map)[13472].second.push_front(p_13_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s03_axi_arlen.bind(*p_13_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13477].first = 3;
        (*_glb_hdl_sc_channel_map)[13477].second.push_front(p_13_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_arsize.bind(*p_13_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13483].first = 3;
        (*_glb_hdl_sc_channel_map)[13483].second.push_front(p_13_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_arburst.bind(*p_13_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13473].first = 3;
        (*_glb_hdl_sc_channel_map)[13473].second.push_front(p_13_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arlock.bind(*p_13_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13478].first = 1;
        (*_glb_hdl_sc_channel_map)[13478].second.push_front(p_13_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arcache.bind(*p_13_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13474].first = 3;
        (*_glb_hdl_sc_channel_map)[13474].second.push_front(p_13_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_arprot.bind(*p_13_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13479].first = 3;
        (*_glb_hdl_sc_channel_map)[13479].second.push_front(p_13_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arregion.bind(*p_13_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13482].first = 3;
        (*_glb_hdl_sc_channel_map)[13482].second.push_front(p_13_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arqos.bind(*p_13_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13480].first = 3;
        (*_glb_hdl_sc_channel_map)[13480].second.push_front(p_13_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arvalid.bind(*p_13_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13484].first = 1;
        (*_glb_hdl_sc_channel_map)[13484].second.push_front(p_13_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arready.bind(*p_13_s03_axi_arready);
        p_13_s03_axi_arready->set_sv_netview_offsetfromdp(7763616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_rid.bind(*p_13_s03_axi_rid);
        p_13_s03_axi_rid->set_sv_netview_offsetfromdp(7763672);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s03_axi_rdata.bind(*p_13_s03_axi_rdata);
        p_13_s03_axi_rdata->set_sv_netview_offsetfromdp(7763728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_rresp.bind(*p_13_s03_axi_rresp);
        p_13_s03_axi_rresp->set_sv_netview_offsetfromdp(7763784);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rlast.bind(*p_13_s03_axi_rlast);
        p_13_s03_axi_rlast->set_sv_netview_offsetfromdp(7763840);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rvalid.bind(*p_13_s03_axi_rvalid);
        p_13_s03_axi_rvalid->set_sv_netview_offsetfromdp(7763896);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rready.bind(*p_13_s03_axi_rready);
        (*_glb_hdl_sc_channel_map)[13504].first = 1;
        (*_glb_hdl_sc_channel_map)[13504].second.push_front(p_13_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_aclk.bind(*p_13_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13471].first = 1;
        (*_glb_hdl_sc_channel_map)[13471].second.push_front(p_13_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_aresetn.bind(*p_13_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13475].first = 1;
        (*_glb_hdl_sc_channel_map)[13475].second.push_front(p_13_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_awid.bind(*p_13_s01_axi_awid);
        (*_glb_hdl_sc_channel_map)[13406].first = 3;
        (*_glb_hdl_sc_channel_map)[13406].second.push_front(p_13_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_awaddr.bind(*p_13_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13403].first = 3;
        (*_glb_hdl_sc_channel_map)[13403].second.push_front(p_13_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s01_axi_awlen.bind(*p_13_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13407].first = 3;
        (*_glb_hdl_sc_channel_map)[13407].second.push_front(p_13_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_awsize.bind(*p_13_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13413].first = 3;
        (*_glb_hdl_sc_channel_map)[13413].second.push_front(p_13_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_awburst.bind(*p_13_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13404].first = 3;
        (*_glb_hdl_sc_channel_map)[13404].second.push_front(p_13_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awlock.bind(*p_13_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13408].first = 1;
        (*_glb_hdl_sc_channel_map)[13408].second.push_front(p_13_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awcache.bind(*p_13_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13405].first = 3;
        (*_glb_hdl_sc_channel_map)[13405].second.push_front(p_13_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_awprot.bind(*p_13_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13409].first = 3;
        (*_glb_hdl_sc_channel_map)[13409].second.push_front(p_13_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awregion.bind(*p_13_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13412].first = 3;
        (*_glb_hdl_sc_channel_map)[13412].second.push_front(p_13_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awqos.bind(*p_13_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13410].first = 3;
        (*_glb_hdl_sc_channel_map)[13410].second.push_front(p_13_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awvalid.bind(*p_13_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13414].first = 1;
        (*_glb_hdl_sc_channel_map)[13414].second.push_front(p_13_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awready.bind(*p_13_s01_axi_awready);
        p_13_s01_axi_awready->set_sv_netview_offsetfromdp(7764736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s01_axi_wdata.bind(*p_13_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13425].first = 3;
        (*_glb_hdl_sc_channel_map)[13425].second.push_front(p_13_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_wstrb.bind(*p_13_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13428].first = 3;
        (*_glb_hdl_sc_channel_map)[13428].second.push_front(p_13_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wlast.bind(*p_13_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13426].first = 1;
        (*_glb_hdl_sc_channel_map)[13426].second.push_front(p_13_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wvalid.bind(*p_13_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13429].first = 1;
        (*_glb_hdl_sc_channel_map)[13429].second.push_front(p_13_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wready.bind(*p_13_s01_axi_wready);
        p_13_s01_axi_wready->set_sv_netview_offsetfromdp(7765016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_bid.bind(*p_13_s01_axi_bid);
        p_13_s01_axi_bid->set_sv_netview_offsetfromdp(7765072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_bresp.bind(*p_13_s01_axi_bresp);
        p_13_s01_axi_bresp->set_sv_netview_offsetfromdp(7765128);
        xsim_sc_channel<0, bool > *p_13_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_bvalid.bind(*p_13_s01_axi_bvalid);
        p_13_s01_axi_bvalid->set_sv_netview_offsetfromdp(7765184);
        xsim_sc_channel<0, bool > *p_13_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_bready.bind(*p_13_s01_axi_bready);
        (*_glb_hdl_sc_channel_map)[13416].first = 1;
        (*_glb_hdl_sc_channel_map)[13416].second.push_front(p_13_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_arid.bind(*p_13_s01_axi_arid);
        (*_glb_hdl_sc_channel_map)[13394].first = 3;
        (*_glb_hdl_sc_channel_map)[13394].second.push_front(p_13_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_araddr.bind(*p_13_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13390].first = 3;
        (*_glb_hdl_sc_channel_map)[13390].second.push_front(p_13_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s01_axi_arlen.bind(*p_13_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13395].first = 3;
        (*_glb_hdl_sc_channel_map)[13395].second.push_front(p_13_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_arsize.bind(*p_13_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13401].first = 3;
        (*_glb_hdl_sc_channel_map)[13401].second.push_front(p_13_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_arburst.bind(*p_13_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13391].first = 3;
        (*_glb_hdl_sc_channel_map)[13391].second.push_front(p_13_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arlock.bind(*p_13_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13396].first = 1;
        (*_glb_hdl_sc_channel_map)[13396].second.push_front(p_13_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arcache.bind(*p_13_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13392].first = 3;
        (*_glb_hdl_sc_channel_map)[13392].second.push_front(p_13_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_arprot.bind(*p_13_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13397].first = 3;
        (*_glb_hdl_sc_channel_map)[13397].second.push_front(p_13_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arregion.bind(*p_13_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13400].first = 3;
        (*_glb_hdl_sc_channel_map)[13400].second.push_front(p_13_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arqos.bind(*p_13_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13398].first = 3;
        (*_glb_hdl_sc_channel_map)[13398].second.push_front(p_13_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arvalid.bind(*p_13_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13402].first = 1;
        (*_glb_hdl_sc_channel_map)[13402].second.push_front(p_13_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arready.bind(*p_13_s01_axi_arready);
        p_13_s01_axi_arready->set_sv_netview_offsetfromdp(7765912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_rid.bind(*p_13_s01_axi_rid);
        p_13_s01_axi_rid->set_sv_netview_offsetfromdp(7765968);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s01_axi_rdata.bind(*p_13_s01_axi_rdata);
        p_13_s01_axi_rdata->set_sv_netview_offsetfromdp(7766024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_rresp.bind(*p_13_s01_axi_rresp);
        p_13_s01_axi_rresp->set_sv_netview_offsetfromdp(7766080);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rlast.bind(*p_13_s01_axi_rlast);
        p_13_s01_axi_rlast->set_sv_netview_offsetfromdp(7766136);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rvalid.bind(*p_13_s01_axi_rvalid);
        p_13_s01_axi_rvalid->set_sv_netview_offsetfromdp(7766192);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rready.bind(*p_13_s01_axi_rready);
        (*_glb_hdl_sc_channel_map)[13422].first = 1;
        (*_glb_hdl_sc_channel_map)[13422].second.push_front(p_13_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_aclk.bind(*p_13_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13389].first = 1;
        (*_glb_hdl_sc_channel_map)[13389].second.push_front(p_13_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_aresetn.bind(*p_13_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13393].first = 1;
        (*_glb_hdl_sc_channel_map)[13393].second.push_front(p_13_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_awid.bind(*p_13_s02_axi_awid);
        (*_glb_hdl_sc_channel_map)[13447].first = 3;
        (*_glb_hdl_sc_channel_map)[13447].second.push_front(p_13_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_awaddr.bind(*p_13_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13444].first = 3;
        (*_glb_hdl_sc_channel_map)[13444].second.push_front(p_13_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s02_axi_awlen.bind(*p_13_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13448].first = 3;
        (*_glb_hdl_sc_channel_map)[13448].second.push_front(p_13_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_awsize.bind(*p_13_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13454].first = 3;
        (*_glb_hdl_sc_channel_map)[13454].second.push_front(p_13_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_awburst.bind(*p_13_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13445].first = 3;
        (*_glb_hdl_sc_channel_map)[13445].second.push_front(p_13_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awlock.bind(*p_13_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13449].first = 1;
        (*_glb_hdl_sc_channel_map)[13449].second.push_front(p_13_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awcache.bind(*p_13_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13446].first = 3;
        (*_glb_hdl_sc_channel_map)[13446].second.push_front(p_13_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_awprot.bind(*p_13_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13450].first = 3;
        (*_glb_hdl_sc_channel_map)[13450].second.push_front(p_13_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awregion.bind(*p_13_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13453].first = 3;
        (*_glb_hdl_sc_channel_map)[13453].second.push_front(p_13_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awqos.bind(*p_13_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13451].first = 3;
        (*_glb_hdl_sc_channel_map)[13451].second.push_front(p_13_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awvalid.bind(*p_13_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13455].first = 1;
        (*_glb_hdl_sc_channel_map)[13455].second.push_front(p_13_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awready.bind(*p_13_s02_axi_awready);
        p_13_s02_axi_awready->set_sv_netview_offsetfromdp(7767032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s02_axi_wdata.bind(*p_13_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13466].first = 3;
        (*_glb_hdl_sc_channel_map)[13466].second.push_front(p_13_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_wstrb.bind(*p_13_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13469].first = 3;
        (*_glb_hdl_sc_channel_map)[13469].second.push_front(p_13_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wlast.bind(*p_13_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13467].first = 1;
        (*_glb_hdl_sc_channel_map)[13467].second.push_front(p_13_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wvalid.bind(*p_13_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13470].first = 1;
        (*_glb_hdl_sc_channel_map)[13470].second.push_front(p_13_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wready.bind(*p_13_s02_axi_wready);
        p_13_s02_axi_wready->set_sv_netview_offsetfromdp(7767312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_bid.bind(*p_13_s02_axi_bid);
        p_13_s02_axi_bid->set_sv_netview_offsetfromdp(7767368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_bresp.bind(*p_13_s02_axi_bresp);
        p_13_s02_axi_bresp->set_sv_netview_offsetfromdp(7767424);
        xsim_sc_channel<0, bool > *p_13_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_bvalid.bind(*p_13_s02_axi_bvalid);
        p_13_s02_axi_bvalid->set_sv_netview_offsetfromdp(7767480);
        xsim_sc_channel<0, bool > *p_13_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_bready.bind(*p_13_s02_axi_bready);
        (*_glb_hdl_sc_channel_map)[13457].first = 1;
        (*_glb_hdl_sc_channel_map)[13457].second.push_front(p_13_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_arid.bind(*p_13_s02_axi_arid);
        (*_glb_hdl_sc_channel_map)[13435].first = 3;
        (*_glb_hdl_sc_channel_map)[13435].second.push_front(p_13_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_araddr.bind(*p_13_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13431].first = 3;
        (*_glb_hdl_sc_channel_map)[13431].second.push_front(p_13_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s02_axi_arlen.bind(*p_13_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13436].first = 3;
        (*_glb_hdl_sc_channel_map)[13436].second.push_front(p_13_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_arsize.bind(*p_13_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13442].first = 3;
        (*_glb_hdl_sc_channel_map)[13442].second.push_front(p_13_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_arburst.bind(*p_13_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13432].first = 3;
        (*_glb_hdl_sc_channel_map)[13432].second.push_front(p_13_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arlock.bind(*p_13_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13437].first = 1;
        (*_glb_hdl_sc_channel_map)[13437].second.push_front(p_13_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arcache.bind(*p_13_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13433].first = 3;
        (*_glb_hdl_sc_channel_map)[13433].second.push_front(p_13_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_arprot.bind(*p_13_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13438].first = 3;
        (*_glb_hdl_sc_channel_map)[13438].second.push_front(p_13_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arregion.bind(*p_13_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13441].first = 3;
        (*_glb_hdl_sc_channel_map)[13441].second.push_front(p_13_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arqos.bind(*p_13_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13439].first = 3;
        (*_glb_hdl_sc_channel_map)[13439].second.push_front(p_13_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arvalid.bind(*p_13_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13443].first = 1;
        (*_glb_hdl_sc_channel_map)[13443].second.push_front(p_13_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arready.bind(*p_13_s02_axi_arready);
        p_13_s02_axi_arready->set_sv_netview_offsetfromdp(7768208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_rid.bind(*p_13_s02_axi_rid);
        p_13_s02_axi_rid->set_sv_netview_offsetfromdp(7768264);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s02_axi_rdata.bind(*p_13_s02_axi_rdata);
        p_13_s02_axi_rdata->set_sv_netview_offsetfromdp(7768320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_rresp.bind(*p_13_s02_axi_rresp);
        p_13_s02_axi_rresp->set_sv_netview_offsetfromdp(7768376);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rlast.bind(*p_13_s02_axi_rlast);
        p_13_s02_axi_rlast->set_sv_netview_offsetfromdp(7768432);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rvalid.bind(*p_13_s02_axi_rvalid);
        p_13_s02_axi_rvalid->set_sv_netview_offsetfromdp(7768488);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rready.bind(*p_13_s02_axi_rready);
        (*_glb_hdl_sc_channel_map)[13463].first = 1;
        (*_glb_hdl_sc_channel_map)[13463].second.push_front(p_13_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_aclk.bind(*p_13_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13430].first = 1;
        (*_glb_hdl_sc_channel_map)[13430].second.push_front(p_13_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_aresetn.bind(*p_13_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13434].first = 1;
        (*_glb_hdl_sc_channel_map)[13434].second.push_front(p_13_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_awid.bind(*p_13_s04_axi_awid);
        (*_glb_hdl_sc_channel_map)[13529].first = 3;
        (*_glb_hdl_sc_channel_map)[13529].second.push_front(p_13_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_awaddr.bind(*p_13_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[13526].first = 3;
        (*_glb_hdl_sc_channel_map)[13526].second.push_front(p_13_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s04_axi_awlen.bind(*p_13_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map)[13530].first = 3;
        (*_glb_hdl_sc_channel_map)[13530].second.push_front(p_13_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_awsize.bind(*p_13_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map)[13536].first = 3;
        (*_glb_hdl_sc_channel_map)[13536].second.push_front(p_13_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_awburst.bind(*p_13_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map)[13527].first = 3;
        (*_glb_hdl_sc_channel_map)[13527].second.push_front(p_13_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awlock.bind(*p_13_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map)[13531].first = 1;
        (*_glb_hdl_sc_channel_map)[13531].second.push_front(p_13_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awcache.bind(*p_13_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map)[13528].first = 3;
        (*_glb_hdl_sc_channel_map)[13528].second.push_front(p_13_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_awprot.bind(*p_13_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map)[13532].first = 3;
        (*_glb_hdl_sc_channel_map)[13532].second.push_front(p_13_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awregion.bind(*p_13_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map)[13535].first = 3;
        (*_glb_hdl_sc_channel_map)[13535].second.push_front(p_13_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awqos.bind(*p_13_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map)[13533].first = 3;
        (*_glb_hdl_sc_channel_map)[13533].second.push_front(p_13_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awvalid.bind(*p_13_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[13537].first = 1;
        (*_glb_hdl_sc_channel_map)[13537].second.push_front(p_13_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awready.bind(*p_13_s04_axi_awready);
        p_13_s04_axi_awready->set_sv_netview_offsetfromdp(7769328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s04_axi_wdata.bind(*p_13_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map)[13548].first = 3;
        (*_glb_hdl_sc_channel_map)[13548].second.push_front(p_13_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_wstrb.bind(*p_13_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[13551].first = 3;
        (*_glb_hdl_sc_channel_map)[13551].second.push_front(p_13_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wlast.bind(*p_13_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map)[13549].first = 1;
        (*_glb_hdl_sc_channel_map)[13549].second.push_front(p_13_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wvalid.bind(*p_13_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[13552].first = 1;
        (*_glb_hdl_sc_channel_map)[13552].second.push_front(p_13_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wready.bind(*p_13_s04_axi_wready);
        p_13_s04_axi_wready->set_sv_netview_offsetfromdp(7769608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_bid.bind(*p_13_s04_axi_bid);
        p_13_s04_axi_bid->set_sv_netview_offsetfromdp(7769664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_bresp.bind(*p_13_s04_axi_bresp);
        p_13_s04_axi_bresp->set_sv_netview_offsetfromdp(7769720);
        xsim_sc_channel<0, bool > *p_13_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_bvalid.bind(*p_13_s04_axi_bvalid);
        p_13_s04_axi_bvalid->set_sv_netview_offsetfromdp(7769776);
        xsim_sc_channel<0, bool > *p_13_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_bready.bind(*p_13_s04_axi_bready);
        (*_glb_hdl_sc_channel_map)[13539].first = 1;
        (*_glb_hdl_sc_channel_map)[13539].second.push_front(p_13_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_arid.bind(*p_13_s04_axi_arid);
        (*_glb_hdl_sc_channel_map)[13517].first = 3;
        (*_glb_hdl_sc_channel_map)[13517].second.push_front(p_13_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_araddr.bind(*p_13_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map)[13513].first = 3;
        (*_glb_hdl_sc_channel_map)[13513].second.push_front(p_13_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s04_axi_arlen.bind(*p_13_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map)[13518].first = 3;
        (*_glb_hdl_sc_channel_map)[13518].second.push_front(p_13_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_arsize.bind(*p_13_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map)[13524].first = 3;
        (*_glb_hdl_sc_channel_map)[13524].second.push_front(p_13_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_arburst.bind(*p_13_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map)[13514].first = 3;
        (*_glb_hdl_sc_channel_map)[13514].second.push_front(p_13_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arlock.bind(*p_13_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map)[13519].first = 1;
        (*_glb_hdl_sc_channel_map)[13519].second.push_front(p_13_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arcache.bind(*p_13_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map)[13515].first = 3;
        (*_glb_hdl_sc_channel_map)[13515].second.push_front(p_13_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_arprot.bind(*p_13_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map)[13520].first = 3;
        (*_glb_hdl_sc_channel_map)[13520].second.push_front(p_13_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arregion.bind(*p_13_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map)[13523].first = 3;
        (*_glb_hdl_sc_channel_map)[13523].second.push_front(p_13_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arqos.bind(*p_13_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map)[13521].first = 3;
        (*_glb_hdl_sc_channel_map)[13521].second.push_front(p_13_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arvalid.bind(*p_13_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[13525].first = 1;
        (*_glb_hdl_sc_channel_map)[13525].second.push_front(p_13_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arready.bind(*p_13_s04_axi_arready);
        p_13_s04_axi_arready->set_sv_netview_offsetfromdp(7770504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_rid.bind(*p_13_s04_axi_rid);
        p_13_s04_axi_rid->set_sv_netview_offsetfromdp(7770560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s04_axi_rdata.bind(*p_13_s04_axi_rdata);
        p_13_s04_axi_rdata->set_sv_netview_offsetfromdp(7770616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_rresp.bind(*p_13_s04_axi_rresp);
        p_13_s04_axi_rresp->set_sv_netview_offsetfromdp(7770672);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rlast.bind(*p_13_s04_axi_rlast);
        p_13_s04_axi_rlast->set_sv_netview_offsetfromdp(7770728);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rvalid.bind(*p_13_s04_axi_rvalid);
        p_13_s04_axi_rvalid->set_sv_netview_offsetfromdp(7770784);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rready.bind(*p_13_s04_axi_rready);
        (*_glb_hdl_sc_channel_map)[13545].first = 1;
        (*_glb_hdl_sc_channel_map)[13545].second.push_front(p_13_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_aclk.bind(*p_13_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map)[13512].first = 1;
        (*_glb_hdl_sc_channel_map)[13512].second.push_front(p_13_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_aresetn.bind(*p_13_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[13516].first = 1;
        (*_glb_hdl_sc_channel_map)[13516].second.push_front(p_13_s04_axi_aresetn);
        sc_inst_14 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_14->xsim_set_dbg_index(23);
        sc_inst_15 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_15->xsim_set_dbg_index(1545);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->saxi_lite_cq_awaddr.bind(*p_15_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map)[19697].first = 3;
        (*_glb_hdl_sc_channel_map)[19697].second.push_front(p_15_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->saxi_lite_cq_awprot.bind(*p_15_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map)[19698].first = 3;
        (*_glb_hdl_sc_channel_map)[19698].second.push_front(p_15_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_awvalid.bind(*p_15_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map)[19700].first = 1;
        (*_glb_hdl_sc_channel_map)[19700].second.push_front(p_15_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_awready.bind(*p_15_saxi_lite_cq_awready);
        p_15_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(9936200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->saxi_lite_cq_wdata.bind(*p_15_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map)[19708].first = 3;
        (*_glb_hdl_sc_channel_map)[19708].second.push_front(p_15_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->saxi_lite_cq_wstrb.bind(*p_15_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map)[19710].first = 3;
        (*_glb_hdl_sc_channel_map)[19710].second.push_front(p_15_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_wvalid.bind(*p_15_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map)[19711].first = 1;
        (*_glb_hdl_sc_channel_map)[19711].second.push_front(p_15_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_wready.bind(*p_15_saxi_lite_cq_wready);
        p_15_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(9936424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->saxi_lite_cq_bresp.bind(*p_15_saxi_lite_cq_bresp);
        p_15_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(9936480);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_bvalid.bind(*p_15_saxi_lite_cq_bvalid);
        p_15_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(9936536);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_bready.bind(*p_15_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map)[19701].first = 1;
        (*_glb_hdl_sc_channel_map)[19701].second.push_front(p_15_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->saxi_lite_cq_araddr.bind(*p_15_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map)[19692].first = 3;
        (*_glb_hdl_sc_channel_map)[19692].second.push_front(p_15_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->saxi_lite_cq_arprot.bind(*p_15_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map)[19694].first = 3;
        (*_glb_hdl_sc_channel_map)[19694].second.push_front(p_15_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_arvalid.bind(*p_15_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map)[19696].first = 1;
        (*_glb_hdl_sc_channel_map)[19696].second.push_front(p_15_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_arready.bind(*p_15_saxi_lite_cq_arready);
        p_15_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(9936816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->saxi_lite_cq_rdata.bind(*p_15_saxi_lite_cq_rdata);
        p_15_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(9936872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->saxi_lite_cq_rresp.bind(*p_15_saxi_lite_cq_rresp);
        p_15_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(9936928);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_rvalid.bind(*p_15_saxi_lite_cq_rvalid);
        p_15_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(9936984);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_rready.bind(*p_15_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map)[19705].first = 1;
        (*_glb_hdl_sc_channel_map)[19705].second.push_front(p_15_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_aclk.bind(*p_15_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map)[19691].first = 1;
        (*_glb_hdl_sc_channel_map)[19691].second.push_front(p_15_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_aresetn.bind(*p_15_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map)[19693].first = 1;
        (*_glb_hdl_sc_channel_map)[19693].second.push_front(p_15_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->maxi_lite_mb_awaddr.bind(*p_15_maxi_lite_mb_awaddr);
        p_15_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(9937208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->maxi_lite_mb_awprot.bind(*p_15_maxi_lite_mb_awprot);
        p_15_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(9937264);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_awvalid.bind(*p_15_maxi_lite_mb_awvalid);
        p_15_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(9937320);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_awready.bind(*p_15_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map)[19678].first = 1;
        (*_glb_hdl_sc_channel_map)[19678].second.push_front(p_15_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->maxi_lite_mb_wdata.bind(*p_15_maxi_lite_mb_wdata);
        p_15_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(9937432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->maxi_lite_mb_wstrb.bind(*p_15_maxi_lite_mb_wstrb);
        p_15_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(9937488);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_wvalid.bind(*p_15_maxi_lite_mb_wvalid);
        p_15_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(9937544);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_wready.bind(*p_15_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map)[19688].first = 1;
        (*_glb_hdl_sc_channel_map)[19688].second.push_front(p_15_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->maxi_lite_mb_bresp.bind(*p_15_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map)[19681].first = 3;
        (*_glb_hdl_sc_channel_map)[19681].second.push_front(p_15_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_bvalid.bind(*p_15_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map)[19682].first = 1;
        (*_glb_hdl_sc_channel_map)[19682].second.push_front(p_15_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_bready.bind(*p_15_maxi_lite_mb_bready);
        p_15_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(9937768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->maxi_lite_mb_araddr.bind(*p_15_maxi_lite_mb_araddr);
        p_15_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(9937824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->maxi_lite_mb_arprot.bind(*p_15_maxi_lite_mb_arprot);
        p_15_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(9937880);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_arvalid.bind(*p_15_maxi_lite_mb_arvalid);
        p_15_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(9937936);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_arready.bind(*p_15_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map)[19674].first = 1;
        (*_glb_hdl_sc_channel_map)[19674].second.push_front(p_15_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->maxi_lite_mb_rdata.bind(*p_15_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map)[19683].first = 3;
        (*_glb_hdl_sc_channel_map)[19683].second.push_front(p_15_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->maxi_lite_mb_rresp.bind(*p_15_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map)[19685].first = 3;
        (*_glb_hdl_sc_channel_map)[19685].second.push_front(p_15_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_rvalid.bind(*p_15_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map)[19686].first = 1;
        (*_glb_hdl_sc_channel_map)[19686].second.push_front(p_15_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_rready.bind(*p_15_maxi_lite_mb_rready);
        p_15_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(9938216);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_aclk.bind(*p_15_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map)[19670].first = 1;
        (*_glb_hdl_sc_channel_map)[19670].second.push_front(p_15_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_aresetn.bind(*p_15_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map)[19672].first = 1;
        (*_glb_hdl_sc_channel_map)[19672].second.push_front(p_15_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_15_irq = new xsim_sc_channel<0, bool >();
        sc_inst_15->irq.bind(*p_15_irq);
        (*_glb_hdl_sc_channel_map)[19669].first = 1;
        (*_glb_hdl_sc_channel_map)[19669].second.push_front(p_15_irq);
        sc_inst_16 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_16->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_awaddr.bind(*p_16_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14171].first = 3;
        (*_glb_hdl_sc_channel_map)[14171].second.push_front(p_16_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_awlen.bind(*p_16_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map)[19794].first = 3;
        (*_glb_hdl_sc_channel_map)[19794].second.push_front(p_16_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awsize.bind(*p_16_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map)[19797].first = 3;
        (*_glb_hdl_sc_channel_map)[19797].second.push_front(p_16_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_awburst.bind(*p_16_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map)[19793].first = 3;
        (*_glb_hdl_sc_channel_map)[19793].second.push_front(p_16_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awlock.bind(*p_16_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14169].first = 1;
        (*_glb_hdl_sc_channel_map)[14169].second.push_front(p_16_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awcache.bind(*p_16_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14170].first = 3;
        (*_glb_hdl_sc_channel_map)[14170].second.push_front(p_16_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awprot.bind(*p_16_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map)[19795].first = 3;
        (*_glb_hdl_sc_channel_map)[19795].second.push_front(p_16_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awregion.bind(*p_16_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14167].first = 3;
        (*_glb_hdl_sc_channel_map)[14167].second.push_front(p_16_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awqos.bind(*p_16_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14168].first = 3;
        (*_glb_hdl_sc_channel_map)[14168].second.push_front(p_16_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awvalid.bind(*p_16_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[19798].first = 1;
        (*_glb_hdl_sc_channel_map)[19798].second.push_front(p_16_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awready.bind(*p_16_s00_axi_awready);
        p_16_s00_axi_awready->set_sv_netview_offsetfromdp(9948768);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s00_axi_wdata.bind(*p_16_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map)[19807].first = 3;
        (*_glb_hdl_sc_channel_map)[19807].second.push_front(p_16_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_wstrb.bind(*p_16_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[19810].first = 3;
        (*_glb_hdl_sc_channel_map)[19810].second.push_front(p_16_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wlast.bind(*p_16_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map)[19808].first = 1;
        (*_glb_hdl_sc_channel_map)[19808].second.push_front(p_16_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wvalid.bind(*p_16_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[19811].first = 1;
        (*_glb_hdl_sc_channel_map)[19811].second.push_front(p_16_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wready.bind(*p_16_s00_axi_wready);
        p_16_s00_axi_wready->set_sv_netview_offsetfromdp(9949048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_bresp.bind(*p_16_s00_axi_bresp);
        p_16_s00_axi_bresp->set_sv_netview_offsetfromdp(9949104);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bvalid.bind(*p_16_s00_axi_bvalid);
        p_16_s00_axi_bvalid->set_sv_netview_offsetfromdp(9949160);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bready.bind(*p_16_s00_axi_bready);
        (*_glb_hdl_sc_channel_map)[19799].first = 1;
        (*_glb_hdl_sc_channel_map)[19799].second.push_front(p_16_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_araddr.bind(*p_16_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14176].first = 3;
        (*_glb_hdl_sc_channel_map)[14176].second.push_front(p_16_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_arlen.bind(*p_16_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map)[19788].first = 3;
        (*_glb_hdl_sc_channel_map)[19788].second.push_front(p_16_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arsize.bind(*p_16_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map)[19791].first = 3;
        (*_glb_hdl_sc_channel_map)[19791].second.push_front(p_16_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_arburst.bind(*p_16_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map)[19786].first = 3;
        (*_glb_hdl_sc_channel_map)[19786].second.push_front(p_16_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arlock.bind(*p_16_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14174].first = 1;
        (*_glb_hdl_sc_channel_map)[14174].second.push_front(p_16_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arcache.bind(*p_16_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14175].first = 3;
        (*_glb_hdl_sc_channel_map)[14175].second.push_front(p_16_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arprot.bind(*p_16_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map)[19789].first = 3;
        (*_glb_hdl_sc_channel_map)[19789].second.push_front(p_16_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arregion.bind(*p_16_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14172].first = 3;
        (*_glb_hdl_sc_channel_map)[14172].second.push_front(p_16_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arqos.bind(*p_16_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14173].first = 3;
        (*_glb_hdl_sc_channel_map)[14173].second.push_front(p_16_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arvalid.bind(*p_16_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[19792].first = 1;
        (*_glb_hdl_sc_channel_map)[19792].second.push_front(p_16_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arready.bind(*p_16_s00_axi_arready);
        p_16_s00_axi_arready->set_sv_netview_offsetfromdp(9949832);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s00_axi_rdata.bind(*p_16_s00_axi_rdata);
        p_16_s00_axi_rdata->set_sv_netview_offsetfromdp(9949888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_rresp.bind(*p_16_s00_axi_rresp);
        p_16_s00_axi_rresp->set_sv_netview_offsetfromdp(9949944);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rlast.bind(*p_16_s00_axi_rlast);
        p_16_s00_axi_rlast->set_sv_netview_offsetfromdp(9950000);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rvalid.bind(*p_16_s00_axi_rvalid);
        p_16_s00_axi_rvalid->set_sv_netview_offsetfromdp(9950056);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rready.bind(*p_16_s00_axi_rready);
        (*_glb_hdl_sc_channel_map)[19804].first = 1;
        (*_glb_hdl_sc_channel_map)[19804].second.push_front(p_16_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aclk.bind(*p_16_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[19785].first = 1;
        (*_glb_hdl_sc_channel_map)[19785].second.push_front(p_16_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aresetn.bind(*p_16_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[19787].first = 1;
        (*_glb_hdl_sc_channel_map)[19787].second.push_front(p_16_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awid.bind(*p_16_m00_axi_awid);
        p_16_m00_axi_awid->set_sv_netview_offsetfromdp(9950280);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_16_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_16->m00_axi_awaddr.bind(*p_16_m00_axi_awaddr);
        p_16_m00_axi_awaddr->set_sv_netview_offsetfromdp(9950336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_awlen.bind(*p_16_m00_axi_awlen);
        p_16_m00_axi_awlen->set_sv_netview_offsetfromdp(9950392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awsize.bind(*p_16_m00_axi_awsize);
        p_16_m00_axi_awsize->set_sv_netview_offsetfromdp(9950448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_awburst.bind(*p_16_m00_axi_awburst);
        p_16_m00_axi_awburst->set_sv_netview_offsetfromdp(9950504);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awlock.bind(*p_16_m00_axi_awlock);
        p_16_m00_axi_awlock->set_sv_netview_offsetfromdp(9950560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awcache.bind(*p_16_m00_axi_awcache);
        p_16_m00_axi_awcache->set_sv_netview_offsetfromdp(9950616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awprot.bind(*p_16_m00_axi_awprot);
        p_16_m00_axi_awprot->set_sv_netview_offsetfromdp(9950672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awqos.bind(*p_16_m00_axi_awqos);
        p_16_m00_axi_awqos->set_sv_netview_offsetfromdp(9950728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awuser.bind(*p_16_m00_axi_awuser);
        p_16_m00_axi_awuser->set_sv_netview_offsetfromdp(9950784);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awvalid.bind(*p_16_m00_axi_awvalid);
        p_16_m00_axi_awvalid->set_sv_netview_offsetfromdp(9950840);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awready.bind(*p_16_m00_axi_awready);
        (*_glb_hdl_sc_channel_map)[19763].first = 1;
        (*_glb_hdl_sc_channel_map)[19763].second.push_front(p_16_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m00_axi_wdata.bind(*p_16_m00_axi_wdata);
        p_16_m00_axi_wdata->set_sv_netview_offsetfromdp(9950952);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_wstrb.bind(*p_16_m00_axi_wstrb);
        p_16_m00_axi_wstrb->set_sv_netview_offsetfromdp(9951008);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wlast.bind(*p_16_m00_axi_wlast);
        p_16_m00_axi_wlast->set_sv_netview_offsetfromdp(9951064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_wuser.bind(*p_16_m00_axi_wuser);
        p_16_m00_axi_wuser->set_sv_netview_offsetfromdp(9951120);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wvalid.bind(*p_16_m00_axi_wvalid);
        p_16_m00_axi_wvalid->set_sv_netview_offsetfromdp(9951176);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wready.bind(*p_16_m00_axi_wready);
        (*_glb_hdl_sc_channel_map)[19781].first = 1;
        (*_glb_hdl_sc_channel_map)[19781].second.push_front(p_16_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_bid.bind(*p_16_m00_axi_bid);
        (*_glb_hdl_sc_channel_map)[19767].first = 3;
        (*_glb_hdl_sc_channel_map)[19767].second.push_front(p_16_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_bresp.bind(*p_16_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map)[19769].first = 3;
        (*_glb_hdl_sc_channel_map)[19769].second.push_front(p_16_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_buser.bind(*p_16_m00_axi_buser);
        (*_glb_hdl_sc_channel_map)[19770].first = 3;
        (*_glb_hdl_sc_channel_map)[19770].second.push_front(p_16_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bvalid.bind(*p_16_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map)[19771].first = 1;
        (*_glb_hdl_sc_channel_map)[19771].second.push_front(p_16_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bready.bind(*p_16_m00_axi_bready);
        p_16_m00_axi_bready->set_sv_netview_offsetfromdp(9951512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_arid.bind(*p_16_m00_axi_arid);
        p_16_m00_axi_arid->set_sv_netview_offsetfromdp(9951568);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_16_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_16->m00_axi_araddr.bind(*p_16_m00_axi_araddr);
        p_16_m00_axi_araddr->set_sv_netview_offsetfromdp(9951624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_arlen.bind(*p_16_m00_axi_arlen);
        p_16_m00_axi_arlen->set_sv_netview_offsetfromdp(9951680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arsize.bind(*p_16_m00_axi_arsize);
        p_16_m00_axi_arsize->set_sv_netview_offsetfromdp(9951736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_arburst.bind(*p_16_m00_axi_arburst);
        p_16_m00_axi_arburst->set_sv_netview_offsetfromdp(9951792);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arlock.bind(*p_16_m00_axi_arlock);
        p_16_m00_axi_arlock->set_sv_netview_offsetfromdp(9951848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arcache.bind(*p_16_m00_axi_arcache);
        p_16_m00_axi_arcache->set_sv_netview_offsetfromdp(9951904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arprot.bind(*p_16_m00_axi_arprot);
        p_16_m00_axi_arprot->set_sv_netview_offsetfromdp(9951960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arqos.bind(*p_16_m00_axi_arqos);
        p_16_m00_axi_arqos->set_sv_netview_offsetfromdp(9952016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_aruser.bind(*p_16_m00_axi_aruser);
        p_16_m00_axi_aruser->set_sv_netview_offsetfromdp(9952072);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arvalid.bind(*p_16_m00_axi_arvalid);
        p_16_m00_axi_arvalid->set_sv_netview_offsetfromdp(9952128);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arready.bind(*p_16_m00_axi_arready);
        (*_glb_hdl_sc_channel_map)[19751].first = 1;
        (*_glb_hdl_sc_channel_map)[19751].second.push_front(p_16_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_rid.bind(*p_16_m00_axi_rid);
        (*_glb_hdl_sc_channel_map)[19773].first = 3;
        (*_glb_hdl_sc_channel_map)[19773].second.push_front(p_16_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m00_axi_rdata.bind(*p_16_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map)[19772].first = 3;
        (*_glb_hdl_sc_channel_map)[19772].second.push_front(p_16_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_rresp.bind(*p_16_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map)[19776].first = 3;
        (*_glb_hdl_sc_channel_map)[19776].second.push_front(p_16_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rlast.bind(*p_16_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map)[19774].first = 1;
        (*_glb_hdl_sc_channel_map)[19774].second.push_front(p_16_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_ruser.bind(*p_16_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map)[19777].first = 3;
        (*_glb_hdl_sc_channel_map)[19777].second.push_front(p_16_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rvalid.bind(*p_16_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map)[19778].first = 1;
        (*_glb_hdl_sc_channel_map)[19778].second.push_front(p_16_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rready.bind(*p_16_m00_axi_rready);
        p_16_m00_axi_rready->set_sv_netview_offsetfromdp(9952576);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aclk.bind(*p_16_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map)[19741].first = 1;
        (*_glb_hdl_sc_channel_map)[19741].second.push_front(p_16_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aresetn.bind(*p_16_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[19745].first = 1;
        (*_glb_hdl_sc_channel_map)[19745].second.push_front(p_16_m00_axi_aresetn);
        sc_inst_17 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_17->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_AWADDR.bind(*p_17_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[14162].first = 3;
        (*_glb_hdl_sc_channel_map)[14162].second.push_front(p_17_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWVALID.bind(*p_17_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[20099].first = 1;
        (*_glb_hdl_sc_channel_map)[20099].second.push_front(p_17_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWREADY.bind(*p_17_s_axi_control_AWREADY);
        p_17_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(9999080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_WDATA.bind(*p_17_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[20107].first = 3;
        (*_glb_hdl_sc_channel_map)[20107].second.push_front(p_17_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_control_WSTRB.bind(*p_17_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[20109].first = 3;
        (*_glb_hdl_sc_channel_map)[20109].second.push_front(p_17_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WVALID.bind(*p_17_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[20110].first = 1;
        (*_glb_hdl_sc_channel_map)[20110].second.push_front(p_17_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WREADY.bind(*p_17_s_axi_control_WREADY);
        p_17_s_axi_control_WREADY->set_sv_netview_offsetfromdp(9999304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_BRESP.bind(*p_17_s_axi_control_BRESP);
        p_17_s_axi_control_BRESP->set_sv_netview_offsetfromdp(9999360);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BVALID.bind(*p_17_s_axi_control_BVALID);
        p_17_s_axi_control_BVALID->set_sv_netview_offsetfromdp(9999416);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BREADY.bind(*p_17_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[20100].first = 1;
        (*_glb_hdl_sc_channel_map)[20100].second.push_front(p_17_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_ARADDR.bind(*p_17_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[14163].first = 3;
        (*_glb_hdl_sc_channel_map)[14163].second.push_front(p_17_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARVALID.bind(*p_17_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[20097].first = 1;
        (*_glb_hdl_sc_channel_map)[20097].second.push_front(p_17_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARREADY.bind(*p_17_s_axi_control_ARREADY);
        p_17_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(9999640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_RDATA.bind(*p_17_s_axi_control_RDATA);
        p_17_s_axi_control_RDATA->set_sv_netview_offsetfromdp(9999696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_RRESP.bind(*p_17_s_axi_control_RRESP);
        p_17_s_axi_control_RRESP->set_sv_netview_offsetfromdp(9999752);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RVALID.bind(*p_17_s_axi_control_RVALID);
        p_17_s_axi_control_RVALID->set_sv_netview_offsetfromdp(9999808);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RREADY.bind(*p_17_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[20104].first = 1;
        (*_glb_hdl_sc_channel_map)[20104].second.push_front(p_17_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_17_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_clk.bind(*p_17_ap_clk);
        (*_glb_hdl_sc_channel_map)[20058].first = 1;
        (*_glb_hdl_sc_channel_map)[20058].second.push_front(p_17_ap_clk);
        xsim_sc_channel<0, bool > *p_17_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_rst_n.bind(*p_17_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[20059].first = 1;
        (*_glb_hdl_sc_channel_map)[20059].second.push_front(p_17_ap_rst_n);
        xsim_sc_channel<0, bool > *p_17_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_17->interrupt.bind(*p_17_interrupt);
        p_17_interrupt->set_sv_netview_offsetfromdp(10000032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_AWADDR.bind(*p_17_m_axi_gmem_AWADDR);
        p_17_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(10000088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_AWLEN.bind(*p_17_m_axi_gmem_AWLEN);
        p_17_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(10000144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWSIZE.bind(*p_17_m_axi_gmem_AWSIZE);
        p_17_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(10000200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_AWBURST.bind(*p_17_m_axi_gmem_AWBURST);
        p_17_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(10000256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_AWLOCK.bind(*p_17_m_axi_gmem_AWLOCK);
        p_17_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(10000312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWREGION.bind(*p_17_m_axi_gmem_AWREGION);
        p_17_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(10000368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWCACHE.bind(*p_17_m_axi_gmem_AWCACHE);
        p_17_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(10000424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWPROT.bind(*p_17_m_axi_gmem_AWPROT);
        p_17_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(10000480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWQOS.bind(*p_17_m_axi_gmem_AWQOS);
        p_17_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(10000536);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWVALID.bind(*p_17_m_axi_gmem_AWVALID);
        p_17_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(10000592);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWREADY.bind(*p_17_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[20079].first = 1;
        (*_glb_hdl_sc_channel_map)[20079].second.push_front(p_17_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_WDATA.bind(*p_17_m_axi_gmem_WDATA);
        p_17_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(10000704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_WSTRB.bind(*p_17_m_axi_gmem_WSTRB);
        p_17_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(10000760);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WLAST.bind(*p_17_m_axi_gmem_WLAST);
        p_17_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(10000816);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WVALID.bind(*p_17_m_axi_gmem_WVALID);
        p_17_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(10000872);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WREADY.bind(*p_17_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[20093].first = 1;
        (*_glb_hdl_sc_channel_map)[20093].second.push_front(p_17_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_BRESP.bind(*p_17_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[20084].first = 3;
        (*_glb_hdl_sc_channel_map)[20084].second.push_front(p_17_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BVALID.bind(*p_17_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[20085].first = 1;
        (*_glb_hdl_sc_channel_map)[20085].second.push_front(p_17_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BREADY.bind(*p_17_m_axi_gmem_BREADY);
        p_17_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(10001096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_ARADDR.bind(*p_17_m_axi_gmem_ARADDR);
        p_17_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(10001152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_ARLEN.bind(*p_17_m_axi_gmem_ARLEN);
        p_17_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(10001208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARSIZE.bind(*p_17_m_axi_gmem_ARSIZE);
        p_17_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(10001264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_ARBURST.bind(*p_17_m_axi_gmem_ARBURST);
        p_17_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(10001320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_ARLOCK.bind(*p_17_m_axi_gmem_ARLOCK);
        p_17_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(10001376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARREGION.bind(*p_17_m_axi_gmem_ARREGION);
        p_17_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(10001432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARCACHE.bind(*p_17_m_axi_gmem_ARCACHE);
        p_17_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(10001488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARPROT.bind(*p_17_m_axi_gmem_ARPROT);
        p_17_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(10001544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARQOS.bind(*p_17_m_axi_gmem_ARQOS);
        p_17_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(10001600);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARVALID.bind(*p_17_m_axi_gmem_ARVALID);
        p_17_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(10001656);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARREADY.bind(*p_17_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[20068].first = 1;
        (*_glb_hdl_sc_channel_map)[20068].second.push_front(p_17_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_RDATA.bind(*p_17_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[20086].first = 3;
        (*_glb_hdl_sc_channel_map)[20086].second.push_front(p_17_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_RRESP.bind(*p_17_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[20089].first = 3;
        (*_glb_hdl_sc_channel_map)[20089].second.push_front(p_17_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RLAST.bind(*p_17_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[20087].first = 1;
        (*_glb_hdl_sc_channel_map)[20087].second.push_front(p_17_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RVALID.bind(*p_17_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[20090].first = 1;
        (*_glb_hdl_sc_channel_map)[20090].second.push_front(p_17_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RREADY.bind(*p_17_m_axi_gmem_RREADY);
        p_17_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(10001992);
        sc_inst_18 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_18->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[14160].first = 3;
        (*_glb_hdl_sc_channel_map)[14160].second.push_front(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[20151].first = 1;
        (*_glb_hdl_sc_channel_map)[20151].second.push_front(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(10002208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[20159].first = 3;
        (*_glb_hdl_sc_channel_map)[20159].second.push_front(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[20161].first = 3;
        (*_glb_hdl_sc_channel_map)[20161].second.push_front(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[20162].first = 1;
        (*_glb_hdl_sc_channel_map)[20162].second.push_front(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(10002432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(10002488);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(10002544);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[20152].first = 1;
        (*_glb_hdl_sc_channel_map)[20152].second.push_front(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[14161].first = 3;
        (*_glb_hdl_sc_channel_map)[14161].second.push_front(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[20149].first = 1;
        (*_glb_hdl_sc_channel_map)[20149].second.push_front(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(10002768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(10002824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(10002880);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(10002936);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[20156].first = 1;
        (*_glb_hdl_sc_channel_map)[20156].second.push_front(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map)[20111].first = 1;
        (*_glb_hdl_sc_channel_map)[20111].second.push_front(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[20112].first = 1;
        (*_glb_hdl_sc_channel_map)[20112].second.push_front(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(10003160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(10003216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(10003272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(10003328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(10003384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(10003440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(10003496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(10003552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(10003608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(10003664);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(10003720);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[20131].first = 1;
        (*_glb_hdl_sc_channel_map)[20131].second.push_front(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(10003832);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(10003888);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(10003944);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(10004000);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[20145].first = 1;
        (*_glb_hdl_sc_channel_map)[20145].second.push_front(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[20136].first = 3;
        (*_glb_hdl_sc_channel_map)[20136].second.push_front(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[20137].first = 1;
        (*_glb_hdl_sc_channel_map)[20137].second.push_front(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(10004224);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(10004280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(10004336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(10004392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(10004448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(10004504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(10004560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(10004616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(10004672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(10004728);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(10004784);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[20120].first = 1;
        (*_glb_hdl_sc_channel_map)[20120].second.push_front(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[20138].first = 3;
        (*_glb_hdl_sc_channel_map)[20138].second.push_front(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[20141].first = 3;
        (*_glb_hdl_sc_channel_map)[20141].second.push_front(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[20139].first = 1;
        (*_glb_hdl_sc_channel_map)[20139].second.push_front(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[20142].first = 1;
        (*_glb_hdl_sc_channel_map)[20142].second.push_front(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(10005120);
        sc_inst_19 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_19->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[14158].first = 3;
        (*_glb_hdl_sc_channel_map)[14158].second.push_front(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[20204].first = 1;
        (*_glb_hdl_sc_channel_map)[20204].second.push_front(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(10005336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[20212].first = 3;
        (*_glb_hdl_sc_channel_map)[20212].second.push_front(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[20214].first = 3;
        (*_glb_hdl_sc_channel_map)[20214].second.push_front(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[20215].first = 1;
        (*_glb_hdl_sc_channel_map)[20215].second.push_front(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(10005560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(10005616);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(10005672);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[20205].first = 1;
        (*_glb_hdl_sc_channel_map)[20205].second.push_front(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[14159].first = 3;
        (*_glb_hdl_sc_channel_map)[14159].second.push_front(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[20202].first = 1;
        (*_glb_hdl_sc_channel_map)[20202].second.push_front(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(10005896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(10005952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(10006008);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(10006064);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[20209].first = 1;
        (*_glb_hdl_sc_channel_map)[20209].second.push_front(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map)[20164].first = 1;
        (*_glb_hdl_sc_channel_map)[20164].second.push_front(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[20165].first = 1;
        (*_glb_hdl_sc_channel_map)[20165].second.push_front(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(10006288);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(10006344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(10006400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(10006456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(10006512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(10006568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(10006624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(10006680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(10006736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(10006792);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(10006848);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[20184].first = 1;
        (*_glb_hdl_sc_channel_map)[20184].second.push_front(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(10006960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(10007016);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(10007072);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(10007128);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[20198].first = 1;
        (*_glb_hdl_sc_channel_map)[20198].second.push_front(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[20189].first = 3;
        (*_glb_hdl_sc_channel_map)[20189].second.push_front(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[20190].first = 1;
        (*_glb_hdl_sc_channel_map)[20190].second.push_front(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(10007352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(10007408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(10007464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(10007520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(10007576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(10007632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(10007688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(10007744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(10007800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(10007856);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(10007912);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[20173].first = 1;
        (*_glb_hdl_sc_channel_map)[20173].second.push_front(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[20191].first = 3;
        (*_glb_hdl_sc_channel_map)[20191].second.push_front(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[20194].first = 3;
        (*_glb_hdl_sc_channel_map)[20194].second.push_front(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[20192].first = 1;
        (*_glb_hdl_sc_channel_map)[20192].second.push_front(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[20195].first = 1;
        (*_glb_hdl_sc_channel_map)[20195].second.push_front(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(10008248);
        sc_inst_20 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_20->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map)[14156].first = 3;
        (*_glb_hdl_sc_channel_map)[14156].second.push_front(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map)[20257].first = 1;
        (*_glb_hdl_sc_channel_map)[20257].second.push_front(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(10008464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map)[20265].first = 3;
        (*_glb_hdl_sc_channel_map)[20265].second.push_front(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map)[20267].first = 3;
        (*_glb_hdl_sc_channel_map)[20267].second.push_front(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map)[20268].first = 1;
        (*_glb_hdl_sc_channel_map)[20268].second.push_front(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(10008688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(10008744);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(10008800);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map)[20258].first = 1;
        (*_glb_hdl_sc_channel_map)[20258].second.push_front(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map)[14157].first = 3;
        (*_glb_hdl_sc_channel_map)[14157].second.push_front(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map)[20255].first = 1;
        (*_glb_hdl_sc_channel_map)[20255].second.push_front(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(10009024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(10009080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(10009136);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(10009192);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map)[20262].first = 1;
        (*_glb_hdl_sc_channel_map)[20262].second.push_front(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map)[20217].first = 1;
        (*_glb_hdl_sc_channel_map)[20217].second.push_front(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map)[20218].first = 1;
        (*_glb_hdl_sc_channel_map)[20218].second.push_front(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(10009416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(10009472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(10009528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(10009584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(10009640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(10009696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(10009752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(10009808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(10009864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(10009920);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(10009976);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map)[20237].first = 1;
        (*_glb_hdl_sc_channel_map)[20237].second.push_front(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(10010088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(10010144);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(10010200);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(10010256);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map)[20251].first = 1;
        (*_glb_hdl_sc_channel_map)[20251].second.push_front(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map)[20242].first = 3;
        (*_glb_hdl_sc_channel_map)[20242].second.push_front(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map)[20243].first = 1;
        (*_glb_hdl_sc_channel_map)[20243].second.push_front(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(10010480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(10010536);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(10010592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(10010648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(10010704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(10010760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(10010816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(10010872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(10010928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(10010984);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(10011040);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map)[20226].first = 1;
        (*_glb_hdl_sc_channel_map)[20226].second.push_front(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map)[20244].first = 3;
        (*_glb_hdl_sc_channel_map)[20244].second.push_front(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map)[20247].first = 3;
        (*_glb_hdl_sc_channel_map)[20247].second.push_front(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map)[20245].first = 1;
        (*_glb_hdl_sc_channel_map)[20245].second.push_front(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map)[20248].first = 1;
        (*_glb_hdl_sc_channel_map)[20248].second.push_front(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(10011376);
        sc_inst_21 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_21->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_21_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ui_clk.bind(*p_21_c0_ui_clk);
        (*_glb_hdl_sc_channel_map)[20314].first = 1;
        (*_glb_hdl_sc_channel_map)[20314].second.push_front(p_21_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_awid.bind(*p_21_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map)[20287].first = 3;
        (*_glb_hdl_sc_channel_map)[20287].second.push_front(p_21_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_21_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_21->c0_ddr_saxi_awaddr.bind(*p_21_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map)[20284].first = 3;
        (*_glb_hdl_sc_channel_map)[20284].second.push_front(p_21_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->c0_ddr_saxi_awlen.bind(*p_21_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map)[20288].first = 3;
        (*_glb_hdl_sc_channel_map)[20288].second.push_front(p_21_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_awsize.bind(*p_21_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map)[20293].first = 3;
        (*_glb_hdl_sc_channel_map)[20293].second.push_front(p_21_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_awburst.bind(*p_21_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map)[20285].first = 3;
        (*_glb_hdl_sc_channel_map)[20285].second.push_front(p_21_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awlock.bind(*p_21_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map)[20289].first = 1;
        (*_glb_hdl_sc_channel_map)[20289].second.push_front(p_21_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awcache.bind(*p_21_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map)[20286].first = 3;
        (*_glb_hdl_sc_channel_map)[20286].second.push_front(p_21_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_awprot.bind(*p_21_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map)[20290].first = 3;
        (*_glb_hdl_sc_channel_map)[20290].second.push_front(p_21_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awregion.bind(*p_21_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map)[14154].first = 3;
        (*_glb_hdl_sc_channel_map)[14154].second.push_front(p_21_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awqos.bind(*p_21_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map)[20291].first = 3;
        (*_glb_hdl_sc_channel_map)[20291].second.push_front(p_21_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_awuser.bind(*p_21_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map)[20294].first = 3;
        (*_glb_hdl_sc_channel_map)[20294].second.push_front(p_21_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awvalid.bind(*p_21_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map)[20295].first = 1;
        (*_glb_hdl_sc_channel_map)[20295].second.push_front(p_21_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awready.bind(*p_21_c0_ddr_saxi_awready);
        p_21_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(10012208);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->c0_ddr_saxi_wdata.bind(*p_21_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map)[20308].first = 3;
        (*_glb_hdl_sc_channel_map)[20308].second.push_front(p_21_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->c0_ddr_saxi_wstrb.bind(*p_21_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map)[20311].first = 3;
        (*_glb_hdl_sc_channel_map)[20311].second.push_front(p_21_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wlast.bind(*p_21_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map)[20309].first = 1;
        (*_glb_hdl_sc_channel_map)[20309].second.push_front(p_21_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_wuser.bind(*p_21_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map)[20312].first = 3;
        (*_glb_hdl_sc_channel_map)[20312].second.push_front(p_21_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wvalid.bind(*p_21_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map)[20313].first = 1;
        (*_glb_hdl_sc_channel_map)[20313].second.push_front(p_21_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wready.bind(*p_21_c0_ddr_saxi_wready);
        p_21_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(10012544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_bid.bind(*p_21_c0_ddr_saxi_bid);
        p_21_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(10012600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_bresp.bind(*p_21_c0_ddr_saxi_bresp);
        p_21_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(10012656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_buser.bind(*p_21_c0_ddr_saxi_buser);
        p_21_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(10012712);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_bvalid.bind(*p_21_c0_ddr_saxi_bvalid);
        p_21_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(10012768);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_bready.bind(*p_21_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map)[20297].first = 1;
        (*_glb_hdl_sc_channel_map)[20297].second.push_front(p_21_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_arid.bind(*p_21_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map)[20275].first = 3;
        (*_glb_hdl_sc_channel_map)[20275].second.push_front(p_21_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_21_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_21->c0_ddr_saxi_araddr.bind(*p_21_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map)[20271].first = 3;
        (*_glb_hdl_sc_channel_map)[20271].second.push_front(p_21_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->c0_ddr_saxi_arlen.bind(*p_21_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map)[20276].first = 3;
        (*_glb_hdl_sc_channel_map)[20276].second.push_front(p_21_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_arsize.bind(*p_21_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map)[20281].first = 3;
        (*_glb_hdl_sc_channel_map)[20281].second.push_front(p_21_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_arburst.bind(*p_21_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map)[20272].first = 3;
        (*_glb_hdl_sc_channel_map)[20272].second.push_front(p_21_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arlock.bind(*p_21_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map)[20277].first = 1;
        (*_glb_hdl_sc_channel_map)[20277].second.push_front(p_21_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arcache.bind(*p_21_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map)[20273].first = 3;
        (*_glb_hdl_sc_channel_map)[20273].second.push_front(p_21_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_arprot.bind(*p_21_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map)[20278].first = 3;
        (*_glb_hdl_sc_channel_map)[20278].second.push_front(p_21_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arregion.bind(*p_21_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map)[14155].first = 3;
        (*_glb_hdl_sc_channel_map)[14155].second.push_front(p_21_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arqos.bind(*p_21_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map)[20279].first = 3;
        (*_glb_hdl_sc_channel_map)[20279].second.push_front(p_21_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_aruser.bind(*p_21_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map)[20282].first = 3;
        (*_glb_hdl_sc_channel_map)[20282].second.push_front(p_21_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arvalid.bind(*p_21_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map)[20283].first = 1;
        (*_glb_hdl_sc_channel_map)[20283].second.push_front(p_21_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arready.bind(*p_21_c0_ddr_saxi_arready);
        p_21_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(10013552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_rid.bind(*p_21_c0_ddr_saxi_rid);
        p_21_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(10013608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->c0_ddr_saxi_rdata.bind(*p_21_c0_ddr_saxi_rdata);
        p_21_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(10013664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_rresp.bind(*p_21_c0_ddr_saxi_rresp);
        p_21_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(10013720);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rlast.bind(*p_21_c0_ddr_saxi_rlast);
        p_21_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(10013776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_ruser.bind(*p_21_c0_ddr_saxi_ruser);
        p_21_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(10013832);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rvalid.bind(*p_21_c0_ddr_saxi_rvalid);
        p_21_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(10013888);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rready.bind(*p_21_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map)[20304].first = 1;
        (*_glb_hdl_sc_channel_map)[20304].second.push_front(p_21_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_aclk.bind(*p_21_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map)[20270].first = 1;
        (*_glb_hdl_sc_channel_map)[20270].second.push_front(p_21_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_aresetn.bind(*p_21_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map)[20274].first = 1;
        (*_glb_hdl_sc_channel_map)[20274].second.push_front(p_21_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_awid.bind(*p_21_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map)[14138].first = 3;
        (*_glb_hdl_sc_channel_map)[14138].second.push_front(p_21_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_awaddr.bind(*p_21_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map)[14141].first = 3;
        (*_glb_hdl_sc_channel_map)[14141].second.push_front(p_21_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_xdma_axi_awlen.bind(*p_21_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map)[14137].first = 3;
        (*_glb_hdl_sc_channel_map)[14137].second.push_front(p_21_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_awsize.bind(*p_21_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map)[14132].first = 3;
        (*_glb_hdl_sc_channel_map)[14132].second.push_front(p_21_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_awburst.bind(*p_21_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map)[14140].first = 3;
        (*_glb_hdl_sc_channel_map)[14140].second.push_front(p_21_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awlock.bind(*p_21_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map)[14136].first = 1;
        (*_glb_hdl_sc_channel_map)[14136].second.push_front(p_21_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awcache.bind(*p_21_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map)[14139].first = 3;
        (*_glb_hdl_sc_channel_map)[14139].second.push_front(p_21_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_awprot.bind(*p_21_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map)[14135].first = 3;
        (*_glb_hdl_sc_channel_map)[14135].second.push_front(p_21_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awregion.bind(*p_21_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map)[14133].first = 3;
        (*_glb_hdl_sc_channel_map)[14133].second.push_front(p_21_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awqos.bind(*p_21_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map)[14134].first = 3;
        (*_glb_hdl_sc_channel_map)[14134].second.push_front(p_21_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_awuser.bind(*p_21_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map)[14131].first = 3;
        (*_glb_hdl_sc_channel_map)[14131].second.push_front(p_21_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awvalid.bind(*p_21_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map)[14130].first = 1;
        (*_glb_hdl_sc_channel_map)[14130].second.push_front(p_21_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awready.bind(*p_21_s_xdma_axi_awready);
        p_21_s_xdma_axi_awready->set_sv_netview_offsetfromdp(10014784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_wdata.bind(*p_21_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map)[14127].first = 3;
        (*_glb_hdl_sc_channel_map)[14127].second.push_front(p_21_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_wstrb.bind(*p_21_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map)[14125].first = 3;
        (*_glb_hdl_sc_channel_map)[14125].second.push_front(p_21_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wlast.bind(*p_21_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map)[14126].first = 1;
        (*_glb_hdl_sc_channel_map)[14126].second.push_front(p_21_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_wuser.bind(*p_21_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map)[14124].first = 3;
        (*_glb_hdl_sc_channel_map)[14124].second.push_front(p_21_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wvalid.bind(*p_21_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map)[14123].first = 1;
        (*_glb_hdl_sc_channel_map)[14123].second.push_front(p_21_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wready.bind(*p_21_s_xdma_axi_wready);
        p_21_s_xdma_axi_wready->set_sv_netview_offsetfromdp(10015120);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_bid.bind(*p_21_s_xdma_axi_bid);
        p_21_s_xdma_axi_bid->set_sv_netview_offsetfromdp(10015176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_bresp.bind(*p_21_s_xdma_axi_bresp);
        p_21_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(10015232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_buser.bind(*p_21_s_xdma_axi_buser);
        p_21_s_xdma_axi_buser->set_sv_netview_offsetfromdp(10015288);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_bvalid.bind(*p_21_s_xdma_axi_bvalid);
        p_21_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(10015344);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_bready.bind(*p_21_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map)[14129].first = 1;
        (*_glb_hdl_sc_channel_map)[14129].second.push_front(p_21_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_arid.bind(*p_21_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map)[14150].first = 3;
        (*_glb_hdl_sc_channel_map)[14150].second.push_front(p_21_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_araddr.bind(*p_21_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map)[14153].first = 3;
        (*_glb_hdl_sc_channel_map)[14153].second.push_front(p_21_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_xdma_axi_arlen.bind(*p_21_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map)[14149].first = 3;
        (*_glb_hdl_sc_channel_map)[14149].second.push_front(p_21_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_arsize.bind(*p_21_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map)[14144].first = 3;
        (*_glb_hdl_sc_channel_map)[14144].second.push_front(p_21_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_arburst.bind(*p_21_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map)[14152].first = 3;
        (*_glb_hdl_sc_channel_map)[14152].second.push_front(p_21_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arlock.bind(*p_21_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map)[14148].first = 1;
        (*_glb_hdl_sc_channel_map)[14148].second.push_front(p_21_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arcache.bind(*p_21_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map)[14151].first = 3;
        (*_glb_hdl_sc_channel_map)[14151].second.push_front(p_21_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_arprot.bind(*p_21_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map)[14147].first = 3;
        (*_glb_hdl_sc_channel_map)[14147].second.push_front(p_21_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arregion.bind(*p_21_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map)[14145].first = 3;
        (*_glb_hdl_sc_channel_map)[14145].second.push_front(p_21_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arqos.bind(*p_21_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map)[14146].first = 3;
        (*_glb_hdl_sc_channel_map)[14146].second.push_front(p_21_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_aruser.bind(*p_21_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map)[14143].first = 3;
        (*_glb_hdl_sc_channel_map)[14143].second.push_front(p_21_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arvalid.bind(*p_21_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map)[14142].first = 1;
        (*_glb_hdl_sc_channel_map)[14142].second.push_front(p_21_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arready.bind(*p_21_s_xdma_axi_arready);
        p_21_s_xdma_axi_arready->set_sv_netview_offsetfromdp(10016128);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_rid.bind(*p_21_s_xdma_axi_rid);
        p_21_s_xdma_axi_rid->set_sv_netview_offsetfromdp(10016184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_rdata.bind(*p_21_s_xdma_axi_rdata);
        p_21_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(10016240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_rresp.bind(*p_21_s_xdma_axi_rresp);
        p_21_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(10016296);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rlast.bind(*p_21_s_xdma_axi_rlast);
        p_21_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(10016352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_ruser.bind(*p_21_s_xdma_axi_ruser);
        p_21_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(10016408);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rvalid.bind(*p_21_s_xdma_axi_rvalid);
        p_21_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(10016464);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rready.bind(*p_21_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map)[14128].first = 1;
        (*_glb_hdl_sc_channel_map)[14128].second.push_front(p_21_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_aclk.bind(*p_21_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map)[20315].first = 1;
        (*_glb_hdl_sc_channel_map)[20315].second.push_front(p_21_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_aresetn.bind(*p_21_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map)[20316].first = 1;
        (*_glb_hdl_sc_channel_map)[20316].second.push_front(p_21_s_xdma_axi_aresetn);
        sc_inst_22 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_22->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_awid.bind(*p_22_m_aximm_awid);
        p_22_m_aximm_awid->set_sv_netview_offsetfromdp(10016736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_aximm_awaddr.bind(*p_22_m_aximm_awaddr);
        p_22_m_aximm_awaddr->set_sv_netview_offsetfromdp(10016792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_aximm_awlen.bind(*p_22_m_aximm_awlen);
        p_22_m_aximm_awlen->set_sv_netview_offsetfromdp(10016848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_awsize.bind(*p_22_m_aximm_awsize);
        p_22_m_aximm_awsize->set_sv_netview_offsetfromdp(10016904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_awburst.bind(*p_22_m_aximm_awburst);
        p_22_m_aximm_awburst->set_sv_netview_offsetfromdp(10016960);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awlock.bind(*p_22_m_aximm_awlock);
        p_22_m_aximm_awlock->set_sv_netview_offsetfromdp(10017016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_awcache.bind(*p_22_m_aximm_awcache);
        p_22_m_aximm_awcache->set_sv_netview_offsetfromdp(10017072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_awprot.bind(*p_22_m_aximm_awprot);
        p_22_m_aximm_awprot->set_sv_netview_offsetfromdp(10017128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_awqos.bind(*p_22_m_aximm_awqos);
        p_22_m_aximm_awqos->set_sv_netview_offsetfromdp(10017184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_awuser.bind(*p_22_m_aximm_awuser);
        p_22_m_aximm_awuser->set_sv_netview_offsetfromdp(10017240);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awvalid.bind(*p_22_m_aximm_awvalid);
        p_22_m_aximm_awvalid->set_sv_netview_offsetfromdp(10017296);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awready.bind(*p_22_m_aximm_awready);
        (*_glb_hdl_sc_channel_map)[20372].first = 1;
        (*_glb_hdl_sc_channel_map)[20372].second.push_front(p_22_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_wdata.bind(*p_22_m_aximm_wdata);
        p_22_m_aximm_wdata->set_sv_netview_offsetfromdp(10017408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_wstrb.bind(*p_22_m_aximm_wstrb);
        p_22_m_aximm_wstrb->set_sv_netview_offsetfromdp(10017464);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wlast.bind(*p_22_m_aximm_wlast);
        p_22_m_aximm_wlast->set_sv_netview_offsetfromdp(10017520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_wuser.bind(*p_22_m_aximm_wuser);
        p_22_m_aximm_wuser->set_sv_netview_offsetfromdp(10017576);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wvalid.bind(*p_22_m_aximm_wvalid);
        p_22_m_aximm_wvalid->set_sv_netview_offsetfromdp(10017632);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wready.bind(*p_22_m_aximm_wready);
        (*_glb_hdl_sc_channel_map)[20387].first = 1;
        (*_glb_hdl_sc_channel_map)[20387].second.push_front(p_22_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_bid.bind(*p_22_m_aximm_bid);
        (*_glb_hdl_sc_channel_map)[20375].first = 3;
        (*_glb_hdl_sc_channel_map)[20375].second.push_front(p_22_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_bresp.bind(*p_22_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map)[20377].first = 3;
        (*_glb_hdl_sc_channel_map)[20377].second.push_front(p_22_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_buser.bind(*p_22_m_aximm_buser);
        (*_glb_hdl_sc_channel_map)[14122].first = 3;
        (*_glb_hdl_sc_channel_map)[14122].second.push_front(p_22_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_22_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_bvalid.bind(*p_22_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map)[20378].first = 1;
        (*_glb_hdl_sc_channel_map)[20378].second.push_front(p_22_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_bready.bind(*p_22_m_aximm_bready);
        p_22_m_aximm_bready->set_sv_netview_offsetfromdp(10017968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_arid.bind(*p_22_m_aximm_arid);
        p_22_m_aximm_arid->set_sv_netview_offsetfromdp(10018024);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_aximm_araddr.bind(*p_22_m_aximm_araddr);
        p_22_m_aximm_araddr->set_sv_netview_offsetfromdp(10018080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_aximm_arlen.bind(*p_22_m_aximm_arlen);
        p_22_m_aximm_arlen->set_sv_netview_offsetfromdp(10018136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_arsize.bind(*p_22_m_aximm_arsize);
        p_22_m_aximm_arsize->set_sv_netview_offsetfromdp(10018192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_arburst.bind(*p_22_m_aximm_arburst);
        p_22_m_aximm_arburst->set_sv_netview_offsetfromdp(10018248);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arlock.bind(*p_22_m_aximm_arlock);
        p_22_m_aximm_arlock->set_sv_netview_offsetfromdp(10018304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_arcache.bind(*p_22_m_aximm_arcache);
        p_22_m_aximm_arcache->set_sv_netview_offsetfromdp(10018360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_arprot.bind(*p_22_m_aximm_arprot);
        p_22_m_aximm_arprot->set_sv_netview_offsetfromdp(10018416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_arqos.bind(*p_22_m_aximm_arqos);
        p_22_m_aximm_arqos->set_sv_netview_offsetfromdp(10018472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_aruser.bind(*p_22_m_aximm_aruser);
        p_22_m_aximm_aruser->set_sv_netview_offsetfromdp(10018528);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arvalid.bind(*p_22_m_aximm_arvalid);
        p_22_m_aximm_arvalid->set_sv_netview_offsetfromdp(10018584);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arready.bind(*p_22_m_aximm_arready);
        (*_glb_hdl_sc_channel_map)[20361].first = 1;
        (*_glb_hdl_sc_channel_map)[20361].second.push_front(p_22_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_rid.bind(*p_22_m_aximm_rid);
        (*_glb_hdl_sc_channel_map)[20380].first = 3;
        (*_glb_hdl_sc_channel_map)[20380].second.push_front(p_22_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_rdata.bind(*p_22_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map)[20379].first = 3;
        (*_glb_hdl_sc_channel_map)[20379].second.push_front(p_22_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_rresp.bind(*p_22_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map)[20383].first = 3;
        (*_glb_hdl_sc_channel_map)[20383].second.push_front(p_22_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rlast.bind(*p_22_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map)[20381].first = 1;
        (*_glb_hdl_sc_channel_map)[20381].second.push_front(p_22_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_ruser.bind(*p_22_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map)[14121].first = 3;
        (*_glb_hdl_sc_channel_map)[14121].second.push_front(p_22_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rvalid.bind(*p_22_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map)[20384].first = 1;
        (*_glb_hdl_sc_channel_map)[20384].second.push_front(p_22_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rready.bind(*p_22_m_aximm_rready);
        p_22_m_aximm_rready->set_sv_netview_offsetfromdp(10019032);
        xsim_sc_channel<0, bool > *p_22_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_aclk.bind(*p_22_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map)[20351].first = 1;
        (*_glb_hdl_sc_channel_map)[20351].second.push_front(p_22_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_22_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_aresetn.bind(*p_22_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map)[20355].first = 1;
        (*_glb_hdl_sc_channel_map)[20355].second.push_front(p_22_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axictrl_awaddr.bind(*p_22_m_axictrl_awaddr);
        p_22_m_axictrl_awaddr->set_sv_netview_offsetfromdp(10019200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axictrl_awprot.bind(*p_22_m_axictrl_awprot);
        p_22_m_axictrl_awprot->set_sv_netview_offsetfromdp(10019256);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_awvalid.bind(*p_22_m_axictrl_awvalid);
        p_22_m_axictrl_awvalid->set_sv_netview_offsetfromdp(10019312);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_awready.bind(*p_22_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map)[20338].first = 1;
        (*_glb_hdl_sc_channel_map)[20338].second.push_front(p_22_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axictrl_wdata.bind(*p_22_m_axictrl_wdata);
        p_22_m_axictrl_wdata->set_sv_netview_offsetfromdp(10019424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axictrl_wstrb.bind(*p_22_m_axictrl_wstrb);
        p_22_m_axictrl_wstrb->set_sv_netview_offsetfromdp(10019480);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_wvalid.bind(*p_22_m_axictrl_wvalid);
        p_22_m_axictrl_wvalid->set_sv_netview_offsetfromdp(10019536);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_wready.bind(*p_22_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map)[20348].first = 1;
        (*_glb_hdl_sc_channel_map)[20348].second.push_front(p_22_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axictrl_bresp.bind(*p_22_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map)[20341].first = 3;
        (*_glb_hdl_sc_channel_map)[20341].second.push_front(p_22_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_bvalid.bind(*p_22_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map)[20342].first = 1;
        (*_glb_hdl_sc_channel_map)[20342].second.push_front(p_22_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_bready.bind(*p_22_m_axictrl_bready);
        p_22_m_axictrl_bready->set_sv_netview_offsetfromdp(10019760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axictrl_araddr.bind(*p_22_m_axictrl_araddr);
        p_22_m_axictrl_araddr->set_sv_netview_offsetfromdp(10019816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axictrl_arprot.bind(*p_22_m_axictrl_arprot);
        p_22_m_axictrl_arprot->set_sv_netview_offsetfromdp(10019872);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_arvalid.bind(*p_22_m_axictrl_arvalid);
        p_22_m_axictrl_arvalid->set_sv_netview_offsetfromdp(10019928);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_arready.bind(*p_22_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map)[20334].first = 1;
        (*_glb_hdl_sc_channel_map)[20334].second.push_front(p_22_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axictrl_rdata.bind(*p_22_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map)[20343].first = 3;
        (*_glb_hdl_sc_channel_map)[20343].second.push_front(p_22_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axictrl_rresp.bind(*p_22_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map)[20345].first = 3;
        (*_glb_hdl_sc_channel_map)[20345].second.push_front(p_22_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_rvalid.bind(*p_22_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map)[20346].first = 1;
        (*_glb_hdl_sc_channel_map)[20346].second.push_front(p_22_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_rready.bind(*p_22_m_axictrl_rready);
        p_22_m_axictrl_rready->set_sv_netview_offsetfromdp(10020208);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_aclk.bind(*p_22_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map)[20330].first = 1;
        (*_glb_hdl_sc_channel_map)[20330].second.push_front(p_22_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_aresetn.bind(*p_22_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map)[20332].first = 1;
        (*_glb_hdl_sc_channel_map)[20332].second.push_front(p_22_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
    }
